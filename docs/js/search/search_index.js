var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Annotation.html",[0,1.283,1,1.283]],["body/interfaces/Annotation.html",[0,2.355,1,1.854,2,1.418,3,0.069,4,0.061,5,0.069,6,0.044,7,1.535,8,0.044,9,0.265,10,0.217,11,3.439,12,3.439,13,3.439,14,0.179,15,0.125,16,0.978,17,0.012,18,1.222,19,0.347,20,1.474,21,1.113,22,1.771,23,1.013,24,0.171,25,1.474,26,1.418,27,2.214,28,2.887,29,1.924,30,1.601,31,2.828,32,2.072,33,1.271,34,1.078,35,0.671,36,0.898,37,1.078,38,1.013,39,2.305,40,1.977,41,2.305,42,2.305,43,2.129,44,1.977,45,1.317,46,1.601,47,1.317,48,2.556,49,1.309,50,0.847,51,0.732,52,2.072,53,1.235,54,1.228,55,1.783,56,0.847,57,2.23,58,0.847,59,1.366,60,2.129,61,1.109,62,2.404,63,1.601,64,1.601,65,1.601,66,1.601,67,1.535,68,1.601,69,1.601,70,1.601,71,0.173,72,2.462,73,1.601,74,1.601,75,1.601,76,1.601,77,1.601,78,1.366,79,1.601,80,1.149,81,1.601,82,1.601,83,1.601,84,1.601,85,1.601,86,1.601,87,1.601,88,1.601,89,1.601,90,1.601,91,1.601,92,1.601,93,1.601,94,1.601,95,1.601,96,2.509,97,1.396,98,2.292,99,1.725,100,1.618,101,2.213,102,2.213,103,2.736,104,1.601,105,2.404,106,1.601,107,1.418,108,1.601,109,1.601,110,3.004,111,1.844,112,1.818,113,1.943,114,3.375,115,2.688,116,2.887,117,2.404,118,1.188,119,1.601,120,2.404,121,2.767,122,3.045,123,1.601,124,1.601,125,1.601,126,3.194,127,2.141,128,2.767,129,2.887,130,1.601,131,2.213,132,1.601,133,3.209,134,0.767,135,1.474,136,1.601,137,1.535,138,1.535,139,1.601,140,1.601,141,1.601,142,1.601,143,2.213,144,0.483,145,1.601,146,2.404,147,2.404,148,2.462,149,2.404,150,2.305,151,1.535,152,1.601,153,1.418,154,2.129,155,1.601,156,2.462,157,1.474,158,1.474,159,1.474,160,2.129,161,1.535,162,1.474,163,1.535,164,2.213,165,0.426,166,0.776,167,1.366,168,1.474,169,2.029,170,1.128,171,1.271,172,2.129,173,2.213,174,1.418,175,1.474,176,1.535,177,1.535,178,1.317,179,1.389,180,1.271,181,1.113,182,1.366,183,1.317,184,0.799,185,1.366,186,0.615,187,1.078,188,1.418,189,1.366,190,1.474,191,1.535,192,1.535,193,1.535,194,1.366,195,1.474,196,2.213,197,3.324,198,1.045,199,0.776,200,1.535,201,2.05,202,1.149,203,2.05,204,1.535,205,1.977,206,1.535,207,2.213,208,1.418,209,2.213,210,1.474,211,1.317,212,1.844,213,1.535,214,1.366,215,1.535,216,1.271,217,2.305,218,2.05,219,0.925,220,1.535,221,1.535,222,0.069,223,1.113,224,0.004,225,0.006,226,0.004]],["title/interfaces/ApiOptions.html",[0,1.283,172,1.966]],["body/interfaces/ApiOptions.html",[0,2.359,1,1.675,2,1.428,3,0.07,4,0.061,5,0.07,6,0.044,7,1.546,8,0.044,9,0.228,10,0.209,11,2.417,12,2.417,13,2.417,14,0.179,15,0.125,16,0.979,17,0.012,18,1.195,19,0.349,20,1.485,21,1.121,22,1.779,23,1.02,24,0.171,25,1.485,26,1.428,27,2.224,28,2.899,29,1.928,30,1.613,31,2.837,32,2.08,33,1.28,34,1.086,35,0.676,36,0.904,37,1.086,38,1.02,39,2.317,40,1.988,41,2.317,42,2.317,43,2.14,44,1.988,45,1.326,46,1.613,47,1.326,48,2.567,49,1.316,50,0.853,51,0.738,52,2.08,53,1.241,54,1.237,55,1.793,56,0.853,57,2.235,58,0.853,59,1.375,60,2.14,61,1.114,62,2.417,63,1.613,64,1.613,65,1.613,66,1.613,67,1.546,68,1.613,69,1.613,70,1.613,71,0.173,72,2.472,73,1.613,74,1.613,75,1.613,76,1.613,77,1.613,78,1.375,79,1.613,80,1.157,81,1.613,82,1.613,83,1.613,84,1.613,85,1.613,86,1.613,87,1.613,88,1.613,89,1.613,90,1.613,91,1.613,92,1.613,93,1.613,94,1.613,95,1.613,96,2.516,97,1.43,98,2.301,99,2.475,100,2.322,101,2.225,102,2.225,103,3.368,104,1.613,105,2.417,106,1.613,107,1.428,108,1.613,109,1.613,110,3.006,111,1.854,112,1.824,113,1.951,114,3.378,115,2.694,116,2.899,117,2.417,118,1.196,119,1.613,120,2.417,121,2.779,122,3.054,123,1.613,124,1.613,125,1.613,126,3.202,127,2.15,128,2.779,129,2.899,130,1.613,131,2.225,132,1.613,133,3.22,134,0.77,135,1.485,136,1.613,137,1.546,138,1.546,139,1.613,140,1.613,141,1.613,142,1.613,143,2.225,144,0.487,145,1.613,146,2.417,147,2.417,148,2.472,149,2.417,150,2.317,151,1.546,152,1.613,153,1.428,154,2.14,155,1.613,156,2.472,157,1.485,158,1.485,159,1.485,160,2.14,161,1.546,162,1.485,163,1.546,164,2.225,165,0.429,166,0.782,167,1.375,168,1.485,169,2.037,170,1.213,171,1.28,172,2.567,173,2.225,174,2.851,175,1.485,176,1.546,177,1.546,178,1.326,179,1.396,180,1.28,181,1.121,182,1.375,183,1.326,184,0.805,185,1.375,186,0.62,187,1.086,188,1.428,189,1.375,190,1.485,191,1.546,192,1.546,193,1.546,194,1.375,195,1.485,196,2.225,197,3.333,198,1.052,199,0.782,200,1.546,201,2.061,202,1.157,203,2.061,204,1.546,205,1.988,206,1.546,207,2.225,208,1.428,209,2.225,210,1.485,211,1.326,212,1.854,213,1.546,214,1.375,215,1.546,216,1.28,217,2.317,218,2.061,219,0.932,220,1.546,221,1.546,222,0.07,223,1.121,224,0.004,225,0.006,226,0.004,227,1.976]],["title/interfaces/Cache.html",[0,1.283,110,1.494]],["body/interfaces/Cache.html",[0,2.36,1,1.678,2,1.432,3,0.07,4,0.061,5,0.07,6,0.08,7,1.55,8,0.044,9,0.171,10,0.131,11,2.423,12,2.423,13,2.423,14,0.179,15,0.124,16,0.968,17,0.012,18,1.196,19,0.35,20,1.489,21,1.124,22,1.782,23,1.023,24,0.171,25,1.489,26,1.432,27,2.227,28,2.904,29,2.067,30,1.618,31,2.84,32,2.084,33,1.284,34,1.089,35,0.678,36,0.907,37,1.089,38,1.023,39,2.322,40,1.992,41,2.322,42,2.322,43,2.145,44,1.992,45,1.33,46,1.618,47,1.33,48,2.571,49,1.319,50,0.855,51,1.328,52,2.084,53,1.244,54,1.241,55,1.797,56,0.855,57,2.237,58,0.855,59,1.379,60,2.145,61,1.116,62,2.423,63,1.618,64,1.618,65,1.618,66,1.618,67,1.55,68,1.618,69,1.618,70,1.618,71,0.173,72,2.477,73,1.618,74,1.618,75,1.618,76,1.618,77,1.618,78,1.379,79,1.618,80,1.161,81,1.618,82,1.618,83,1.618,84,1.618,85,1.618,86,1.618,87,1.618,88,1.618,89,1.618,90,1.618,91,1.618,92,1.618,93,1.618,94,1.618,95,1.618,96,2.519,97,1.4,98,2.305,99,1.738,100,1.63,101,2.23,102,2.23,103,2.75,104,1.618,105,2.423,106,1.618,107,1.432,108,1.618,109,1.618,110,3.016,111,1.858,112,1.826,113,1.955,114,3.38,115,2.697,116,2.904,117,2.423,118,1.2,119,1.618,120,2.423,121,2.784,122,3.058,123,1.618,124,1.618,125,1.618,126,3.205,127,2.154,128,2.784,129,2.904,130,1.618,131,2.23,132,1.618,133,3.225,134,0.772,135,1.489,136,1.618,137,1.55,138,1.55,139,1.618,140,1.618,141,1.618,142,1.618,143,2.23,144,0.488,145,1.618,146,2.423,147,2.423,148,2.477,149,2.423,150,2.322,151,1.55,152,1.618,153,1.432,154,2.145,155,1.618,156,2.477,157,1.489,158,1.489,159,1.489,160,2.145,161,1.55,162,1.489,163,1.55,164,2.23,165,0.43,166,0.784,167,1.379,168,1.489,169,2.04,170,1.134,171,1.284,172,2.145,173,2.23,174,1.432,175,1.489,176,1.55,177,1.55,178,1.33,179,1.399,180,1.284,181,1.124,182,2.066,183,2.388,184,1.208,185,2.066,186,0.931,187,1.089,188,1.432,189,1.379,190,1.489,191,1.55,192,1.55,193,1.55,194,1.379,195,1.489,196,2.23,197,3.337,198,1.055,199,0.784,200,1.55,201,2.066,202,1.161,203,2.066,204,1.55,205,1.992,206,1.55,207,2.23,208,1.432,209,2.23,210,1.489,211,1.33,212,1.858,213,1.55,214,1.379,215,1.55,216,1.284,217,2.322,218,2.066,219,0.934,220,1.55,221,1.55,222,0.126,223,1.124,224,0.004,225,0.006,226,0.004,228,0.958,229,2.533,230,0.242,231,3.054,232,0.931,233,3.054]],["title/classes/CsdlAction.html",[234,0.313,235,2.322]],["body/classes/CsdlAction.html",[3,0.111,4,0.097,5,0.111,6,0.118,8,0.071,9,0.237,10,0.237,14,0.176,15,0.12,16,0.985,17,0.011,18,1.231,24,0.16,34,2.256,50,1.772,53,1.721,56,1.772,58,1.772,71,0.167,165,1.255,222,0.185,224,0.006,225,0.008,226,0.006,230,0.421,234,0.594,235,3.505,236,0.304,237,2.137,238,2.629,239,3.13,240,4.853,241,4.853,242,4.853,243,0.647,244,1.484,245,4.612,246,4.612,247,4.848,248,1.309,249,4.848,250,4.848,251,4.848,252,4.848,253,4.848,254,2.686,255,2.963,256,2.686,257,3.13,258,2.816,259,2.686,260,1.784,261,2.57]],["title/classes/CsdlActionImport.html",[234,0.313,259,2.322]],["body/classes/CsdlActionImport.html",[3,0.117,4,0.102,5,0.117,6,0.115,8,0.074,9,0.245,10,0.206,14,0.177,15,0.117,16,0.956,17,0.011,18,1.247,24,0.162,34,2.868,50,1.828,53,1.776,56,1.828,58,1.828,71,0.168,165,1.255,222,0.165,224,0.007,225,0.008,226,0.007,230,0.403,234,0.602,235,2.818,236,0.319,237,2.077,238,2.555,239,3.285,240,3.989,241,3.989,242,3.989,243,0.655,244,1.557,245,4.186,246,4.186,248,0.892,254,2.818,255,3.109,256,2.818,257,3.285,258,2.955,259,3.616,260,2.894,261,2.652,262,5.088,263,5.088,264,5.088,265,5.088]],["title/classes/CsdlAnnotable.html",[234,0.313,266,2.22]],["body/classes/CsdlAnnotable.html",[3,0.132,4,0.116,5,0.132,6,0.111,8,0.084,9,0.265,10,0.218,14,0.173,15,0.111,16,0.685,17,0.011,18,1.183,24,0.16,50,1.616,53,1.569,56,1.616,58,1.616,71,0.142,165,1.237,170,1.074,222,0.132,224,0.007,225,0.009,226,0.007,230,0.374,234,0.595,236,0.362,237,2.017,243,0.637,248,1.012,261,2.344,266,4.043,267,4.237,268,4.52,269,5.769,270,4.216,271,5.769,272,5.769,273,3.724,274,3.525,275,3.35,276,4.102,277,3.195,278,3.957,279,3.525,280,3.957,281,3.056,282,3.957]],["title/classes/CsdlAnnotation.html",[234,0.313,270,2.128]],["body/classes/CsdlAnnotation.html",[3,0.129,4,0.114,5,0.129,6,0.115,8,0.082,9,0.261,10,0.217,14,0.176,15,0.115,16,0.671,17,0.011,18,1.172,24,0.159,50,1.583,53,1.538,56,1.583,58,1.583,71,0.14,165,1.239,170,1.053,222,0.129,224,0.007,225,0.009,226,0.007,230,0.401,234,0.591,236,0.355,237,2.087,243,0.632,248,0.991,261,2.297,266,3.695,267,4.152,268,3.863,270,4.01,273,3.65,274,3.454,275,3.283,276,4.799,277,3.131,278,5.418,279,3.454,280,3.878,281,2.995,282,3.878,283,5.653,284,5.653,285,5.653,286,5.653]],["title/classes/CsdlAnnotations.html",[234,0.313,274,2.561]],["body/classes/CsdlAnnotations.html",[3,0.126,4,0.111,5,0.126,6,0.114,8,0.08,9,0.257,10,0.231,14,0.176,15,0.117,16,0.655,17,0.011,18,1.159,24,0.157,50,1.544,53,1.5,56,1.544,58,1.544,71,0.138,165,1.241,170,1.279,222,0.126,224,0.007,225,0.009,226,0.007,230,0.415,234,0.586,236,0.346,237,2.068,243,0.627,248,0.967,261,2.24,266,4.147,267,4.049,268,4.549,270,4.169,273,3.559,274,4.196,275,4.547,276,4.769,277,3.054,278,3.782,279,3.369,280,3.782,281,2.92,282,3.782,287,5.513,288,5.513,289,5.513,290,5.513,291,2.318,292,4.049]],["title/classes/CsdlComplexType.html",[234,0.313,293,2.434]],["body/classes/CsdlComplexType.html",[3,0.112,4,0.098,5,0.112,6,0.093,8,0.071,9,0.316,10,0.242,14,0.172,15,0.118,16,1.014,17,0.011,19,0.373,24,0.156,35,1.084,51,1.183,71,0.165,165,1.235,170,1.316,199,1.253,222,0.112,224,0.006,225,0.008,226,0.006,230,0.429,234,0.58,236,0.306,237,1.679,243,0.637,244,1.494,248,1.361,291,3.346,293,3.691,294,3.52,295,2.704,296,5.41,297,2.783,298,5.362,299,5.697,300,5.362,301,3.951,302,3.951,303,4.882,304,4.279,305,4.279,306,4.279,307,4.279,308,4.279,309,4.279,310,2.29,311,2.479,312,3.367,313,2.835,314,3.883,315,3.152,316,3.349,317,3.883]],["title/classes/CsdlEntityContainer.html",[234,0.313,318,3.079]],["body/classes/CsdlEntityContainer.html",[3,0.122,4,0.107,5,0.122,6,0.122,8,0.078,9,0.252,10,0.245,14,0.168,15,0.121,17,0.011,19,0.564,24,0.107,33,2.245,36,2.508,71,0.16,165,1.233,208,3.742,222,0.122,224,0.007,225,0.009,226,0.007,230,0.438,234,0.399,236,0.335,237,2.21,238,1.735,243,0.539,244,1.634,248,1.399,256,4.419,259,4.419,260,1.965,310,3.457,318,4.943,319,4.68,320,7.978,321,7.978,322,7.978,323,7.978,324,5.86,325,5.86,326,5.339,327,5.339,328,4.68,329,4.68,330,5.339,331,4.68,332,4.68,333,3.447]],["title/classes/CsdlEntitySet.html",[234,0.313,324,3.079]],["body/classes/CsdlEntitySet.html",[3,0.132,4,0.116,5,0.132,6,0.121,8,0.084,9,0.265,10,0.234,14,0.171,15,0.119,16,0.945,17,0.011,19,0.442,24,0.116,35,1.283,36,2.467,54,2.347,71,0.164,165,1.223,222,0.132,224,0.007,225,0.009,226,0.007,230,0.432,234,0.432,236,0.363,237,2.195,243,0.566,244,1.768,248,1.239,258,4.741,310,2.709,324,5.191,334,5.064,335,5.6,336,7.155,337,5.6,338,5.777,339,5.064,340,5.064,341,5.777,342,5.064,343,4.594]],["title/classes/CsdlEntityType.html",[234,0.313,313,2.434]],["body/classes/CsdlEntityType.html",[3,0.107,4,0.094,5,0.107,6,0.107,8,0.068,9,0.314,10,0.245,14,0.171,15,0.12,16,1.021,17,0.011,19,0.358,24,0.154,35,1.039,51,1.854,71,0.164,165,1.238,170,1.289,199,1.2,222,0.107,224,0.006,225,0.008,226,0.006,230,0.436,234,0.572,236,0.294,237,1.945,243,0.629,244,1.431,248,1.406,291,3.306,293,2.716,294,4.078,295,2.59,296,5.369,297,2.76,298,5.318,299,5.651,300,5.318,301,3.91,302,3.91,304,4.099,305,4.099,306,4.099,307,4.099,308,4.099,309,4.099,310,2.193,311,2.374,312,3.273,313,3.589,314,4.677,315,4.942,316,3.208,317,3.776,344,4.099,345,4.677,346,4.099]],["title/classes/CsdlEnumMember.html",[234,0.313,347,3.079]],["body/classes/CsdlEnumMember.html",[3,0.138,4,0.121,5,0.138,6,0.117,8,0.088,9,0.271,10,0.222,14,0.168,15,0.113,16,0.713,17,0.011,18,1.25,24,0.145,61,1.679,71,0.168,165,1.219,211,2.617,222,0.138,224,0.008,225,0.009,226,0.008,230,0.411,234,0.541,236,0.377,237,2.131,243,0.622,244,1.838,248,1.053,295,3.327,347,5.706,348,4.272,349,4.412,350,5.265,351,6.007,352,4.121,353,4.777,354,4.777]],["title/classes/CsdlEnumType.html",[234,0.313,352,2.875]],["body/classes/CsdlEnumType.html",[3,0.131,4,0.115,5,0.131,6,0.121,8,0.083,9,0.263,10,0.233,14,0.172,15,0.119,16,0.942,17,0.011,18,0.887,24,0.141,61,1.164,71,0.167,165,1.23,211,3.546,222,0.131,224,0.007,225,0.009,226,0.007,230,0.431,234,0.526,236,0.359,237,2.19,243,0.609,244,1.751,248,1.232,295,3.169,347,5.98,348,4.39,352,4.82,353,6.474,354,6.474,355,5.722,356,5.015,357,5.722,358,5.015,359,5.015]],["title/classes/CsdlFunction.html",[234,0.313,254,2.322]],["body/classes/CsdlFunction.html",[3,0.109,4,0.096,5,0.109,6,0.119,8,0.069,9,0.234,10,0.237,14,0.175,15,0.12,16,1.005,17,0.011,18,1.225,24,0.159,34,2.229,50,1.751,53,1.701,56,1.751,58,1.751,71,0.166,165,1.255,222,0.184,224,0.006,225,0.008,226,0.006,230,0.427,234,0.591,235,2.637,236,0.299,237,2.159,238,2.655,239,3.074,240,4.828,241,4.828,242,4.828,243,0.645,244,1.457,245,4.589,246,4.589,248,1.3,254,3.463,255,4.704,256,2.637,257,3.074,258,2.765,259,2.637,260,1.752,261,2.54,360,4.761,361,4.761,362,4.761,363,4.761,364,4.761,365,4.761,366,4.761]],["title/classes/CsdlFunctionImport.html",[234,0.313,256,2.322]],["body/classes/CsdlFunctionImport.html",[3,0.114,4,0.1,5,0.114,6,0.117,8,0.072,9,0.241,10,0.223,14,0.177,15,0.119,16,0.99,17,0.011,18,1.239,24,0.161,34,2.851,50,1.802,53,1.75,56,1.802,58,1.802,71,0.167,165,1.255,222,0.163,224,0.006,225,0.008,226,0.006,230,0.414,234,0.598,235,2.755,236,0.312,237,2.113,238,2.599,239,3.211,240,3.931,241,3.931,242,3.931,243,0.651,244,1.522,245,4.141,246,4.141,248,1.128,254,2.755,255,3.039,256,3.563,257,5.04,258,4.534,259,2.755,260,1.831,261,2.614,367,4.974,368,4.974,369,4.974,370,4.974,371,4.974]],["title/classes/CsdlInclude.html",[234,0.313,372,2.875]],["body/classes/CsdlInclude.html",[1,1.78,3,0.133,4,0.117,5,0.133,6,0.116,8,0.085,9,0.266,10,0.219,14,0.175,15,0.112,17,0.011,19,0.445,24,0.154,71,0.117,165,1.224,170,1.083,198,2.756,199,2.099,222,0.133,224,0.007,225,0.009,226,0.007,230,0.406,234,0.573,236,0.365,237,2.108,243,0.638,248,1.02,266,3.76,268,3.222,270,3.604,276,3.378,277,3.222,310,2.728,372,5.255,373,4.625,374,5.098,375,5.816,376,5.816,377,5.816,378,3.99,379,4.272,380,4.625,381,4.625,382,4.869,383,4.272,384,4.272]],["title/classes/CsdlIncludeAnnotations.html",[234,0.313,382,2.875]],["body/classes/CsdlIncludeAnnotations.html",[1,1.737,3,0.13,4,0.114,5,0.13,6,0.118,8,0.083,9,0.262,10,0.233,14,0.176,15,0.115,17,0.011,19,0.434,24,0.152,71,0.114,165,1.228,170,1.057,198,1.961,199,1.457,222,0.13,224,0.007,225,0.009,226,0.007,230,0.419,234,0.567,236,0.356,237,2.146,243,0.633,248,1.226,266,3.704,268,3.144,270,3.55,276,4.717,277,3.144,310,2.662,372,4.797,373,4.514,378,3.894,379,4.169,380,4.514,381,4.514,382,5.198,383,5.809,384,5.966,385,5.676,386,5.676,387,5.676,388,5.676,389,5.676]],["title/classes/CsdlKey.html",[234,0.313,314,2.561]],["body/classes/CsdlKey.html",[3,0.125,4,0.11,5,0.125,6,0.108,8,0.079,9,0.311,10,0.156,14,0.169,15,0.099,16,0.987,17,0.011,19,0.417,24,0.161,35,1.212,51,1.322,71,0.161,165,1.219,170,1.27,199,1.4,222,0.125,224,0.007,225,0.009,226,0.007,230,0.361,234,0.601,236,0.342,237,1.967,243,0.656,293,3.169,294,4.123,295,3.022,296,4.806,297,2.69,298,5.184,299,5.508,300,5.184,301,3.803,302,3.803,310,2.559,311,2.77,312,3.614,313,3.169,314,4.549,315,3.522,316,5.351,317,4.906,390,5.456,391,5.456,392,5.456]],["title/classes/CsdlNavigationProperty.html",[234,0.313,302,2.044]],["body/classes/CsdlNavigationProperty.html",[3,0.111,4,0.097,5,0.111,6,0.116,8,0.07,9,0.237,10,0.241,14,0.176,15,0.126,16,1.001,17,0.011,18,1.09,24,0.155,35,1.073,50,1.353,53,2.255,56,1.353,58,1.353,71,0.162,165,1.245,170,1.309,222,0.111,224,0.006,225,0.008,226,0.006,230,0.434,234,0.579,236,0.303,237,2.096,243,0.635,244,1.478,248,1.356,260,1.778,261,1.963,281,2.559,291,2.957,297,1.619,301,2.356,302,3.078,311,4.029,312,3.344,393,3.315,394,5.218,395,4.994,396,4.994,397,4.994,398,5.307,399,4.727,400,4.727,401,4.832,402,4.832,403,4.832,404,4.832,405,4.832,406,4.235,407,4.235,408,4.235,409,2.952,410,3.119]],["title/classes/CsdlNavigationPropertyBinding.html",[234,0.313,337,2.875]],["body/classes/CsdlNavigationPropertyBinding.html",[3,0.142,4,0.124,5,0.142,6,0.119,8,0.09,9,0.276,10,0.177,14,0.173,15,0.115,17,0.011,24,0.124,35,1.808,54,3.308,71,0.124,165,1.188,219,2.491,222,0.142,224,0.008,225,0.009,226,0.008,230,0.417,234,0.462,236,0.388,237,2.151,243,0.589,275,4.831,337,5.052,411,6.183,412,6.183,413,6.183,414,6.183,415,6.183]],["title/classes/CsdlOnDelete.html",[234,0.313,400,2.561]],["body/classes/CsdlOnDelete.html",[3,0.127,4,0.111,5,0.127,6,0.109,8,0.081,9,0.258,10,0.158,14,0.175,15,0.121,16,0.957,17,0.011,18,1.161,24,0.162,35,1.228,50,1.548,53,2.193,56,1.548,58,1.548,71,0.157,165,1.237,170,1.281,222,0.127,224,0.007,225,0.009,226,0.007,230,0.364,234,0.603,236,0.347,237,1.979,243,0.658,260,2.884,261,2.246,281,2.928,297,1.852,301,2.695,302,2.695,311,3.802,312,3.644,393,3.792,394,4.835,395,3.569,396,3.569,397,3.569,398,3.792,399,4.203,400,4.576,409,3.377,410,3.569,416,5.527,417,5.527,418,5.527]],["title/classes/CsdlParameter.html",[234,0.313,246,2.434]],["body/classes/CsdlParameter.html",[3,0.107,4,0.094,5,0.107,6,0.12,8,0.068,9,0.231,10,0.24,14,0.176,15,0.124,16,0.978,17,0.011,18,1.327,24,0.158,34,2.198,50,2.2,53,2.137,56,2.2,58,2.2,71,0.165,165,1.255,222,0.158,224,0.006,225,0.008,226,0.006,230,0.431,234,0.588,235,2.582,236,0.293,237,2.175,238,2.675,239,3.009,240,3.767,241,3.767,242,3.767,243,0.641,244,1.426,245,4.012,246,4.27,248,1.341,254,2.582,255,2.848,256,2.582,257,3.009,258,2.707,259,2.582,260,1.715,261,3.191,419,4.661,420,4.661,421,4.661,422,4.661,423,4.661,424,4.661,425,4.661,426,4.661]],["title/classes/CsdlProperty.html",[234,0.313,301,2.044]],["body/classes/CsdlProperty.html",[3,0.106,4,0.093,5,0.106,6,0.118,8,0.067,9,0.23,10,0.245,14,0.176,15,0.126,16,0.994,17,0.011,18,1.306,24,0.153,35,1.028,50,2.137,53,2.236,56,2.137,58,2.137,71,0.161,165,1.246,170,1.282,222,0.106,224,0.006,225,0.008,226,0.006,230,0.44,234,0.571,236,0.291,237,2.146,243,0.628,244,1.417,248,1.403,260,1.704,261,3.1,281,4.041,291,2.896,297,1.551,301,2.993,302,2.258,311,4.124,312,3.252,393,3.176,394,5.165,395,2.99,396,2.99,397,2.99,398,3.176,399,3.751,400,3.751,406,4.059,407,4.059,408,4.059,409,4.662,410,2.99,427,4.63,428,4.63,429,4.63,430,4.63,431,4.63,432,4.63,433,4.63]],["title/classes/CsdlPropertyRef.html",[234,0.313,317,2.561]],["body/classes/CsdlPropertyRef.html",[3,0.122,4,0.107,5,0.122,6,0.113,8,0.078,9,0.31,10,0.211,14,0.174,15,0.107,16,0.982,17,0.011,19,0.407,24,0.16,35,1.183,51,1.29,71,0.168,165,1.224,170,1.251,199,2.046,222,0.122,224,0.007,225,0.009,226,0.007,230,0.39,234,0.596,236,0.334,237,2.043,243,0.652,244,1.629,248,0.934,293,3.093,294,4.283,295,2.95,296,4.753,297,2.671,298,5.147,299,5.469,300,5.147,301,3.77,302,3.77,310,2.497,311,2.704,312,3.56,313,3.093,314,4.106,315,3.438,316,3.653,317,4.499,434,5.325,435,5.325,436,5.325]],["title/classes/CsdlReference.html",[234,0.313,378,2.875]],["body/classes/CsdlReference.html",[1,1.691,3,0.127,4,0.111,5,0.127,6,0.117,8,0.081,9,0.258,10,0.239,14,0.171,15,0.117,17,0.011,19,0.423,24,0.15,71,0.111,165,1.232,170,1.281,198,1.91,199,1.419,222,0.127,224,0.007,225,0.009,226,0.007,230,0.427,234,0.56,236,0.347,237,2.13,243,0.627,248,1.313,266,4.151,268,4.465,270,4.093,276,3.21,277,3.062,291,2.324,292,4.06,310,2.592,372,5.529,373,4.395,378,4.718,379,5.755,380,6.41,381,6.41,382,5.529,383,4.06,384,4.06,437,5.527,438,5.527,439,5.527,440,5.527,441,5.527]],["title/classes/CsdlReferentialConstraint.html",[234,0.313,399,2.561]],["body/classes/CsdlReferentialConstraint.html",[3,0.124,4,0.109,5,0.124,6,0.113,8,0.079,9,0.254,10,0.155,14,0.176,15,0.122,16,0.952,17,0.011,18,1.15,24,0.161,35,1.727,50,1.516,53,2.179,56,1.516,58,1.516,71,0.156,165,1.239,170,1.264,222,0.124,224,0.007,225,0.009,226,0.007,230,0.393,234,0.599,236,0.34,237,2.055,243,0.654,260,1.992,261,2.2,281,2.868,297,1.814,301,2.64,302,2.64,311,3.949,312,3.597,393,3.714,394,4.789,395,3.495,396,3.495,397,3.495,398,3.714,399,4.533,400,4.149,409,3.308,410,5.172,442,5.414,443,5.414,444,5.414,445,5.414]],["title/classes/CsdlReturnType.html",[234,0.313,245,2.434]],["body/classes/CsdlReturnType.html",[3,0.109,4,0.095,5,0.109,6,0.119,8,0.069,9,0.234,10,0.241,14,0.175,15,0.123,16,0.981,17,0.011,18,1.329,24,0.159,34,2.224,50,2.211,53,2.147,56,2.211,58,2.211,71,0.159,165,1.255,222,0.16,224,0.006,225,0.008,226,0.006,230,0.426,234,0.59,235,2.628,236,0.298,237,2.158,238,2.653,239,3.063,240,3.812,241,3.812,242,3.812,243,0.644,245,4.3,246,4.048,248,1.349,254,2.628,255,2.899,256,2.628,257,3.063,258,2.756,259,2.628,260,1.746,261,3.207,446,4.745,447,4.745,448,4.745,449,4.745,450,4.745,451,4.745,452,4.745,453,4.745]],["title/classes/CsdlSchema.html",[234,0.313,454,3.333]],["body/classes/CsdlSchema.html",[1,1.378,3,0.103,4,0.09,5,0.103,6,0.123,8,0.066,9,0.226,10,0.249,14,0.162,15,0.125,17,0.011,19,0.595,24,0.09,36,1.337,71,0.09,165,1.245,170,1.122,198,2.505,199,1.94,222,0.103,224,0.006,225,0.008,226,0.006,230,0.447,234,0.337,235,4.187,236,0.283,237,2.23,238,1.463,243,0.482,248,1.461,254,4.187,260,1.657,266,3.841,268,4.187,270,3.838,274,4.618,277,2.494,279,4.618,291,1.893,292,3.307,293,4.39,294,2.494,310,3.648,313,4.39,318,5.552,348,2.385,352,5.185,374,3.946,454,4.791,455,4.502,456,7.558,457,7.558,458,7.558,459,6.625,460,7.558,461,7.558,462,4.618,463,7.558,464,7.558,465,5.552,466,4.502,467,4.502,468,4.502,469,4.502,470,4.502,471,4.502,472,4.502,473,4.502,474,4.502,475,4.502,476,4.502,477,4.502,478,3.946,479,3.58]],["title/classes/CsdlSingleton.html",[234,0.313,325,3.079]],["body/classes/CsdlSingleton.html",[3,0.137,4,0.121,5,0.137,6,0.12,8,0.087,9,0.271,10,0.222,14,0.172,15,0.125,17,0.011,19,0.459,24,0.121,35,1.332,54,2.437,71,0.166,165,1.212,222,0.137,224,0.008,225,0.009,226,0.008,230,0.427,234,0.449,236,0.376,237,2.18,243,0.579,244,1.835,248,1.052,310,2.813,325,5.311,337,5.659,343,4.77,480,5.998,481,8.249,482,5.998,483,5.998,484,5.998,485,5.998]],["title/classes/CsdlStructuralProperty.html",[234,0.313,394,2.706]],["body/classes/CsdlStructuralProperty.html",[3,0.121,4,0.106,5,0.121,6,0.116,8,0.077,9,0.251,10,0.21,14,0.176,15,0.126,16,0.992,17,0.011,18,1.137,24,0.16,35,1.174,50,1.48,53,2.292,56,1.48,58,1.48,71,0.166,165,1.241,170,1.245,222,0.121,224,0.007,225,0.009,226,0.007,230,0.408,234,0.595,236,0.332,237,2.102,243,0.65,244,1.617,248,0.927,260,1.945,261,2.147,281,2.8,297,1.771,301,2.577,302,2.577,311,4.039,312,3.543,393,3.626,394,4.978,395,3.412,396,3.412,397,3.412,398,3.626,399,4.086,400,4.086,409,3.229,410,3.412,486,5.285,487,5.285,488,5.285,489,5.285]],["title/classes/CsdlStructuredType.html",[234,0.313,296,2.706]],["body/classes/CsdlStructuredType.html",[3,0.111,4,0.098,5,0.111,6,0.12,8,0.071,9,0.316,10,0.241,14,0.172,15,0.118,16,1.013,17,0.011,19,0.372,24,0.156,35,1.079,51,1.177,71,0.165,165,1.235,170,1.18,199,1.247,222,0.111,224,0.006,225,0.008,226,0.006,230,0.429,234,0.58,236,0.305,237,2.169,243,0.636,244,1.487,248,1.359,293,2.822,294,4.546,295,2.692,296,4.824,297,2.78,298,5.357,299,5.692,300,5.357,301,3.946,302,3.946,310,2.279,311,2.467,312,3.357,313,2.822,314,3.872,315,3.137,316,3.334,317,3.872,349,3.569,356,4.26,358,4.26,359,4.26,490,3.864,491,3.864,492,3.864]],["title/classes/CsdlTerm.html",[234,0.313,279,2.561]],["body/classes/CsdlTerm.html",[3,0.109,4,0.096,5,0.109,6,0.123,8,0.069,9,0.234,10,0.247,14,0.177,15,0.125,16,0.88,17,0.011,18,1.311,24,0.149,50,2.155,53,2.093,56,2.155,58,2.155,71,0.155,165,1.248,170,0.886,222,0.109,224,0.006,225,0.008,226,0.006,230,0.445,234,0.554,236,0.298,237,2.235,243,0.593,244,1.455,248,1.433,261,3.127,266,3.309,267,3.493,268,3.461,270,3.543,273,3.07,274,2.906,275,2.762,276,3.628,277,2.634,278,3.262,279,3.817,280,5.279,281,4.077,282,5.279,493,4.756,494,4.756,495,4.756,496,4.756,497,4.756,498,4.756,499,4.756,500,4.756,501,4.756,502,4.756,503,4.756]],["title/classes/CsdlTypeDefinition.html",[234,0.313,465,3.079]],["body/classes/CsdlTypeDefinition.html",[1,1.576,3,0.118,4,0.103,5,0.118,6,0.122,8,0.075,9,0.246,10,0.246,14,0.172,15,0.127,16,0.907,17,0.011,18,1.326,19,0.394,24,0.103,50,2.21,56,2.21,58,2.21,71,0.159,165,1.24,170,1.225,222,0.118,224,0.007,225,0.008,226,0.007,230,0.444,234,0.385,236,0.323,237,2.216,243,0.526,244,1.576,248,1.415,261,3.206,266,4.046,268,4.371,270,4.007,277,2.853,291,2.165,292,3.783,310,2.415,409,4.822,465,4.832,504,5.15,505,7.892,506,5.15,507,5.15,508,5.15,509,5.15,510,5.15,511,5.15,512,5.15,513,5.15]],["title/interfaces/EnumTypeField.html",[0,1.283,60,1.966]],["body/interfaces/EnumTypeField.html",[0,2.369,1,2.009,2,1.455,3,0.071,4,0.062,5,0.071,6,0.045,7,1.576,8,0.045,9,0.23,10,0.132,11,2.452,12,2.452,13,2.452,14,0.179,15,0.124,16,0.971,17,0.012,18,1.228,19,0.354,20,1.513,21,1.142,22,1.799,23,1.04,24,0.171,25,1.513,26,1.455,27,2.249,28,2.932,29,1.94,30,1.644,31,2.86,32,2.104,33,1.305,34,1.106,35,0.689,36,0.922,37,1.106,38,1.04,39,2.35,40,2.016,41,2.35,42,2.35,43,2.171,44,2.016,45,1.352,46,1.644,47,1.352,48,2.596,49,1.335,50,0.869,51,0.752,52,2.104,53,1.259,54,1.261,55,1.818,56,0.869,57,2.405,58,0.869,59,1.402,60,2.596,61,1.401,62,2.452,63,1.644,64,1.644,65,1.644,66,1.644,67,1.576,68,1.644,69,1.644,70,1.644,71,0.173,72,2.5,73,1.644,74,1.644,75,1.644,76,1.644,77,1.644,78,1.402,79,1.644,80,1.18,81,1.644,82,1.644,83,1.644,84,1.644,85,1.644,86,1.644,87,1.644,88,1.644,89,1.644,90,1.644,91,1.644,92,1.644,93,1.644,94,1.644,95,1.644,96,2.534,97,1.406,98,2.328,99,1.759,100,1.65,101,2.257,102,2.257,103,2.772,104,1.644,105,2.452,106,1.644,107,1.455,108,1.644,109,1.644,110,3.013,111,1.88,112,1.839,113,1.974,114,3.387,115,2.711,116,2.932,117,2.452,118,1.219,119,1.644,120,2.452,121,2.811,122,3.079,123,1.644,124,1.644,125,1.644,126,3.222,127,2.175,128,2.811,129,2.932,130,1.644,131,2.257,132,1.644,133,3.251,134,0.779,135,1.513,136,1.644,137,1.576,138,1.576,139,1.644,140,1.644,141,1.644,142,1.644,143,2.257,144,0.496,145,1.644,146,2.452,147,2.452,148,2.5,149,2.452,150,2.35,151,1.576,152,1.644,153,1.455,154,2.171,155,1.644,156,2.5,157,1.513,158,1.513,159,1.513,160,2.171,161,1.576,162,1.513,163,1.576,164,2.257,165,0.437,166,0.796,167,1.402,168,1.513,169,2.056,170,1.143,171,1.305,172,2.171,173,2.257,174,1.455,175,1.513,176,1.576,177,1.576,178,1.352,179,1.416,180,1.305,181,1.142,182,1.402,183,1.352,184,0.82,185,1.402,186,0.631,187,1.106,188,1.455,189,1.402,190,1.513,191,1.576,192,1.576,193,1.576,194,1.402,195,1.513,196,2.257,197,3.357,198,1.072,199,0.796,200,1.576,201,2.091,202,1.18,203,2.091,204,1.576,205,2.016,206,1.576,207,2.257,208,1.455,209,2.257,210,1.513,211,1.352,212,1.88,213,1.576,214,1.402,215,1.576,216,1.305,217,2.35,218,2.091,219,0.95,220,1.576,221,1.576,222,0.071,223,1.142,224,0.004,225,0.006,226,0.004]],["title/classes/Field.html",[55,1.647,234,0.313]],["body/classes/Field.html",[1,1.379,3,0.069,4,0.06,5,0.069,6,0.088,8,0.079,9,0.169,10,0.086,14,0.142,15,0.103,17,0.012,19,0.608,24,0.06,26,4.155,32,2.06,33,1.895,34,1.607,35,1.339,36,1.339,38,1.51,50,0.839,51,0.726,53,0.815,54,1.217,55,2.129,56,0.839,57,0.944,58,0.839,61,0.609,71,0.137,98,2.857,144,1.332,154,2.114,156,2.448,165,1.021,166,2.271,170,0.558,179,0.917,195,1.46,198,1.035,199,0.769,213,1.521,218,1.353,219,0.917,222,0.069,224,0.004,225,0.006,226,0.004,230,0.287,234,0.337,235,1.659,236,0.188,238,1.761,240,1.83,241,1.83,242,1.83,243,0.24,244,0.917,245,1.74,246,1.74,254,1.659,255,1.83,256,1.659,258,1.74,259,1.659,260,1.995,261,1.217,270,1.521,273,1.934,274,1.83,275,1.74,276,1.74,278,3.092,279,1.83,280,2.055,281,1.587,282,2.055,293,1.74,294,1.659,297,1.003,298,1.934,300,1.934,301,1.46,302,1.46,311,1.521,313,1.74,314,1.83,315,1.934,317,1.83,318,2.2,324,2.2,325,2.2,333,1.934,335,3.092,336,2.625,337,2.055,343,2.382,347,2.2,348,2.388,352,2.055,353,2.382,354,2.382,372,2.055,378,3.092,379,2.2,382,2.055,383,2.2,384,2.2,395,1.934,396,1.934,397,1.934,399,1.83,400,1.83,409,1.83,410,1.934,454,3.584,459,2.625,465,2.2,478,2.625,479,2.382,514,2.625,515,6.628,516,2.995,517,4.507,518,7.781,519,0.705,520,2.625,521,2.2,522,3.584,523,1.305,524,2.625,525,3.951,526,2.625,527,2.625,528,5.407,529,2.995,530,2.995,531,2.995,532,2.995,533,2.995,534,2.995,535,2.995,536,2.995,537,2.995,538,2.995,539,2.995,540,2.995,541,2.995,542,2.995,543,2.995,544,2.995,545,2.995,546,2.995,547,2.995,548,2.995,549,2.995,550,2.995,551,2.995,552,2.995,553,2.995,554,1.934,555,2.995,556,2.995,557,2.995,558,2.995,559,2.995,560,2.995,561,2.995,562,2.995,563,2.995,564,2.995,565,2.995,566,2.995,567,2.995,568,2.995,569,2.995,570,2.995,571,2.995,572,4.31,573,2.995,574,2.995,575,2.995,576,2.995,577,2.995,578,2.995,579,2.995,580,2.995,581,2.995,582,2.995,583,2.995,584,2.995,585,2.995,586,2.995,587,2.995,588,2.995,589,2.995,590,2.995,591,2.995,592,2.995,593,2.995,594,2.995,595,2.995,596,2.995,597,2.995,598,2.995,599,2.995,600,2.995,601,2.995,602,2.995,603,2.995,604,2.995,605,2.995,606,2.995,607,2.995,608,2.995,609,2.995,610,2.995,611,2.995,612,2.995,613,2.995,614,2.995,615,2.995,616,2.625,617,2.157,618,4.507,619,5.419,620,2.995,621,2.995,622,2.995,623,2.2,624,2.995,625,2.995,626,6.029,627,4.507,628,2.995,629,2.995,630,2.995,631,2.995,632,2.995,633,7.869,634,2.995,635,4.507,636,2.995,637,4.507,638,2.995,639,2.625,640,2.995,641,2.995,642,2.995,643,2.995,644,2.995,645,2.995,646,2.995,647,2.995,648,2.995,649,2.995,650,2.995,651,2.995,652,2.995,653,2.995,654,2.94,655,2.995,656,2.055,657,1.963,658,2.995,659,2.2,660,2.995,661,5.419,662,4.507,663,5.419,664,1.607,665,2.995,666,2.995,667,2.995,668,2.995,669,2.995,670,2.995,671,2.382,672,2.995,673,2.995,674,1.521]],["title/classes/ODataAnnotation.html",[234,0.313,675,2.561]],["body/classes/ODataAnnotation.html",[3,0.146,4,0.128,5,0.146,6,0.116,8,0.093,9,0.281,10,0.183,14,0.151,15,0.122,17,0.011,19,0.489,24,0.128,71,0.128,197,4.012,222,0.146,224,0.008,225,0.01,226,0.008,230,0.398,234,0.478,236,0.401,243,0.511,519,1.503,675,4.588,676,6.388,677,7.508,678,7.508,679,7.508,680,3.71,681,4.382,682,4.692]],["title/classes/ODataApi.html",[234,0.313,683,2.322]],["body/classes/ODataApi.html",[3,0.063,4,0.055,5,0.063,6,0.123,8,0.04,9,0.157,10,0.237,14,0.175,15,0.127,16,0.499,17,0.012,19,0.574,21,1.005,22,2.219,23,0.915,24,0.055,29,1.857,38,2.422,49,1.658,52,1.597,61,0.855,71,0.17,97,1.191,98,2.154,99,1.038,110,2.05,112,1.434,113,0.974,127,2.259,134,1.141,143,2.497,144,0.993,154,1.971,165,1.209,166,1.315,172,1.281,179,1.76,184,0.722,186,1.334,187,2.05,189,2.598,190,2.804,191,2.6,192,2.6,193,1.387,194,2.598,195,3.027,214,1.234,216,1.767,222,0.191,223,2.116,224,0.004,225,0.005,226,0.004,227,1.664,228,0.881,230,0.446,232,1.617,234,0.204,236,0.171,238,1.366,243,0.219,519,0.643,523,1.19,617,0.836,623,3.087,639,2.395,654,1.332,664,1.498,683,2.328,684,2.732,685,5.121,686,5.04,687,2.328,688,4.202,689,3.684,690,4.202,691,4.202,692,4.202,693,3.684,694,4.202,695,3.684,696,4.202,697,4.202,698,2.975,699,4.202,700,4.202,701,3.684,702,1.831,703,4.202,704,1.547,705,3.514,706,2.732,707,2.732,708,2.732,709,2.732,710,2.732,711,2.732,712,4.073,713,2.732,714,2.732,715,2.732,716,2.975,717,2.732,718,2.732,719,2.328,720,2.732,721,1.447,722,4.202,723,2.732,724,3.684,725,2.732,726,4.202,727,2.732,728,4.202,729,2.732,730,4.202,731,2.732,732,3.684,733,2.732,734,4.202,735,2.732,736,3.684,737,2.732,738,4.202,739,2.732,740,4.202,741,2.732,742,4.202,743,2.732,744,4.202,745,2.732,746,4.202,747,2.732,748,3.684,749,2.732,750,4.202,751,3.328,752,2.732,753,1.764,754,4.202,755,2.732,756,4.202,757,2.395,758,1.387,759,1.513,760,4.202,761,2.732,762,1.874,763,1.874,764,1.764,765,1.874,766,2.732,767,2.441,768,2.568,769,2.395,770,1.447,771,2.172,772,3.342,773,2.732,774,3.342,775,1.874,776,4.202,777,2.732,778,2.732,779,2.732,780,2.732,781,2.395,782,2.006,783,2.006,784,2.732,785,2.732,786,2.732,787,2.732,788,1.332,789,1.281,790,2.172,791,2.172,792,2.732,793,2.006,794,2.732,795,2.732,796,1.447,797,2.732,798,2.732,799,2.732,800,2.732,801,4.202,802,2.732,803,4.202,804,2.732,805,2.732,806,2.732,807,2.732,808,4.202,809,2.732,810,2.732,811,2.732,812,2.732,813,3.617,814,2.732,815,2.732,816,2.732,817,2.732,818,2.732,819,2.732,820,2.732,821,2.732,822,2.732,823,2.713,824,2.732,825,2.395,826,4.202,827,2.732,828,2.732,829,2.732,830,2.732,831,2.732,832,2.732,833,2.732,834,2.732,835,2.732,836,2.732,837,2.732,838,5.75,839,4.224,840,2.732,841,5.75,842,5.75,843,2.732,844,2.732,845,2.732,846,4.202,847,2.732,848,2.883,849,2.732,850,2.732,851,2.732,852,2.395,853,2.732,854,2.732,855,2.732,856,2.732,857,2.732]],["title/classes/ODataApiOptions.html",[234,0.313,712,3.333]],["body/classes/ODataApiOptions.html",[3,0.117,4,0.102,5,0.117,6,0.124,8,0.074,9,0.245,10,0.243,14,0.162,15,0.124,16,0.985,17,0.012,19,0.552,24,0.102,32,2.743,71,0.102,98,3.034,99,2.743,100,2.572,101,3.518,102,3.518,103,3.636,134,0.718,156,3.259,160,3.384,168,3.518,169,2.417,171,3.034,172,3.775,173,3.188,174,3.384,222,0.117,224,0.007,225,0.008,226,0.007,227,2.124,230,0.45,234,0.381,236,0.32,243,0.408,519,1.2,523,2.222,623,3.746,702,2.848,704,1.877,712,5.199,774,5.199,790,4.056,858,5.1,859,3.319,860,2.259,861,6.538,862,5.1,863,5.1,864,5.1,865,5.1,866,5.1,867,5.1,868,5.1,869,5.1,870,4.47,871,5.1,872,6.538,873,4.47,874,4.056,875,4.056,876,4.47,877,4.47,878,4.47,879,4.47,880,4.47,881,4.47,882,4.47,883,5.1,884,4.056,885,5.1,886,4.47,887,5.1,888,4.47,889,5.1,890,4.47]],["title/classes/ODataBatchRequest.html",[234,0.313,891,3.674]],["body/classes/ODataBatchRequest.html",[3,0.068,4,0.06,5,0.068,6,0.099,8,0.094,9,0.168,10,0.155,14,0.172,15,0.106,17,0.012,18,1,19,0.578,20,2.635,21,1.097,22,1.459,23,0.999,24,0.09,51,0.722,71,0.109,96,2.666,100,2.3,112,1.684,115,1.133,122,1.398,127,2.845,134,1.127,144,1.125,150,1.513,154,3.18,165,0.632,166,1.153,170,1.006,184,1.428,186,0.606,187,1.601,215,3.276,219,0.912,222,0.124,223,1.653,224,0.004,225,0.006,226,0.004,227,1.954,228,0.941,229,1.651,230,0.342,232,1.099,234,0.336,236,0.187,238,2.097,243,0.239,273,1.924,522,3.571,523,1.298,528,1.821,616,2.612,617,2.429,654,2.19,664,2.913,674,2.28,683,3.574,704,1.097,751,3.443,753,2.899,758,1.513,759,1.651,770,2.862,813,3.926,891,4.736,892,2.612,893,4.736,894,4.491,895,4.491,896,3.331,897,2.98,898,2.98,899,2.98,900,4.491,901,5.444,902,2.98,903,4.491,904,4.491,905,2.98,906,2.98,907,2.862,908,3.138,909,1.821,910,3.943,911,2.379,912,1.579,913,3.675,914,2.612,915,5.403,916,3.936,917,4.491,918,3.936,919,2.98,920,2.98,921,4.739,922,4.491,923,4.491,924,4.491,925,3.936,926,2.98,927,4.491,928,2.98,929,3.936,930,2.98,931,2.98,932,2.189,933,2.98,934,2.37,935,2.98,936,2.744,937,5.403,938,2.612,939,6.014,940,2.37,941,4.297,942,2.612,943,4.736,944,3.936,945,2.98,946,2.612,947,2.98,948,2.98,949,3.936,950,2.98,951,2.98,952,2.98,953,6.781,954,2.98,955,4.736,956,2.98,957,2.612,958,2.98,959,4.491,960,2.98,961,2.608,962,2.98,963,2.98,964,4.126,965,6.014,966,2.98,967,2.045,968,2.045,969,5.403,970,4.491,971,1.821,972,2.98,973,2.98,974,2.37,975,4.491,976,5.403,977,4.418,978,2.98,979,6.014,980,3.493,981,3.969,982,5.403,983,5.403,984,2.98,985,2.98,986,2.98,987,2.98,988,2.98,989,2.98,990,2.045,991,3.081,992,2.98,993,2.98,994,2.98,995,4.491,996,2.612,997,1.924,998,2.612,999,4.491,1000,1.924,1001,2.612,1002,4.736,1003,2.612,1004,4.491,1005,2.98,1006,4.491,1007,1.888,1008,2.98,1009,2.189,1010,2.045,1011,2.189,1012,2.98,1013,2.98,1014,2.98,1015,4.491,1016,5.403,1017,2.612,1018,2.045,1019,4.491,1020,2.98,1021,2.37,1022,3.936,1023,2.98,1024,3.298,1025,2.98,1026,2.98,1027,2.98,1028,2.98,1029,2.98,1030,2.98,1031,2.37,1032,2.045,1033,2.37,1034,2.98,1035,2.98,1036,2.98,1037,7.411,1038,4.491,1039,2.379,1040,6.014,1041,2.98,1042,6.452,1043,4.491,1044,2.98,1045,2.98,1046,2.98,1047,5.403,1048,2.98,1049,2.98,1050,2.98,1051,2.98,1052,1.731,1053,2.98,1054,2.98,1055,2.98,1056,2.98,1057,2.37,1058,2.37,1059,2.98,1060,2.98,1061,2.98,1062,2.98,1063,2.98,1064,2.98,1065,2.98,1066,2.98,1067,2.98,1068,2.98,1069,2.98,1070,2.98,1071,2.98,1072,2.98,1073,2.98]],["title/classes/ODataCache.html",[234,0.313,705,2.561]],["body/classes/ODataCache.html",[0,1.197,3,0.09,4,0.079,5,0.09,6,0.12,8,0.057,9,0.205,10,0.227,14,0.15,15,0.12,16,0.65,17,0.012,18,1.27,19,0.55,22,2.422,23,1.31,24,0.11,29,2.124,51,1.529,71,0.159,110,2.828,111,1.589,126,3.087,134,1.099,135,3.332,144,0.625,166,1.62,167,1.766,182,2.471,183,3.401,184,1.806,185,2.471,186,1.464,222,0.182,224,0.005,225,0.007,226,0.005,227,1.778,228,1.146,229,3.03,230,0.434,232,1.614,234,0.292,236,0.245,243,0.313,248,1.106,297,2.564,519,0.92,523,1.703,617,2.091,705,3.343,751,4.162,753,4.412,758,3.204,759,2.166,770,4.053,813,4.257,859,2.778,940,4.35,991,2.682,1021,3.11,1074,3.428,1075,4.688,1076,5.766,1077,4.35,1078,4.35,1079,4.35,1080,4.35,1081,4.35,1082,4.35,1083,3.984,1084,3.343,1085,5.471,1086,2.682,1087,3.91,1088,4.018,1089,3.91,1090,5.02,1091,3.91,1092,3.753,1093,3.91,1094,4.018,1095,3.91,1096,3.11,1097,3.91,1098,4.018,1099,4.644,1100,3.91,1101,5.283,1102,3.91,1103,3.753,1104,3.91,1105,3.91,1106,3.11,1107,3.428,1108,3.428,1109,4.795,1110,2.166,1111,3.428,1112,3.428,1113,2.872,1114,3.428,1115,3.428,1116,3.428,1117,4.795,1118,3.428,1119,3.428,1120,3.428,1121,3.428,1122,3.428,1123,3.428,1124,6.843,1125,3.428,1126,3.428,1127,4.795,1128,3.428,1129,3.428,1130,3.428,1131,3.428,1132,3.428]],["title/interfaces/ODataCacheEntry.html",[0,1.283,1099,2.706]],["body/interfaces/ODataCacheEntry.html",[0,1.454,2,2.228,3,0.109,4,0.095,5,0.109,6,0.069,8,0.069,9,0.234,10,0.179,14,0.125,15,0.102,17,0.012,18,1.292,19,0.588,22,2.266,23,1.591,24,0.125,29,2.093,51,1.151,110,2.912,111,1.93,126,3.346,134,1.15,135,3.611,144,0.76,166,1.219,167,2.146,182,2.146,183,3.506,184,1.255,185,2.146,186,1.507,224,0.006,225,0.008,226,0.006,234,0.355,297,2.336,519,1.118,523,2.069,617,2.266,705,2.903,751,3.761,758,3.17,759,2.631,770,3.923,813,4.183,859,2.412,940,4.964,991,3.259,1021,3.777,1074,4.164,1075,4.283,1076,5.802,1083,3.458,1084,2.903,1088,3.489,1090,5.8,1092,3.259,1094,3.489,1098,3.489,1099,4.782,1101,5.44,1103,3.259,1106,3.777,1107,4.164,1108,4.164,1109,5.472,1110,2.631,1111,4.164,1112,4.164,1113,3.489,1114,4.164,1115,4.164,1116,4.164,1117,5.472,1118,4.164,1119,4.164,1120,4.164,1121,4.164,1122,4.164,1123,4.164,1124,7.159,1125,4.164,1126,4.164,1127,5.472,1128,4.164,1129,4.164,1130,4.164,1131,4.164,1132,4.164]],["title/classes/ODataCallable.html",[234,0.313,763,2.875]],["body/classes/ODataCallable.html",[3,0.116,4,0.102,5,0.116,6,0.124,8,0.074,9,0.244,10,0.234,14,0.166,15,0.125,16,0.934,17,0.012,19,0.551,24,0.102,38,2.775,71,0.162,97,1.382,112,1.423,134,0.918,144,0.813,179,2.405,184,1.343,186,1.034,194,2.295,205,3.31,219,2.204,220,3.657,221,3.657,222,0.165,224,0.007,225,0.008,226,0.007,227,2.119,228,1.367,230,0.447,232,1.327,234,0.38,236,0.319,243,0.407,519,1.196,687,3.613,698,2.951,702,2.841,704,1.87,716,4.671,719,3.613,721,2.692,763,4.474,788,2.478,789,3.059,860,2.254,936,3.105,1133,5.082,1134,4.474,1135,6.522,1136,5.082,1137,5.082,1138,5.082,1139,5.291,1140,5.082,1141,5.082,1142,5.082,1143,4.211,1144,5.082,1145,3.105,1146,5.082,1147,3.486,1148,3.732,1149,5.082,1150,6.522,1151,5.082,1152,5.082,1153,5.082,1154,5.082,1155,3.105,1156,5.082,1157,4.041,1158,2.692,1159,3.732,1160,3.732,1161,3.732,1162,3.281,1163,3.486,1164,4.454]],["title/classes/ODataCallableParser.html",[234,0.313,1139,3.079]],["body/classes/ODataCallableParser.html",[3,0.102,4,0.09,5,0.102,6,0.12,8,0.065,9,0.224,10,0.222,14,0.17,15,0.126,16,0.712,17,0.012,19,0.341,24,0.12,27,2.747,52,1.697,53,1.214,61,1.376,71,0.164,97,1.646,99,2.277,134,1.149,144,0.714,166,1.146,169,1.496,178,3.555,179,2.593,180,3.038,181,2.205,184,1.179,186,1.376,198,2.336,205,3.148,218,3.405,222,0.182,224,0.006,225,0.008,226,0.006,227,1.947,228,1.255,230,0.432,232,1.376,234,0.448,236,0.28,243,0.357,244,1.366,519,1.051,617,1.366,680,3.479,682,3.279,687,3.318,698,3.479,702,2.609,704,1.643,719,3.745,721,2.365,788,2.921,789,2.094,859,3.433,1139,4.4,1155,4.415,1165,3.913,1166,4.197,1167,3.669,1168,5.99,1169,4.464,1170,5.377,1171,4.464,1172,4.464,1173,4.464,1174,4.464,1175,4.464,1176,4.4,1177,5.251,1178,4.464,1179,5.536,1180,3.913,1181,5.251,1182,3.913,1183,3.279,1184,3.279,1185,5.251,1186,3.913,1187,5.251,1188,3.913,1189,2.882,1190,3.913,1191,2.593,1192,3.913,1193,5.251,1194,3.913,1195,2.473,1196,2.473,1197,3.913,1198,3.913,1199,3.913,1200,3.913]],["title/classes/ODataCollection.html",[234,0.313,768,2.561]],["body/classes/ODataCollection.html",[3,0.064,4,0.056,5,0.064,6,0.122,8,0.04,9,0.159,10,0.212,14,0.138,15,0.117,16,0.505,17,0.012,18,1.022,19,0.443,22,2.408,23,0.929,24,0.056,27,1.727,49,0.8,59,1.92,61,1.052,71,0.149,97,1.393,107,1.994,112,1.448,113,0.989,118,1.089,134,1.178,144,1.206,148,2.823,165,0.728,166,1.327,186,0.564,202,1.616,216,2.174,219,1.301,222,0.175,224,0.004,225,0.005,226,0.004,227,1.68,228,0.891,230,0.442,232,1.593,234,0.207,236,0.174,238,0.901,243,0.222,248,1.016,260,1.021,275,3.366,554,2.745,654,3.614,656,2.916,657,3.577,664,2.688,674,1.408,704,1.021,758,1.408,759,1.536,767,1.611,768,3.159,771,2.205,783,3.797,859,2.158,860,1.469,911,4.185,912,3.926,971,4.783,997,1.79,1007,2.437,1033,3.381,1083,2.863,1176,3.122,1191,1.611,1201,2.773,1202,5.17,1203,4.531,1204,5.17,1205,4.531,1206,5.17,1207,3.726,1208,3.726,1209,3.122,1210,3.311,1211,5.796,1212,3.726,1213,5.796,1214,4.257,1215,5.17,1216,4.531,1217,4.531,1218,4.531,1219,4.251,1220,2.773,1221,3.742,1222,3.541,1223,2.773,1224,4.606,1225,2.773,1226,2.773,1227,2.773,1228,3.726,1229,2.773,1230,3.726,1231,2.773,1232,4.251,1233,2.773,1234,2.773,1235,3.726,1236,2.773,1237,2.773,1238,2.773,1239,3.726,1240,2.773,1241,4.251,1242,2.773,1243,4.251,1244,2.773,1245,4.251,1246,6.25,1247,2.773,1248,4.251,1249,2.773,1250,2.773,1251,2.773,1252,2.773,1253,2.773,1254,2.773,1255,2.773,1256,2.773,1257,2.431,1258,2.773,1259,2.431,1260,2.773,1261,2.431,1262,2.773,1263,3.381,1264,5.78,1265,4.609,1266,5.78,1267,3.726,1268,3.002,1269,2.431,1270,5.796,1271,4.251,1272,1.611,1273,1.611,1274,4.251,1275,4.251,1276,4.251,1277,5.17,1278,3.923,1279,7.335,1280,5.08,1281,3.726,1282,2.431,1283,2.773,1284,3.726,1285,3.726,1286,3.726,1287,6.208,1288,2.431,1289,4.531,1290,2.773,1291,2.773,1292,2.773,1293,2.773,1294,2.773,1295,4.251,1296,5.17,1297,4.251,1298,6.25,1299,4.251,1300,4.251,1301,4.251,1302,4.251,1303,4.251,1304,2.773,1305,2.773,1306,2.773,1307,3.122,1308,2.773,1309,2.773,1310,2.773,1311,2.431,1312,2.431,1313,2.431,1314,2.773,1315,2.773,1316,4.251,1317,2.773,1318,2.773,1319,2.773,1320,2.773,1321,3.726,1322,2.431,1323,5.17,1324,5.796,1325,3.726,1326,3.381,1327,3.726,1328,2.773,1329,4.251,1330,2.773,1331,7.261,1332,4.251,1333,2.773,1334,2.773,1335,2.773,1336,2.773,1337,4.251,1338,2.773,1339,4.251,1340,2.773,1341,2.773,1342,2.773,1343,2.773,1344,2.431,1345,2.773,1346,2.773,1347,2.773,1348,2.773]],["title/classes/ODataCountResource.html",[234,0.313,1349,3.674]],["body/classes/ODataCountResource.html",[3,0.089,4,0.078,5,0.089,6,0.099,8,0.057,9,0.204,10,0.234,14,0.157,15,0.124,17,0.012,19,0.584,22,2.575,23,1.304,24,0.078,36,1.156,49,2.071,61,1.613,71,0.166,97,1.631,113,1.388,115,2.593,127,2.142,134,0.886,144,0.872,170,1.015,181,1.432,187,1.944,199,1.4,202,1.48,219,1.191,222,0.19,223,2.007,224,0.005,225,0.007,226,0.005,228,1.143,229,3.02,230,0.454,232,1.724,234,0.291,236,0.244,248,1.196,291,3.576,297,1.827,519,1.605,523,1.695,528,3.846,657,3.691,896,3.486,907,3.804,908,4.17,909,2.378,910,4.548,911,4.557,912,3.334,967,3.741,968,3.741,997,2.513,1007,3.213,1009,2.859,1010,4.318,1011,4.005,1039,2.062,1052,3.167,1167,2.769,1210,2.062,1222,2.659,1224,3.332,1268,3.961,1278,3.778,1326,3.095,1349,5.978,1350,3.892,1351,4.005,1352,3.741,1353,4.005,1354,4.005,1355,4.623,1356,3.334,1357,3.095,1358,3.095,1359,4.388,1360,3.095,1361,3.892,1362,3.892,1363,4.623,1364,3.892,1365,2.261,1366,3.095,1367,2.859,1368,4.403,1369,3.095,1370,3.332,1371,2.859,1372,2.769,1373,3.095,1374,3.095,1375,2.859,1376,3.095,1377,3.095,1378,2.859,1379,3.095,1380,3.656,1381,3.095,1382,2.859,1383,3.095,1384,2.859,1385,3.095,1386,2.859,1387,3.095,1388,3.095,1389,3.095,1390,3.095,1391,3.095,1392,3.095,1393,2.859,1394,2.859,1395,3.892,1396,3.892,1397,3.892,1398,3.095,1399,3.892,1400,3.892,1401,3.412,1402,3.412]],["title/classes/ODataEntitiesMeta.html",[234,0.313,1222,2.044]],["body/classes/ODataEntitiesMeta.html",[3,0.08,4,0.07,5,0.08,6,0.119,8,0.051,9,0.222,10,0.212,14,0.168,15,0.117,17,0.012,18,0.541,19,0.386,21,1.286,24,0.131,29,1.373,31,2.199,35,1.121,36,1.5,49,1.007,57,1.869,71,0.149,72,2.281,78,1.578,80,2.469,97,1.482,100,1.245,114,3.08,118,2.329,134,1.224,144,1.039,166,2.013,169,2.176,170,1.21,171,1.469,186,1.206,222,0.158,224,0.005,225,0.007,226,0.005,228,1.058,230,0.446,232,1.507,234,0.486,236,0.219,238,1.641,291,3.114,297,2.481,462,3.969,519,0.822,617,1.069,654,1.703,657,1.522,664,2.114,796,3.922,860,1.745,913,3.085,961,2.029,1007,3.298,1039,1.85,1210,3.141,1222,3.167,1272,3.444,1273,3.444,1372,3.01,1403,2.566,1404,5.602,1405,4.771,1406,4.355,1407,4.355,1408,4.771,1409,4.355,1410,4.355,1411,3.493,1412,2.778,1413,2.778,1414,5.082,1415,2.778,1416,2.778,1417,3.493,1418,5.274,1419,3.493,1420,3.708,1421,3.493,1422,4.355,1423,3.493,1424,2.778,1425,2.778,1426,3.708,1427,2.778,1428,3.062,1429,3.493,1430,3.493,1431,3.493,1432,3.493,1433,3.493,1434,3.493,1435,3.493,1436,3.493,1437,3.493,1438,3.493,1439,3.493,1440,3.493,1441,3.493,1442,3.062,1443,3.493,1444,2.566,1445,2.396,1446,2.566,1447,2.396,1448,2.566,1449,2.566,1450,1.638,1451,2.566,1452,2.566,1453,2.566,1454,3.708,1455,4.355,1456,2.566,1457,4.355,1458,2.566,1459,2.566,1460,3.26,1461,2.566,1462,2.566,1463,4.355,1464,3.708,1465,2.566,1466,2.566,1467,2.566,1468,2.566,1469,2.566,1470,2.566,1471,2.566,1472,2.566,1473,2.566,1474,3.708,1475,2.566,1476,2.566,1477,2.566,1478,2.566,1479,2.566,1480,2.566,1481,2.566,1482,2.566,1483,5.274,1484,3.708,1485,3.708,1486,2.566,1487,2.566,1488,2.396,1489,2.566,1490,2.566,1491,2.566,1492,5.274,1493,4.355,1494,2.566,1495,3.708,1496,2.566,1497,2.566,1498,2.566]],["title/classes/ODataEntityContainer.html",[234,0.313,1499,3.333]],["body/classes/ODataEntityContainer.html",[1,1.709,3,0.128,4,0.112,5,0.128,6,0.122,8,0.081,9,0.259,10,0.16,14,0.139,15,0.118,17,0.012,19,0.602,24,0.112,36,1.659,38,2.85,57,2.372,71,0.158,97,1.443,134,0.786,144,1.107,207,3.835,208,3.529,222,0.128,224,0.007,225,0.009,226,0.007,230,0.436,234,0.418,236,0.351,243,0.447,319,4.896,328,4.896,329,4.896,331,4.896,332,6.069,333,3.606,519,1.314,675,4.597,702,3.016,704,2.056,716,4.785,764,4.858,788,2.724,789,2.62,860,2.392,1145,3.413,1147,3.832,1163,3.832,1450,3.247,1499,5.506,1500,7.321,1501,5.586,1502,4.749,1503,5.586,1504,5.586,1505,4.896,1506,5.586,1507,3.832,1508,3.832]],["title/classes/ODataEntityFieldParser.html",[234,0.313,1509,2.875]],["body/classes/ODataEntityFieldParser.html",[1,1.831,3,0.058,4,0.051,5,0.058,6,0.121,8,0.037,9,0.224,10,0.232,14,0.166,15,0.126,16,0.888,17,0.012,18,0.983,19,0.302,24,0.079,27,1.605,35,1.224,37,1.409,38,1.631,40,1.099,43,1.853,44,2.4,48,3.11,49,1.589,50,1.364,51,1.71,52,1.851,53,1.325,54,1.978,55,2.836,56,1.364,57,1.535,58,1.364,59,2.2,61,1.684,71,0.159,97,1.611,112,1.364,134,1.16,144,0.403,166,1.812,169,2.644,179,2.449,180,2.048,181,1.792,184,0.667,186,1.606,198,1.683,199,1.25,203,1.785,212,1.025,214,1.14,222,0.162,224,0.003,225,0.005,226,0.003,227,1.284,228,0.828,230,0.437,232,1.469,234,0.295,236,0.158,243,0.202,244,1.209,519,0.93,617,2.16,656,2.71,664,2.133,671,2.006,674,1.281,680,2.295,681,1.731,687,2.188,698,2.295,702,1.099,719,2.697,721,1.336,788,2.917,789,1.183,791,2.006,793,4.047,859,2.472,936,1.542,971,3.367,1143,1.629,1155,4.052,1158,1.336,1162,1.629,1166,3.475,1167,3.038,1179,4.047,1183,1.853,1189,1.629,1191,2.295,1195,3.052,1196,3.052,1221,2.551,1307,1.853,1356,2.093,1414,2.414,1450,1.183,1509,3.78,1510,2.211,1511,5.244,1512,4.83,1513,3.951,1514,3.142,1515,3.951,1516,2.523,1517,2.523,1518,2.523,1519,2.523,1520,2.523,1521,2.523,1522,2.523,1523,2.523,1524,2.523,1525,2.523,1526,2.523,1527,2.523,1528,2.523,1529,2.902,1530,2.523,1531,2.523,1532,2.523,1533,2.523,1534,2.523,1535,3.142,1536,5.414,1537,2.523,1538,3.463,1539,2.523,1540,2.523,1541,3.463,1542,2.523,1543,2.902,1544,2.523,1545,1.542,1546,3.142,1547,1.853,1548,2.211,1549,4.268,1550,2.211,1551,2.211,1552,3.463,1553,3.142,1554,3.142,1555,2.211,1556,3.463,1557,1.542,1558,3.463,1559,3.142,1560,2.211,1561,2.211,1562,2.211,1563,2.211,1564,2.211,1565,2.211,1566,3.463,1567,2.211,1568,1.853,1569,2.211,1570,2.211,1571,3.142,1572,3.463,1573,3.142,1574,2.211,1575,3.142,1576,2.902,1577,3.142,1578,3.142,1579,3.169,1580,3.463,1581,2.211,1582,3.142,1583,3.463,1584,2.211,1585,2.71,1586,2.211,1587,2.211,1588,2.211,1589,2.211,1590,3.872,1591,3.463,1592,2.211,1593,2.006,1594,3.142,1595,2.211,1596,4.047,1597,1.853,1598,4.104,1599,2.211,1600,2.211,1601,2.211,1602,5.244,1603,2.211,1604,4.268,1605,4.842,1606,3.463,1607,2.211,1608,2.211,1609,4.382,1610,2.211,1611,2.211,1612,2.211,1613,2.211,1614,2.211,1615,2.211,1616,2.211,1617,3.463,1618,2.211,1619,2.211,1620,2.211,1621,2.211,1622,2.211,1623,2.006,1624,2.211,1625,3.463,1626,2.211,1627,2.211,1628,2.211,1629,2.211,1630,4.268,1631,2.211,1632,2.211,1633,2.211,1634,2.211,1635,2.211,1636,2.211,1637,2.211,1638,1.853,1639,2.006,1640,2.211,1641,2.211,1642,2.006,1643,2.211,1644,2.211,1645,2.211,1646,2.211,1647,2.211,1648,2.211,1649,2.211,1650,2.211]],["title/classes/ODataEntityMeta.html",[234,0.313,1372,2.128]],["body/classes/ODataEntityMeta.html",[3,0.079,4,0.069,5,0.079,6,0.121,8,0.05,9,0.22,10,0.211,14,0.168,15,0.119,17,0.012,18,0.532,19,0.381,21,1.263,24,0.129,29,1.752,31,2.171,35,1.107,49,0.989,57,1.85,71,0.148,72,2.251,78,2.651,80,2.713,97,1.475,100,1.223,114,3.065,118,1.348,134,1.222,144,1.03,166,2.005,169,2.158,170,1.199,171,1.443,186,1.194,222,0.163,224,0.004,225,0.006,226,0.004,228,1.044,230,0.45,232,1.498,234,0.482,236,0.215,238,1.619,291,3.096,297,2.467,462,3.936,519,0.807,572,3.963,617,1.05,654,1.673,657,1.494,664,2.092,796,3.901,860,1.722,913,3.045,961,1.993,1007,3.285,1039,1.817,1210,1.817,1222,2.43,1272,1.993,1273,1.993,1372,3.27,1403,2.52,1404,5.585,1405,4.731,1406,4.311,1407,4.311,1408,4.731,1409,2.52,1410,2.52,1412,2.728,1413,2.728,1414,5.069,1415,2.728,1416,2.728,1418,5.242,1420,2.52,1422,4.311,1424,2.728,1425,2.728,1426,3.66,1427,2.728,1428,3.007,1442,3.007,1444,2.52,1445,2.353,1446,2.52,1447,2.353,1448,2.52,1449,2.52,1450,1.609,1451,2.52,1452,2.52,1453,2.52,1454,3.66,1455,4.311,1456,2.52,1457,4.311,1458,2.52,1459,2.52,1460,3.217,1461,2.52,1462,2.52,1463,4.311,1464,3.66,1465,2.52,1466,2.52,1467,3.66,1468,2.52,1469,2.52,1470,4.311,1471,2.52,1472,4.311,1473,2.52,1474,3.66,1475,4.311,1476,2.52,1477,4.311,1478,2.52,1479,4.311,1480,2.52,1481,4.311,1482,2.52,1483,5.242,1484,3.66,1485,3.66,1486,2.52,1487,2.52,1488,2.353,1489,2.52,1490,2.52,1491,2.52,1492,5.242,1493,4.311,1494,2.52,1495,3.66,1496,2.52,1497,2.52,1498,2.52,1651,3.431,1652,3.431,1653,3.431,1654,3.431,1655,3.431,1656,2.728,1657,3.431,1658,3.431,1659,3.431,1660,3.431,1661,3.431,1662,3.431,1663,3.431,1664,3.431,1665,3.431,1666,3.431,1667,3.431,1668,3.431,1669,3.431,1670,3.431,1671,3.431,1672,3.431,1673,3.431,1674,3.431,1675,3.431]],["title/classes/ODataEntityParser.html",[234,0.313,1536,2.875]],["body/classes/ODataEntityParser.html",[1,1.229,3,0.059,4,0.052,5,0.059,6,0.118,8,0.038,9,0.24,10,0.225,14,0.17,15,0.125,16,0.821,17,0.012,18,0.765,19,0.307,24,0.081,27,2.265,35,1.238,37,1.432,38,1.654,40,1.122,43,2.614,44,1.75,48,2.614,49,1.158,50,0.722,51,1.619,52,0.979,53,0.701,54,1.047,55,2.515,56,0.722,57,0.812,58,0.722,59,1.164,61,1.653,71,0.16,97,1.591,112,1.382,134,1.164,144,0.412,166,1.267,169,2.553,179,2.383,180,2.076,181,1.817,184,1.304,186,1.624,198,2.31,199,1.716,203,2.518,212,2.005,214,2.23,222,0.166,224,0.003,225,0.005,226,0.003,227,1.305,228,0.842,230,0.425,232,1.506,234,0.3,236,0.162,238,1.305,243,0.206,244,0.788,248,0.452,519,0.945,617,2.174,664,2.282,671,3.925,674,1.308,680,2.333,681,1.768,687,2.225,698,2.333,702,1.75,704,1.478,719,2.734,721,1.365,788,2.946,789,1.208,791,2.049,793,4.094,823,2.593,859,2.506,936,1.575,971,3.406,1134,2.755,1143,2.593,1155,4.085,1158,1.365,1162,1.664,1166,3.509,1167,3.068,1179,4.094,1183,1.893,1189,1.664,1191,2.333,1195,3.087,1196,3.087,1221,2.593,1307,1.893,1380,1.497,1414,2.454,1450,1.208,1509,3.824,1510,2.259,1511,5.296,1512,2.259,1514,3.194,1529,1.893,1535,2.049,1536,5.51,1538,2.259,1541,2.259,1543,1.893,1545,1.575,1546,3.194,1547,1.893,1548,2.259,1549,4.327,1550,2.259,1551,2.259,1552,3.521,1553,3.194,1554,3.194,1555,2.259,1556,3.521,1557,1.575,1558,3.521,1559,3.194,1560,2.259,1561,2.259,1562,2.259,1563,2.259,1564,2.259,1565,2.259,1566,3.521,1567,2.259,1568,1.893,1569,2.259,1570,2.259,1571,3.194,1572,3.521,1573,3.194,1574,2.259,1575,3.194,1576,2.95,1577,3.194,1578,3.194,1579,3.201,1580,3.521,1581,2.259,1582,3.194,1583,3.521,1584,2.259,1585,3.386,1586,2.259,1587,2.259,1588,2.259,1589,2.259,1590,4.805,1591,3.521,1592,2.259,1593,2.049,1594,3.194,1595,2.259,1596,4.094,1597,1.893,1598,4.145,1599,2.259,1600,2.259,1601,2.259,1602,5.296,1603,2.259,1604,4.327,1605,4.873,1606,3.521,1607,2.259,1608,2.259,1609,4.433,1610,2.259,1611,2.259,1612,2.259,1613,2.259,1614,2.259,1615,3.521,1616,2.259,1617,3.521,1618,2.259,1619,2.259,1620,2.259,1621,2.259,1622,3.521,1623,2.049,1624,3.521,1625,3.521,1626,2.259,1627,3.521,1628,2.259,1629,2.259,1630,5.611,1631,2.259,1632,2.259,1633,3.521,1634,2.259,1635,2.259,1636,2.259,1637,2.259,1638,1.893,1639,2.049,1640,2.259,1641,2.259,1642,2.049,1643,2.259,1644,2.259,1645,3.521,1646,2.259,1647,2.259,1648,2.259,1649,3.521,1650,2.259,1676,4.017,1677,4.017,1678,4.017,1679,4.017,1680,2.577,1681,2.577,1682,2.577,1683,2.577,1684,2.577,1685,2.577,1686,2.577,1687,2.577,1688,2.577,1689,4.017,1690,2.577,1691,2.577,1692,2.577,1693,2.577,1694,2.577,1695,2.577,1696,2.577,1697,2.577]],["title/classes/ODataEntityService.html",[234,0.313,1698,3.333]],["body/classes/ODataEntityService.html",[3,0.08,4,0.071,5,0.08,6,0.121,8,0.051,10,0.228,14,0.145,15,0.118,17,0.012,19,0.581,20,2.471,21,1.292,22,2.513,23,1.176,24,0.071,25,3.366,29,0.955,36,2.362,51,1.577,61,1.405,71,0.164,80,2.26,96,2.188,97,1.642,115,2.26,131,2.471,134,1.182,148,2.686,165,1.222,186,0.714,202,2.475,222,0.186,224,0.005,225,0.007,226,0.005,228,1.062,230,0.436,232,1.618,234,0.263,236,0.22,243,0.281,248,1.331,335,4.079,519,0.826,617,2.367,657,2.207,664,2.12,704,2.188,757,3.077,758,1.782,759,1.945,767,2.943,768,3.096,813,3.15,860,1.751,907,3.449,971,3.096,1000,2.266,1106,2.792,1110,1.945,1209,5.283,1214,2.578,1224,4.395,1264,5.212,1265,4.728,1268,4.878,1278,1.945,1368,5.463,1370,4.395,1380,3.781,1698,4.029,1699,3.511,1700,4.441,1701,3.722,1702,4.441,1703,5.067,1704,4.441,1705,5.212,1706,5.946,1707,3.511,1708,5.067,1709,3.511,1710,5.707,1711,3.511,1712,3.511,1713,3.511,1714,5.067,1715,3.511,1716,5.067,1717,3.511,1718,3.511,1719,5.946,1720,3.511,1721,5.067,1722,3.511,1723,5.067,1724,3.511,1725,5.067,1726,3.511,1727,2.578,1728,3.511,1729,3.077,1730,3.511,1731,3.511,1732,3.511,1733,3.511,1734,3.077,1735,2.792,1736,3.511,1737,4.441,1738,4.441,1739,3.077,1740,3.511,1741,3.511,1742,3.511,1743,4.029,1744,3.077,1745,3.077,1746,3.077,1747,3.511,1748,5.946,1749,4.079,1750,5.946,1751,5.946,1752,6.51,1753,5.946,1754,5.946,1755,3.511,1756,5.067,1757,3.511,1758,5.946,1759,3.511,1760,3.511,1761,3.511,1762,3.077,1763,3.511,1764,3.511,1765,3.511,1766,3.511,1767,5.067,1768,3.511,1769,3.511,1770,3.511]],["title/classes/ODataEntitySet.html",[234,0.313,764,2.706]],["body/classes/ODataEntitySet.html",[1,1.702,3,0.127,4,0.112,5,0.127,6,0.122,8,0.081,9,0.259,10,0.198,14,0.162,15,0.12,16,0.661,17,0.011,19,0.574,24,0.112,38,2.825,57,2.368,71,0.162,97,1.441,112,1.558,134,0.972,144,0.89,209,3.83,222,0.158,224,0.007,225,0.009,226,0.007,228,1.447,230,0.436,232,1.132,234,0.416,236,0.349,243,0.445,334,4.877,339,4.877,340,6.054,342,4.877,519,1.309,675,4.589,702,3.008,704,2.048,716,4.78,764,4.459,788,2.713,789,2.609,860,2.386,936,3.4,1134,4.738,1143,4.459,1145,3.4,1147,3.817,1158,2.947,1159,4.086,1160,4.086,1161,4.086,1162,3.592,1163,3.817,1450,2.609,1500,7.315,1502,3.817,1507,3.817,1508,3.817,1771,5.564,1772,5.564]],["title/classes/ODataEnumFieldParser.html",[234,0.313,1773,3.079]],["body/classes/ODataEnumFieldParser.html",[1,2.357,3,0.109,4,0.096,5,0.109,6,0.115,8,0.069,9,0.234,10,0.179,14,0.174,15,0.124,16,0.566,17,0.012,18,1.194,19,0.479,24,0.126,35,1.39,37,1.699,38,1.597,44,2.725,55,2.913,57,2.202,60,3.778,61,1.639,71,0.17,97,1.2,134,1.113,144,0.762,169,2.34,178,2.076,179,1.915,180,2.004,181,1.754,198,1.647,201,2.826,210,2.324,211,2.076,212,1.936,222,0.143,224,0.006,225,0.008,226,0.006,228,1.311,230,0.408,232,0.97,234,0.468,236,0.299,243,0.381,244,1.915,519,1.122,674,2.42,680,2.768,681,3.27,702,2.076,788,3.406,789,2.235,839,3.501,859,3.546,874,3.79,1158,3.314,1166,2.768,1167,2.42,1184,3.501,1189,3.077,1450,2.235,1529,4.595,1543,3.501,1547,3.501,1568,3.501,1579,3.314,1585,3.27,1596,3.501,1597,3.501,1598,4.292,1773,5.13,1774,4.178,1775,6.257,1776,4.766,1777,4.766,1778,4.766,1779,4.178,1780,4.178,1781,4.178,1782,3.501,1783,6.122,1784,4.178,1785,3.79,1786,3.79,1787,4.178,1788,4.178,1789,4.178,1790,4.178,1791,4.178,1792,5.484,1793,4.178,1794,5.484,1795,4.178,1796,4.178,1797,4.178,1798,4.178]],["title/classes/ODataEnumParser.html",[234,0.313,1782,3.079]],["body/classes/ODataEnumParser.html",[1,1.824,3,0.101,4,0.089,5,0.101,6,0.12,8,0.065,9,0.223,10,0.222,14,0.174,15,0.127,16,0.708,17,0.012,18,1.117,19,0.456,24,0.12,35,1.324,37,1.58,38,1.485,44,3.138,49,1.278,55,2.342,57,1.397,60,3.379,61,1.637,71,0.169,97,1.518,134,1.09,144,0.709,169,2.651,178,1.93,179,2.061,180,2.507,181,2.194,198,2.328,201,3.254,210,3.284,211,2.934,212,2.737,222,0.165,224,0.006,225,0.008,226,0.006,227,1.937,228,1.249,230,0.432,232,1.371,234,0.446,236,0.278,243,0.355,244,1.356,519,1.043,674,2.25,680,2.574,681,3.04,702,2.597,704,1.631,788,3.284,789,2.078,839,3.255,859,3.42,874,3.524,1158,3.158,1166,3.912,1167,3.42,1184,3.255,1189,2.861,1450,2.078,1514,4.74,1529,3.255,1543,4.378,1547,3.255,1568,3.255,1579,3.158,1585,3.04,1596,3.255,1597,3.255,1598,4.089,1773,4.948,1774,3.884,1779,3.884,1780,3.884,1781,3.884,1782,4.378,1783,5.904,1784,3.884,1785,3.524,1786,3.524,1787,3.884,1788,3.884,1789,3.884,1790,3.884,1791,3.884,1792,5.225,1793,3.884,1794,5.225,1795,3.884,1796,3.884,1797,3.884,1798,3.884,1799,5.961,1800,4.431,1801,4.431,1802,4.431,1803,4.431,1804,4.431,1805,4.431,1806,4.431]],["title/classes/ODataEnumType.html",[234,0.313,762,2.875]],["body/classes/ODataEnumType.html",[1,1.417,3,0.106,4,0.093,5,0.106,6,0.123,8,0.067,9,0.23,10,0.218,14,0.167,15,0.124,16,0.55,17,0.012,18,1.182,19,0.561,24,0.093,29,1.67,38,2.721,55,2.411,57,2.171,61,1.401,71,0.168,97,1.321,112,1.297,134,1.104,144,0.982,179,2.107,184,1.223,194,2.092,201,3.312,211,3,212,2.979,222,0.18,224,0.006,225,0.008,226,0.006,227,1.995,228,1.286,230,0.446,232,1.552,234,0.346,236,0.291,238,1.505,243,0.371,295,2.565,344,4.059,349,3.401,490,3.682,491,3.682,492,3.682,519,1.09,675,4.208,702,2.674,704,1.704,716,4.554,762,4.211,788,2.258,789,2.172,860,2.121,936,2.829,1134,4.211,1143,3.963,1145,2.829,1147,3.176,1155,2.829,1157,3.682,1158,2.453,1159,3.401,1160,3.401,1161,3.401,1162,2.99,1163,3.176,1450,2.172,1502,3.176,1507,3.176,1508,3.176,1605,3.176,1773,5.604,1782,5.058,1785,3.682,1786,3.682,1807,8.474,1808,6.138,1809,6.138,1810,6.138,1811,5.381,1812,4.63,1813,6.138,1814,4.63,1815,6.138,1816,4.63,1817,4.63,1818,6.138,1819,4.63,1820,4.63,1821,4.63,1822,4.63,1823,5.381,1824,4.63,1825,4.63]],["title/classes/ODataInMemoryCache.html",[234,0.313,772,3.333]],["body/classes/ODataInMemoryCache.html",[3,0.104,4,0.092,5,0.104,6,0.106,8,0.066,9,0.228,10,0.239,14,0.146,15,0.124,16,0.722,17,0.011,18,1.235,19,0.465,22,2.221,24,0.092,29,2.065,51,1.472,71,0.168,110,1.626,134,0.642,166,1.56,170,1.132,182,2.06,183,3.175,184,1.926,185,2.06,186,1.391,222,0.191,224,0.006,225,0.008,226,0.006,227,1.975,228,1.273,229,3.366,230,0.45,232,1.699,234,0.341,236,0.286,243,0.365,248,1.198,291,3.51,297,2.442,705,5.193,751,4.334,753,5.04,758,2.316,770,4.342,772,4.832,813,4.288,1075,4.169,1076,5.553,1077,4.832,1078,5.796,1079,4.832,1080,4.832,1081,4.832,1082,5.796,1083,3.785,1084,3.713,1086,3.128,1088,3.35,1090,3.35,1092,4.688,1094,3.35,1096,3.627,1098,3.35,1099,3.923,1101,3.35,1103,4.688,1110,2.526,1826,4.56,1827,4.56,1828,3.997,1829,3.997,1830,4.56,1831,4.56,1832,3.997,1833,3.997,1834,3.997,1835,3.997,1836,3.997,1837,3.997,1838,3.997,1839,3.997,1840,3.997,1841,3.35,1842,3.627,1843,3.627,1844,3.627]],["title/classes/ODataInStorageCache.html",[234,0.313,1845,3.333]],["body/classes/ODataInStorageCache.html",[0,1.305,3,0.098,4,0.086,5,0.098,6,0.103,8,0.062,9,0.218,10,0.236,14,0.164,15,0.123,16,0.69,17,0.012,18,1.236,19,0.444,22,2.147,24,0.086,29,2.018,51,1.6,71,0.17,100,1.521,110,1.521,114,2.684,134,0.6,144,0.682,166,1.491,170,1.082,182,1.927,183,3.089,184,1.874,185,1.927,186,1.51,222,0.189,224,0.005,225,0.007,226,0.005,227,1.888,228,1.217,229,3.218,230,0.446,232,1.679,234,0.319,236,0.268,238,1.386,243,0.341,248,1.019,291,3.47,297,2.376,617,2.021,664,2.071,705,5.146,751,4.297,753,4.943,758,2.166,770,4.283,813,4.15,901,3.133,932,3.133,964,2.926,980,2.477,981,3.133,1075,3.985,1076,5.469,1077,4.62,1078,5.64,1079,4.62,1080,4.62,1081,4.62,1082,5.64,1083,3.659,1084,3.55,1086,2.926,1088,3.133,1090,3.133,1092,4.532,1094,3.133,1096,3.392,1098,3.133,1099,4.265,1101,3.133,1103,4.532,1110,2.363,1113,4.267,1828,3.739,1829,3.739,1832,3.739,1833,3.739,1834,3.739,1835,3.739,1836,3.739,1837,3.739,1838,3.739,1839,3.739,1840,3.739,1841,3.133,1842,3.392,1843,3.392,1844,3.392,1845,4.62,1846,3.739,1847,4.266,1848,4.266,1849,4.266,1850,3.392,1851,6.217,1852,3.739,1853,3.739,1854,3.739,1855,3.739,1856,3.739,1857,3.739,1858,3.739,1859,3.739,1860,3.739,1861,3.739]],["title/classes/ODataMeta.html",[234,0.313,1404,2.875]],["body/classes/ODataMeta.html",[3,0.086,4,0.076,5,0.086,6,0.119,8,0.055,9,0.266,10,0.203,14,0.168,15,0.117,17,0.012,18,0.583,19,0.407,21,1.385,24,0.135,29,1.449,31,2.32,35,1.183,49,1.086,57,1.949,71,0.135,72,3.036,78,1.7,80,2.554,97,1.509,100,1.342,114,2.881,118,1.479,134,1.23,144,1.075,166,1.985,169,2.251,170,1.151,171,1.583,186,1.258,222,0.142,224,0.005,225,0.007,226,0.005,227,1.731,228,1.116,230,0.427,232,1.258,234,0.503,236,0.236,243,0.301,297,2.536,462,3.254,519,0.886,617,1.152,654,1.835,657,1.64,664,2.204,796,4.01,860,1.84,913,3.254,961,2.186,1007,3.183,1039,1.994,1210,1.994,1222,2.597,1272,2.186,1273,2.186,1372,2.704,1403,2.765,1404,5.193,1405,3.912,1406,4.54,1407,4.54,1408,3.912,1409,2.765,1410,2.765,1414,5.082,1418,5.209,1420,2.765,1422,3.912,1426,3.912,1444,4.54,1445,2.582,1446,2.765,1447,3.653,1448,4.54,1449,2.765,1450,1.765,1451,2.765,1452,2.765,1453,2.765,1454,3.912,1455,4.54,1456,2.765,1457,4.54,1458,2.765,1459,2.765,1460,3.438,1461,2.765,1462,2.765,1463,4.54,1464,3.912,1465,2.765,1466,2.765,1467,2.765,1468,2.765,1469,2.765,1470,2.765,1471,2.765,1472,2.765,1473,2.765,1474,3.912,1475,2.765,1476,2.765,1477,2.765,1478,2.765,1479,2.765,1480,2.765,1481,2.765,1482,2.765,1483,5.408,1484,3.912,1485,3.912,1486,2.765,1487,2.765,1488,2.582,1489,2.765,1490,2.765,1491,2.765,1492,5.408,1493,4.54,1494,2.765,1495,3.912,1496,2.765,1497,2.765,1498,2.765,1862,3.764,1863,3.764,1864,3.764,1865,3.764,1866,3.764,1867,3.764,1868,3.764,1869,3.764,1870,3.764,1871,3.764,1872,3.764,1873,3.764,1874,3.764,1875,3.764]],["title/classes/ODataMetadataResource.html",[234,0.313,1876,3.674]],["body/classes/ODataMetadataResource.html",[3,0.083,4,0.073,5,0.083,6,0.109,8,0.053,9,0.194,10,0.233,14,0.154,15,0.124,17,0.012,19,0.596,22,2.531,23,1.211,24,0.073,32,1.967,36,1.074,49,2.014,61,1.557,71,0.165,96,3,97,1.576,115,2.655,127,2.033,134,0.929,144,1.055,166,1.552,170,0.964,181,1.331,187,2.155,199,1.328,202,1.374,219,1.106,222,0.189,223,2.225,224,0.005,225,0.007,226,0.005,228,1.084,229,2.867,230,0.455,232,1.708,234,0.27,236,0.227,243,0.289,248,1.312,291,3.545,297,1.734,519,1.553,523,1.575,526,3.169,528,3.694,657,3.657,683,4.378,704,1.331,758,1.836,759,2.003,860,1.788,896,3.348,907,4.053,908,4.22,909,2.209,910,4.675,911,4.524,912,3.202,932,2.656,967,3.551,968,3.551,977,2.656,980,2.1,997,2.334,998,5.299,1000,3.342,1001,3.169,1002,5.299,1003,3.169,1007,3.146,1009,2.656,1010,4.147,1011,3.802,1024,2.656,1032,2.48,1039,1.915,1052,3.006,1167,2.628,1191,2.1,1222,2.524,1224,3.163,1268,3.833,1278,3.655,1351,3.802,1352,3.551,1353,3.802,1354,3.802,1355,4.44,1356,3.202,1357,2.875,1358,2.875,1359,2.209,1360,2.875,1363,4.44,1365,2.1,1366,2.875,1367,2.656,1368,4.261,1369,2.875,1370,3.163,1371,2.656,1372,2.628,1373,2.875,1374,2.875,1375,2.656,1376,2.875,1377,2.875,1378,2.656,1379,2.875,1380,3.511,1381,2.875,1382,2.656,1383,2.875,1384,2.656,1385,2.875,1386,2.656,1387,2.875,1388,2.875,1389,2.875,1390,2.875,1391,2.875,1392,2.875,1393,2.656,1727,2.656,1876,5.785,1877,3.616,1878,5.176,1879,3.616,1880,3.616,1881,3.616,1882,3.616,1883,3.616,1884,3.616,1885,3.616,1886,2.334,1887,3.616,1888,3.616,1889,3.616]],["title/classes/ODataModel.html",[234,0.313,767,2.434]],["body/classes/ODataModel.html",[3,0.049,4,0.043,5,0.049,6,0.118,8,0.031,9,0.13,10,0.214,14,0.146,15,0.119,17,0.012,19,0.421,22,2.281,23,0.715,24,0.043,27,2.237,29,1.817,32,0.811,36,1.844,38,1.679,51,1.7,52,1.314,54,0.867,55,2.163,59,0.964,61,1.48,71,0.152,80,1.657,97,1.501,107,2.044,111,1.405,113,1.233,114,1.405,131,2.444,134,1.133,144,1.321,148,3.449,184,0.564,186,0.887,212,0.867,216,2.479,219,1.334,222,0.18,224,0.003,225,0.004,226,0.003,227,1.416,228,0.724,230,0.426,232,1.554,234,0.16,236,0.134,238,1.124,243,0.171,248,1.088,260,0.785,275,3.424,333,2.232,554,3.806,572,1.697,654,3.943,656,2.372,657,3.636,664,2.826,682,1.567,704,1.273,758,1.084,759,1.182,767,3.879,768,3.365,771,1.697,782,2.54,783,1.567,860,1.195,911,4.045,912,2.917,971,4.708,1007,2.107,1033,3.985,1052,1.239,1075,3.438,1176,2.54,1191,2.531,1195,3.265,1196,3.265,1203,3.821,1205,3.821,1207,3.031,1208,3.031,1209,2.54,1212,3.031,1216,3.821,1217,3.821,1218,3.821,1222,1.041,1228,3.031,1230,3.031,1235,3.031,1239,3.031,1257,1.871,1259,1.871,1261,1.871,1265,5.786,1266,3.031,1267,3.031,1268,4.391,1278,4.303,1279,7.363,1280,5.855,1281,3.031,1282,1.871,1284,3.031,1285,3.031,1286,3.031,1287,7.024,1288,1.871,1289,3.031,1311,1.871,1312,1.871,1313,1.871,1322,1.871,1325,3.821,1326,3.466,1327,1.871,1344,1.871,1372,3.392,1380,3.424,1414,2.663,1445,1.464,1447,2.372,1488,1.464,1509,4.435,1546,2.75,1554,2.75,1557,3.062,1579,3.288,1598,4.258,1605,1.464,1609,1.697,1701,3.201,1702,4.393,1704,3.821,1890,2.134,1891,4.359,1892,4.359,1893,3.458,1894,3.458,1895,3.458,1896,3.458,1897,5.012,1898,2.134,1899,2.134,1900,2.134,1901,2.134,1902,2.134,1903,2.134,1904,3.458,1905,2.134,1906,1.697,1907,2.134,1908,3.458,1909,2.134,1910,2.134,1911,2.134,1912,3.458,1913,2.134,1914,3.458,1915,2.134,1916,2.134,1917,3.458,1918,2.134,1919,3.458,1920,2.134,1921,3.458,1922,2.134,1923,3.458,1924,2.134,1925,2.134,1926,5.012,1927,2.134,1928,2.134,1929,2.134,1930,3.458,1931,2.134,1932,2.134,1933,2.134,1934,2.134,1935,2.134,1936,3.458,1937,1.871,1938,1.871,1939,5.012,1940,5.895,1941,4.359,1942,2.134,1943,3.458,1944,3.031,1945,2.134,1946,2.134,1947,2.134,1948,2.134,1949,4.359,1950,2.134,1951,2.134,1952,2.134,1953,2.134,1954,2.134,1955,1.697,1956,2.134,1957,2.814,1958,2.134,1959,3.458,1960,4.909,1961,2.134,1962,3.458,1963,2.134,1964,2.134,1965,2.134,1966,2.134,1967,2.134,1968,2.134,1969,2.134,1970,5.012,1971,2.134,1972,3.458,1973,2.134,1974,2.134,1975,2.134,1976,2.134,1977,2.134,1978,2.134,1979,2.134,1980,2.134,1981,2.134,1982,2.134,1983,2.134,1984,2.134,1985,6.862,1986,6.862,1987,5.895,1988,5.895,1989,3.458,1990,2.134,1991,2.134,1992,2.134,1993,2.134,1994,2.134,1995,2.134,1996,2.134,1997,2.134,1998,2.134,1999,2.134,2000,2.134,2001,4.359,2002,2.134,2003,2.134,2004,2.134,2005,2.134,2006,2.134,2007,2.134,2008,2.134,2009,2.134,2010,2.134,2011,2.134,2012,2.134,2013,3.458,2014,2.134,2015,2.134,2016,2.134,2017,2.134,2018,2.134,2019,2.134,2020,2.134,2021,2.134,2022,2.134,2023,2.134,2024,3.458,2025,2.134,2026,2.134,2027,2.134,2028,3.458]],["title/modules/ODataModule.html",[2029,3.333,2030,3.079]],["body/modules/ODataModule.html",[3,0.133,4,0.117,5,0.133,6,0.104,10,0.167,15,0.085,17,0.012,19,0.644,21,2.144,24,0.143,71,0.117,115,2.214,134,1,144,0.931,165,0.82,188,3.332,189,3.696,222,0.133,224,0.008,225,0.009,226,0.008,228,1.22,230,0.308,232,1.185,234,0.436,238,1.893,519,1.371,528,4.341,721,3.085,907,4.227,2030,5.63,2031,4.632,2032,5.105,2033,7.665,2034,5.861,2035,5.824,2036,5.824,2037,5.824,2038,7.665,2039,7.104,2040,6.719,2041,4.278,2042,5.649,2043,5.824,2044,7.665,2045,5.824,2046,5.105,2047,5.824,2048,5.105,2049,5.824,2050,7.104,2051,5.824,2052,5.824,2053,5.105,2054,5.824]],["title/classes/ODataParameterParser.html",[234,0.313,1170,3.333]],["body/classes/ODataParameterParser.html",[3,0.102,4,0.089,5,0.102,6,0.12,8,0.065,9,0.224,10,0.23,14,0.169,15,0.127,16,0.856,17,0.012,19,0.339,24,0.12,27,2.738,52,2.562,53,1.833,61,1.467,71,0.166,97,1.645,99,1.686,134,1.114,144,0.709,166,1.73,169,1.486,178,3.55,179,2.591,180,3.031,181,2.48,184,1.172,186,1.371,198,1.533,205,2.598,218,3.682,222,0.172,224,0.006,225,0.008,226,0.006,227,1.938,228,1.25,230,0.432,232,1.371,234,0.446,236,0.278,243,0.355,244,1.825,519,1.044,617,1.357,680,3.464,682,3.258,687,3.304,698,3.464,702,1.932,719,3.733,721,2.35,788,2.909,789,2.08,859,3.422,1139,3.258,1155,4.404,1165,3.888,1166,4.186,1167,3.659,1170,5.359,1176,3.258,1177,3.888,1179,5.524,1180,3.888,1181,5.229,1182,3.888,1183,3.258,1184,3.258,1185,5.229,1186,3.888,1187,5.229,1188,3.888,1189,2.864,1190,3.888,1191,2.576,1192,3.888,1193,5.229,1194,3.888,1195,2.457,1196,2.457,1197,3.888,1198,3.888,1199,3.888,1200,3.888,2055,5.965,2056,4.436,2057,4.436,2058,4.436,2059,4.436,2060,4.436,2061,4.436,2062,4.436]],["title/classes/ODataPathSegments.html",[234,0.313,908,2.434]],["body/classes/ODataPathSegments.html",[3,0.078,4,0.069,5,0.078,6,0.118,8,0.05,9,0.186,10,0.196,14,0.175,15,0.119,16,0.406,17,0.012,19,0.545,24,0.137,29,1.352,32,1.889,33,2.089,34,1.771,35,1.103,37,1.771,49,0.985,51,1.782,61,1.45,71,0.167,97,1.474,112,0.957,113,1.771,134,1.167,144,1.092,184,0.903,186,1.39,199,1.503,219,2.629,222,0.179,224,0.004,225,0.006,226,0.004,228,1.041,230,0.423,232,1.588,234,0.372,236,0.214,238,1.903,243,0.273,248,1.198,260,1.829,348,2.632,519,1.607,521,3.649,523,1.488,554,3.208,654,1.666,657,2.551,664,1.771,674,3.618,775,2.344,796,1.81,823,3.208,848,2.344,896,3.561,908,3.401,909,2.088,910,4.173,921,3.649,941,5.112,990,2.344,1007,2.703,1057,2.717,1083,2.752,1148,2.51,1210,2.632,1356,3.405,1365,2.886,1545,2.088,1749,2.344,1886,3.78,1906,2.717,2063,5.536,2064,2.344,2065,5.354,2066,4.355,2067,6.109,2068,4.969,2069,3.417,2070,4.355,2071,3.417,2072,3.649,2073,3.417,2074,3.417,2075,4.656,2076,3.417,2077,4.355,2078,3.417,2079,4.355,2080,3.417,2081,3.417,2082,3.417,2083,3.417,2084,5.017,2085,2.717,2086,3.208,2087,3.78,2088,2.51,2089,2.344,2090,2.995,2091,3.951,2092,2.717,2093,2.51,2094,4.355,2095,2.995,2096,2.995,2097,4.355,2098,5.635,2099,2.995,2100,2.995,2101,5.987,2102,5.987,2103,2.995,2104,5.132,2105,2.995,2106,2.995,2107,5.132,2108,2.995,2109,2.995,2110,2.995,2111,2.995,2112,2.995,2113,2.995,2114,2.717,2115,2.995,2116,2.995,2117,2.995,2118,2.995,2119,2.995,2120,2.344,2121,2.995,2122,2.995,2123,2.995,2124,2.995,2125,2.995,2126,5.132,2127,2.995,2128,2.717,2129,2.995,2130,2.995,2131,2.344,2132,2.995,2133,2.995,2134,4.355,2135,2.995,2136,4.355,2137,2.995,2138,2.51,2139,2.995,2140,2.995,2141,2.51,2142,2.206]],["title/classes/ODataPropertyMeta.html",[234,0.313,1460,2.706]],["body/classes/ODataPropertyMeta.html",[3,0.086,4,0.075,5,0.086,6,0.098,8,0.055,9,0.231,10,0.203,14,0.168,15,0.117,17,0.012,18,0.582,19,0.407,21,1.382,24,0.135,29,1.446,31,2.316,35,1.181,49,1.083,57,1.946,71,0.135,72,2.401,78,1.696,80,2.551,97,1.508,100,1.338,114,3.073,118,1.475,134,1.23,144,1.073,166,1.983,169,2.249,170,1.25,171,1.578,186,1.256,222,0.141,224,0.005,225,0.007,226,0.005,228,1.114,230,0.422,232,1.442,234,0.502,236,0.236,291,3.18,297,2.534,462,3.248,519,0.883,617,1.149,654,1.83,657,1.635,664,2.2,796,4.007,860,1.837,913,3.248,961,2.18,1007,3.35,1039,1.989,1210,1.989,1222,2.592,1272,2.18,1273,2.18,1372,2.699,1403,2.757,1404,5.668,1405,3.904,1406,4.533,1407,4.533,1408,3.904,1409,2.757,1410,2.757,1412,2.985,1413,2.985,1414,5.08,1415,2.985,1416,2.985,1418,5.403,1420,2.757,1422,3.904,1424,2.985,1425,2.985,1426,3.904,1427,2.985,1444,2.757,1445,2.575,1446,2.757,1447,2.575,1448,2.757,1449,2.757,1450,1.761,1451,2.757,1452,2.757,1453,2.757,1454,3.904,1455,4.533,1456,2.757,1457,4.533,1458,2.757,1459,2.757,1460,4.333,1461,2.757,1462,2.757,1463,4.533,1464,3.904,1465,2.757,1466,2.757,1467,2.757,1468,2.757,1469,2.757,1470,2.757,1471,2.757,1472,2.757,1473,2.757,1474,3.904,1475,2.757,1476,2.757,1477,2.757,1478,2.757,1479,2.757,1480,2.757,1481,2.757,1482,2.757,1483,5.403,1484,3.904,1485,3.904,1486,2.757,1487,2.757,1488,2.575,1489,2.757,1490,2.757,1491,2.757,1492,5.403,1493,4.533,1494,2.757,1495,3.904,1496,2.757,1497,2.757,1498,2.757,1656,2.985,2143,3.754,2144,3.754,2145,3.754]],["title/classes/ODataQueryOptions.html",[234,0.313,1359,2.561]],["body/classes/ODataQueryOptions.html",[3,0.07,4,0.062,5,0.07,6,0.115,8,0.045,9,0.172,10,0.196,14,0.162,15,0.109,16,0.546,17,0.012,18,0.476,19,0.421,24,0.111,29,1.866,40,2.847,45,2.001,47,2.001,51,1.661,61,1.65,71,0.159,97,1.434,99,2.702,112,1.831,113,1.962,118,1.804,134,1.172,144,0.735,153,1.44,166,1.412,184,1.454,186,1.396,187,1.962,199,1.76,219,2.237,222,0.163,223,2.025,224,0.004,225,0.006,226,0.004,228,0.962,230,0.414,232,1.548,234,0.344,236,0.193,243,0.246,248,0.805,348,1.627,519,0.723,617,1.868,659,4.485,775,2.107,796,2.914,823,1.983,896,3.382,934,2.443,961,1.784,974,2.443,1007,2.567,1052,2.668,1083,2.544,1158,2.433,1195,2.544,1196,3.047,1221,1.983,1263,2.443,1272,2.668,1273,2.668,1356,3.462,1359,3.362,1365,3.195,1394,5.912,1398,2.443,1545,1.877,1579,2.914,1638,2.256,1701,2.256,1886,4.22,1955,2.443,1957,3.552,1960,3.151,2072,3.374,2084,2.256,2086,2.965,2087,4.987,2088,2.256,2089,3.151,2120,3.151,2131,2.107,2138,4.041,2141,2.256,2142,1.983,2146,6.289,2147,2.443,2148,6.012,2149,4.593,2150,4.026,2151,4.593,2152,3.071,2153,3.071,2154,3.071,2155,3.071,2156,3.071,2157,3.071,2158,4.026,2159,3.071,2160,3.071,2161,3.071,2162,3.071,2163,3.071,2164,3.071,2165,2.443,2166,2.692,2167,3.374,2168,3.151,2169,3.653,2170,5.653,2171,2.692,2172,2.692,2173,2.692,2174,2.692,2175,2.692,2176,2.692,2177,2.692,2178,2.692,2179,2.692,2180,2.692,2181,2.692,2182,2.692,2183,2.692,2184,2.692,2185,2.692,2186,2.692,2187,2.692,2188,2.692,2189,4.823,2190,2.692,2191,2.443,2192,2.692,2193,2.692,2194,2.692,2195,2.692,2196,4.026,2197,2.692,2198,2.692,2199,2.692,2200,2.692,2201,2.692,2202,2.692,2203,2.443,2204,2.443,2205,2.692,2206,2.692,2207,2.692,2208,6.932,2209,2.692,2210,2.692,2211,2.692,2212,4.823,2213,2.692,2214,2.692,2215,2.692,2216,2.692,2217,2.443,2218,2.692,2219,4.026,2220,4.026,2221,2.692,2222,2.692,2223,2.692,2224,2.692,2225,2.692,2226,2.692,2227,2.692,2228,6.932,2229,2.692,2230,2.692,2231,2.692,2232,2.692,2233,4.823,2234,5.352,2235,5.352,2236,5.352,2237,5.352,2238,5.352,2239,5.352,2240,4.026,2241,6.012,2242,4.026,2243,2.692,2244,4.026,2245,4.026,2246,2.692,2247,4.026,2248,4.026,2249,4.026,2250,2.692,2251,2.692,2252,2.692,2253,2.692,2254,2.692,2255,2.692]],["title/classes/ODataRequest.html",[234,0.313,751,2.128]],["body/classes/ODataRequest.html",[3,0.089,4,0.078,5,0.089,6,0.123,8,0.057,9,0.205,10,0.219,14,0.169,15,0.122,16,0.885,17,0.012,19,0.55,21,1.435,24,0.078,26,4.117,29,1.714,32,1.482,37,2.246,71,0.11,80,1.482,96,2.644,99,2.831,100,2.562,103,3.083,110,2.921,111,2.56,126,3.364,134,0.887,173,1.901,174,3.201,186,1.282,219,2.34,222,0.089,224,0.005,225,0.007,226,0.005,227,1.774,230,0.445,234,0.292,236,0.245,243,0.312,523,1.699,617,1.193,664,2.246,674,2.772,683,3.781,751,2.772,848,2.675,860,1.887,875,3.101,882,3.418,884,3.101,886,3.418,888,3.418,911,3.616,912,3.945,913,4.171,925,4.786,964,4.322,977,4.628,980,3.964,991,4.322,1018,2.675,1022,5.523,1024,5.014,1031,3.101,1032,4.683,1039,3.616,1084,3.336,1086,2.675,1148,4.01,1545,2.383,2256,3.899,2257,5.983,2258,6.301,2259,6.301,2260,5.46,2261,3.899,2262,3.899,2263,3.899,2264,3.899,2265,3.899,2266,3.899,2267,6.826,2268,3.899,2269,3.899,2270,3.899,2271,5.01,2272,5.01,2273,3.899,2274,3.899,2275,3.899,2276,3.899,2277,3.899,2278,3.899,2279,3.899,2280,3.899,2281,3.899,2282,3.101,2283,3.899,2284,3.899,2285,3.418,2286,3.418,2287,3.418,2288,3.899,2289,3.899,2290,3.899,2291,3.899,2292,3.899,2293,3.899,2294,3.899,2295,5.46,2296,3.899,2297,3.899,2298,3.899,2299,5.46,2300,5.46,2301,3.899,2302,5.46,2303,5.46,2304,3.899,2305,3.899,2306,3.899,2307,3.899,2308,3.899,2309,3.899,2310,3.899,2311,3.899,2312,3.899,2313,3.899,2314,3.899,2315,3.899,2316,3.899,2317,3.899,2318,3.899,2319,3.899,2320,3.899,2321,3.899]],["title/classes/ODataResource.html",[234,0.313,911,2.22]],["body/classes/ODataResource.html",[3,0.059,4,0.052,5,0.059,6,0.119,8,0.038,9,0.151,10,0.212,14,0.162,15,0.122,16,0.763,17,0.012,19,0.584,22,2.48,23,0.87,24,0.052,35,1.54,36,2.115,37,1.441,49,1.852,52,1.536,61,1.637,71,0.151,80,2.635,96,2.467,97,1.575,99,2.548,100,0.926,103,1.173,112,1.132,113,0.926,115,2.548,127,1.949,134,1.145,144,0.895,174,1.218,179,2.051,181,1.487,186,1.139,187,0.926,199,1.037,202,2.635,214,1.173,216,1.699,219,1.965,222,0.175,223,0.956,224,0.003,225,0.005,226,0.003,228,0.847,229,2.239,230,0.431,232,1.615,234,0.194,236,0.163,243,0.323,248,1.064,297,1.875,519,1.631,523,1.131,617,1.518,657,3.629,664,2.472,680,3.251,683,2.239,758,1.319,759,1.439,767,2.347,768,2.47,769,2.277,770,3.402,813,1.376,860,1.397,875,2.066,896,3.101,907,3.402,908,3.894,910,4.097,911,2.965,912,3.402,967,2.773,968,2.773,977,2.969,980,3.251,990,3.84,991,1.782,996,2.277,997,1.677,1000,1.677,1007,2.354,1018,2.773,1024,1.908,1032,4.885,1039,2.141,1052,2.347,1167,2.519,1222,2.729,1224,3.421,1268,3.894,1278,3.84,1321,5.629,1351,3.644,1352,3.403,1353,2.969,1354,2.969,1355,4.112,1356,2.965,1359,4.097,1363,2.969,1365,2.347,1367,1.908,1368,4.146,1370,3.421,1371,1.908,1372,2.842,1375,2.969,1378,2.969,1380,3.894,1382,2.969,1384,2.969,1386,1.908,1393,2.969,1576,1.908,1582,2.066,1727,1.908,2065,2.773,2086,1.677,2087,2.609,2093,1.908,2114,2.066,2165,2.066,2191,2.066,2257,2.277,2271,5.331,2272,5.331,2322,2.597,2323,4.042,2324,2.597,2325,2.597,2326,2.597,2327,2.597,2328,2.597,2329,2.597,2330,2.597,2331,2.597,2332,2.597,2333,2.597,2334,2.597,2335,2.597,2336,2.597,2337,2.597,2338,2.597,2339,2.597,2340,2.597,2341,2.597,2342,2.597,2343,2.597,2344,2.597,2345,2.597,2346,2.597,2347,2.597,2348,3.543,2349,2.597,2350,2.597,2351,2.597,2352,2.597,2353,2.597,2354,2.597,2355,2.597,2356,2.597,2357,2.597,2358,2.597,2359,2.597,2360,2.597,2361,2.597,2362,2.597,2363,2.597,2364,2.597,2365,2.597,2366,2.597,2367,2.597,2368,2.597,2369,4.042,2370,2.597,2371,2.597,2372,2.597,2373,2.597,2374,2.597,2375,4.042,2376,2.597,2377,2.597,2378,4.961,2379,2.597,2380,2.597,2381,2.597,2382,4.042,2383,2.597,2384,4.042,2385,2.597,2386,2.597,2387,2.597,2388,2.597,2389,5.598,2390,2.597,2391,4.961,2392,2.597,2393,2.597,2394,2.597,2395,2.597,2396,2.597,2397,2.597,2398,2.597,2399,2.597,2400,2.597,2401,6.065,2402,2.597,2403,2.597,2404,2.597,2405,2.597,2406,2.277,2407,2.597,2408,2.597,2409,4.961,2410,2.597,2411,2.597,2412,2.597]],["title/classes/ODataResponse.html",[234,0.313,770,2.22]],["body/classes/ODataResponse.html",[3,0.071,4,0.062,5,0.071,6,0.117,8,0.045,9,0.173,10,0.188,14,0.156,15,0.124,17,0.012,18,0.717,19,0.592,21,1.14,24,0.062,26,3.227,29,2.074,35,1.528,36,2.044,37,1.972,49,0.894,51,1.12,61,1.612,71,0.143,96,2.624,97,1.368,98,1.303,100,2.67,112,1.295,127,1.217,134,1.09,144,1.14,157,3.199,158,1.511,159,1.511,166,1.923,170,0.861,179,2.292,183,3.451,186,1.335,202,2.616,222,0.163,224,0.004,225,0.006,226,0.004,227,1.993,228,0.969,230,0.424,232,1.524,234,0.232,236,0.194,243,0.248,519,1.302,520,2.716,523,1.35,528,4.204,617,2.55,656,3.172,664,2.93,683,3.397,751,3.62,753,2.985,770,3.645,796,3.248,813,2.93,860,1.598,884,4.398,901,5.054,911,3.248,912,3.777,913,2.825,914,6.031,916,2.716,918,2.716,961,3.212,964,4.72,971,1.893,980,3.996,981,5.054,1017,4.053,1018,2.126,1031,5.827,1058,3.677,1084,2.825,1086,2.126,1145,1.893,1166,2.685,1195,1.716,1196,1.716,1222,1.511,1278,3.949,1356,3.248,1372,1.573,1460,2,1535,3.677,1536,3.172,1571,2.464,1573,2.464,1575,2.464,1576,2.276,1577,2.464,1578,3.677,1579,1.641,1841,2.276,1938,2.716,2282,3.677,2285,2.716,2286,2.716,2287,2.716,2406,2.716,2413,3.098,2414,5.531,2415,4.623,2416,4.623,2417,4.623,2418,4.877,2419,3.098,2420,3.098,2421,4.623,2422,3.098,2423,3.098,2424,4.848,2425,3.098,2426,4.848,2427,4.623,2428,3.098,2429,4.623,2430,3.098,2431,3.098,2432,3.098,2433,4.848,2434,3.098,2435,3.098,2436,3.098,2437,3.098,2438,3.098,2439,2.716,2440,4.623,2441,3.098,2442,3.098,2443,3.098,2444,3.098,2445,3.098,2446,3.098,2447,3.098,2448,3.098,2449,3.098,2450,3.098,2451,3.098,2452,3.098,2453,3.098,2454,3.098,2455,3.098,2456,5.531,2457,3.098,2458,3.098,2459,3.098,2460,2.716,2461,3.098,2462,3.098,2463,3.098,2464,3.098,2465,3.098,2466,3.098,2467,3.098,2468,3.098,2469,4.053,2470,3.098,2471,3.098,2472,3.098,2473,3.098,2474,3.098,2475,6.132,2476,5.531,2477,3.098,2478,5.531,2479,5.531,2480,6.132,2481,6.132,2482,5.531,2483,3.098,2484,3.098]],["title/classes/ODataResponseOptions.html",[234,0.313,2418,3.333]],["body/classes/ODataResponseOptions.html",[3,0.102,4,0.089,5,0.102,6,0.123,8,0.065,9,0.224,10,0.245,14,0.164,15,0.121,16,0.92,17,0.012,18,0.925,19,0.516,24,0.089,32,2.563,61,1.215,71,0.145,97,1.383,98,3.032,101,3.288,102,3.516,110,2.571,112,1.672,134,0.84,144,0.71,156,3.257,160,3.382,164,2.911,165,0.949,166,1.731,167,2.696,168,3.288,169,2.259,171,2.835,175,3.288,176,3.424,177,3.82,184,1.782,222,0.165,224,0.006,225,0.008,226,0.006,228,1.251,230,0.446,232,1.467,234,0.332,236,0.279,243,0.355,519,1.045,522,3.531,523,1.934,617,1.359,623,4.384,702,2.6,704,1.634,774,4.747,790,3.531,859,3.031,860,2.063,870,3.892,873,3.892,876,5.232,877,3.892,878,3.892,879,3.892,880,5.232,881,3.892,890,3.892,990,4.626,1007,3.032,1557,3.647,1579,3.82,1749,3.046,1960,3.046,2093,3.262,2418,5.362,2439,3.892,2460,3.892,2469,3.892,2485,4.441,2486,5.969,2487,5.969,2488,5.969,2489,5.969,2490,4.441,2491,4.441,2492,4.441,2493,4.441,2494,4.441,2495,4.441,2496,4.441,2497,5.969,2498,4.441,2499,5.969,2500,4.441,2501,5.969,2502,4.441,2503,4.441,2504,5.969,2505,5.969,2506,4.441,2507,4.441,2508,4.441,2509,4.441,2510,4.441,2511,4.441,2512,5.911,2513,4.441,2514,4.441,2515,4.441,2516,4.441,2517,4.441,2518,4.441,2519,4.441,2520,4.441,2521,4.441,2522,4.441,2523,4.441,2524,4.441,2525,4.441]],["title/classes/ODataSchema.html",[234,0.313,716,2.434]],["body/classes/ODataSchema.html",[1,1.184,3,0.089,4,0.078,5,0.089,6,0.123,8,0.056,9,0.204,10,0.227,14,0.171,15,0.126,17,0.012,19,0.596,24,0.078,36,1.614,57,1.979,71,0.153,96,2.866,97,1.204,134,1.129,144,1.146,165,1.152,179,1.662,184,1.023,186,0.788,187,1.38,196,3.318,198,2.168,199,1.611,200,3.186,202,2.586,204,3.638,205,2.734,206,3.186,208,2.943,222,0.175,223,1.425,224,0.005,225,0.007,226,0.005,227,1.765,228,1.138,230,0.447,232,1.512,234,0.29,236,0.243,243,0.31,294,2.144,333,2.499,348,2.05,479,4.32,519,0.911,675,3.835,683,4.115,687,3.769,689,4.761,693,4.761,695,4.761,698,2.248,701,4.761,702,2.366,704,2.637,716,3.155,719,3.009,721,2.05,724,4.761,732,4.761,736,4.761,748,4.761,762,4.305,763,4.305,764,3.507,765,4.305,789,1.815,823,2.499,839,5.263,860,1.877,1018,2.655,1145,2.365,1370,2.365,1450,1.815,1499,4.991,1502,2.655,1505,4.761,1507,2.655,1508,2.655,1593,3.078,1594,4.32,1738,4.761,2526,3.871,2527,5.432,2528,5.432,2529,3.871,2530,3.871,2531,3.871,2532,3.871,2533,3.871,2534,3.871,2535,3.871,2536,3.871,2537,3.871,2538,3.871,2539,3.871,2540,3.871,2541,5.432,2542,3.871,2543,3.871,2544,3.871,2545,3.871,2546,3.393,2547,3.871,2548,3.871,2549,3.871,2550,3.871,2551,3.871,2552,3.871,2553,3.871,2554,3.393,2555,5.432,2556,3.871,2557,3.871,2558,3.871,2559,4.761,2560,3.871,2561,3.871,2562,3.871,2563,3.871,2564,3.871,2565,5.432,2566,3.871,2567,3.871,2568,5.432,2569,3.871,2570,3.871,2571,3.871,2572,3.871,2573,3.871,2574,3.871,2575,3.871,2576,3.871,2577,3.871,2578,6.804,2579,3.871,2580,3.871,2581,3.871,2582,3.871,2583,3.871,2584,3.871,2585,3.871]],["title/injectables/ODataServiceFactory.html",[2034,3.079,2586,3.674]],["body/injectables/ODataServiceFactory.html",[3,0.129,4,0.114,5,0.129,6,0.115,8,0.082,10,0.217,14,0.174,15,0.118,17,0.011,19,0.604,24,0.114,29,1.897,33,3.181,36,2.247,71,0.168,115,2.875,134,0.982,144,1.115,170,1.299,222,0.186,224,0.007,225,0.009,226,0.007,228,1.461,230,0.401,232,1.419,234,0.566,243,0.452,248,1.223,335,5.802,907,4.184,1000,3.65,1698,6.281,1735,4.495,2034,5.123,2041,4.152,2348,6.114,2586,6.114,2587,4.955,2588,5.653,2589,5.653,2590,6.975,2591,5.653,2592,6.975,2593,5.653,2594,6.281]],["title/classes/ODataSettings.html",[234,0.313,2042,3.333]],["body/classes/ODataSettings.html",[3,0.06,4,0.053,5,0.06,6,0.119,8,0.038,9,0.152,10,0.229,14,0.174,15,0.127,17,0.012,19,0.493,22,1.32,23,0.876,24,0.053,29,1.828,34,1.449,38,0.876,49,1.437,52,1.544,61,1.556,71,0.172,96,2.734,111,1.062,112,2.188,127,1.027,134,1.118,138,4.219,144,0.973,165,1.222,179,1.525,184,0.691,186,1.014,187,0.932,188,1.905,189,2.538,216,1.708,222,0.19,223,0.962,224,0.003,225,0.005,226,0.003,227,1.32,228,0.851,230,0.429,232,1.628,234,0.196,236,0.164,243,0.209,294,2.251,348,2.152,519,0.956,617,1.243,654,4.1,674,3.881,683,3.112,686,2.292,687,2.251,704,0.962,719,2.251,721,1.385,751,2.063,762,3.418,763,3.418,764,3.217,765,3.418,767,2.894,768,3.045,825,3.561,848,3.854,1110,1.449,1158,1.385,1214,1.921,1221,4.935,1307,6.104,1557,1.598,1623,2.08,1639,6.079,1642,3.231,1762,2.292,2042,3.231,2128,6.212,2217,6.149,2546,3.561,2559,3.561,2595,2.615,2596,8,2597,4.063,2598,4.063,2599,4.063,2600,4.063,2601,4.063,2602,4.063,2603,5.618,2604,4.063,2605,4.063,2606,4.063,2607,4.063,2608,4.063,2609,4.063,2610,4.063,2611,4.063,2612,4.063,2613,4.063,2614,2.615,2615,4.063,2616,4.063,2617,2.615,2618,4.063,2619,2.615,2620,4.063,2621,2.615,2622,4.063,2623,2.615,2624,4.063,2625,2.615,2626,4.063,2627,2.615,2628,2.615,2629,2.615,2630,4.063,2631,2.615,2632,4.063,2633,2.615,2634,4.063,2635,2.615,2636,4.063,2637,2.615,2638,4.063,2639,2.615,2640,4.063,2641,2.615,2642,4.063,2643,2.615,2644,4.063,2645,2.615,2646,4.063,2647,2.615,2648,4.063,2649,2.615,2650,2.615,2651,2.615,2652,2.615,2653,2.615,2654,2.615,2655,2.615,2656,7.811,2657,2.615,2658,2.615,2659,2.615,2660,2.615,2661,4.063,2662,2.615,2663,2.615,2664,2.615,2665,4.983,2666,2.615,2667,2.615,2668,2.615,2669,2.615,2670,7.644,2671,2.615,2672,7.644,2673,7.644,2674,2.615,2675,2.615,2676,2.615,2677,2.615,2678,2.615,2679,2.615,2680,2.615,2681,2.615,2682,2.615,2683,2.615,2684,2.615,2685,2.615]],["title/classes/ODataSingletonService.html",[234,0.313,2594,3.333]],["body/classes/ODataSingletonService.html",[3,0.125,4,0.109,5,0.125,6,0.121,8,0.079,10,0.195,14,0.165,15,0.108,17,0.011,19,0.569,24,0.109,36,2.384,61,1.109,71,0.161,96,2.738,115,2.828,134,1.153,165,1.153,186,1.109,222,0.17,224,0.007,225,0.009,226,0.007,228,1.428,230,0.434,232,1.387,234,0.408,236,0.342,243,0.436,248,0.955,335,5.104,657,2.97,664,2.43,704,2.738,767,3.165,860,2.356,907,4.13,1000,3.518,1110,3.018,1209,5.007,1214,4.002,1224,5.003,1705,6.521,1710,4.776,1727,4.002,1729,4.776,1734,4.776,1735,4.333,1737,5.976,1739,4.776,1743,5.421,1744,4.776,1745,4.776,1746,4.776,2594,5.421,2686,5.449,2687,7.44,2688,5.449,2689,5.449,2690,5.449,2691,7.44,2692,5.449,2693,5.449,2694,5.449,2695,5.449,2696,5.449,2697,5.449]],["title/classes/ODataStructuredType.html",[234,0.313,765,2.875]],["body/classes/ODataStructuredType.html",[1,1.226,3,0.092,4,0.081,5,0.092,6,0.122,8,0.058,9,0.208,10,0.231,14,0.151,15,0.126,16,0.892,17,0.012,19,0.528,24,0.081,27,2.806,38,2.631,49,1.605,52,2.43,57,2.016,61,1.301,71,0.164,80,2.115,97,1.226,112,1.558,134,1.022,144,0.89,179,2.221,184,1.059,186,1.301,194,1.81,203,3.12,212,3.051,216,2.688,217,2.825,222,0.176,224,0.005,225,0.007,226,0.005,227,2.624,228,1.166,230,0.439,232,1.477,234,0.3,236,0.251,243,0.321,295,2.219,346,3.512,349,2.943,350,4.877,490,3.186,491,3.186,492,3.186,519,0.943,617,1.703,675,3.906,687,3.082,698,2.327,702,2.424,704,1.475,716,4.362,719,3.082,721,2.122,765,3.817,788,1.954,789,1.879,793,5.073,860,1.923,936,2.448,1134,3.817,1143,3.592,1145,2.448,1147,2.749,1155,3.4,1157,3.186,1158,2.948,1159,2.943,1160,2.943,1161,2.943,1162,2.587,1163,2.749,1164,3.512,1195,2.219,1196,2.219,1368,3.592,1380,3.232,1450,1.879,1502,2.749,1507,2.749,1508,2.749,1509,4.385,1536,4.738,1553,3.186,1557,4.589,1559,3.186,1590,5.084,1605,3.817,1811,3.512,1823,3.512,1886,4.459,1944,6.584,1960,3.817,2203,3.186,2204,3.186,2512,3.512,2698,8.345,2699,5.564,2700,5.564,2701,4.007,2702,5.564,2703,4.007,2704,7.511,2705,5.564,2706,4.007,2707,4.007,2708,5.564,2709,4.007,2710,6.393,2711,4.007,2712,4.007,2713,4.007,2714,4.007,2715,4.007,2716,4.007,2717,4.007,2718,4.007,2719,4.007,2720,4.007,2721,4.007,2722,4.007,2723,4.007,2724,4.007,2725,4.007,2726,4.007]],["title/classes/ODataValueResource.html",[234,0.313,2727,3.674]],["body/classes/ODataValueResource.html",[3,0.083,4,0.072,5,0.083,6,0.106,8,0.053,9,0.193,10,0.235,14,0.161,15,0.125,17,0.012,19,0.572,22,2.647,23,1.207,24,0.072,36,1.07,49,2.011,61,1.627,71,0.166,97,1.638,113,1.285,115,2.505,127,2.028,134,0.982,144,0.826,170,0.961,181,1.326,187,1.841,199,1.325,202,1.37,219,1.103,222,0.191,223,1.9,224,0.005,225,0.007,226,0.005,228,1.082,229,2.86,230,0.453,232,1.721,234,0.27,236,0.226,248,1.273,291,3.543,297,1.73,519,1.551,523,1.57,528,3.687,617,1.103,657,3.655,664,2.151,896,3.342,907,3.694,908,4.051,909,2.202,910,4.434,911,4.522,912,3.196,967,3.542,968,3.542,997,2.326,1007,3.143,1009,2.647,1010,4.139,1011,3.792,1032,4.139,1039,1.909,1052,2.999,1167,2.621,1191,3.504,1222,2.517,1224,3.155,1268,4.587,1278,3.65,1351,3.792,1352,3.542,1353,3.792,1354,3.792,1355,4.432,1356,3.196,1357,2.866,1358,2.866,1359,4.262,1360,2.866,1363,4.432,1365,2.093,1366,2.866,1367,2.647,1368,4.254,1369,2.866,1370,3.155,1371,2.647,1372,2.621,1373,2.866,1374,2.866,1375,2.647,1376,2.866,1377,2.866,1378,2.647,1379,2.866,1380,3.504,1381,2.866,1382,2.647,1383,2.866,1384,2.647,1385,2.866,1386,2.647,1387,2.866,1388,2.866,1389,2.866,1390,2.866,1391,2.866,1392,2.866,1393,2.647,1401,3.159,1402,5.289,1579,1.909,2065,2.472,2271,4.798,2272,4.798,2727,5.776,2728,3.603,2729,5.163,2730,3.603,2731,5.163,2732,3.603,2733,3.603,2734,3.603,2735,3.603,2736,3.603,2737,3.603,2738,3.603,2739,3.603,2740,3.603]],["title/classes/OptionHandler.html",[234,0.313,2089,2.875]],["body/classes/OptionHandler.html",[3,0.067,4,0.059,5,0.067,6,0.118,8,0.065,10,0.219,14,0.165,15,0.113,16,0.708,17,0.012,18,0.828,19,0.409,24,0.107,29,1.902,40,2.788,45,1.928,47,1.928,51,1.631,61,1.675,71,0.163,97,1.292,99,2.264,112,1.792,113,1.904,118,1.739,134,1.164,144,0.708,153,1.372,166,1.795,184,1.779,186,1.37,187,1.904,199,1.371,219,2.369,222,0.175,223,1.966,224,0.004,225,0.006,226,0.004,228,0.928,230,0.426,232,1.61,234,0.331,236,0.184,243,0.234,248,0.776,333,2.858,348,1.549,519,0.688,617,1.823,659,4.375,775,2.006,796,2.83,823,1.888,860,1.53,896,1.62,934,4.248,961,1.699,974,2.326,1007,1.23,1052,2.571,1083,2.452,1195,2.452,1196,2.959,1221,2.858,1263,4.737,1272,2.571,1273,2.571,1356,3.39,1359,1.787,1365,2.571,1394,5.415,1398,2.326,1545,1.787,1579,3.156,1638,2.148,1700,3.881,1701,3.252,1886,3.449,1955,2.326,1957,3.449,1960,3.037,2072,2.148,2084,2.148,2086,2.858,2087,4.997,2088,2.148,2089,3.037,2120,3.037,2131,2.006,2138,2.148,2141,2.148,2142,1.888,2146,6.439,2147,2.326,2148,5.902,2150,2.564,2158,2.564,2165,2.326,2166,2.564,2167,3.252,2168,3.037,2169,3.521,2170,5.561,2171,2.564,2172,2.564,2173,2.564,2174,2.564,2175,2.564,2176,2.564,2177,2.564,2178,2.564,2179,2.564,2180,2.564,2181,2.564,2182,2.564,2183,2.564,2184,2.564,2185,2.564,2186,2.564,2187,2.564,2188,2.564,2189,4.682,2190,2.564,2191,2.326,2192,2.564,2193,2.564,2194,2.564,2195,2.564,2196,3.881,2197,2.564,2198,2.564,2199,2.564,2200,2.564,2201,2.564,2202,2.564,2203,2.326,2204,2.326,2205,2.564,2206,3.881,2207,2.564,2208,6.864,2209,2.564,2210,3.881,2211,5.222,2212,4.682,2213,3.881,2214,2.564,2215,3.881,2216,2.564,2217,2.326,2218,2.564,2219,3.881,2220,3.881,2221,3.881,2222,2.564,2223,2.564,2224,3.881,2225,2.564,2226,2.564,2227,2.564,2228,6.864,2229,2.564,2230,2.564,2231,2.564,2232,3.881,2233,4.682,2234,5.222,2235,5.222,2236,5.222,2237,5.222,2238,5.222,2239,5.222,2240,3.881,2241,5.902,2242,3.881,2243,3.881,2244,5.222,2245,3.881,2246,2.564,2247,3.881,2248,3.881,2249,3.881,2250,3.881,2251,2.564,2252,2.564,2253,3.881,2254,3.881,2255,2.564,2741,4.427,2742,4.427,2743,4.427,2744,2.925,2745,2.925,2746,2.925,2747,2.925,2748,2.925,2749,2.925,2750,2.925,2751,2.925,2752,2.925,2753,2.925,2754,2.925,2755,2.925,2756,2.925,2757,2.925,2758,2.925,2759,2.925,2760,2.564,2761,2.925]],["title/interfaces/Options.html",[0,1.283,97,0.804]],["body/interfaces/Options.html",[0,2.358,1,1.673,2,1.425,3,0.07,4,0.061,5,0.07,6,0.044,7,1.543,8,0.044,9,0.228,10,0.217,11,2.413,12,2.413,13,2.413,14,0.179,15,0.124,16,0.995,17,0.012,18,1.194,19,0.348,20,1.481,21,1.118,22,1.776,23,1.018,24,0.171,25,1.481,26,1.425,27,2.221,28,2.896,29,1.927,30,1.609,31,2.834,32,2.597,33,1.278,34,1.083,35,0.675,36,0.903,37,1.083,38,1.018,39,2.313,40,1.985,41,2.313,42,2.313,43,2.137,44,1.985,45,1.323,46,1.609,47,1.323,48,2.564,49,1.314,50,0.851,51,0.736,52,2.078,53,1.239,54,1.234,55,1.79,56,0.851,57,2.233,58,0.851,59,1.372,60,2.137,61,1.112,62,2.413,63,1.609,64,1.609,65,1.609,66,1.609,67,1.543,68,1.609,69,1.609,70,1.609,71,0.173,72,2.469,73,1.609,74,1.609,75,1.609,76,1.609,77,1.609,78,1.372,79,1.609,80,1.155,81,1.609,82,1.609,83,1.609,84,1.609,85,1.609,86,1.609,87,1.609,88,1.609,89,1.609,90,1.609,91,1.609,92,1.609,93,1.609,94,1.609,95,1.609,96,2.514,97,1.429,98,2.872,99,1.732,100,1.624,101,3.172,102,3.172,103,2.743,104,1.609,105,2.413,106,1.609,107,1.425,108,1.609,109,1.609,110,3.006,111,1.851,112,1.822,113,1.949,114,3.377,115,2.693,116,2.896,117,2.413,118,1.194,119,1.609,120,2.413,121,2.775,122,3.051,123,1.609,124,1.609,125,1.609,126,3.2,127,2.147,128,2.775,129,2.896,130,1.609,131,2.221,132,1.609,133,3.217,134,0.769,135,1.481,136,1.609,137,1.543,138,1.543,139,1.609,140,1.609,141,1.609,142,1.609,143,2.221,144,0.486,145,1.609,146,2.413,147,2.413,148,2.469,149,2.413,150,2.313,151,1.543,152,1.609,153,1.425,154,2.137,155,1.609,156,2.939,157,1.481,158,1.481,159,1.481,160,2.848,161,1.543,162,1.481,163,1.543,164,2.221,165,0.428,166,0.78,167,1.372,168,2.961,169,2.035,170,1.131,171,1.278,172,2.137,173,2.221,174,1.425,175,1.481,176,1.543,177,1.543,178,1.323,179,1.394,180,1.278,181,1.118,182,1.372,183,1.323,184,0.803,185,1.372,186,0.618,187,1.083,188,1.425,189,1.372,190,1.481,191,1.543,192,1.543,193,1.543,194,1.372,195,1.481,196,2.221,197,3.331,198,1.05,199,0.78,200,1.543,201,2.058,202,1.155,203,2.058,204,1.543,205,1.985,206,1.543,207,2.221,208,1.425,209,2.221,210,1.481,211,1.323,212,1.851,213,1.543,214,1.372,215,1.543,216,1.278,217,2.313,218,2.058,219,0.93,220,1.543,221,1.543,222,0.07,223,1.118,224,0.004,225,0.006,226,0.004]],["title/interfaces/OptionsHelper.html",[0,1.283,169,1.404]],["body/interfaces/OptionsHelper.html",[0,2.372,1,1.699,2,1.463,3,0.071,4,0.063,5,0.071,6,0.045,7,1.584,8,0.045,9,0.231,11,2.461,12,2.461,13,2.461,14,0.179,15,0.124,16,0.972,17,0.012,18,1.201,19,0.355,20,1.521,21,1.148,22,1.804,23,1.045,24,0.171,25,1.521,26,1.463,27,2.256,28,2.941,29,1.944,30,1.652,31,2.866,32,2.111,33,1.312,34,1.112,35,0.693,36,0.926,37,1.112,38,1.045,39,2.359,40,2.024,41,2.359,42,2.359,43,2.179,44,2.024,45,1.359,46,1.652,47,1.359,48,2.604,49,1.34,50,0.874,51,0.756,52,2.111,53,1.264,54,1.267,55,1.825,56,0.874,57,2.253,58,0.874,59,1.409,60,2.179,61,1.13,62,3.259,63,1.652,64,1.652,65,1.652,66,1.652,67,1.584,68,1.652,69,1.652,70,1.652,71,0.173,72,2.508,73,1.652,74,1.652,75,1.652,76,1.652,77,1.652,78,1.409,79,1.652,80,1.186,81,1.652,82,1.652,83,1.652,84,1.652,85,1.652,86,1.652,87,1.652,88,1.652,89,1.652,90,1.652,91,1.652,92,1.652,93,1.652,94,1.652,95,1.652,96,2.539,97,1.439,98,2.335,99,1.766,100,1.656,101,2.265,102,2.265,103,2.779,104,1.652,105,2.461,106,1.652,107,1.463,108,1.652,109,1.652,110,3.014,111,1.888,112,1.843,113,1.98,114,3.389,115,2.716,116,2.941,117,2.461,118,1.225,119,1.652,120,2.461,121,2.819,122,3.085,123,1.652,124,1.652,125,1.652,126,3.228,127,2.181,128,2.819,129,2.941,130,1.652,131,2.265,132,1.652,133,3.259,134,0.782,135,1.521,136,1.652,137,1.584,138,1.584,139,1.652,140,1.652,141,1.652,142,1.652,143,2.265,144,0.499,145,1.652,146,2.461,147,2.461,148,2.508,149,2.461,150,2.359,151,1.584,152,1.652,153,1.463,154,2.179,155,1.652,156,2.508,157,1.521,158,1.521,159,1.521,160,2.179,161,1.584,162,1.521,163,1.584,164,2.265,165,0.439,166,0.801,167,1.409,168,1.521,169,2.204,170,1.225,171,2.587,172,2.179,173,2.265,174,1.463,175,1.521,176,1.584,177,1.584,178,1.359,179,1.422,180,1.312,181,1.148,182,1.409,183,1.359,184,0.824,185,1.409,186,0.635,187,1.112,188,1.463,189,1.409,190,1.521,191,1.584,192,1.584,193,1.584,194,1.409,195,1.521,196,2.265,197,3.363,198,1.078,199,0.801,200,1.584,201,2.099,202,1.186,203,2.099,204,1.584,205,2.024,206,1.584,207,2.265,208,1.463,209,2.265,210,1.521,211,1.359,212,1.888,213,1.584,214,1.409,215,1.584,216,1.312,217,2.359,218,2.099,219,0.954,220,1.584,221,1.584,222,0.071,223,1.148,224,0.004,225,0.006,226,0.004]],["title/interfaces/Parser.html",[0,1.283,179,1.283]],["body/interfaces/Parser.html",[0,2.36,1,1.677,2,1.431,3,0.07,4,0.061,5,0.07,6,0.08,7,1.549,8,0.044,9,0.171,10,0.131,11,2.421,12,2.421,13,2.421,14,0.179,15,0.124,16,0.968,17,0.012,18,1.195,19,0.35,20,1.488,21,1.123,22,1.781,23,1.022,24,0.171,25,1.488,26,1.431,27,2.227,28,2.903,29,2.066,30,1.616,31,2.839,32,2.083,33,1.283,34,1.088,35,0.678,36,0.906,37,1.088,38,1.022,39,2.321,40,1.991,41,2.321,42,2.321,43,2.144,44,1.991,45,1.329,46,1.616,47,1.329,48,2.57,49,1.318,50,0.855,51,0.739,52,2.083,53,1.243,54,1.24,55,1.796,56,0.855,57,2.237,58,0.855,59,1.378,60,2.144,61,1.326,62,2.421,63,1.616,64,1.616,65,1.616,66,1.616,67,1.549,68,1.616,69,1.616,70,1.616,71,0.173,72,2.476,73,1.616,74,1.616,75,1.616,76,1.616,77,1.616,78,1.378,79,1.616,80,1.16,81,1.616,82,1.616,83,1.616,84,1.616,85,1.616,86,1.616,87,1.616,88,1.616,89,1.616,90,1.616,91,1.616,92,1.616,93,1.616,94,1.616,95,1.616,96,2.518,97,1.499,98,2.304,99,1.737,100,1.63,101,2.229,102,2.229,103,2.749,104,1.616,105,2.421,106,1.616,107,1.431,108,1.616,109,1.616,110,3.007,111,1.857,112,1.826,113,1.954,114,3.379,115,2.696,116,2.903,117,2.421,118,1.199,119,1.616,120,2.421,121,2.783,122,3.057,123,1.616,124,1.616,125,1.616,126,3.204,127,2.153,128,2.783,129,2.903,130,1.616,131,2.229,132,1.616,133,3.224,134,0.771,135,1.488,136,1.616,137,1.549,138,1.549,139,1.616,140,1.616,141,1.616,142,1.616,143,2.229,144,0.488,145,1.616,146,2.421,147,2.421,148,2.476,149,2.421,150,2.321,151,1.549,152,1.616,153,1.431,154,2.144,155,1.616,156,2.476,157,1.488,158,1.488,159,1.488,160,2.144,161,1.549,162,1.488,163,1.549,164,2.229,165,0.43,166,0.783,167,1.378,168,1.488,169,2.444,170,1.133,171,1.283,172,2.144,173,2.229,174,1.431,175,1.488,176,1.549,177,1.549,178,1.329,179,1.677,180,1.922,181,1.682,182,1.378,183,1.329,184,0.806,185,1.378,186,0.621,187,1.088,188,1.431,189,1.378,190,1.488,191,1.549,192,1.549,193,1.549,194,1.378,195,1.488,196,2.229,197,3.336,198,1.054,199,0.783,200,1.549,201,2.065,202,1.16,203,2.065,204,1.549,205,1.991,206,1.549,207,2.229,208,1.431,209,2.229,210,1.488,211,1.329,212,1.857,213,1.549,214,1.378,215,1.549,216,1.283,217,2.321,218,2.065,219,0.934,220,1.549,221,1.549,222,0.126,223,1.123,224,0.004,225,0.006,226,0.004,228,0.958,230,0.242,232,0.93,1166,2.655,1167,2.321,2762,3.051,2763,3.051]],["title/interfaces/ResponseOptions.html",[0,1.283,175,2.044]],["body/interfaces/ResponseOptions.html",[0,2.367,1,1.691,2,1.451,3,0.071,4,0.062,5,0.071,6,0.045,7,1.571,8,0.045,9,0.23,10,0.175,11,2.446,12,2.446,13,2.446,14,0.179,15,0.124,16,0.97,17,0.012,18,1.228,19,0.353,20,1.509,21,1.139,22,1.796,23,1.037,24,0.171,25,1.509,26,1.451,27,2.245,28,2.927,29,1.938,30,1.639,31,2.856,32,2.1,33,1.301,34,1.103,35,0.687,36,0.919,37,1.103,38,1.037,39,2.345,40,2.012,41,2.345,42,2.345,43,2.166,44,2.012,45,1.348,46,1.639,47,1.348,48,2.592,49,1.332,50,0.867,51,0.749,52,2.1,53,1.256,54,1.257,55,1.814,56,0.867,57,2.247,58,0.867,59,1.398,60,2.166,61,1.124,62,2.446,63,1.639,64,1.639,65,1.639,66,1.639,67,1.571,68,1.639,69,1.639,70,1.639,71,0.173,72,2.496,73,1.639,74,1.639,75,1.639,76,1.639,77,1.639,78,1.398,79,1.639,80,1.176,81,1.639,82,1.639,83,1.639,84,1.639,85,1.639,86,1.639,87,1.639,88,1.639,89,1.639,90,1.639,91,1.639,92,1.639,93,1.639,94,1.639,95,1.639,96,2.531,97,1.436,98,2.324,99,1.756,100,1.647,101,2.252,102,2.252,103,2.768,104,1.639,105,2.446,106,1.639,107,1.451,108,1.639,109,1.639,110,3.012,111,1.876,112,1.836,113,1.97,114,3.385,115,2.709,116,2.927,117,2.446,118,1.215,119,1.639,120,2.446,121,2.806,122,3.075,123,1.639,124,1.639,125,1.639,126,3.219,127,2.171,128,2.806,129,2.927,130,1.639,131,2.252,132,1.639,133,3.246,134,0.778,135,1.509,136,1.639,137,1.571,138,1.571,139,1.639,140,1.639,141,1.639,142,1.639,143,2.252,144,0.495,145,1.639,146,2.446,147,2.446,148,2.496,149,2.446,150,2.345,151,1.571,152,1.639,153,1.451,154,2.166,155,1.639,156,2.496,157,1.509,158,1.509,159,1.509,160,2.166,161,1.571,162,1.509,163,1.571,164,2.988,165,0.436,166,0.794,167,1.398,168,1.509,169,2.053,170,1.221,171,1.301,172,2.166,173,2.252,174,1.451,175,2.252,176,3.111,177,3.111,178,1.348,179,1.413,180,1.301,181,1.139,182,1.398,183,1.348,184,0.817,185,1.398,186,0.63,187,1.103,188,1.451,189,1.398,190,1.509,191,1.571,192,1.571,193,1.571,194,1.398,195,1.509,196,2.252,197,3.353,198,1.069,199,0.794,200,1.571,201,2.086,202,1.176,203,2.086,204,1.571,205,2.012,206,1.571,207,2.252,208,1.451,209,2.252,210,1.509,211,1.348,212,1.876,213,1.571,214,1.398,215,1.571,216,1.301,217,2.345,218,2.086,219,0.947,220,1.571,221,1.571,222,0.071,223,1.139,224,0.004,225,0.006,226,0.004]],["title/classes/SegmentHandler.html",[234,0.313,2075,3.333]],["body/classes/SegmentHandler.html",[3,0.081,4,0.071,5,0.081,6,0.115,8,0.052,9,0.191,10,0.198,14,0.173,15,0.123,17,0.012,19,0.552,24,0.139,29,1.885,32,1.94,33,2.146,34,1.82,35,1.133,37,1.82,49,1.023,51,1.802,61,1.601,71,0.167,97,1.529,112,0.993,113,1.82,134,1.173,144,1.108,184,1.349,186,1.41,199,1.853,219,2.573,222,0.183,224,0.005,225,0.007,226,0.005,228,1.069,230,0.411,232,1.331,234,0.382,236,0.223,238,1.943,243,0.284,248,0.895,260,1.878,348,2.704,519,1.201,521,3.749,523,1.545,554,3.295,654,1.729,657,1.545,664,1.82,674,3.665,775,2.432,796,1.878,848,2.432,860,1.764,896,1.964,908,2.059,909,2.167,910,3.119,921,3.749,941,2.82,990,2.432,1007,1.491,1057,2.82,1148,2.604,1210,2.704,1356,1.878,1365,3.473,1545,2.167,1656,2.82,1749,2.432,1886,4.475,1906,2.82,2063,5.399,2064,2.432,2065,5.319,2066,3.108,2067,6.053,2070,3.108,2072,2.604,2075,4.059,2077,3.108,2079,3.108,2084,5.091,2085,2.82,2086,3.295,2087,4.223,2088,2.604,2089,2.432,2090,3.108,2091,5.201,2092,2.82,2093,2.604,2094,4.474,2095,3.108,2096,3.108,2097,4.474,2098,5.733,2099,3.108,2100,3.108,2101,6.075,2102,6.075,2103,3.108,2104,5.241,2105,3.108,2106,3.108,2107,5.241,2108,3.108,2109,3.108,2110,3.108,2111,3.108,2112,3.108,2113,3.108,2114,2.82,2115,3.108,2116,3.108,2117,3.108,2118,3.108,2119,3.108,2120,2.432,2121,3.108,2122,3.108,2123,3.108,2124,3.108,2125,3.108,2126,5.241,2127,3.108,2128,2.82,2129,3.108,2130,3.108,2131,2.432,2132,3.108,2133,3.108,2134,4.474,2135,4.474,2136,4.474,2137,4.474,2138,4.392,2139,4.474,2140,3.108,2141,2.604,2142,2.289,2760,3.108,2764,5.104,2765,5.104,2766,3.546,2767,5.104,2768,3.546,2769,3.546,2770,3.546,2771,3.546,2772,3.546,2773,3.546,2774,3.546,2775,3.546]],["title/interfaces/StoragePayload.html",[0,1.283,1850,3.333]],["body/interfaces/StoragePayload.html",[0,1.68,2,2.575,3,0.126,4,0.11,5,0.126,6,0.08,8,0.08,9,0.257,14,0.172,15,0.121,17,0.012,18,1.212,19,0.524,24,0.11,51,1.33,71,0.157,100,2.787,110,1.958,114,3.033,134,0.773,144,0.878,170,1.023,186,1.519,224,0.007,225,0.009,226,0.007,227,2.226,234,0.411,238,1.784,617,2.285,664,2.925,705,4.186,751,3.791,770,3.955,813,2.909,901,5.742,932,4.033,964,5.363,980,4.54,981,5.742,1076,3.767,1084,3.355,1092,3.767,1099,3.545,1103,3.767,1110,3.042,1113,5.032,1841,4.033,1842,4.367,1843,4.367,1844,4.367,1845,4.367,1846,4.813,1850,5.448,1851,6.853,1852,4.813,1853,4.813,1854,4.813,1855,4.813,1856,4.813,1857,4.813,1858,4.813,1859,4.813,1860,4.813,1861,4.813]],["title/interfaces/StructuredTypeField.html",[0,1.283,48,1.966]],["body/interfaces/StructuredTypeField.html",[0,2.335,1,1.955,2,1.367,3,0.067,4,0.059,5,0.067,6,0.042,7,1.48,8,0.042,9,0.223,10,0.238,11,2.339,12,2.339,13,2.339,14,0.179,15,0.126,16,0.997,17,0.012,18,1.254,19,0.338,20,1.421,21,1.073,22,1.732,23,0.976,24,0.17,25,1.421,26,1.367,27,2.166,28,2.824,29,1.9,30,1.544,31,2.783,32,2.026,33,1.226,34,1.039,35,0.647,36,0.866,37,1.039,38,0.976,39,2.242,40,1.923,41,2.242,42,2.242,43,2.071,44,1.923,45,1.27,46,1.544,47,1.27,48,2.789,49,1.843,50,1.665,51,1.44,52,2.556,53,1.738,54,2.416,55,2.51,56,1.665,57,2.367,58,1.665,59,2.686,60,2.071,61,1.085,62,2.339,63,1.544,64,1.544,65,1.544,66,1.544,67,1.48,68,1.544,69,1.544,70,1.544,71,0.172,72,2.408,73,1.544,74,1.544,75,1.544,76,1.544,77,1.544,78,1.317,79,1.544,80,1.108,81,1.544,82,1.544,83,1.544,84,1.544,85,1.544,86,1.544,87,1.544,88,1.544,89,1.544,90,1.544,91,1.544,92,1.544,93,1.544,94,1.544,95,1.544,96,2.475,97,1.38,98,2.241,99,1.678,100,1.574,101,2.153,102,2.153,103,2.686,104,1.544,105,2.339,106,1.544,107,1.367,108,1.544,109,1.544,110,2.991,111,1.794,112,1.79,113,1.9,114,3.359,115,2.655,116,2.824,117,2.339,118,1.145,119,1.544,120,2.339,121,2.707,122,2.997,123,1.544,124,1.544,125,1.544,126,3.155,127,2.094,128,2.707,129,2.824,130,1.544,131,2.153,132,1.544,133,3.15,134,0.75,135,1.421,136,1.544,137,1.48,138,1.48,139,1.544,140,1.544,141,1.544,142,1.544,143,2.153,144,0.466,145,1.544,146,2.339,147,2.339,148,2.408,149,2.339,150,2.242,151,1.48,152,1.544,153,1.367,154,2.071,155,1.544,156,2.408,157,1.421,158,1.421,159,1.421,160,2.071,161,1.48,162,1.421,163,1.48,164,2.153,165,0.41,166,0.748,167,1.317,168,1.421,169,1.992,170,1.107,171,1.226,172,2.071,173,2.153,174,1.367,175,1.421,176,1.48,177,1.48,178,1.27,179,1.351,180,1.226,181,1.073,182,1.317,183,1.27,184,0.77,185,1.317,186,0.593,187,1.039,188,1.367,189,1.317,190,1.421,191,1.48,192,1.48,193,1.48,194,1.317,195,1.421,196,2.153,197,3.278,198,1.007,199,0.748,200,1.48,201,1.995,202,1.108,203,1.995,204,1.48,205,1.923,206,1.48,207,2.153,208,1.367,209,2.153,210,1.421,211,1.27,212,1.794,213,1.48,214,1.317,215,1.48,216,1.226,217,2.242,218,1.995,219,0.892,220,1.48,221,1.48,222,0.067,223,1.073,224,0.004,225,0.006,226,0.004]],["title/interfaces/StructuredTypeFieldOptions.html",[0,1.283,178,1.826]],["body/interfaces/StructuredTypeFieldOptions.html",[0,2.372,1,1.699,2,1.463,3,0.071,4,0.063,5,0.071,6,0.045,7,1.584,8,0.045,9,0.231,11,2.461,12,2.461,13,2.461,14,0.179,15,0.124,16,0.972,17,0.012,18,1.201,19,0.355,20,1.521,21,1.148,22,1.804,23,1.045,24,0.171,25,1.521,26,1.463,27,2.256,28,2.941,29,1.944,30,1.652,31,2.866,32,2.111,33,1.312,34,1.112,35,0.693,36,0.926,37,1.112,38,1.045,39,2.359,40,2.024,41,2.359,42,2.359,43,2.179,44,2.024,45,1.359,46,1.652,47,1.359,48,3.085,49,1.34,50,0.874,51,0.756,52,2.111,53,1.264,54,1.267,55,2.584,56,0.874,57,2.253,58,0.874,59,1.409,60,2.179,61,1.13,62,2.461,63,1.652,64,1.652,65,1.652,66,1.652,67,1.584,68,1.652,69,1.652,70,1.652,71,0.173,72,2.508,73,1.652,74,1.652,75,1.652,76,1.652,77,1.652,78,1.409,79,1.652,80,1.186,81,1.652,82,1.652,83,1.652,84,1.652,85,1.652,86,1.652,87,1.652,88,1.652,89,1.652,90,1.652,91,1.652,92,1.652,93,1.652,94,1.652,95,1.652,96,2.539,97,1.409,98,2.335,99,1.766,100,1.656,101,2.265,102,2.265,103,2.779,104,1.652,105,2.461,106,1.652,107,1.463,108,1.652,109,1.652,110,3.014,111,1.888,112,1.843,113,1.98,114,3.389,115,2.716,116,2.941,117,2.461,118,1.225,119,1.652,120,2.461,121,2.819,122,3.085,123,1.652,124,1.652,125,1.652,126,3.228,127,2.181,128,2.819,129,2.941,130,1.652,131,2.265,132,1.652,133,3.259,134,0.782,135,1.521,136,1.652,137,1.584,138,1.584,139,1.652,140,1.652,141,1.652,142,1.652,143,2.265,144,0.499,145,1.652,146,2.461,147,2.461,148,2.508,149,2.461,150,2.359,151,1.584,152,1.652,153,1.463,154,2.179,155,1.652,156,2.508,157,1.521,158,1.521,159,1.521,160,2.179,161,1.584,162,1.521,163,1.584,164,2.265,165,0.439,166,0.801,167,1.409,168,1.521,169,2.204,170,1.225,171,1.312,172,2.179,173,2.265,174,1.463,175,1.521,176,1.584,177,1.584,178,2.024,179,1.422,180,1.312,181,1.148,182,1.409,183,1.359,184,0.824,185,1.409,186,0.635,187,1.112,188,1.463,189,1.409,190,1.521,191,1.584,192,1.584,193,1.584,194,1.409,195,1.521,196,2.265,197,3.363,198,1.078,199,0.801,200,1.584,201,2.099,202,1.186,203,2.099,204,1.584,205,2.024,206,1.584,207,2.265,208,1.463,209,2.265,210,1.521,211,1.359,212,1.888,213,1.584,214,1.409,215,1.584,216,1.312,217,2.359,218,2.099,219,0.954,220,1.584,221,1.584,222,0.071,223,1.148,224,0.004,225,0.006,226,0.004]],["title/dependencies.html",[2776,3.491,2777,4.423]],["body/dependencies.html",[17,0.011,23,2.18,224,0.008,225,0.01,226,0.008,2041,4.779,2777,5.703,2778,6.506,2779,8.671,2780,6.506,2781,6.506,2782,6.506,2783,7.589,2784,7.589,2785,6.506,2786,6.506,2787,6.506,2788,6.506,2789,6.506,2790,6.506,2791,6.506,2792,6.506,2793,6.506]],["title/miscellaneous/enumerations.html",[2794,2.254,2795,4.423]],["body/miscellaneous/enumerations.html",[6,0.114,8,0.081,15,0.1,17,0.012,32,2.619,33,2.897,34,2.456,35,1.53,45,3.001,47,3.001,51,1.669,61,1.816,118,2.706,222,0.158,224,0.007,225,0.009,226,0.007,238,2.239,260,2.536,514,4.858,515,6.039,521,5.06,524,4.858,525,4.858,554,4.448,909,4.21,921,5.06,1210,3.649,1272,4.001,1273,4.001,1394,5.06,1957,4.448,2063,3.802,2064,5.143,2091,5.479,2120,4.726,2146,4.407,2147,5.479,2167,5.06,2168,4.726,2169,5.479,2170,5.479,2794,3.578,2795,4.858,2796,5.542,2797,5.479,2798,5.542,2799,6.889,2800,4.407,2801,4.407,2802,6.889,2803,6.889,2804,6.889,2805,6.889,2806,6.889]],["title/miscellaneous/functions.html",[462,3.084,2794,2.254]],["body/miscellaneous/functions.html",[6,0.113,8,0.07,10,0.25,14,0.171,15,0.102,17,0.011,51,1.168,61,1.429,71,0.175,97,0.925,99,2.396,188,2.261,219,1.475,222,0.2,224,0.006,225,0.008,226,0.006,232,1.725,238,2.048,248,1.232,462,2.946,892,4.226,938,6.156,942,4.226,943,5.525,944,6.156,946,4.226,949,4.226,955,4.226,957,4.226,980,3.661,1058,3.834,2032,4.226,2046,4.226,2053,5.525,2063,3.307,2064,4.324,2065,3.307,2092,3.834,2142,5.119,2168,3.307,2282,3.834,2794,3.112,2797,3.834,2800,6.776,2801,3.834,2807,6.303,2808,4.821,2809,6.303,2810,6.303,2811,6.303,2812,6.303,2813,6.303,2814,6.303,2815,6.303,2816,4.821,2817,6.303,2818,6.303,2819,7.73,2820,6.303,2821,6.303,2822,6.303,2823,6.303,2824,6.303,2825,6.303,2826,6.303,2827,6.303,2828,7.023,2829,4.821,2830,4.821,2831,4.821,2832,4.226,2833,4.821,2834,4.821,2835,4.821,2836,6.303,2837,4.821,2838,4.821,2839,4.226,2840,4.821,2841,4.821,2842,4.821,2843,4.821,2844,4.821,2845,4.821,2846,6.303,2847,6.303,2848,4.821,2849,4.821,2850,4.821,2851,4.821,2852,4.821,2853,6.303,2854,4.821]],["title/index.html",[8,0.051,2855,3.06,2856,3.06]],["body/index.html",[4,0.086,17,0.012,19,0.61,24,0.133,36,1.274,37,2.361,45,2.539,47,2.539,51,1.039,57,2.418,67,2.177,71,0.086,96,2.145,98,2.785,107,3.106,110,2.078,111,1.742,112,1.201,113,2.734,121,2.177,122,2.734,128,2.177,151,2.177,162,2.09,187,1.529,190,2.09,202,2.826,224,0.006,225,0.008,226,0.006,234,0.495,527,3.758,617,1.784,659,3.149,704,1.578,781,3.758,782,5.22,783,4.282,852,5.11,907,2.271,912,4.062,1010,3.999,1083,2.375,1110,2.375,1210,2.271,1278,4.611,1557,3.562,1585,2.941,1743,4.636,1749,5.781,1957,4.276,2029,4.636,2030,4.282,2034,4.282,2040,6.23,2041,4.865,2048,5.11,2086,4.589,2131,2.941,2857,8.093,2858,4.287,2859,4.287,2860,4.287,2861,4.287,2862,4.287,2863,5.829,2864,7.107,2865,4.287,2866,4.287,2867,7.107,2868,4.287,2869,4.287,2870,4.287,2871,5.829,2872,4.287,2873,6.23,2874,4.287,2875,5.829,2876,4.287,2877,4.287,2878,4.287,2879,5.829,2880,4.287,2881,5.829,2882,4.287,2883,4.287,2884,4.287,2885,4.287,2886,4.287,2887,4.287,2888,4.287,2889,4.287,2890,5.829,2891,4.287,2892,4.287,2893,4.287,2894,4.287,2895,4.287,2896,4.287,2897,8.184,2898,4.287,2899,4.287,2900,4.287,2901,4.287,2902,5.829,2903,7.433,2904,7.107,2905,4.287,2906,4.287,2907,4.287,2908,4.287,2909,4.287,2910,4.287,2911,5.829,2912,4.287,2913,5.829,2914,4.287,2915,5.829,2916,5.829,2917,5.829,2918,4.287,2919,5.829,2920,4.287,2921,4.287,2922,4.287,2923,4.287,2924,4.287,2925,4.287,2926,4.287,2927,4.287,2928,6.623,2929,4.287,2930,5.829,2931,4.287,2932,4.287,2933,4.287,2934,4.287,2935,4.287,2936,4.287,2937,4.287,2938,5.829,2939,4.287,2940,5.829,2941,4.287,2942,4.287,2943,4.287,2944,4.287,2945,4.287,2946,4.287,2947,4.287,2948,4.287,2949,4.287,2950,4.287,2951,4.287,2952,4.287,2953,5.829,2954,4.287,2955,4.287,2956,4.287,2957,4.287,2958,4.287]],["title/license.html",[2855,3.06,2856,3.06,2959,3.06]],["body/license.html",[17,0.009,137,3.05,148,3.509,153,2.817,224,0.008,225,0.009,226,0.008,260,2.211,782,5.316,893,5.265,1370,3.67,2554,5.265,2873,5.265,2959,5.265,2960,6.007,2961,7.768,2962,6.007,2963,6.007,2964,6.007,2965,6.007,2966,7.238,2967,6.007,2968,6.007,2969,6.007,2970,6.007,2971,6.007,2972,6.007,2973,7.238,2974,8.61,2975,6.007,2976,6.007,2977,6.007,2978,6.007,2979,7.238,2980,6.007,2981,6.007,2982,6.007,2983,6.007,2984,6.007,2985,6.007,2986,6.007,2987,6.007,2988,7.238,2989,6.007,2990,6.007,2991,6.007,2992,6.007,2993,6.007,2994,6.007,2995,7.238,2996,7.238,2997,6.007,2998,6.007,2999,6.007,3000,6.007,3001,6.007,3002,6.007,3003,6.007,3004,6.007,3005,6.007,3006,6.007,3007,6.007,3008,6.007,3009,6.007,3010,6.007,3011,6.007,3012,6.007,3013,6.007,3014,6.007,3015,6.007,3016,6.007,3017,6.007,3018,6.007,3019,6.007,3020,6.007,3021,6.007,3022,6.007,3023,6.007,3024,6.007]],["title/modules.html",[2031,4.565]],["body/modules.html",[17,0.01,224,0.009,225,0.01,226,0.009,2030,5.068,2031,5.487,3025,6.9]],["title/overview.html",[3026,5.031]],["body/overview.html",[2,3.204,17,0.01,112,1.914,122,3.204,224,0.009,225,0.01,226,0.009,236,0.429,2029,5.433,2587,5.989,3026,5.989,3027,6.833,3028,6.833]],["title/miscellaneous/typealiases.html",[2794,2.254,3029,5.046]],["body/miscellaneous/typealiases.html",[6,0.114,7,2.311,8,0.066,14,0.16,15,0.128,16,0.541,17,0.011,18,0.94,25,2.959,31,2.643,37,2.434,39,3.081,40,2.643,41,3.081,42,3.081,43,2.846,44,2.974,45,2.643,47,2.643,61,1.235,103,2.741,110,2.704,111,1.849,126,2.741,143,2.219,156,2.741,157,2.219,158,2.219,159,2.219,160,2.846,161,2.311,162,2.219,163,2.311,164,2.959,165,0.641,166,1.168,167,2.056,189,2.741,196,2.959,197,2.959,199,1.752,201,2.741,203,2.741,205,2.643,207,2.959,209,2.959,218,2.741,224,0.006,225,0.008,226,0.006,227,2.856,929,5.984,1268,3.524,1269,5.319,1352,4.163,1937,5.319,1957,3.918,2063,3.122,2064,4.163,2067,4.825,2085,5.429,2087,4.407,2142,2.938,2167,4.457,2168,4.163,2424,5.319,2426,5.319,2433,5.319,2794,2.938,2797,3.619,2800,6.961,2801,3.619,2832,5.319,2839,5.319,3030,8.724,3031,7.585,3032,4.551,3033,6.827,3034,6.068,3035,7.282,3036,7.282,3037,7.282,3038,6.068,3039,6.827,3040,6.827,3041,7.282,3042,6.827,3043,7.282,3044,6.068,3045,4.551,3046,4.551,3047,4.551]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":674,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataSettings.html":{},"classes/SegmentHandler.html":{}}}],["0.10.2",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":112,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"overview.html":{}}}],["1.1.11",{"_index":2788,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":2779,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":3028,"title":{},"body":{"overview.html":{}}}],["2",{"_index":122,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"overview.html":{}}}],["2.0",{"_index":157,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["2.0.0",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":978,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["2019",{"_index":2962,"title":{},"body":{"license.html":{}}}],["3",{"_index":128,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["3.0",{"_index":158,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["4",{"_index":121,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["4.0",{"_index":159,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["404",{"_index":1766,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["5",{"_index":145,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["6.6.0",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["705b5ad71980",{"_index":109,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["81",{"_index":3027,"title":{},"body":{"overview.html":{}}}],["9a",{"_index":2101,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["_action",{"_index":1207,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_action(path",{"_index":1228,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_api",{"_index":998,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{}}}],["_cast",{"_index":1893,"title":{},"body":{"classes/ODataModel.html":{}}}],["_cast(type",{"_index":1904,"title":{},"body":{"classes/ODataModel.html":{}}}],["_config",{"_index":1216,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_context",{"_index":1406,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["_entity",{"_index":1891,"title":{},"body":{"classes/ODataModel.html":{}}}],["_function",{"_index":1208,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_function(path",{"_index":1230,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_functions",{"_index":1405,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["_meta",{"_index":1203,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_models",{"_index":1204,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_navigationproperty",{"_index":1894,"title":{},"body":{"classes/ODataModel.html":{}}}],["_navigationproperty(path",{"_index":1908,"title":{},"body":{"classes/ODataModel.html":{}}}],["_options",{"_index":2414,"title":{},"body":{"classes/ODataResponse.html":{}}}],["_properties",{"_index":1407,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["_query",{"_index":1218,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_relations",{"_index":1892,"title":{},"body":{"classes/ODataModel.html":{}}}],["_resource",{"_index":1205,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_segment",{"_index":1217,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_state",{"_index":1206,"title":{},"body":{"classes/ODataCollection.html":{}}}],["a.schemas.some(s",{"_index":2669,"title":{},"body":{"classes/ODataSettings.html":{}}}],["above",{"_index":2994,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":963,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["abstract",{"_index":297,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["acc",{"_index":839,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataSchema.html":{}}}],["acc.every(c",{"_index":2558,"title":{},"body":{"classes/ODataSchema.html":{}}}],["acc.parameters",{"_index":2562,"title":{},"body":{"classes/ODataSchema.html":{}}}],["acc.pipe(switchmap(({meta",{"_index":1998,"title":{},"body":{"classes/ODataModel.html":{}}}],["acc[key",{"_index":2241,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["acc[name",{"_index":1570,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["accept",{"_index":925,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["accept.length",{"_index":2310,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push(`ieee754compatible=${this.api.options.ieee754compatible",{"_index":2309,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push(`odata.metadata=${this.api.options.metadata",{"_index":2306,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accessors",{"_index":860,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["action",{"_index":260,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["action.ts",{"_index":239,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["action.ts:1",{"_index":360,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:12",{"_index":247,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:14",{"_index":251,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:15",{"_index":253,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:16",{"_index":250,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:17",{"_index":249,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:18",{"_index":252,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:22",{"_index":367,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:24",{"_index":371,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:25",{"_index":369,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:26",{"_index":368,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:27",{"_index":370,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:3",{"_index":364,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:31",{"_index":262,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:33",{"_index":265,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:34",{"_index":263,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:35",{"_index":264,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:39",{"_index":419,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:4",{"_index":366,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:41",{"_index":421,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:42",{"_index":426,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:43",{"_index":422,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:44",{"_index":420,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:45",{"_index":423,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:46",{"_index":424,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:47",{"_index":425,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:5",{"_index":362,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:51",{"_index":447,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:53",{"_index":453,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:54",{"_index":449,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:55",{"_index":448,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:56",{"_index":450,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:57",{"_index":451,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:58",{"_index":452,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:6",{"_index":361,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:7",{"_index":363,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:8",{"_index":365,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["actionimport",{"_index":568,"title":{},"body":{"classes/Field.html":{}}}],["actionimports",{"_index":320,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["actions",{"_index":456,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["add",{"_index":783,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"index.html":{}}}],["add(model",{"_index":1232,"title":{},"body":{"classes/ODataCollection.html":{}}}],["addbody",{"_index":2807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addbody(options",{"_index":2830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additionalitems",{"_index":1588,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["addressinfo",{"_index":2929,"title":{},"body":{"index.html":{}}}],["aggregate",{"_index":2832,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["airport",{"_index":2905,"title":{},"body":{"index.html":{}}}],["airport.get().subscribe(console.log",{"_index":2934,"title":{},"body":{"index.html":{}}}],["airports",{"_index":2897,"title":{},"body":{"index.html":{}}}],["airports.entity(\"cyyz\").get({fetchpolicy",{"_index":2908,"title":{},"body":{"index.html":{}}}],["airports.get().subscribe(console.log",{"_index":2933,"title":{},"body":{"index.html":{}}}],["airports.query.filter().clear",{"_index":2924,"title":{},"body":{"index.html":{}}}],["airports.query.filter().push({location",{"_index":2918,"title":{},"body":{"index.html":{}}}],["airports.tojson",{"_index":2920,"title":{},"body":{"index.html":{}}}],["airportsservice",{"_index":2893,"title":{},"body":{"index.html":{}}}],["airportsservice.entities",{"_index":2898,"title":{},"body":{"index.html":{}}}],["alias",{"_index":199,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["alias(name",{"_index":1365,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["aliases",{"_index":2142,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":1023,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["along",{"_index":141,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["and/or",{"_index":2986,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2857,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2778,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2780,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":21,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataMeta.html":{},"modules/ODataModule.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["angular/compiler",{"_index":2781,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":2041,"title":{},"body":{"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":2782,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2783,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2786,"title":{},"body":{"dependencies.html":{}}}],["angularodataentity",{"_index":2868,"title":{},"body":{"index.html":{}}}],["annot",{"_index":679,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["annot.type",{"_index":681,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["annotation",{"_index":1,"title":{"interfaces/Annotation.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["annotation(type",{"_index":1529,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["annotation.ts",{"_index":267,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{}}}],["annotation.ts:1",{"_index":271,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:15",{"_index":284,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:17",{"_index":286,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:18",{"_index":285,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:2",{"_index":272,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:22",{"_index":493,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:24",{"_index":498,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:25",{"_index":503,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:26",{"_index":495,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:27",{"_index":496,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:28",{"_index":494,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:29",{"_index":499,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:30",{"_index":497,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:31",{"_index":500,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:32",{"_index":501,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:33",{"_index":502,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:5",{"_index":288,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:7",{"_index":290,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:9",{"_index":289,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotationconfig",{"_index":197,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataAnnotation.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["annotationlist",{"_index":268,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["annotations",{"_index":57,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["annotations(value",{"_index":75,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["annotationslist",{"_index":457,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["annots",{"_index":1246,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.count",{"_index":1302,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.skip",{"_index":1297,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.skiptoken",{"_index":1300,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.top",{"_index":1295,"title":{},"body":{"classes/ODataCollection.html":{}}}],["any)[f.name",{"_index":1609,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{}}}],["any)[field.name",{"_index":2018,"title":{},"body":{"classes/ODataModel.html":{}}}],["api",{"_index":96,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["api.configure(settings",{"_index":2664,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findcallablebyname(name)).filter(e",{"_index":2682,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findcallablefortype(type)).filter(e",{"_index":2675,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findcollectionbyname(name)).filter(e",{"_index":2685,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findcollectionfortype(type)).filter(e",{"_index":2679,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findentitysetbyname(name)).filter(e",{"_index":2683,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findentitysetfortype(type)).filter(e",{"_index":2676,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findenumtypebyname(name)).filter(e",{"_index":2680,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findenumtypefortype(type)).filter(e",{"_index":2671,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findmodelbyname(name)).filter(e",{"_index":2684,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findmodelfortype(type)).filter(e",{"_index":2678,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findparserfortype(type",{"_index":2375,"title":{},"body":{"classes/ODataResource.html":{}}}],["api.findparserfortype(type)).filter(e",{"_index":2677,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findstructuredtypebyname(name)).filter(e",{"_index":2681,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findstructuredtypefortype(type)).filter(e",{"_index":2674,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.options",{"_index":2378,"title":{},"body":{"classes/ODataResource.html":{}}}],["apibyname",{"_index":2597,"title":{},"body":{"classes/ODataSettings.html":{}}}],["apibyname(name",{"_index":2616,"title":{},"body":{"classes/ODataSettings.html":{}}}],["apiconfig",{"_index":189,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"modules/ODataModule.html":{},"classes/ODataSettings.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["apifor(this",{"_index":2353,"title":{},"body":{"classes/ODataResource.html":{}}}],["apifortype",{"_index":2598,"title":{},"body":{"classes/ODataSettings.html":{}}}],["apifortype(type",{"_index":2618,"title":{},"body":{"classes/ODataSettings.html":{}}}],["apiname",{"_index":2396,"title":{},"body":{"classes/ODataResource.html":{}}}],["apioptions",{"_index":172,"title":{"interfaces/ApiOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["apis",{"_index":2596,"title":{},"body":{"classes/ODataSettings.html":{}}}],["apollo",{"_index":105,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["aports",{"_index":2901,"title":{},"body":{"index.html":{}}}],["app",{"_index":2883,"title":{},"body":{"index.html":{}}}],["app.component.css",{"_index":2888,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":2886,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":2889,"title":{},"body":{"index.html":{}}}],["application/json;${accept.join",{"_index":2312,"title":{},"body":{"classes/ODataRequest.html":{}}}],["application_http",{"_index":927,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["application_json",{"_index":916,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["appliesto",{"_index":282,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["appmodule",{"_index":2879,"title":{},"body":{"index.html":{}}}],["arising",{"_index":3021,"title":{},"body":{"license.html":{}}}],["arr",{"_index":2226,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.find(v",{"_index":2229,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.push(obj",{"_index":2231,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["array",{"_index":40,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(value",{"_index":1576,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{}}}],["arraybuffer",{"_index":2271,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["arraybuffer(options",{"_index":2729,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["ascollection",{"_index":1353,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["ascollection(entities",{"_index":1367,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["ascollection>>(entities",{"_index":2364,"title":{},"body":{"classes/ODataResource.html":{}}}],["asked",{"_index":124,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["asmodel",{"_index":1354,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["asmodel(entity",{"_index":1371,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["asmodel>(entity",{"_index":2361,"title":{},"body":{"classes/ODataResource.html":{}}}],["assertarray",{"_index":2211,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assertobject",{"_index":2741,"title":{},"body":{"classes/OptionHandler.html":{}}}],["assertobject(create",{"_index":2224,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assign",{"_index":1700,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/OptionHandler.html":{}}}],["assign(entity",{"_index":1708,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["assign(values",{"_index":2254,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["associated",{"_index":2975,"title":{},"body":{"license.html":{}}}],["at(index",{"_index":2221,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["attach",{"_index":1209,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataSingletonService.html":{}}}],["attach(resource",{"_index":1235,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["attach(value",{"_index":1710,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["attach>(value",{"_index":1739,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["attach>>(value",{"_index":1740,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["attr",{"_index":663,"title":{},"body":{"classes/Field.html":{}}}],["attr?.nodevalue",{"_index":666,"title":{},"body":{"classes/Field.html":{}}}],["attribute",{"_index":524,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["attribute_abstract",{"_index":608,"title":{},"body":{"classes/Field.html":{}}}],["attribute_action",{"_index":605,"title":{},"body":{"classes/Field.html":{}}}],["attribute_alias",{"_index":575,"title":{},"body":{"classes/Field.html":{}}}],["attribute_applies_to",{"_index":613,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_term",{"_index":612,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_type",{"_index":583,"title":{},"body":{"classes/Field.html":{}}}],["attribute_contains_target",{"_index":597,"title":{},"body":{"classes/Field.html":{}}}],["attribute_default_value",{"_index":592,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set",{"_index":606,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set_path",{"_index":599,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_type",{"_index":601,"title":{},"body":{"classes/Field.html":{}}}],["attribute_extends",{"_index":611,"title":{},"body":{"classes/Field.html":{}}}],["attribute_function",{"_index":604,"title":{},"body":{"classes/Field.html":{}}}],["attribute_has_stream",{"_index":596,"title":{},"body":{"classes/Field.html":{}}}],["attribute_include_in_service_document",{"_index":607,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_bound",{"_index":598,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_composable",{"_index":600,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_flags",{"_index":610,"title":{},"body":{"classes/Field.html":{}}}],["attribute_max_length",{"_index":587,"title":{},"body":{"classes/Field.html":{}}}],["attribute_name",{"_index":581,"title":{},"body":{"classes/Field.html":{}}}],["attribute_namespace",{"_index":576,"title":{},"body":{"classes/Field.html":{}}}],["attribute_nullable",{"_index":586,"title":{},"body":{"classes/Field.html":{}}}],["attribute_open_type",{"_index":584,"title":{},"body":{"classes/Field.html":{}}}],["attribute_partner",{"_index":593,"title":{},"body":{"classes/Field.html":{}}}],["attribute_path",{"_index":602,"title":{},"body":{"classes/Field.html":{}}}],["attribute_precision",{"_index":588,"title":{},"body":{"classes/Field.html":{}}}],["attribute_property",{"_index":594,"title":{},"body":{"classes/Field.html":{}}}],["attribute_qualifier",{"_index":578,"title":{},"body":{"classes/Field.html":{}}}],["attribute_referenced_property",{"_index":595,"title":{},"body":{"classes/Field.html":{}}}],["attribute_scale",{"_index":589,"title":{},"body":{"classes/Field.html":{}}}],["attribute_srid",{"_index":591,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target",{"_index":603,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target_namespace",{"_index":579,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term",{"_index":580,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term_namespace",{"_index":577,"title":{},"body":{"classes/Field.html":{}}}],["attribute_type",{"_index":585,"title":{},"body":{"classes/Field.html":{}}}],["attribute_underlying_type",{"_index":609,"title":{},"body":{"classes/Field.html":{}}}],["attribute_unicode",{"_index":590,"title":{},"body":{"classes/Field.html":{}}}],["attribute_uri",{"_index":574,"title":{},"body":{"classes/Field.html":{}}}],["attribute_value",{"_index":582,"title":{},"body":{"classes/Field.html":{}}}],["attribute_version",{"_index":573,"title":{},"body":{"classes/Field.html":{}}}],["attributes",{"_index":572,"title":{},"body":{"classes/Field.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataModel.html":{}}}],["attributes(data",{"_index":1467,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["attributes(value",{"_index":76,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["attributes.getnameditem('version",{"_index":665,"title":{},"body":{"classes/Field.html":{}}}],["attrs",{"_index":1380,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{}}}],["attrs[value.field.name",{"_index":1997,"title":{},"body":{"classes/ODataModel.html":{}}}],["authors",{"_index":3013,"title":{},"body":{"license.html":{}}}],["average",{"_index":2805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backend",{"_index":1857,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["backend.setitem(key",{"_index":1858,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["backward",{"_index":2119,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["base",{"_index":214,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["baseterm",{"_index":280,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["basetype",{"_index":298,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["basic",{"_index":2945,"title":{},"body":{"index.html":{}}}],["batch",{"_index":921,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["batch.request.method",{"_index":1042,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["batch_prefix",{"_index":920,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["batchboundary",{"_index":999,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["binary",{"_index":929,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/typealiases.html":{}}}],["binding",{"_index":343,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["binding.ts",{"_index":411,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:1",{"_index":413,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:3",{"_index":414,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:4",{"_index":415,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["blob",{"_index":2272,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["blob(options",{"_index":2731,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["body",{"_index":980,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/functions.html":{}}}],["bool",{"_index":11,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["boolean",{"_index":16,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["bound",{"_index":220,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["boundary",{"_index":953,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary.split('=')[1",{"_index":956,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary_prefix_suffix",{"_index":915,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundarydelimiter",{"_index":955,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["boundarydelimiter.length",{"_index":958,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundaryend",{"_index":959,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["brackets",{"_index":2236,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["break",{"_index":2512,"title":{},"body":{"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{}}}],["browse",{"_index":3025,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2784,"title":{},"body":{"dependencies.html":{}}}],["buildaggregate",{"_index":2809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildaggregate(aggregate",{"_index":2831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildentry",{"_index":1077,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["buildentry(payload",{"_index":1088,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["builder",{"_index":2086,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["buildexpand",{"_index":2810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildexpand(expands",{"_index":2833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter",{"_index":2811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter(filters",{"_index":2835,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby",{"_index":2812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby(groupby",{"_index":2838,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby",{"_index":2813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby(orderby",{"_index":2840,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildquery",{"_index":2084,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["buildquery(options",{"_index":2183,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["buildtransforms",{"_index":2814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildtransforms(transforms",{"_index":2841,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl",{"_index":2815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl(path",{"_index":2843,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builtfilters",{"_index":2851,"title":{},"body":{"miscellaneous/functions.html":{}}}],["c",{"_index":1370,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{},"license.html":{}}}],["c.default",{"_index":2661,"title":{},"body":{"classes/ODataSettings.html":{}}}],["c.default).length",{"_index":2658,"title":{},"body":{"classes/ODataSettings.html":{}}}],["c.find(predicate",{"_index":1648,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["c.istypeof(type",{"_index":2473,"title":{},"body":{"classes/ODataResponse.html":{}}}],["c.istypeof(type)).deserialize(value",{"_index":1574,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["c.istypeof(type)).serialize(value",{"_index":1581,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["c.name",{"_index":2559,"title":{},"body":{"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["c.parameters",{"_index":2564,"title":{},"body":{"classes/ODataSchema.html":{}}}],["c.schemas.some(s",{"_index":2666,"title":{},"body":{"classes/ODataSettings.html":{}}}],["cache",{"_index":110,"title":{"interfaces/Cache.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cache/index",{"_index":773,"title":{},"body":{"classes/ODataApi.html":{}}}],["cache_control",{"_index":2438,"title":{},"body":{"classes/ODataResponse.html":{}}}],["cacheability",{"_index":176,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["cachecacheability",{"_index":164,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["cachecontrol",{"_index":2469,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["cachecontrol.split(\",\").foreach(directive",{"_index":2518,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["cached",{"_index":135,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["california",{"_index":2919,"title":{},"body":{"index.html":{}}}],["call",{"_index":1344,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["callable",{"_index":2546,"title":{},"body":{"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["callable.configure(settings",{"_index":2585,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callablebyname",{"_index":2599,"title":{},"body":{"classes/ODataSettings.html":{}}}],["callablebyname(name",{"_index":2620,"title":{},"body":{"classes/ODataSettings.html":{}}}],["callableconfig",{"_index":205,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callableconfigs",{"_index":2555,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.filter(c",{"_index":2560,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.map(config",{"_index":2566,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.reduce((acc",{"_index":2557,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callablefor",{"_index":2600,"title":{},"body":{"classes/ODataSettings.html":{}}}],["callablefor(type",{"_index":2622,"title":{},"body":{"classes/ODataSettings.html":{}}}],["callables",{"_index":204,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["case",{"_index":990,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/SegmentHandler.html":{}}}],["cast",{"_index":2013,"title":{},"body":{"classes/ODataModel.html":{}}}],["catch",{"_index":653,"title":{},"body":{"classes/Field.html":{}}}],["catcherror",{"_index":757,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataEntityService.html":{}}}],["caught",{"_index":193,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["changeset",{"_index":1040,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changeset_prefix",{"_index":930,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetboundary",{"_index":1037,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetendline",{"_index":1066,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetid",{"_index":1038,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetresponses",{"_index":1064,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["channel",{"_index":988,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["charge",{"_index":2970,"title":{},"body":{"license.html":{}}}],["check",{"_index":659,"title":{},"body":{"classes/Field.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"index.html":{}}}],["checking",{"_index":149,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["checks",{"_index":116,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["checkversion(document",{"_index":658,"title":{},"body":{"classes/Field.html":{}}}],["children",{"_index":671,"title":{},"body":{"classes/Field.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["chunk[0].split",{"_index":1070,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["chunks",{"_index":1057,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["chunks.join(path_separator",{"_index":2110,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["city",{"_index":2913,"title":{},"body":{"index.html":{}}}],["claim",{"_index":3016,"title":{},"body":{"license.html":{}}}],["class",{"_index":234,"title":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["classes",{"_index":236,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"overview.html":{}}}],["clear",{"_index":2148,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["client",{"_index":115,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["client.apifor(this",{"_index":1003,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{}}}],["clone",{"_index":1007,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["close",{"_index":1041,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["code",{"_index":976,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["collection",{"_index":52,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["collection(entities",{"_index":2366,"title":{},"body":{"classes/ODataResource.html":{}}}],["collectionbyname",{"_index":2601,"title":{},"body":{"classes/ODataSettings.html":{}}}],["collectionbyname(name",{"_index":2624,"title":{},"body":{"classes/ODataSettings.html":{}}}],["collectionfortype",{"_index":2602,"title":{},"body":{"classes/ODataSettings.html":{}}}],["collectionfortype(type",{"_index":2626,"title":{},"body":{"classes/ODataSettings.html":{}}}],["collectionoperator",{"_index":2846,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complexes",{"_index":1963,"title":{},"body":{"classes/ODataModel.html":{}}}],["complextype",{"_index":547,"title":{},"body":{"classes/Field.html":{}}}],["complextypes",{"_index":458,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["compodoc",{"_index":2952,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":2881,"title":{},"body":{"index.html":{}}}],["composable",{"_index":221,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["compose",{"_index":1641,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["conditions",{"_index":2993,"title":{},"body":{"license.html":{}}}],["config",{"_index":704,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"index.html":{}}}],["config.alias",{"_index":2548,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.annotations",{"_index":1502,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["config.base",{"_index":1592,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["config.bound",{"_index":1150,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.cache",{"_index":800,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.callables",{"_index":2556,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.collection",{"_index":2713,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["config.composable",{"_index":1154,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.configure(settings",{"_index":2583,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.containers",{"_index":2569,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.creation",{"_index":795,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.default",{"_index":792,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.entities",{"_index":2552,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.entitysets",{"_index":1504,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["config.enums",{"_index":2550,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.errorhandler",{"_index":802,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.expand",{"_index":1617,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["config.fetchpolicy",{"_index":889,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.flags",{"_index":1784,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["config.headers",{"_index":885,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.ieee754compatible",{"_index":881,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.members",{"_index":1786,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{}}}],["config.metadata",{"_index":877,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.model",{"_index":2712,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["config.name",{"_index":789,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["config.name).reduce((acc",{"_index":2561,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.namespace",{"_index":2547,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.options",{"_index":798,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.params",{"_index":883,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.parsers",{"_index":804,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.path",{"_index":1149,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.return",{"_index":1186,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["config.schemas",{"_index":805,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.select",{"_index":1618,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["config.select).indexof(f.name",{"_index":1619,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["config.servicerooturl",{"_index":777,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.servicerooturl}$metadata",{"_index":787,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.stringasenum",{"_index":879,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.version",{"_index":790,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.withcredentials",{"_index":887,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["configs",{"_index":188,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"modules/ODataModule.html":{},"classes/ODataSettings.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["configs.map(config",{"_index":2652,"title":{},"body":{"classes/ODataSettings.html":{}}}],["configuration",{"_index":1623,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataSettings.html":{}}}],["configure",{"_index":687,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{}}}],["configure(settings",{"_index":719,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{}}}],["connection",{"_index":3023,"title":{},"body":{"license.html":{}}}],["console.log(\"airport",{"_index":2910,"title":{},"body":{"index.html":{}}}],["console.log(\"airports",{"_index":2904,"title":{},"body":{"index.html":{}}}],["console.log(\"all",{"_index":2900,"title":{},"body":{"index.html":{}}}],["console.log(\"people",{"_index":2931,"title":{},"body":{"index.html":{}}}],["console.log(json",{"_index":2921,"title":{},"body":{"index.html":{}}}],["console.log(query",{"_index":2923,"title":{},"body":{"index.html":{}}}],["const",{"_index":617,"title":{},"body":{"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["constants",{"_index":523,"title":{},"body":{"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["constructor",{"_index":243,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["constructor(...configs",{"_index":2650,"title":{},"body":{"classes/ODataSettings.html":{}}}],["constructor(action",{"_index":416,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["constructor(annot",{"_index":677,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["constructor(annotationlist",{"_index":269,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["constructor(client",{"_index":1000,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{}}}],["constructor(config",{"_index":702,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["constructor(configs",{"_index":2614,"title":{},"body":{"classes/ODataSettings.html":{}}}],["constructor(data",{"_index":1447,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{}}}],["constructor(init",{"_index":1084,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["constructor(name",{"_index":244,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{}}}],["constructor(namespace",{"_index":374,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlSchema.html":{}}}],["constructor(o",{"_index":2744,"title":{},"body":{"classes/OptionHandler.html":{}}}],["constructor(options",{"_index":2150,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["constructor(path",{"_index":412,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["constructor(private",{"_index":2131,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["constructor(property",{"_index":442,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["constructor(propertyrefs",{"_index":390,"title":{},"body":{"classes/CsdlKey.html":{}}}],["constructor(protected",{"_index":1735,"title":{},"body":{"classes/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{}}}],["constructor(public",{"_index":273,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{}}}],["constructor(request",{"_index":897,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["constructor(segment",{"_index":2766,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["constructor(segments",{"_index":2066,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["constructor(target",{"_index":287,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["constructor(term",{"_index":283,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["constructor(termnamespace",{"_index":385,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["constructor(type",{"_index":446,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["constructor(uri",{"_index":437,"title":{},"body":{"classes/CsdlReference.html":{}}}],["constructor(values",{"_index":1219,"title":{},"body":{"classes/ODataCollection.html":{}}}],["constructor(xml",{"_index":615,"title":{},"body":{"classes/Field.html":{}}}],["contain",{"_index":780,"title":{},"body":{"classes/ODataApi.html":{}}}],["container",{"_index":479,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataSchema.html":{}}}],["container.entitysets",{"_index":2576,"title":{},"body":{"classes/ODataSchema.html":{}}}],["container.ts",{"_index":319,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:10",{"_index":332,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:11",{"_index":330,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:12",{"_index":327,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:19",{"_index":1501,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["container.ts:5",{"_index":326,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:7",{"_index":331,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:8",{"_index":329,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:9",{"_index":328,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["containers",{"_index":206,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["containstarget",{"_index":395,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["content",{"_index":903,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content.join(newline",{"_index":992,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_id",{"_index":928,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_transfer_encoding",{"_index":926,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_type",{"_index":918,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["contentid",{"_index":1065,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contents",{"_index":2870,"title":{},"body":{"index.html":{}}}],["contenttype",{"_index":1058,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{},"miscellaneous/functions.html":{}}}],["contenttype.indexof(application_json",{"_index":2459,"title":{},"body":{"classes/ODataResponse.html":{}}}],["contenttype.split",{"_index":951,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contenttype.split(\",\").find(p",{"_index":2461,"title":{},"body":{"classes/ODataResponse.html":{}}}],["contenttype.split(';')[1].trim",{"_index":954,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contenttypeparts",{"_index":950,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contenttypeparts.length",{"_index":952,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["context",{"_index":72,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["context(value",{"_index":81,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["contract",{"_index":3019,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2988,"title":{},"body":{"license.html":{}}}],["copts",{"_index":2384,"title":{},"body":{"classes/ODataResource.html":{}}}],["copts.helper.countparam",{"_index":2388,"title":{},"body":{"classes/ODataResource.html":{}}}],["copts.helper.etag(options.attrs",{"_index":2394,"title":{},"body":{"classes/ODataResource.html":{}}}],["copy",{"_index":2973,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2961,"title":{},"body":{"license.html":{}}}],["count",{"_index":1210,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["count(value",{"_index":94,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["count).settype('edm.int32",{"_index":1396,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["countdistinct",{"_index":2806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["countparam",{"_index":95,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["countryregion",{"_index":2914,"title":{},"body":{"index.html":{}}}],["covered",{"_index":1393,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["create",{"_index":1701,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["create(entity",{"_index":1714,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["create(options",{"_index":1912,"title":{},"body":{"classes/ODataModel.html":{}}}],["createsettings",{"_index":2053,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["createsettings(configs",{"_index":2046,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":2860,"title":{},"body":{"index.html":{}}}],["creation",{"_index":191,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["csdl",{"_index":310,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdl/csdl",{"_index":518,"title":{},"body":{"classes/Field.html":{}}}],["csdlaction",{"_index":235,"title":{"classes/CsdlAction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlactionimport",{"_index":259,"title":{"classes/CsdlActionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlannotable",{"_index":266,"title":{"classes/CsdlAnnotable.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotable:2",{"_index":292,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotation",{"_index":270,"title":{"classes/CsdlAnnotation.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["csdlannotations",{"_index":274,"title":{"classes/CsdlAnnotations.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdlcomplextype",{"_index":293,"title":{"classes/CsdlComplexType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlentitycontainer",{"_index":318,"title":{"classes/CsdlEntityContainer.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlentityset",{"_index":324,"title":{"classes/CsdlEntitySet.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["csdlentitytype",{"_index":313,"title":{"classes/CsdlEntityType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlenummember",{"_index":347,"title":{"classes/CsdlEnumMember.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["csdlenumtype",{"_index":352,"title":{"classes/CsdlEnumType.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunction",{"_index":254,"title":{"classes/CsdlFunction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunctionimport",{"_index":256,"title":{"classes/CsdlFunctionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlinclude",{"_index":372,"title":{"classes/CsdlInclude.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlincludeannotations",{"_index":382,"title":{"classes/CsdlIncludeAnnotations.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlkey",{"_index":314,"title":{"classes/CsdlKey.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationproperty",{"_index":302,"title":{"classes/CsdlNavigationProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationpropertybinding",{"_index":337,"title":{"classes/CsdlNavigationPropertyBinding.html":{}},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlondelete",{"_index":400,"title":{"classes/CsdlOnDelete.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlparameter",{"_index":246,"title":{"classes/CsdlParameter.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlproperty",{"_index":301,"title":{"classes/CsdlProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlpropertyref",{"_index":317,"title":{"classes/CsdlPropertyRef.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlreference",{"_index":378,"title":{"classes/CsdlReference.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlreferentialconstraint",{"_index":399,"title":{"classes/CsdlReferentialConstraint.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlreturntype",{"_index":245,"title":{"classes/CsdlReturnType.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlschema",{"_index":454,"title":{"classes/CsdlSchema.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlsingleton",{"_index":325,"title":{"classes/CsdlSingleton.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlstructuralproperty",{"_index":394,"title":{"classes/CsdlStructuralProperty.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["csdlstructuralproperty:3",{"_index":406,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:4",{"_index":408,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:5",{"_index":407,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuredtype",{"_index":296,"title":{"classes/CsdlStructuredType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["csdlstructuredtype:10",{"_index":304,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:5",{"_index":306,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:6",{"_index":309,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:7",{"_index":307,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:8",{"_index":305,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:9",{"_index":308,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlterm",{"_index":279,"title":{"classes/CsdlTerm.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdltypedefinition",{"_index":465,"title":{"classes/CsdlTypeDefinition.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["ctor",{"_index":1312,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["ctor(this.models",{"_index":1314,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ctor(this.toentity",{"_index":1984,"title":{},"body":{"classes/ODataModel.html":{}}}],["current",{"_index":1015,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["custom",{"_index":2170,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["custom.reduce((acc",{"_index":2190,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["customheaders",{"_index":2302,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[accept",{"_index":2311,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[if_match_header",{"_index":2304,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customizations",{"_index":2949,"title":{},"body":{"index.html":{}}}],["damages",{"_index":3017,"title":{},"body":{"license.html":{}}}],["data",{"_index":114,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["data(data",{"_index":1418,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["dataservices",{"_index":636,"title":{},"body":{"classes/Field.html":{}}}],["date",{"_index":143,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["date.now",{"_index":940,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["dates",{"_index":2088,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["dates.isostringtodate(json.parse(json.stringify(segment.options",{"_index":2115,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["dates.isostringtodate(json.parse(json.stringify(this.options",{"_index":2194,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["deal",{"_index":2977,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3024,"title":{},"body":{"license.html":{}}}],["deep",{"_index":2948,"title":{},"body":{"index.html":{}}}],["def",{"_index":2244,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["default",{"_index":49,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["default_fetch_policy",{"_index":872,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["default_timeout",{"_index":1109,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["default_version",{"_index":774,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["defaultapi",{"_index":2603,"title":{},"body":{"classes/ODataSettings.html":{}}}],["defaultvalue",{"_index":281,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["defined",{"_index":230,"title":{},"body":{"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["definition",{"_index":478,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["definition.ts",{"_index":504,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:10",{"_index":513,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:11",{"_index":511,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:3",{"_index":506,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:5",{"_index":508,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:6",{"_index":512,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:7",{"_index":507,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:8",{"_index":509,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:9",{"_index":510,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["delete",{"_index":1052,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{}}}],["delete(options",{"_index":1375,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["deleting",{"_index":2861,"title":{},"body":{"index.html":{}}}],["delivered",{"_index":987,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["deltalink",{"_index":1410,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["deltalink(value",{"_index":93,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["demo",{"_index":2865,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":2777,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":2054,"title":{},"body":{"modules/ODataModule.html":{}}}],["description",{"_index":1622,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["deserialize",{"_index":1166,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponse.html":{},"interfaces/Parser.html":{}}}],["deserialize(type",{"_index":2421,"title":{},"body":{"classes/ODataResponse.html":{}}}],["deserialize(value",{"_index":180,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["destroy",{"_index":1702,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["destroy(entity",{"_index":1716,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["destroy(options",{"_index":1914,"title":{},"body":{"classes/ODataModel.html":{}}}],["diego",{"_index":2963,"title":{},"body":{"license.html":{}}}],["directive",{"_index":2525,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["directive.startswith(max_age",{"_index":2519,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["directly",{"_index":119,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["distribute",{"_index":2984,"title":{},"body":{"license.html":{}}}],["document",{"_index":619,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.attributes",{"_index":627,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.getelementsbytagname(odatametadata.tag_data_services)[0",{"_index":638,"title":{},"body":{"classes/Field.html":{}}}],["documentation",{"_index":2873,"title":{},"body":{"index.html":{},"license.html":{}}}],["domparser",{"_index":618,"title":{},"body":{"classes/Field.html":{}}}],["done",{"_index":1318,"title":{},"body":{"classes/ODataCollection.html":{}}}],["down",{"_index":2218,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["duration",{"_index":3031,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dynamic",{"_index":2785,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2672,"title":{},"body":{"classes/ODataSettings.html":{}}}],["e.istypeof(type",{"_index":2578,"title":{},"body":{"classes/ODataSchema.html":{}}}],["e.name",{"_index":842,"title":{},"body":{"classes/ODataApi.html":{}}}],["e[0]}${value_separator}${e[1",{"_index":2372,"title":{},"body":{"classes/ODataResource.html":{}}}],["editlink",{"_index":1475,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["editlink(value",{"_index":90,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["edm_parsers",{"_index":760,"title":{},"body":{"classes/ODataApi.html":{}}}],["edms",{"_index":851,"title":{},"body":{"classes/ODataApi.html":{}}}],["edmx:dataservices",{"_index":532,"title":{},"body":{"classes/Field.html":{}}}],["edmx:edmx",{"_index":530,"title":{},"body":{"classes/Field.html":{}}}],["edmx:include",{"_index":536,"title":{},"body":{"classes/Field.html":{}}}],["edmx:includeannotations",{"_index":538,"title":{},"body":{"classes/Field.html":{}}}],["edmx:reference",{"_index":534,"title":{},"body":{"classes/Field.html":{}}}],["element",{"_index":637,"title":{},"body":{"classes/Field.html":{}}}],["empty",{"_index":1263,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["endline",{"_index":1060,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["endregion",{"_index":223,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ensure",{"_index":2235,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["entities",{"_index":202,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["entities'].indexof(options.responsetype",{"_index":2390,"title":{},"body":{"classes/ODataResource.html":{}}}],["entities(value",{"_index":73,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entity",{"_index":36,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlSchema.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["entity(\"cyyz\").get",{"_index":2906,"title":{},"body":{"index.html":{}}}],["entity(data",{"_index":1420,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["entity(key",{"_index":1719,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["entity(name",{"_index":2590,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["entity(value",{"_index":70,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitycontainer",{"_index":459,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["entitycontainerconfig",{"_index":207,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityContainer.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entitykey",{"_index":25,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entityschema",{"_index":1706,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["entityset",{"_index":34,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSettings.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["entitysetbyname",{"_index":2604,"title":{},"body":{"classes/ODataSettings.html":{}}}],["entitysetbyname(name",{"_index":2630,"title":{},"body":{"classes/ODataSettings.html":{}}}],["entitysetconfig",{"_index":209,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitySet.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entitysetfortype",{"_index":2605,"title":{},"body":{"classes/ODataSettings.html":{}}}],["entitysetfortype(type",{"_index":2632,"title":{},"body":{"classes/ODataSettings.html":{}}}],["entitysetpath",{"_index":240,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["entitysets",{"_index":208,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitysetschema",{"_index":1705,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["entitytype",{"_index":335,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/Field.html":{},"classes/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{}}}],["entitytypes",{"_index":460,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["entries",{"_index":1075,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataModel.html":{}}}],["entry",{"_index":1101,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["entry.lastread",{"_index":1122,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["entry.payload",{"_index":1118,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["enum",{"_index":348,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["enumerations",{"_index":2795,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumhelper",{"_index":1779,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["enumhelper.names(this.members",{"_index":1798,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["enumhelper.toname(this.members",{"_index":1796,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["enumhelper.tonames(this.members",{"_index":1791,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["enumhelper.tovalue(this.members",{"_index":1790,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["enumhelper.tovalues(this.members",{"_index":1788,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["enums",{"_index":200,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["enumtype",{"_index":544,"title":{},"body":{"classes/Field.html":{}}}],["enumtypebyname",{"_index":2606,"title":{},"body":{"classes/ODataSettings.html":{}}}],["enumtypebyname(name",{"_index":2634,"title":{},"body":{"classes/ODataSettings.html":{}}}],["enumtypeconfig",{"_index":201,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["enumtypefield",{"_index":60,"title":{"interfaces/EnumTypeField.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["enumtypefortype",{"_index":2607,"title":{},"body":{"classes/ODataSettings.html":{}}}],["enumtypefortype(type",{"_index":2636,"title":{},"body":{"classes/ODataSettings.html":{}}}],["enumtypes",{"_index":461,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["error",{"_index":154,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["error(\"batch",{"_index":1019,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["error(\"multiple",{"_index":2656,"title":{},"body":{"classes/ODataSettings.html":{}}}],["error(\"no",{"_index":1445,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{}}}],["error(\"not",{"_index":1327,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["error(\"the",{"_index":779,"title":{},"body":{"classes/ODataApi.html":{}}}],["error('odata",{"_index":661,"title":{},"body":{"classes/Field.html":{}}}],["error('unable",{"_index":655,"title":{},"body":{"classes/Field.html":{}}}],["error(`can't",{"_index":1287,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["error(`no",{"_index":2128,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataSettings.html":{},"classes/SegmentHandler.html":{}}}],["error.status",{"_index":1765,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["errorhandler",{"_index":192,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["escapeillegalchars",{"_index":2817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escapeillegalchars(string",{"_index":2844,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etag",{"_index":80,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["etag(value",{"_index":79,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["event",{"_index":3012,"title":{},"body":{"license.html":{}}}],["events",{"_index":1022,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["examples",{"_index":2866,"title":{},"body":{"index.html":{}}}],["exist",{"_index":2246,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["expand",{"_index":47,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["expandobject",{"_index":3033,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expandoptions",{"_index":3034,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expands",{"_index":2834,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandtype",{"_index":3035,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expired",{"_index":1119,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["express",{"_index":3003,"title":{},"body":{"license.html":{}}}],["extend",{"_index":321,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["extends",{"_index":170,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponse.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["extra",{"_index":784,"title":{},"body":{"classes/ODataApi.html":{}}}],["f",{"_index":1598,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataModel.html":{}}}],["f.collection",{"_index":1967,"title":{},"body":{"classes/ODataModel.html":{}}}],["f.configure(settings",{"_index":1614,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.deserialize(value[f.name",{"_index":1607,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.iscomplextype",{"_index":1959,"title":{},"body":{"classes/ODataModel.html":{}}}],["f.isnavigation",{"_index":1958,"title":{},"body":{"classes/ODataModel.html":{}}}],["f.key",{"_index":1632,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.name",{"_index":1605,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataModel.html":{},"classes/ODataStructuredType.html":{}}}],["f.navigation",{"_index":1616,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.nullable).map(f",{"_index":1626,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.resolve(attrs",{"_index":1635,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.serialize((value",{"_index":1610,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.tojsonschema((config",{"_index":1621,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.value",{"_index":1824,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["f]{12}$/.test(key",{"_index":2105,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["f]{4",{"_index":2104,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["f]{8",{"_index":2103,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["fa",{"_index":2102,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["factory",{"_index":1010,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["factory(client",{"_index":1011,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["false",{"_index":793,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataStructuredType.html":{}}}],["features",{"_index":2460,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["features.split(\";\").foreach(o",{"_index":2508,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["fetch",{"_index":107,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["fetch(options",{"_index":1239,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["fetchorcreate",{"_index":1703,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["fetchorcreate(entity",{"_index":1721,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["fetchpolicy",{"_index":103,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["field",{"_index":55,"title":{"classes/Field.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataModel.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["field(odatametadata.attribute_alias",{"_index":643,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_namespace",{"_index":642,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_uri",{"_index":631,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_version",{"_index":625,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_action",{"_index":648,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotation",{"_index":635,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotations",{"_index":652,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_complex_type",{"_index":645,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_container",{"_index":649,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_type",{"_index":646,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_enum_type",{"_index":644,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_function",{"_index":647,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include",{"_index":632,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include_annotations",{"_index":634,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_term",{"_index":651,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_type_definition",{"_index":650,"title":{},"body":{"classes/Field.html":{}}}],["field.annotations",{"_index":1547,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["field.collection",{"_index":1554,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{}}}],["field.default",{"_index":1548,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.field",{"_index":1561,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.isnavigation",{"_index":1946,"title":{},"body":{"classes/ODataModel.html":{}}}],["field.key",{"_index":1552,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.maxlength",{"_index":1550,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.name",{"_index":1949,"title":{},"body":{"classes/ODataModel.html":{}}}],["field.navigation",{"_index":1559,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataStructuredType.html":{}}}],["field.nullable",{"_index":1556,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.precision",{"_index":1563,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.ref",{"_index":1567,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.scale",{"_index":1565,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.type",{"_index":1546,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{}}}],["field.value",{"_index":1781,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["fieldnames",{"_index":669,"title":{},"body":{"classes/Field.html":{}}}],["fields",{"_index":212,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataModel.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["fields(opts",{"_index":2702,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["fields.find(f",{"_index":1956,"title":{},"body":{"classes/ODataModel.html":{}}}],["fieldtype",{"_index":515,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["fieldtype.attribute",{"_index":626,"title":{},"body":{"classes/Field.html":{}}}],["fieldtype.tag",{"_index":633,"title":{},"body":{"classes/Field.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["files",{"_index":2976,"title":{},"body":{"license.html":{}}}],["filter",{"_index":1957,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["filter(([key",{"_index":1978,"title":{},"body":{"classes/ODataModel.html":{}}}],["filter((value",{"_index":1993,"title":{},"body":{"classes/ODataModel.html":{}}}],["filter(f",{"_index":1604,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["filter(field",{"_index":1945,"title":{},"body":{"classes/ODataModel.html":{}}}],["filter(k",{"_index":2203,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["filter(key",{"_index":2180,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["filter(p",{"_index":1192,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["filter({location",{"_index":2912,"title":{},"body":{"index.html":{}}}],["filters",{"_index":2837,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filtertype",{"_index":3036,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["finally",{"_index":1029,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["find",{"_index":823,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataEntityParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/OptionHandler.html":{}}}],["find(e",{"_index":841,"title":{},"body":{"classes/ODataApi.html":{}}}],["find(name",{"_index":2070,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["find(predicate",{"_index":1645,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["findcallablebyname",{"_index":688,"title":{},"body":{"classes/ODataApi.html":{}}}],["findcallablebyname(name",{"_index":722,"title":{},"body":{"classes/ODataApi.html":{}}}],["findcallablefortype",{"_index":689,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findcallablefortype(type",{"_index":724,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findcollectionbyname",{"_index":690,"title":{},"body":{"classes/ODataApi.html":{}}}],["findcollectionbyname(name",{"_index":726,"title":{},"body":{"classes/ODataApi.html":{}}}],["findcollectionfortype",{"_index":691,"title":{},"body":{"classes/ODataApi.html":{}}}],["findcollectionfortype(type",{"_index":728,"title":{},"body":{"classes/ODataApi.html":{}}}],["findentitysetbyname",{"_index":692,"title":{},"body":{"classes/ODataApi.html":{}}}],["findentitysetbyname(name",{"_index":730,"title":{},"body":{"classes/ODataApi.html":{}}}],["findentitysetfortype",{"_index":693,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findentitysetfortype(type",{"_index":732,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findenumtypebyname",{"_index":694,"title":{},"body":{"classes/ODataApi.html":{}}}],["findenumtypebyname(name",{"_index":734,"title":{},"body":{"classes/ODataApi.html":{}}}],["findenumtypefortype",{"_index":695,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findenumtypefortype(type",{"_index":736,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findfield",{"_index":2699,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["findfield(name",{"_index":2705,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["findfieldbyname",{"_index":1808,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyname(name",{"_index":1813,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyvalue",{"_index":1809,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyvalue(value",{"_index":1815,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfortypes",{"_index":2608,"title":{},"body":{"classes/ODataSettings.html":{}}}],["findfortypes(types",{"_index":2638,"title":{},"body":{"classes/ODataSettings.html":{}}}],["findmodelbyname",{"_index":696,"title":{},"body":{"classes/ODataApi.html":{}}}],["findmodelbyname(name",{"_index":738,"title":{},"body":{"classes/ODataApi.html":{}}}],["findmodelfortype",{"_index":697,"title":{},"body":{"classes/ODataApi.html":{}}}],["findmodelfortype(type",{"_index":740,"title":{},"body":{"classes/ODataApi.html":{}}}],["findparser",{"_index":1676,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["findparser(predicate",{"_index":1649,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["findparserfortype",{"_index":698,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["findparserfortype(type",{"_index":742,"title":{},"body":{"classes/ODataApi.html":{}}}],["findschemafortype",{"_index":699,"title":{},"body":{"classes/ODataApi.html":{}}}],["findschemafortype(type",{"_index":744,"title":{},"body":{"classes/ODataApi.html":{}}}],["findstructuredtypebyname",{"_index":700,"title":{},"body":{"classes/ODataApi.html":{}}}],["findstructuredtypebyname(name",{"_index":746,"title":{},"body":{"classes/ODataApi.html":{}}}],["findstructuredtypefortype",{"_index":701,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findstructuredtypefortype(type",{"_index":748,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["first",{"_index":111,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataModel.html":{},"classes/ODataRequest.html":{},"classes/ODataSettings.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["fitness",{"_index":3008,"title":{},"body":{"license.html":{}}}],["flags",{"_index":210,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["fluent",{"_index":2858,"title":{},"body":{"index.html":{}}}],["following",{"_index":2992,"title":{},"body":{"license.html":{}}}],["foreach(callable",{"_index":2584,"title":{},"body":{"classes/ODataSchema.html":{}}}],["foreach(config",{"_index":2582,"title":{},"body":{"classes/ODataSchema.html":{}}}],["foreach(field",{"_index":1947,"title":{},"body":{"classes/ODataModel.html":{}}}],["format",{"_index":2169,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["forroot",{"_index":2035,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(...configs",{"_index":2049,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(configs",{"_index":2036,"title":{},"body":{"modules/ODataModule.html":{}}}],["found",{"_index":138,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSettings.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["free",{"_index":2969,"title":{},"body":{"license.html":{}}}],["friends",{"_index":2928,"title":{},"body":{"index.html":{}}}],["fromhttpresponse",{"_index":2415,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromhttpresponse(req",{"_index":2427,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromjson",{"_index":2416,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromjson(req",{"_index":2429,"title":{},"body":{"classes/ODataResponse.html":{}}}],["full",{"_index":162,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["func",{"_index":2097,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["func(this",{"_index":1028,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["function",{"_index":238,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["function(name",{"_index":1422,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["function(undefined",{"_index":2854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["functionimport",{"_index":566,"title":{},"body":{"classes/Field.html":{}}}],["functionimports",{"_index":322,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["functionname",{"_index":257,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["functions",{"_index":462,"title":{"miscellaneous/functions.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"miscellaneous/functions.html":{}}}],["functions(value",{"_index":82,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["furnished",{"_index":2991,"title":{},"body":{"license.html":{}}}],["generated",{"_index":2938,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2864,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":185,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["get(options",{"_index":1363,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["get(path",{"_index":2243,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["get({withcount",{"_index":2902,"title":{},"body":{"index.html":{}}}],["get_config",{"_index":1257,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["get_query",{"_index":1261,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["get_segment",{"_index":1259,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["getapi",{"_index":1727,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataSingletonService.html":{}}}],["getboundarydelimiter",{"_index":2818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getboundarydelimiter(contenttype",{"_index":949,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["getboundaryend",{"_index":2820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getboundaryend(batchboundary",{"_index":1061,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["getboundaryend(boundarydelimiter",{"_index":957,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["getcontext",{"_index":1872,"title":{},"body":{"classes/ODataMeta.html":{}}}],["getcount",{"_index":1430,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getdeltalink",{"_index":1434,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["geteditlink",{"_index":1667,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getentityschema",{"_index":1731,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["getentitysets",{"_index":2544,"title":{},"body":{"classes/ODataSchema.html":{}}}],["getentitysetschema",{"_index":1729,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["getetag",{"_index":1660,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getfunctions",{"_index":1442,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{}}}],["getheadervalue",{"_index":2821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getheadervalue(header",{"_index":946,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["gethelper",{"_index":870,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["getid",{"_index":1658,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediacontenttype",{"_index":1673,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediaeditlink",{"_index":1671,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediaetag",{"_index":1662,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediareadlink",{"_index":1669,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmetadataetag",{"_index":1664,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmodels",{"_index":1253,"title":{},"body":{"classes/ODataCollection.html":{}}}],["getname",{"_index":2760,"title":{},"body":{"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["getnavigationproperty",{"_index":1895,"title":{},"body":{"classes/ODataModel.html":{}}}],["getnavigationproperty(field",{"_index":1917,"title":{},"body":{"classes/ODataModel.html":{}}}],["getnextlink",{"_index":1432,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getobjects(parentelement",{"_index":668,"title":{},"body":{"classes/Field.html":{}}}],["getodv",{"_index":1870,"title":{},"body":{"classes/ODataMeta.html":{}}}],["getoptions",{"_index":1145,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["getpath",{"_index":2774,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["getpathwithparams",{"_index":2275,"title":{},"body":{"classes/ODataRequest.html":{}}}],["getproperties",{"_index":1874,"title":{},"body":{"classes/ODataMeta.html":{}}}],["getreadlink",{"_index":1428,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{}}}],["getresponse",{"_index":1078,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["getresponse(req",{"_index":1092,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["getskip",{"_index":1438,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getskiptoken",{"_index":1440,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getstate",{"_index":1255,"title":{},"body":{"classes/ODataCollection.html":{}}}],["getstringcollectionclause",{"_index":2822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getstringcollectionclause(lambdaparameter",{"_index":2845,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getstructuredschema",{"_index":2694,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["getting",{"_index":2855,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettop",{"_index":1436,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["gettype",{"_index":1656,"title":{},"body":{"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/SegmentHandler.html":{}}}],["geturl",{"_index":2277,"title":{},"body":{"classes/ODataRequest.html":{}}}],["geturlwithparams",{"_index":2279,"title":{},"body":{"classes/ODataRequest.html":{}}}],["glast",{"_index":937,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["granted",{"_index":2968,"title":{},"body":{"license.html":{}}}],["groupby",{"_index":2839,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guid",{"_index":2085,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["guid(key",{"_index":2106,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["haaster",{"_index":2965,"title":{},"body":{"license.html":{}}}],["handler",{"_index":775,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["handlerequest",{"_index":1079,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handlerequest(req",{"_index":1094,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handleresponse(response",{"_index":1056,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["handlevalue",{"_index":2823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handlevalue(value",{"_index":2849,"title":{},"body":{"miscellaneous/functions.html":{}}}],["has(name",{"_index":2072,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["has(path",{"_index":2253,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["hashmap",{"_index":2223,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["hasstream",{"_index":315,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["header",{"_index":2282,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"miscellaneous/functions.html":{}}}],["header.split(';')[0].trim",{"_index":947,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["headers",{"_index":100,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["headers.getall(key",{"_index":973,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["headers.keys().map(key",{"_index":972,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["helper",{"_index":171,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["helpers",{"_index":874,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["helpers/odata",{"_index":2506,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["here",{"_index":852,"title":{},"body":{"classes/ODataApi.html":{},"index.html":{}}}],["hereby",{"_index":2967,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3014,"title":{},"body":{"license.html":{}}}],["htmlcollection",{"_index":672,"title":{},"body":{"classes/Field.html":{}}}],["http",{"_index":875,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["http.mergehttpheaders(this.api.options.headers",{"_index":2314,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http.mergehttpparams(params",{"_index":2387,"title":{},"body":{"classes/ODataResource.html":{}}}],["http.mergehttpparams(this.api.options.params",{"_index":2316,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http11",{"_index":917,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["httpclientmodule",{"_index":2039,"title":{},"body":{"modules/ODataModule.html":{}}}],["httpentitiesoptions",{"_index":1269,"title":{},"body":{"classes/ODataCollection.html":{},"miscellaneous/typealiases.html":{}}}],["httpentityoptions",{"_index":1937,"title":{},"body":{"classes/ODataModel.html":{},"miscellaneous/typealiases.html":{}}}],["httperrorresponse",{"_index":20,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["httpevent",{"_index":754,"title":{},"body":{"classes/ODataApi.html":{}}}],["httpeventtype",{"_index":755,"title":{},"body":{"classes/ODataApi.html":{}}}],["httpeventtype.response",{"_index":818,"title":{},"body":{"classes/ODataApi.html":{}}}],["httpheaders",{"_index":913,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["httpheaders(json.headers",{"_index":2446,"title":{},"body":{"classes/ODataResponse.html":{}}}],["httpoptions",{"_index":1268,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"miscellaneous/typealiases.html":{}}}],["httpparams",{"_index":2267,"title":{},"body":{"classes/ODataRequest.html":{}}}],["httppropertyoptions",{"_index":3038,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["httpresponse",{"_index":914,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["https://diegomvh.github.io/angular",{"_index":2954,"title":{},"body":{"index.html":{}}}],["https://github.com/adamhalasz/uniqid",{"_index":935,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["https://github.com/diegomvh/angular",{"_index":2957,"title":{},"body":{"index.html":{}}}],["https://medium.com/@galen.corey/understanding",{"_index":106,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["https://services.odata.org/v4/(s(4m0tuxtnhcfctl4gzem3gr10))/trippinservicerw",{"_index":2878,"title":{},"body":{"index.html":{}}}],["id",{"_index":78,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["id(value",{"_index":77,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ieee754",{"_index":2307,"title":{},"body":{"classes/ODataRequest.html":{}}}],["ieee754compatible",{"_index":102,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["if_match_header",{"_index":2281,"title":{},"body":{"classes/ODataRequest.html":{}}}],["implements",{"_index":859,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponseOptions.html":{}}}],["implied",{"_index":3004,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["imports",{"_index":2048,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["include_etag",{"_index":2710,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["include_navigation",{"_index":2704,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["include_parents",{"_index":1944,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataStructuredType.html":{}}}],["includeannotations",{"_index":381,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["included",{"_index":2997,"title":{},"body":{"license.html":{}}}],["includeinservicedocument",{"_index":258,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["includes",{"_index":380,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["including",{"_index":2979,"title":{},"body":{"license.html":{}}}],["incorporates",{"_index":2944,"title":{},"body":{"index.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["inherited",{"_index":291,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataValueResource.html":{}}}],["init",{"_index":1086,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.api",{"_index":2287,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.body",{"_index":2288,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.etag",{"_index":2303,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.fetchpolicy",{"_index":2297,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.headers",{"_index":2315,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.method",{"_index":2284,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.name",{"_index":1852,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["init.observe",{"_index":2294,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.params",{"_index":2317,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.reportprogress",{"_index":2290,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.resource",{"_index":2286,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.resource.pathandparams",{"_index":2301,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.responsetype",{"_index":2292,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.storage",{"_index":1853,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["init.withcredentials",{"_index":2295,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init?.timeout",{"_index":1112,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["inject",{"_index":2880,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":2586,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"injectables/ODataServiceFactory.html":{}}}],["injectables",{"_index":2587,"title":{},"body":{"injectables/ODataServiceFactory.html":{},"overview.html":{}}}],["inmutable",{"_index":2911,"title":{},"body":{"index.html":{}}}],["install",{"_index":2874,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2871,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":971,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataResponse.html":{}}}],["int",{"_index":12,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"overview.html":{}}}],["isbound",{"_index":241,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["iscacheable",{"_index":1080,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["iscacheable(req",{"_index":1096,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["iscomplextype",{"_index":1511,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["iscomposable",{"_index":255,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["isexpired",{"_index":1081,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isexpired(entry",{"_index":1098,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isflags",{"_index":354,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["isnamespaceof",{"_index":2527,"title":{},"body":{"classes/ODataSchema.html":{}}}],["isnamespaceof(type",{"_index":2541,"title":{},"body":{"classes/ODataSchema.html":{}}}],["isnavigation",{"_index":1512,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["istypeof",{"_index":1134,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["istypeof(type",{"_index":1143,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["item",{"_index":2189,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["items",{"_index":1587,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["iterable",{"_index":1202,"title":{},"body":{"classes/ODataCollection.html":{}}}],["iteratorresult",{"_index":1317,"title":{},"body":{"classes/ODataCollection.html":{}}}],["join",{"_index":974,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["join(param_separator",{"_index":2373,"title":{},"body":{"classes/ODataResource.html":{}}}],["json",{"_index":37,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["json.body",{"_index":2445,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.options",{"_index":2117,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.status",{"_index":2447,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.statustext",{"_index":2448,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.stringify(array.from(responses.entries",{"_index":1859,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["json.url",{"_index":2449,"title":{},"body":{"classes/ODataResponse.html":{}}}],["jsonschemaconfig",{"_index":43,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpand",{"_index":42,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpandoptions",{"_index":44,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaorder",{"_index":41,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaselect",{"_index":39,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["k",{"_index":1960,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["k.trim",{"_index":2510,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["keep",{"_index":2149,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["keep(...names",{"_index":2201,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["keep(names",{"_index":2156,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["key",{"_index":51,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["key.startswith(\"_",{"_index":1979,"title":{},"body":{"classes/ODataModel.html":{}}}],["keyof",{"_index":28,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["keys",{"_index":1630,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["key}=${value",{"_index":2193,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["kind",{"_index":3002,"title":{},"body":{"license.html":{}}}],["lambdaparameter",{"_index":2848,"title":{},"body":{"miscellaneous/functions.html":{}}}],["last",{"_index":941,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["lastread",{"_index":1090,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["liability",{"_index":3018,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3015,"title":{},"body":{"license.html":{}}}],["library",{"_index":2867,"title":{},"body":{"index.html":{}}}],["license",{"_index":2959,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":2980,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3005,"title":{},"body":{"license.html":{}}}],["lines",{"_index":1062,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["literal",{"_index":227,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/typealiases.html":{}}}],["m",{"_index":1224,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{}}}],["mainly",{"_index":2943,"title":{},"body":{"index.html":{}}}],["make",{"_index":125,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["makes",{"_index":147,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["map",{"_index":758,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{}}}],["map(([key",{"_index":1955,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["map(([name",{"_index":1189,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{}}}],["map((res",{"_index":816,"title":{},"body":{"classes/ODataApi.html":{}}}],["map((resp",{"_index":1034,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["map(({entities",{"_index":1323,"title":{},"body":{"classes/ODataCollection.html":{}}}],["map(({entity",{"_index":1987,"title":{},"body":{"classes/ODataModel.html":{}}}],["map(({name",{"_index":2108,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["map(annot",{"_index":1507,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["map(config",{"_index":1505,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{}}}],["map(container",{"_index":2570,"title":{},"body":{"classes/ODataSchema.html":{}}}],["map(e",{"_index":2371,"title":{},"body":{"classes/ODataResource.html":{}}}],["map(entities",{"_index":1334,"title":{},"body":{"classes/ODataCollection.html":{}}}],["map(f",{"_index":1620,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["map(name",{"_index":2451,"title":{},"body":{"classes/ODataResponse.html":{}}}],["map(pathsegmentsbuilder",{"_index":2109,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["map(schema",{"_index":806,"title":{},"body":{"classes/ODataApi.html":{}}}],["map>(json.parse(storage.getitem(name",{"_index":1855,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["mapfields",{"_index":1810,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapfields(mapper",{"_index":1818,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapper",{"_index":1820,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["match",{"_index":1492,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match(/[&?]{1}\\$skip=(\\d",{"_index":1496,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match(/[&?]{1}\\$skiptoken=([\\d\\w\\s",{"_index":1497,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match(/[&?]{1}\\$top=(\\d",{"_index":1494,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match[1",{"_index":1498,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["matching",{"_index":225,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["math.ceil(this._state.records",{"_index":1305,"title":{},"body":{"classes/ODataCollection.html":{}}}],["max",{"_index":2804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["max_age",{"_index":2439,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["maxage",{"_index":177,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["maxlength",{"_index":50,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediacontenttype",{"_index":1481,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediacontenttype(value",{"_index":92,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediaeditlink",{"_index":1479,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediaeditlink(value",{"_index":91,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediaetag",{"_index":1470,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediaetag(value",{"_index":84,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediareadlink",{"_index":1477,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediareadlink(value",{"_index":89,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["member",{"_index":213,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["members",{"_index":211,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["merchantability",{"_index":3007,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2554,"title":{},"body":{"classes/ODataSchema.html":{},"license.html":{}}}],["meta",{"_index":1278,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["meta.annotations",{"_index":1760,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["meta.context",{"_index":2479,"title":{},"body":{"classes/ODataResponse.html":{}}}],["meta.data(payload",{"_index":2482,"title":{},"body":{"classes/ODataResponse.html":{}}}],["meta.etag",{"_index":2001,"title":{},"body":{"classes/ODataModel.html":{}}}],["metadata",{"_index":32,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["metadataetag",{"_index":1472,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["metadataetag(value",{"_index":85,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["metadataurl",{"_index":685,"title":{},"body":{"classes/ODataApi.html":{}}}],["method",{"_index":1039,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["methods",{"_index":228,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["min",{"_index":2803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":161,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":2794,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["missing",{"_index":123,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mit",{"_index":2960,"title":{},"body":{"license.html":{}}}],["model",{"_index":216,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["model(entity",{"_index":2363,"title":{},"body":{"classes/ODataResource.html":{}}}],["model.destroy",{"_index":1340,"title":{},"body":{"classes/ODataCollection.html":{}}}],["model.save",{"_index":1336,"title":{},"body":{"classes/ODataCollection.html":{}}}],["model.toentity",{"_index":1310,"title":{},"body":{"classes/ODataCollection.html":{}}}],["model?.target",{"_index":2027,"title":{},"body":{"classes/ODataModel.html":{}}}],["modelbyname",{"_index":2609,"title":{},"body":{"classes/ODataSettings.html":{}}}],["modelbyname(name",{"_index":2640,"title":{},"body":{"classes/ODataSettings.html":{}}}],["modelfortype",{"_index":2610,"title":{},"body":{"classes/ODataSettings.html":{}}}],["modelfortype(type",{"_index":2642,"title":{},"body":{"classes/ODataSettings.html":{}}}],["models",{"_index":1214,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{}}}],["models.length",{"_index":1319,"title":{},"body":{"classes/ODataCollection.html":{}}}],["models/collection",{"_index":1733,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["models/index",{"_index":769,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataResource.html":{}}}],["models/model",{"_index":1734,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["models[pointer",{"_index":1320,"title":{},"body":{"classes/ODataCollection.html":{}}}],["modify",{"_index":2982,"title":{},"body":{"license.html":{}}}],["module",{"_index":2029,"title":{"modules/ODataModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":2031,"title":{"modules.html":{}},"body":{"modules/ODataModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":2038,"title":{},"body":{"modules/ODataModule.html":{}}}],["more",{"_index":2673,"title":{},"body":{"classes/ODataSettings.html":{}}}],["multipart_mixed",{"_index":923,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["multipart_mixed_boundary",{"_index":922,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["multipart_mixed_boundary}${changesetboundary",{"_index":1046,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["mutable",{"_index":2917,"title":{},"body":{"index.html":{}}}],["mutate",{"_index":1335,"title":{},"body":{"classes/ODataCollection.html":{}}}],["n",{"_index":934,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["name",{"_index":71,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:string",{"_index":2720,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["namednodemap",{"_index":660,"title":{},"body":{"classes/Field.html":{}}}],["names",{"_index":1158,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{}}}],["names.foreach(name",{"_index":2199,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["names.indexof(k",{"_index":2204,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["names.indexof(type",{"_index":1162,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["names.join",{"_index":1795,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["names.map(name",{"_index":1793,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["names.push(`${this.alias}.${this.name",{"_index":1601,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["names.push(`${this.schema.alias}.${this.name",{"_index":1161,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["namespace",{"_index":198,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["namespace}.${config.name",{"_index":1184,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{}}}],["nav",{"_index":2019,"title":{},"body":{"classes/ODataModel.html":{}}}],["nav.ascollection(value",{"_index":2021,"title":{},"body":{"classes/ODataModel.html":{}}}],["nav.asmodel(value",{"_index":2023,"title":{},"body":{"classes/ODataModel.html":{}}}],["navigation",{"_index":54,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["navigationproperties",{"_index":299,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["navigationproperty",{"_index":554,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["navigationpropertybinding",{"_index":336,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["navigationpropertybindings",{"_index":481,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["needs",{"_index":1642,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataSettings.html":{}}}],["nestedexpandoptions",{"_index":3039,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["network",{"_index":126,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["never",{"_index":756,"title":{},"body":{"classes/ODataApi.html":{}}}],["new",{"_index":144,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["new(...params",{"_index":217,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["newentity",{"_index":1758,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["newline",{"_index":919,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["newline_regexp",{"_index":931,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["next",{"_index":1211,"title":{},"body":{"classes/ODataCollection.html":{}}}],["next(options",{"_index":1241,"title":{},"body":{"classes/ODataCollection.html":{}}}],["nextlink",{"_index":1409,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["nextlink(value",{"_index":87,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ngmodule",{"_index":2040,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["none",{"_index":163,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["none_parser",{"_index":1179,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{}}}],["noninfringement",{"_index":3011,"title":{},"body":{"license.html":{}}}],["note",{"_index":104,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["notice",{"_index":2995,"title":{},"body":{"license.html":{}}}],["now",{"_index":938,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["now().tostring(36",{"_index":945,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["npm",{"_index":2875,"title":{},"body":{"index.html":{}}}],["null",{"_index":664,"title":{},"body":{"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{}}}],["nullable",{"_index":53,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["number(directive.split(\"=\")[1",{"_index":2520,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["number(match[1",{"_index":1495,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["number(statusparts[1",{"_index":1072,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["number.isnan(maxage",{"_index":2521,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["o",{"_index":2206,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["o.split",{"_index":2509,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["obj",{"_index":2228,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object",{"_index":1414,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{}}}],["object.assign",{"_index":1191,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataValueResource.html":{}}}],["object.assign(acc",{"_index":1196,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["object.assign(acc.parameters",{"_index":2563,"title":{},"body":{"classes/ODataSchema.html":{}}}],["object.assign(attrs",{"_index":1962,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.assign(entity",{"_index":1759,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["object.assign(obj",{"_index":2255,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.assign(options",{"_index":2409,"title":{},"body":{"classes/ODataResource.html":{}}}],["object.assign(params",{"_index":2191,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{}}}],["object.assign(this",{"_index":682,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataCallableParser.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{}}}],["object.assign({etag",{"_index":1756,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["object.assign({field",{"_index":1580,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["object.assign({responsetype",{"_index":1326,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataModel.html":{}}}],["object.defineproperty(this",{"_index":1948,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries",{"_index":1976,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(config.fields",{"_index":1597,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["object.entries(config.parameters",{"_index":1188,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["object.entries(entity",{"_index":1954,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(params",{"_index":2370,"title":{},"body":{"classes/ODataResource.html":{}}}],["object.entries(this",{"_index":1977,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(this._relations).reduce((acc",{"_index":1980,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(this.params",{"_index":2192,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(this.options",{"_index":2202,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(value",{"_index":2722,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["object.values(key",{"_index":1636,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["object.values(this._relations",{"_index":1992,"title":{},"body":{"classes/ODataModel.html":{}}}],["objects",{"_index":670,"title":{},"body":{"classes/Field.html":{}}}],["obs",{"_index":1331,"title":{},"body":{"classes/ODataCollection.html":{}}}],["obs$.pipe",{"_index":1333,"title":{},"body":{"classes/ODataCollection.html":{}}}],["obs$.pipe(map",{"_index":1339,"title":{},"body":{"classes/ODataCollection.html":{}}}],["observable",{"_index":22,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataSettings.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["observe",{"_index":1024,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["obtaining",{"_index":2972,"title":{},"body":{"license.html":{}}}],["odata",{"_index":1749,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResponseOptions.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["odata.etag(entity",{"_index":1751,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata.metadata",{"_index":2511,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata.streaming",{"_index":2513,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/docs",{"_index":2955,"title":{},"body":{"index.html":{}}}],["odata/src/lib/api.ts",{"_index":684,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:101",{"_index":741,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:105",{"_index":729,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:112",{"_index":735,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:117",{"_index":747,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:122",{"_index":723,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:127",{"_index":731,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:133",{"_index":739,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:138",{"_index":727,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:145",{"_index":743,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:15",{"_index":715,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:16",{"_index":717,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:17",{"_index":710,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:18",{"_index":711,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:19",{"_index":718,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:20",{"_index":708,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:21",{"_index":707,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:23",{"_index":713,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:25",{"_index":706,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:27",{"_index":709,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:29",{"_index":714,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:31",{"_index":703,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:54",{"_index":720,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:61",{"_index":752,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:76",{"_index":745,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:84",{"_index":737,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:88",{"_index":749,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:92",{"_index":725,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:96",{"_index":733,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/cache/cache.ts",{"_index":1074,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["odata/src/lib/cache/cache.ts:14",{"_index":1087,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:15",{"_index":1085,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:20",{"_index":1093,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:21",{"_index":1104,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:23",{"_index":1089,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:31",{"_index":1102,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:41",{"_index":1091,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:46",{"_index":1105,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:55",{"_index":1100,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:59",{"_index":1097,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:63",{"_index":1095,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/memory.ts",{"_index":1826,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:12",{"_index":1830,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:3",{"_index":1827,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:8",{"_index":1831,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/storage.ts",{"_index":1846,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odata/src/lib/cache/storage.ts:12",{"_index":1847,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:23",{"_index":1849,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:27",{"_index":1848,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/client.ts",{"_index":2829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["odata/src/lib/models/collection.ts",{"_index":1201,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:103",{"_index":1237,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:114",{"_index":1252,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:128",{"_index":1240,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:144",{"_index":1242,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:156",{"_index":1234,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:170",{"_index":1233,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:18",{"_index":1226,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:183",{"_index":1249,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:19",{"_index":1223,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:197",{"_index":1238,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:201",{"_index":1258,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:207",{"_index":1260,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:21",{"_index":1225,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:213",{"_index":1262,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:22",{"_index":1254,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:220",{"_index":1231,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:227",{"_index":1229,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:26",{"_index":1227,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:35",{"_index":1256,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:37",{"_index":1220,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:48",{"_index":1236,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:55",{"_index":1250,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:59",{"_index":1244,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:70",{"_index":1247,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:99",{"_index":1251,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/model.ts",{"_index":1890,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:103",{"_index":1929,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:120",{"_index":1911,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:130",{"_index":1916,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:153",{"_index":1913,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:162",{"_index":1931,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:185",{"_index":1924,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:193",{"_index":1915,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:20",{"_index":1902,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:203",{"_index":1932,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:21",{"_index":1899,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:212",{"_index":1933,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:22",{"_index":1900,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:223",{"_index":1934,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:23",{"_index":1901,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:235",{"_index":1905,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:247",{"_index":1907,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:259",{"_index":1903,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:26",{"_index":1898,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:271",{"_index":1909,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:282",{"_index":1918,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:296",{"_index":1927,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:38",{"_index":1910,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:62",{"_index":1928,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:66",{"_index":1920,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:96",{"_index":1922,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/module.ts",{"_index":2032,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["odata/src/lib/module.ts:19",{"_index":2037,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata/src/lib/options.ts",{"_index":858,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:10",{"_index":862,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:11",{"_index":867,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:13",{"_index":866,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:14",{"_index":863,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:15",{"_index":861,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:28",{"_index":871,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:6",{"_index":869,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:7",{"_index":865,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:8",{"_index":868,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:9",{"_index":864,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/parsers/callable.ts",{"_index":1165,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:10",{"_index":2059,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:11",{"_index":2058,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:12",{"_index":2056,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:13",{"_index":2055,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:23",{"_index":2061,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:28",{"_index":2062,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:32",{"_index":2060,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:38",{"_index":1169,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:39",{"_index":1173,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:40",{"_index":1172,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:41",{"_index":1171,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:42",{"_index":1168,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:54",{"_index":1175,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:59",{"_index":1178,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:66",{"_index":1174,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:9",{"_index":2057,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/edm.ts",{"_index":3045,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/parsers/entity.ts",{"_index":1510,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:10",{"_index":1521,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:108",{"_index":1534,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:11",{"_index":1528,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:112",{"_index":1533,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:118",{"_index":1683,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:119",{"_index":1684,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:12",{"_index":1524,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:120",{"_index":1680,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:121",{"_index":1681,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:122",{"_index":1685,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:123",{"_index":1682,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:124",{"_index":1679,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:13",{"_index":1517,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:136",{"_index":1692,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:14",{"_index":1520,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:144",{"_index":1687,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:15",{"_index":1519,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:154",{"_index":1695,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:16",{"_index":1516,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:163",{"_index":1686,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:17",{"_index":1523,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:173",{"_index":1696,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:18",{"_index":1522,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:187",{"_index":1697,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:19",{"_index":1518,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:194",{"_index":1693,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:199",{"_index":1694,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:20",{"_index":1525,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:21",{"_index":1527,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:214",{"_index":1691,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:218",{"_index":1688,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:22",{"_index":1526,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:224",{"_index":1690,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:23",{"_index":1515,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:41",{"_index":1530,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:45",{"_index":1539,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:50",{"_index":1537,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:58",{"_index":1532,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:69",{"_index":1542,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:77",{"_index":1540,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:87",{"_index":1531,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:92",{"_index":1544,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/enum.ts",{"_index":1774,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:13",{"_index":1778,"title":{},"body":{"classes/ODataEnumFieldParser.html":{}}}],["odata/src/lib/parsers/enum.ts:19",{"_index":1802,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:20",{"_index":1803,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:21",{"_index":1800,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:22",{"_index":1801,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:23",{"_index":1799,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:35",{"_index":1804,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:45",{"_index":1805,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:5",{"_index":1776,"title":{},"body":{"classes/ODataEnumFieldParser.html":{}}}],["odata/src/lib/parsers/enum.ts:6",{"_index":1777,"title":{},"body":{"classes/ODataEnumFieldParser.html":{}}}],["odata/src/lib/parsers/enum.ts:61",{"_index":1806,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:7",{"_index":1775,"title":{},"body":{"classes/ODataEnumFieldParser.html":{}}}],["odata/src/lib/resources/builder.ts",{"_index":2801,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/path",{"_index":2063,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/query",{"_index":2146,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/request.ts",{"_index":2256,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:10",{"_index":2262,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:11",{"_index":2266,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:12",{"_index":2270,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:13",{"_index":2274,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:14",{"_index":2273,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:15",{"_index":2263,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:16",{"_index":2264,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:17",{"_index":2268,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:18",{"_index":2269,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:19",{"_index":2260,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:71",{"_index":2276,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:79",{"_index":2278,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:8",{"_index":2265,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:83",{"_index":2280,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:9",{"_index":2261,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/resource.ts",{"_index":2322,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:102",{"_index":2329,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:104",{"_index":2337,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:118",{"_index":2338,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:125",{"_index":2326,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:130",{"_index":2336,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:196",{"_index":2331,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:203",{"_index":2334,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:210",{"_index":2335,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:218",{"_index":2332,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:226",{"_index":2330,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:28",{"_index":2324,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:29",{"_index":2325,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:30",{"_index":2323,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:45",{"_index":2340,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:53",{"_index":2341,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:58",{"_index":2342,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:64",{"_index":2333,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:75",{"_index":2328,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:84",{"_index":2327,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:94",{"_index":2339,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/responses/csdl/csdl",{"_index":237,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["odata/src/lib/resources/responses/meta.ts",{"_index":1403,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:100",{"_index":1666,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:104",{"_index":1668,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:108",{"_index":1670,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:11",{"_index":1862,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:112",{"_index":1672,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:116",{"_index":1674,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:120",{"_index":1651,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:121",{"_index":1675,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:128",{"_index":1655,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:134",{"_index":1417,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:138",{"_index":1419,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:142",{"_index":1421,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:146",{"_index":1429,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:150",{"_index":1431,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:154",{"_index":1433,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:158",{"_index":1435,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:162",{"_index":1437,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:167",{"_index":1439,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:172",{"_index":1441,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:177",{"_index":1411,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:178",{"_index":1443,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:185",{"_index":1423,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:28",{"_index":1863,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:29",{"_index":1873,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:36",{"_index":1864,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:37",{"_index":1875,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:44",{"_index":1869,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:49",{"_index":1867,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:5",{"_index":1865,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:50",{"_index":1868,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:54",{"_index":2143,"title":{},"body":{"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:58",{"_index":2144,"title":{},"body":{"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:6",{"_index":1866,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:62",{"_index":2145,"title":{},"body":{"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:68",{"_index":1653,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:7",{"_index":1871,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:72",{"_index":1654,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:76",{"_index":1652,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:80",{"_index":1657,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:84",{"_index":1659,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:88",{"_index":1661,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:92",{"_index":1663,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:96",{"_index":1665,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/metadata.ts",{"_index":514,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:20",{"_index":516,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:21",{"_index":517,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/options.ts",{"_index":2485,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:10",{"_index":2494,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:11",{"_index":2491,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:13",{"_index":2490,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:14",{"_index":2489,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:23",{"_index":2503,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:27",{"_index":2496,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:31",{"_index":2500,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:48",{"_index":2502,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:54",{"_index":2498,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:6",{"_index":2495,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:7",{"_index":2493,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:9",{"_index":2492,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/response.ts",{"_index":2413,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:103",{"_index":2422,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:112",{"_index":2425,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:123",{"_index":2423,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:134",{"_index":2432,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:14",{"_index":2420,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:145",{"_index":2435,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:15",{"_index":2417,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:31",{"_index":2428,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:43",{"_index":2430,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:61",{"_index":2434,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:73",{"_index":2419,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:74",{"_index":2436,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:95",{"_index":2431,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/types.ts",{"_index":3047,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/types/batch.ts",{"_index":892,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["odata/src/lib/resources/types/batch.ts:135",{"_index":902,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:49",{"_index":898,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:50",{"_index":899,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:55",{"_index":906,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:73",{"_index":905,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/count.ts",{"_index":1350,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:12",{"_index":1362,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:18",{"_index":1361,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:24",{"_index":1364,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts",{"_index":1877,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:13",{"_index":1878,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:20",{"_index":1879,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:25",{"_index":1880,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:33",{"_index":1882,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:39",{"_index":1881,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/options.ts",{"_index":3046,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/types/value.ts",{"_index":2728,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:12",{"_index":2734,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:20",{"_index":2733,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:26",{"_index":2730,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:32",{"_index":2732,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:38",{"_index":2735,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/schema/annotation.ts",{"_index":676,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/annotation.ts:4",{"_index":678,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/callable.ts",{"_index":1133,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:10",{"_index":1137,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:11",{"_index":1135,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:22",{"_index":1144,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:29",{"_index":1146,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:33",{"_index":1142,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:6",{"_index":1141,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:7",{"_index":1138,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:8",{"_index":1140,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:9",{"_index":1136,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/entity",{"_index":1500,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{}}}],["odata/src/lib/schema/enum",{"_index":1807,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["odata/src/lib/schema/schema.ts",{"_index":2526,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:11",{"_index":2530,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:12",{"_index":2535,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:13",{"_index":2529,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:14",{"_index":2534,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:15",{"_index":2533,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:16",{"_index":2531,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:17",{"_index":2532,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:18",{"_index":2528,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:43",{"_index":2542,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:47",{"_index":2543,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:51",{"_index":2545,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:58",{"_index":2539,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:62",{"_index":2540,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:66",{"_index":2537,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:70",{"_index":2538,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:75",{"_index":2536,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/structured",{"_index":2698,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["odata/src/lib/services/entity.ts",{"_index":1699,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:10",{"_index":1707,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:13",{"_index":1718,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:17",{"_index":1720,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:23",{"_index":1711,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:24",{"_index":1712,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:25",{"_index":1713,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:34",{"_index":1728,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:39",{"_index":1730,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:44",{"_index":1732,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:50",{"_index":1715,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:56",{"_index":1726,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:67",{"_index":1709,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:78",{"_index":1717,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:88",{"_index":1722,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:98",{"_index":1724,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/factory.ts",{"_index":2588,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:10",{"_index":2591,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:15",{"_index":2593,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:7",{"_index":2589,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/singleton.ts",{"_index":2686,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:13",{"_index":2689,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:18",{"_index":2692,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:23",{"_index":2693,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:28",{"_index":2695,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:5",{"_index":2688,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:8",{"_index":2690,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/settings.ts",{"_index":2595,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:105",{"_index":2627,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:114",{"_index":2635,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:123",{"_index":2647,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:132",{"_index":2621,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:141",{"_index":2631,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:150",{"_index":2641,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:159",{"_index":2625,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:24",{"_index":2628,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:28",{"_index":2629,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:32",{"_index":2617,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:39",{"_index":2639,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:43",{"_index":2619,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:51",{"_index":2637,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:60",{"_index":2649,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:69",{"_index":2623,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:78",{"_index":2633,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:87",{"_index":2645,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:9",{"_index":2615,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:96",{"_index":2643,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/types.ts",{"_index":7,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/types.ts:158",{"_index":2762,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:159",{"_index":2763,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:163",{"_index":233,"title":{},"body":{"interfaces/Cache.html":{}}}],["odata/src/lib/types.ts:164",{"_index":231,"title":{},"body":{"interfaces/Cache.html":{}}}],["odata/wiki",{"_index":2958,"title":{},"body":{"index.html":{}}}],["odata_annotation_prefix",{"_index":63,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_configurations",{"_index":2044,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata_context",{"_index":68,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_count",{"_index":66,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_etag",{"_index":67,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["odata_function_prefix",{"_index":64,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_id",{"_index":65,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_media_etag",{"_index":69,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_version",{"_index":924,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata_version_headers",{"_index":2437,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata_version_headers.indexof(k",{"_index":2465,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataannotation",{"_index":675,"title":{"classes/ODataAnnotation.html":{}},"body":{"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odataannotation(annot",{"_index":1508,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odataapi",{"_index":683,"title":{"classes/ODataApi.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["odataapi(config",{"_index":2653,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odataapioptions",{"_index":712,"title":{"classes/ODataApiOptions.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{}}}],["odataapioptions(object.assign({version",{"_index":797,"title":{},"body":{"classes/ODataApi.html":{}}}],["odatabatchrequest",{"_index":891,"title":{"classes/ODataBatchRequest.html":{}},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchrequest(req",{"_index":1026,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource",{"_index":995,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource(client",{"_index":1013,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource(this.client",{"_index":1008,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatacache",{"_index":705,"title":{"classes/ODataCache.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatacache:14",{"_index":1829,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:15",{"_index":1828,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:20",{"_index":1834,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:21",{"_index":1839,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:23",{"_index":1832,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:31",{"_index":1838,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:41",{"_index":1833,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:46",{"_index":1840,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:55",{"_index":1837,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:59",{"_index":1836,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:63",{"_index":1835,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacacheentry",{"_index":1099,"title":{"interfaces/ODataCacheEntry.html":{}},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatacallable",{"_index":763,"title":{"classes/ODataCallable.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["odatacallable(config",{"_index":2567,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatacallableparser",{"_index":1139,"title":{"classes/ODataCallableParser.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odatacallableparser(config",{"_index":1156,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odataclient",{"_index":907,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["odatacollection",{"_index":768,"title":{"classes/ODataCollection.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataSettings.html":{}}}],["odatacontext",{"_index":31,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odatacountresource",{"_index":1349,"title":{"classes/ODataCountResource.html":{}},"body":{"classes/ODataCountResource.html":{}}}],["odatacountresource(client",{"_index":1399,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odatacountresource(this.client",{"_index":1400,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odataentities",{"_index":2424,"title":{},"body":{"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odataentitiesmeta",{"_index":1222,"title":{"classes/ODataEntitiesMeta.html":{}},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{}}}],["odataentitiesmeta(payload",{"_index":2483,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataentitiesmeta(this._meta.property(f.name",{"_index":1969,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentitiesmeta(this._meta.property(field.name",{"_index":2022,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentitiesmeta(this.annotations",{"_index":1486,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odataentity",{"_index":2426,"title":{},"body":{"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odataentitycontainer",{"_index":1499,"title":{"classes/ODataEntityContainer.html":{}},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{}}}],["odataentitycontainer(container",{"_index":2571,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odataentityfieldparser",{"_index":1509,"title":{"classes/ODataEntityFieldParser.html":{}},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"classes/ODataStructuredType.html":{}}}],["odataentityfieldparser(name",{"_index":1599,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["odataentitymeta",{"_index":1372,"title":{"classes/ODataEntityMeta.html":{}},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{}}}],["odataentitymeta(data",{"_index":1488,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{}}}],["odataentitymeta(payload",{"_index":2477,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataentitymeta(this.annotations",{"_index":1465,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odataentitymeta(value",{"_index":1972,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityparser",{"_index":1536,"title":{"classes/ODataEntityParser.html":{}},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{}}}],["odataentityparser(config",{"_index":2714,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["odataentityresource",{"_index":1265,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["odataentityresource).action(path",{"_index":2016,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).cast(type",{"_index":2014,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).function(path",{"_index":2015,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).navigationproperty(path",{"_index":2017,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).navigationproperty(value.field.name).reference",{"_index":1996,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).property(f.name",{"_index":1965,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).query",{"_index":2012,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).schema",{"_index":2010,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).segment",{"_index":2011,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityservice",{"_index":1698,"title":{"classes/ODataEntityService.html":{}},"body":{"classes/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{}}}],["odataentityset",{"_index":764,"title":{"classes/ODataEntitySet.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["odataentityset(config",{"_index":1506,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["odataentitysetresource",{"_index":1264,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{}}}],["odataentitysetresource).action(path",{"_index":1348,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).count().get",{"_index":1342,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).function(path",{"_index":1347,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).query",{"_index":1346,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).schema",{"_index":1343,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).segment",{"_index":1345,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataenumfieldparser",{"_index":1773,"title":{"classes/ODataEnumFieldParser.html":{}},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{}}}],["odataenumfieldparser(name",{"_index":1787,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["odataenumparser",{"_index":1782,"title":{"classes/ODataEnumParser.html":{}},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{}}}],["odataenumparser(config",{"_index":1821,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["odataenumtype",{"_index":762,"title":{"classes/ODataEnumType.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["odataenumtype(config",{"_index":2551,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatafunctionresource",{"_index":1267,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["odatahelper",{"_index":873,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["odatahelper[this.version",{"_index":890,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["odatainmemorycache",{"_index":772,"title":{"classes/ODataInMemoryCache.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataInMemoryCache.html":{}}}],["odatainstoragecache",{"_index":1845,"title":{"classes/ODataInStorageCache.html":{}},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatameta",{"_index":1404,"title":{"classes/ODataMeta.html":{}},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:28",{"_index":1412,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:36",{"_index":1413,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:44",{"_index":1427,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:49",{"_index":1424,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:5",{"_index":1415,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:50",{"_index":1425,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:6",{"_index":1416,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatametadata",{"_index":526,"title":{},"body":{"classes/Field.html":{},"classes/ODataMetadataResource.html":{}}}],["odatametadata(body",{"_index":1889,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadata.tag_reference",{"_index":630,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_schema",{"_index":641,"title":{},"body":{"classes/Field.html":{}}}],["odatametadataresource",{"_index":1876,"title":{"classes/ODataMetadataResource.html":{}},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadataresource(client",{"_index":1885,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadataresource(this.client",{"_index":1883,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadatatype",{"_index":160,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odatamodel",{"_index":767,"title":{"classes/ODataModel.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{}}}],["odatamodule",{"_index":2030,"title":{"modules/ODataModule.html":{}},"body":{"modules/ODataModule.html":{},"index.html":{},"modules.html":{}}}],["odatamodule.forroot",{"_index":2877,"title":{},"body":{"index.html":{}}}],["odatamodule.forroot(trippinconfig",{"_index":2941,"title":{},"body":{"index.html":{}}}],["odatanavigationpropertyresource",{"_index":1266,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["odataparameterparser",{"_index":1170,"title":{"classes/ODataParameterParser.html":{}},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odataparameterparser(name",{"_index":1190,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odatapathsegments",{"_index":908,"title":{"classes/ODataPathSegments.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["odatapathsegments(this.tojson",{"_index":2118,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["odataproperty",{"_index":2433,"title":{},"body":{"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odatapropertymeta",{"_index":1460,"title":{"classes/ODataPropertyMeta.html":{}},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponse.html":{}}}],["odatapropertymeta(payload",{"_index":2484,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odatapropertymeta(this.annotations",{"_index":1461,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatapropertyresource",{"_index":1936,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataqueryoptions",{"_index":1359,"title":{"classes/ODataQueryOptions.html":{}},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{}}}],["odataqueryoptions(this.tojson",{"_index":2195,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["odatarequest",{"_index":751,"title":{"classes/ODataRequest.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSettings.html":{},"interfaces/StoragePayload.html":{}}}],["odataresource",{"_index":911,"title":{"classes/ODataResource.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:102",{"_index":1374,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:104",{"_index":1388,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:118",{"_index":1389,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:125",{"_index":1366,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:130",{"_index":1387,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:196",{"_index":1377,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:203",{"_index":1383,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:210",{"_index":1385,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:218",{"_index":1379,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:226",{"_index":1376,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:28",{"_index":1357,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:29",{"_index":1358,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:30",{"_index":1360,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:45",{"_index":1391,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:53",{"_index":1392,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:64",{"_index":1381,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:75",{"_index":1373,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:84",{"_index":1369,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:94",{"_index":1390,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresponse",{"_index":770,"title":{"classes/ODataResponse.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["odataresponse.fromhttpresponse(req",{"_index":819,"title":{},"body":{"classes/ODataApi.html":{}}}],["odataresponse.fromjson(req",{"_index":1861,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odataresponseoptions",{"_index":2418,"title":{"classes/ODataResponseOptions.html":{}},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["odataresponseoptions(this",{"_index":2507,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odataresponseoptions(this.api.options",{"_index":2457,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataschema",{"_index":716,"title":{"classes/ODataSchema.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odataschema(schema",{"_index":807,"title":{},"body":{"classes/ODataApi.html":{}}}],["odatasegment",{"_index":2067,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["odataservicefactory",{"_index":2034,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odatasettings",{"_index":2042,"title":{"classes/ODataSettings.html":{}},"body":{"modules/ODataModule.html":{},"classes/ODataSettings.html":{}}}],["odatasettings(...configs",{"_index":2047,"title":{},"body":{"modules/ODataModule.html":{}}}],["odatasingletonresource",{"_index":2691,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odatasingletonservice",{"_index":2594,"title":{"classes/ODataSingletonService.html":{}},"body":{"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{}}}],["odatastructuredtype",{"_index":765,"title":{"classes/ODataStructuredType.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{}}}],["odatastructuredtype(config",{"_index":2553,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatausage",{"_index":2876,"title":{},"body":{"index.html":{}}}],["odatavalueresource",{"_index":2727,"title":{"classes/ODataValueResource.html":{}},"body":{"classes/ODataValueResource.html":{}}}],["odatavalueresource(client",{"_index":2739,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odatavalueresource(this.client",{"_index":2740,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odataversion",{"_index":156,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odataversionhelper",{"_index":62,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odv",{"_index":1444,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["of(cached",{"_index":1127,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["of({meta",{"_index":2003,"title":{},"body":{"classes/ODataModel.html":{}}}],["ondelete",{"_index":396,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["one",{"_index":2217,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{}}}],["onerror",{"_index":894,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onerror(content",{"_index":900,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onload",{"_index":895,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onload(content",{"_index":904,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["open",{"_index":215,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["opentype",{"_index":300,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["opt",{"_index":1448,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["opt.headers",{"_index":1452,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["opt.headers.get(\"etag",{"_index":1453,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["opt.options",{"_index":1449,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["option",{"_index":2138,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["option(name",{"_index":2158,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["option(type",{"_index":2139,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"miscellaneous/functions.html":{}}}],["optionhandler",{"_index":2089,"title":{"classes/OptionHandler.html":{}},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["optionhandler(this.options",{"_index":2141,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["options",{"_index":97,"title":{"interfaces/Options.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["options).pipe",{"_index":1991,"title":{},"body":{"classes/ODataModel.html":{}}}],["options.apiname",{"_index":2382,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.attrs",{"_index":2391,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.clear",{"_index":2738,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["options.etag",{"_index":2393,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.fetchpolicy",{"_index":2400,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.headers",{"_index":2397,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.helper.type(value",{"_index":1572,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["options.keep(queryoptionnames.filter",{"_index":1397,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["options.meta",{"_index":1284,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["options.params",{"_index":2385,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.reportprogress",{"_index":2398,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.resource",{"_index":1281,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["options.responsetype",{"_index":2389,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.stringasenum",{"_index":1792,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["options.ts",{"_index":2147,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["options.ts:102",{"_index":2153,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:107",{"_index":2745,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:110",{"_index":2761,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:114",{"_index":2757,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:118",{"_index":2751,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:123",{"_index":2759,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:129",{"_index":2746,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:135",{"_index":2754,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:139",{"_index":2755,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:146",{"_index":2749,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:152",{"_index":2747,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:165",{"_index":2756,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:177",{"_index":2752,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:185",{"_index":2758,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:202",{"_index":2753,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:210",{"_index":2748,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:216",{"_index":2750,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:23",{"_index":2151,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:30",{"_index":2160,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:59",{"_index":2164,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:66",{"_index":2163,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:70",{"_index":2154,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:75",{"_index":2159,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:82",{"_index":2155,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:86",{"_index":2162,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:90",{"_index":2157,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:97",{"_index":2152,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.withcount",{"_index":2386,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.withcredentials",{"_index":2399,"title":{},"body":{"classes/ODataResource.html":{}}}],["optionshelper",{"_index":169,"title":{"interfaces/OptionsHelper.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataMeta.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["opts",{"_index":1886,"title":{},"body":{"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["opts).pipe(map((body",{"_index":1888,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["opts.include_etag",{"_index":2724,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["opts.include_navigation",{"_index":2717,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["opts.include_parents",{"_index":2718,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["order",{"_index":46,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["orderby",{"_index":2168,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["orderbyobject",{"_index":3040,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["orderbytype",{"_index":3041,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["others",{"_index":1961,"title":{},"body":{"classes/ODataModel.html":{}}}],["otherwise",{"_index":153,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"license.html":{}}}],["out",{"_index":3022,"title":{},"body":{"license.html":{}}}],["overview",{"_index":3026,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":27,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["p.configure(settings",{"_index":1200,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.name",{"_index":1193,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.serialize(params[p.name",{"_index":1197,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.startswith(application_json",{"_index":2462,"title":{},"body":{"classes/ODataResponse.html":{}}}],["package",{"_index":2776,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1275,"title":{},"body":{"classes/ODataCollection.html":{}}}],["pages",{"_index":1276,"title":{},"body":{"classes/ODataCollection.html":{}}}],["param",{"_index":173,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["param_separator",{"_index":2344,"title":{},"body":{"classes/ODataResource.html":{}}}],["parameter",{"_index":218,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["parameter.type",{"_index":1180,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parameters",{"_index":222,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":99,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["params[p.name",{"_index":1194,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parent",{"_index":1590,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataStructuredType.html":{}}}],["parent.children.push(this",{"_index":1612,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["parent.fields.filter(field",{"_index":2716,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["parent.parent",{"_index":2719,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["parentelement.children",{"_index":673,"title":{},"body":{"classes/Field.html":{}}}],["parse",{"_index":656,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataModel.html":{},"classes/ODataResponse.html":{}}}],["parse(entity",{"_index":1919,"title":{},"body":{"classes/ODataModel.html":{}}}],["parse(parser",{"_index":1535,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{}}}],["parse(values",{"_index":1243,"title":{},"body":{"classes/ODataCollection.html":{}}}],["parsenot",{"_index":2824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsenot(builtfilters",{"_index":2850,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":179,"title":{"interfaces/Parser.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parser).serialize(e",{"_index":2377,"title":{},"body":{"classes/ODataResource.html":{}}}],["parser.deserialize(value",{"_index":1575,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{}}}],["parser.findparser(c",{"_index":1573,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{}}}],["parser.parsefromstring(xml",{"_index":620,"title":{},"body":{"classes/Field.html":{}}}],["parser.serialize(options.attrs",{"_index":2392,"title":{},"body":{"classes/ODataResource.html":{}}}],["parser.serialize(value",{"_index":1582,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResource.html":{}}}],["parserfortype",{"_index":2611,"title":{},"body":{"classes/ODataSettings.html":{}}}],["parserfortype(type",{"_index":2644,"title":{},"body":{"classes/ODataSettings.html":{}}}],["parsers",{"_index":194,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parsers/entity",{"_index":1938,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataResponse.html":{}}}],["parsers/index",{"_index":761,"title":{},"body":{"classes/ODataApi.html":{}}}],["partial",{"_index":1368,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{}}}],["particular",{"_index":3009,"title":{},"body":{"license.html":{}}}],["partner",{"_index":397,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["parts",{"_index":2357,"title":{},"body":{"classes/ODataResource.html":{}}}],["parts[0",{"_index":2359,"title":{},"body":{"classes/ODataResource.html":{}}}],["pass",{"_index":140,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["patch",{"_index":968,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["patch(attrs",{"_index":1378,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["path",{"_index":219,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["path.indexof(query_separator",{"_index":2356,"title":{},"body":{"classes/ODataResource.html":{}}}],["path.match(/([^[.\\]])+/g",{"_index":2239,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["path.split(query_separator",{"_index":2358,"title":{},"body":{"classes/ODataResource.html":{}}}],["path_separator",{"_index":2090,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathandparams",{"_index":1355,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["patharray",{"_index":2237,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["patharray.length",{"_index":2242,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["patharray.reduce((acc",{"_index":2240,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["patharray.reduce((prevobj",{"_index":2247,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["pathsegmentnames",{"_index":909,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["pathsegmentnames.function",{"_index":2095,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathsegments",{"_index":1351,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["pathsegmentsbuilder",{"_index":2825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pathsegmentsbuilder(segment",{"_index":2092,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["pathwithparams",{"_index":2258,"title":{},"body":{"classes/ODataRequest.html":{}}}],["path}${query_separator}${querystring",{"_index":2374,"title":{},"body":{"classes/ODataResource.html":{}}}],["path}?${this.params",{"_index":2319,"title":{},"body":{"classes/ODataRequest.html":{}}}],["payload",{"_index":183,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["people",{"_index":2925,"title":{},"body":{"index.html":{}}}],["people.expand",{"_index":2927,"title":{},"body":{"index.html":{}}}],["people.get({withcount",{"_index":2935,"title":{},"body":{"index.html":{}}}],["peopleservice",{"_index":2895,"title":{},"body":{"index.html":{}}}],["peopleservice.entities",{"_index":2926,"title":{},"body":{"index.html":{}}}],["permission",{"_index":2966,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":13,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["permit",{"_index":2989,"title":{},"body":{"license.html":{}}}],["person",{"_index":2971,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2990,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2700,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["pick(value",{"_index":2708,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["pipe",{"_index":1033,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["pipe(catcherror((error",{"_index":1764,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["pipe(map(({entity",{"_index":1748,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["pipe(switchmap",{"_index":2907,"title":{},"body":{"index.html":{}}}],["plainobject",{"_index":2087,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["please",{"_index":781,"title":{},"body":{"classes/ODataApi.html":{},"index.html":{}}}],["pm",{"_index":1926,"title":{},"body":{"classes/ODataModel.html":{}}}],["pointer",{"_index":1316,"title":{},"body":{"classes/ODataCollection.html":{}}}],["policies",{"_index":108,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["policy",{"_index":1124,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["populate",{"_index":1212,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["populate(data",{"_index":1921,"title":{},"body":{"classes/ODataModel.html":{}}}],["populate(values",{"_index":1245,"title":{},"body":{"classes/ODataCollection.html":{}}}],["portions",{"_index":2999,"title":{},"body":{"license.html":{}}}],["post",{"_index":967,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["post(attrs",{"_index":1382,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["post(entity",{"_index":1747,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["post(func",{"_index":1014,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["precision",{"_index":56,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["predicate",{"_index":1689,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["predicate(this",{"_index":1646,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["prefix",{"_index":944,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["present",{"_index":117,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["prevobj",{"_index":2248,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["prevobj[key",{"_index":2249,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["primitive",{"_index":1638,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["private",{"_index":166,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["project",{"_index":2863,"title":{},"body":{"index.html":{}}}],["projects/.../batch.ts",{"_index":2819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../builder.ts",{"_index":2800,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../client.ts",{"_index":2808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../edm.ts",{"_index":3032,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../metadata.ts",{"_index":2796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../module.ts",{"_index":2816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../options.ts",{"_index":3037,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../path",{"_index":2797,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../query",{"_index":2798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../types.ts",{"_index":3030,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["prop",{"_index":1964,"title":{},"body":{"classes/ODataModel.html":{}}}],["prop.ascollection(value",{"_index":1968,"title":{},"body":{"classes/ODataModel.html":{}}}],["prop.asmodel(value",{"_index":1971,"title":{},"body":{"classes/ODataModel.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["properties(value",{"_index":83,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["property",{"_index":35,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataMeta.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["property(name",{"_index":1426,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["property(value",{"_index":74,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["property.enum",{"_index":1797,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["property.maxlength",{"_index":1586,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["property.ts",{"_index":393,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["property.ts:1",{"_index":486,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:14",{"_index":429,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:15",{"_index":430,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:16",{"_index":431,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:17",{"_index":433,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:18",{"_index":432,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:19",{"_index":428,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:25",{"_index":401,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:3",{"_index":487,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:30",{"_index":404,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:31",{"_index":402,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:32",{"_index":405,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:33",{"_index":403,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:39",{"_index":443,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:4",{"_index":489,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:41",{"_index":444,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:42",{"_index":445,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:46",{"_index":417,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:48",{"_index":418,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:5",{"_index":488,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:9",{"_index":427,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["propertyref",{"_index":552,"title":{},"body":{"classes/Field.html":{}}}],["propertyrefs",{"_index":316,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["propname",{"_index":2847,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propprefix",{"_index":2836,"title":{},"body":{"miscellaneous/functions.html":{}}}],["protected",{"_index":657,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["provide",{"_index":2050,"title":{},"body":{"modules/ODataModule.html":{}}}],["provided",{"_index":3000,"title":{},"body":{"license.html":{}}}],["providers",{"_index":2033,"title":{},"body":{"modules/ODataModule.html":{}}}],["public",{"_index":165,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"modules/ODataModule.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["publish",{"_index":2983,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":3010,"title":{},"body":{"license.html":{}}}],["push",{"_index":2742,"title":{},"body":{"classes/OptionHandler.html":{}}}],["push(value",{"_index":2213,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["put",{"_index":229,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCountResource.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["put(attrs",{"_index":1384,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["put(entity",{"_index":1755,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["put(key",{"_index":182,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["putresponse",{"_index":1082,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["putresponse(req",{"_index":1103,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["qualifier",{"_index":276,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["queried",{"_index":152,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["queries",{"_index":2892,"title":{},"body":{"index.html":{}}}],["query",{"_index":113,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["query_separator",{"_index":2345,"title":{},"body":{"classes/ODataResource.html":{}}}],["querying",{"_index":2859,"title":{},"body":{"index.html":{}}}],["queryoptionnames",{"_index":1394,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["queryoptionnames.expand",{"_index":2178,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.filter",{"_index":2172,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.format",{"_index":2179,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.orderby",{"_index":2174,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.search",{"_index":1398,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.select",{"_index":2171,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skip",{"_index":2176,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skiptoken",{"_index":2177,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.top",{"_index":2175,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.transform",{"_index":2173,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptions",{"_index":1352,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"miscellaneous/typealiases.html":{}}}],["querystring",{"_index":2369,"title":{},"body":{"classes/ODataResource.html":{}}}],["r",{"_index":1176,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{}}}],["raw",{"_index":3042,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["readlink",{"_index":1408,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["readlink(value",{"_index":88,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["reattach",{"_index":1288,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["records",{"_index":1271,"title":{},"body":{"classes/ODataCollection.html":{}}}],["reduce",{"_index":2575,"title":{},"body":{"classes/ODataSchema.html":{}}}],["reduce((acc",{"_index":1195,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["ref",{"_index":59,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ref.add(model.target",{"_index":1338,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ref.remove(model.target",{"_index":1341,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ref.set(value.rel.target",{"_index":2000,"title":{},"body":{"classes/ODataModel.html":{}}}],["ref.unset({etag",{"_index":2002,"title":{},"body":{"classes/ODataModel.html":{}}}],["reference",{"_index":521,"title":{},"body":{"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["reference.ts",{"_index":373,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["reference.ts:14",{"_index":375,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:16",{"_index":377,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:17",{"_index":376,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:21",{"_index":386,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:23",{"_index":389,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:24",{"_index":387,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:25",{"_index":388,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:3",{"_index":438,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:5",{"_index":441,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:6",{"_index":440,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:7",{"_index":439,"title":{},"body":{"classes/CsdlReference.html":{}}}],["referencedproperty",{"_index":410,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["references",{"_index":614,"title":{},"body":{"classes/Field.html":{}}}],["referentialconstraint",{"_index":556,"title":{},"body":{"classes/Field.html":{}}}],["referentialconstraints",{"_index":398,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["regardless",{"_index":136,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["regex",{"_index":2234,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["region",{"_index":187,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["rel",{"_index":1939,"title":{},"body":{"classes/ODataModel.html":{}}}],["related",{"_index":2862,"title":{},"body":{"index.html":{}}}],["relative",{"_index":962,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["remove",{"_index":1083,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"index.html":{}}}],["remove(...names",{"_index":2198,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["remove(model",{"_index":1248,"title":{},"body":{"classes/ODataCollection.html":{}}}],["remove(name",{"_index":2077,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["remove(names",{"_index":2161,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["remove(value",{"_index":2215,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["renderprimitivevalue",{"_index":2826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["renderprimitivevalue(key",{"_index":2852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replace(/\\;/g",{"_index":2467,"title":{},"body":{"classes/ODataResponse.html":{}}}],["reportprogress",{"_index":2257,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["req",{"_index":753,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{}}}],["req.api",{"_index":1017,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["req.fetchpolicy",{"_index":1125,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.method",{"_index":1123,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.observe",{"_index":1021,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.onload(chunk.slice(1",{"_index":1071,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["req.resource",{"_index":2440,"title":{},"body":{"classes/ODataResponse.html":{}}}],["request",{"_index":127,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSettings.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["request(method",{"_index":1386,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["request(req",{"_index":750,"title":{},"body":{"classes/ODataApi.html":{}}}],["requested",{"_index":132,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["requester",{"_index":686,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSettings.html":{}}}],["requests",{"_index":997,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["required",{"_index":1624,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["res",{"_index":813,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["res$.pipe",{"_index":815,"title":{},"body":{"classes/ODataApi.html":{}}}],["res$.pipe(catcherror(this.errorhandler",{"_index":820,"title":{},"body":{"classes/ODataApi.html":{}}}],["res$.pipe(map((res",{"_index":2401,"title":{},"body":{"classes/ODataResource.html":{}}}],["res$.pipe(startwith(cached",{"_index":1132,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res$.pipe(tap((res",{"_index":1129,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.body",{"_index":2406,"title":{},"body":{"classes/ODataResource.html":{},"classes/ODataResponse.html":{}}}],["res.delete(object.assign({etag",{"_index":1761,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["res.entities",{"_index":2402,"title":{},"body":{"classes/ODataResource.html":{}}}],["res.entity",{"_index":2403,"title":{},"body":{"classes/ODataResource.html":{}}}],["res.headers",{"_index":2441,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.join(newline",{"_index":975,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.length",{"_index":1054,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.options.cacheability",{"_index":1130,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.options.maxage",{"_index":1843,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["res.patch(attrs",{"_index":1757,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["res.property",{"_index":2404,"title":{},"body":{"classes/ODataResource.html":{}}}],["res.push(`${batch",{"_index":1051,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${changesetboundary",{"_index":1048,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${changesetboundary}${boundary_prefix_suffix",{"_index":1043,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${this.batchboundary",{"_index":1044,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${this.batchboundary}${boundary_prefix_suffix",{"_index":1055,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_id",{"_index":1050,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_transfer_encoding",{"_index":1049,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_type",{"_index":969,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(json.stringify(batch.request.body",{"_index":1053,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(newline",{"_index":1047,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.segment.key().empty",{"_index":1753,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["res.split(':')[1].trim",{"_index":948,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.status",{"_index":2442,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.statustext",{"_index":2443,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.tojson",{"_index":1860,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["res.type",{"_index":817,"title":{},"body":{"classes/ODataApi.html":{}}}],["res.url",{"_index":2444,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.value",{"_index":2405,"title":{},"body":{"classes/ODataResource.html":{}}}],["resolve",{"_index":1513,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["resolve(value",{"_index":1538,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["resolvekey",{"_index":1677,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["resolvekey(attrs",{"_index":1633,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["resource",{"_index":912,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["resource.clone().asmodel(value",{"_index":1293,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.entity",{"_index":1290,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.put(attrs",{"_index":2005,"title":{},"body":{"classes/ODataModel.html":{}}}],["resource.segment.key(value",{"_index":1292,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.type",{"_index":1286,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resourceparams",{"_index":2300,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resourcepath",{"_index":2299,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resources",{"_index":1110,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["resources/index",{"_index":771,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resp",{"_index":1036,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["responds",{"_index":129,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["response",{"_index":991,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["response.body.split(newline_regexp",{"_index":1063,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["response.headers.get(content_type",{"_index":1059,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["responseoptions",{"_index":175,"title":{"interfaces/ResponseOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["responses",{"_index":932,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"interfaces/StoragePayload.html":{}}}],["responses/index",{"_index":2347,"title":{},"body":{"classes/ODataResource.html":{}}}],["responsetype",{"_index":1032,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["restriction",{"_index":2978,"title":{},"body":{"license.html":{}}}],["result",{"_index":224,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":226,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":134,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["returned",{"_index":133,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["returns",{"_index":232,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":242,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["rights",{"_index":2981,"title":{},"body":{"license.html":{}}}],["root",{"_index":2884,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":23,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataSettings.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":759,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{}}}],["s",{"_index":1906,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.isnamespaceof(type",{"_index":825,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSettings.html":{}}}],["s.name",{"_index":2122,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.path",{"_index":2123,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.type).filter(t",{"_index":2112,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s1.namespace.length",{"_index":829,"title":{},"body":{"classes/ODataApi.html":{}}}],["s2",{"_index":828,"title":{},"body":{"classes/ODataApi.html":{}}}],["s2.namespace.length).pop",{"_index":830,"title":{},"body":{"classes/ODataApi.html":{}}}],["same",{"_index":1020,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["save",{"_index":1704,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["save(entity",{"_index":1723,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["save(options",{"_index":1923,"title":{},"body":{"classes/ODataModel.html":{}}}],["scale",{"_index":58,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["schema",{"_index":38,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataModel.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["schema.alias",{"_index":2715,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["schema.callables",{"_index":844,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.collection",{"_index":849,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.configure",{"_index":811,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.entities",{"_index":843,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.entitysets",{"_index":845,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.enums",{"_index":840,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.model",{"_index":847,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.namespace",{"_index":1157,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["schema.namespace}.${config.name",{"_index":1151,"title":{},"body":{"classes/ODataCallable.html":{}}}],["schema.ts",{"_index":455,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:10",{"_index":475,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:11",{"_index":468,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:12",{"_index":473,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:13",{"_index":470,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:14",{"_index":472,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:15",{"_index":474,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:16",{"_index":467,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:17",{"_index":471,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:18",{"_index":477,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:19",{"_index":476,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:20",{"_index":469,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:8",{"_index":466,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema/index",{"_index":766,"title":{},"body":{"classes/ODataApi.html":{}}}],["schemaconfig",{"_index":196,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["schemas",{"_index":195,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["schemas.length",{"_index":826,"title":{},"body":{"classes/ODataApi.html":{}}}],["schemas.sort((s1",{"_index":827,"title":{},"body":{"classes/ODataApi.html":{}}}],["schemas[0",{"_index":831,"title":{},"body":{"classes/ODataApi.html":{}}}],["search",{"_index":2120,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["segment",{"_index":2065,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["segment(name",{"_index":2079,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.name",{"_index":2094,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.options[segmentoptionnames.key",{"_index":2100,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.options[segmentoptionnames.parameters",{"_index":2096,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.path",{"_index":2098,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.settype(type",{"_index":2737,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["segment.type",{"_index":2114,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler",{"_index":2075,"title":{"classes/SegmentHandler.html":{}},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(segment",{"_index":2129,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(this.segments[this.segments.length",{"_index":2125,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmentoptionnames",{"_index":2091,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["segments",{"_index":910,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["segments.segment(pathsegmentnames.batch",{"_index":1012,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["segments.segment(pathsegmentnames.count",{"_index":1395,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["segments.segment(pathsegmentnames.metadata",{"_index":1884,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["segments.segment(pathsegmentnames.value",{"_index":2736,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["segments.ts",{"_index":2064,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["segments.ts:101",{"_index":2080,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:112",{"_index":2073,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:116",{"_index":2078,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:123",{"_index":2767,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:128",{"_index":2772,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:132",{"_index":2773,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:136",{"_index":2771,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:140",{"_index":2775,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:144",{"_index":2770,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:149",{"_index":2769,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:156",{"_index":2768,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:55",{"_index":2068,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:61",{"_index":2076,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:67",{"_index":2083,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:71",{"_index":2082,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:75",{"_index":2081,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:85",{"_index":2069,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:89",{"_index":2071,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:96",{"_index":2074,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["select",{"_index":45,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["selector",{"_index":2882,"title":{},"body":{"index.html":{}}}],["selecttype",{"_index":3043,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sell",{"_index":2987,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":1167,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"interfaces/Parser.html":{}}}],["serialize(params",{"_index":1177,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["serialize(value",{"_index":181,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["server",{"_index":150,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["service",{"_index":1743,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{},"index.html":{}}}],["servicerooturl",{"_index":190,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["services/index",{"_index":2043,"title":{},"body":{"modules/ODataModule.html":{}}}],["sessionstorage",{"_index":1854,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["set",{"_index":333,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/OptionHandler.html":{}}}],["set(model",{"_index":1951,"title":{},"body":{"classes/ODataModel.html":{}}}],["set(path",{"_index":2232,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["set.ts",{"_index":334,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:15",{"_index":1771,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:22",{"_index":1772,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:3",{"_index":338,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:5",{"_index":341,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:6",{"_index":339,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:7",{"_index":342,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:8",{"_index":340,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["setcache",{"_index":2486,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setcache(cachecontrol",{"_index":2497,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setfeatures",{"_index":2487,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setfeatures(features",{"_index":2499,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setnavigationproperty",{"_index":1896,"title":{},"body":{"classes/ODataModel.html":{}}}],["setnavigationproperty(field",{"_index":1925,"title":{},"body":{"classes/ODataModel.html":{}}}],["setnavigationproperty>(field",{"_index":2026,"title":{},"body":{"classes/ODataModel.html":{}}}],["setpath",{"_index":2764,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["setpath(value",{"_index":2137,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["settings",{"_index":721,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{}}}],["settings.findparserfortype(this.base",{"_index":1611,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["settings.findparserfortype(this.return",{"_index":1198,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["settings.findparserfortype(this.type",{"_index":1183,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{}}}],["settings.requester",{"_index":809,"title":{},"body":{"classes/ODataApi.html":{}}}],["settype",{"_index":2765,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["settype(value",{"_index":2135,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["setup",{"_index":2659,"title":{},"body":{"classes/ODataSettings.html":{}}}],["setversion",{"_index":2488,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setversion(version",{"_index":2501,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["shall",{"_index":2996,"title":{},"body":{"license.html":{}}}],["shortcuts",{"_index":1762,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSettings.html":{}}}],["single",{"_index":1637,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["singleton",{"_index":33,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["singleton(name",{"_index":2592,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["singleton.ts",{"_index":480,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:3",{"_index":482,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:5",{"_index":483,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:6",{"_index":485,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:7",{"_index":484,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singletons",{"_index":323,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["size",{"_index":1274,"title":{},"body":{"classes/ODataCollection.html":{}}}],["skip",{"_index":118,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["skiptoken",{"_index":1273,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["slice(1",{"_index":2099,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["software",{"_index":2974,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["specified",{"_index":662,"title":{},"body":{"classes/Field.html":{}}}],["split",{"_index":2187,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["srid",{"_index":261,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["standardaggregatemethods",{"_index":2799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["started",{"_index":2856,"title":{"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":1067,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["startwith",{"_index":1107,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["state",{"_index":1215,"title":{},"body":{"classes/ODataCollection.html":{}}}],["states",{"_index":2916,"title":{},"body":{"index.html":{}}}],["static",{"_index":528,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{}}}],["status",{"_index":901,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["status.code",{"_index":979,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["status.text",{"_index":982,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statusparts",{"_index":1069,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statusparts[2",{"_index":1073,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statustext",{"_index":981,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["step",{"_index":120,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["storage",{"_index":1851,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["storagepayload",{"_index":1850,"title":{"interfaces/StoragePayload.html":{}},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["store",{"_index":167,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["store'].indexof(directive",{"_index":2523,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["streaming",{"_index":168,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["stringasenum",{"_index":101,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structural",{"_index":311,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["structured",{"_index":294,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["structuredschema",{"_index":2687,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["structuredtypebyname",{"_index":2612,"title":{},"body":{"classes/ODataSettings.html":{}}}],["structuredtypebyname(name",{"_index":2646,"title":{},"body":{"classes/ODataSettings.html":{}}}],["structuredtypeconfig",{"_index":203,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["structuredtypefield",{"_index":48,"title":{"interfaces/StructuredTypeField.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structuredtypefieldoptions",{"_index":178,"title":{"interfaces/StructuredTypeFieldOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structuredtypefortype",{"_index":2613,"title":{},"body":{"classes/ODataSettings.html":{}}}],["structuredtypefortype(type",{"_index":2648,"title":{},"body":{"classes/ODataSettings.html":{}}}],["styleurls",{"_index":2887,"title":{},"body":{"index.html":{}}}],["subject",{"_index":893,"title":{},"body":{"classes/ODataBatchRequest.html":{},"license.html":{}}}],["sublicense",{"_index":2985,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2937,"title":{},"body":{"index.html":{}}}],["subscribe(({entities",{"_index":2903,"title":{},"body":{"index.html":{}}}],["subscribe(({entity",{"_index":2909,"title":{},"body":{"index.html":{}}}],["subscribe(aports",{"_index":2899,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":2998,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":943,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["sum",{"_index":2802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super",{"_index":960,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["super(annotationlist",{"_index":277,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["super(client",{"_index":1001,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{}}}],["super(init",{"_index":1841,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["super(name",{"_index":312,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{}}}],["super.get",{"_index":1402,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataValueResource.html":{}}}],["support",{"_index":2946,"title":{},"body":{"index.html":{}}}],["supported",{"_index":667,"title":{},"body":{"classes/Field.html":{}}}],["switch",{"_index":2093,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/SegmentHandler.html":{}}}],["switchmap",{"_index":1935,"title":{},"body":{"classes/ODataModel.html":{}}}],["switchmap(({meta",{"_index":2004,"title":{},"body":{"classes/ODataModel.html":{}}}],["symbol.iterator",{"_index":1315,"title":{},"body":{"classes/ODataCollection.html":{}}}],["system",{"_index":2166,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["t",{"_index":29,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["t[]).map(value",{"_index":1291,"title":{},"body":{"classes/ODataCollection.html":{}}}],["t[p",{"_index":30,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["table",{"_index":2869,"title":{},"body":{"index.html":{}}}],["tag",{"_index":525,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["tag_action",{"_index":561,"title":{},"body":{"classes/Field.html":{}}}],["tag_action_import",{"_index":567,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotation",{"_index":541,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotations",{"_index":540,"title":{},"body":{"classes/Field.html":{}}}],["tag_complex_type",{"_index":546,"title":{},"body":{"classes/Field.html":{}}}],["tag_data_services",{"_index":531,"title":{},"body":{"classes/Field.html":{}}}],["tag_edmx",{"_index":529,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_container",{"_index":562,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_set",{"_index":563,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_type",{"_index":548,"title":{},"body":{"classes/Field.html":{}}}],["tag_enum_type",{"_index":543,"title":{},"body":{"classes/Field.html":{}}}],["tag_function",{"_index":558,"title":{},"body":{"classes/Field.html":{}}}],["tag_function_import",{"_index":565,"title":{},"body":{"classes/Field.html":{}}}],["tag_include",{"_index":535,"title":{},"body":{"classes/Field.html":{}}}],["tag_include_annotations",{"_index":537,"title":{},"body":{"classes/Field.html":{}}}],["tag_key",{"_index":550,"title":{},"body":{"classes/Field.html":{}}}],["tag_member",{"_index":545,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property",{"_index":553,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property_binding",{"_index":569,"title":{},"body":{"classes/Field.html":{}}}],["tag_on_delete",{"_index":557,"title":{},"body":{"classes/Field.html":{}}}],["tag_parameter",{"_index":560,"title":{},"body":{"classes/Field.html":{}}}],["tag_property",{"_index":549,"title":{},"body":{"classes/Field.html":{}}}],["tag_property_ref",{"_index":551,"title":{},"body":{"classes/Field.html":{}}}],["tag_reference",{"_index":533,"title":{},"body":{"classes/Field.html":{}}}],["tag_referential_constraint",{"_index":555,"title":{},"body":{"classes/Field.html":{}}}],["tag_return_type",{"_index":559,"title":{},"body":{"classes/Field.html":{}}}],["tag_schema",{"_index":542,"title":{},"body":{"classes/Field.html":{}}}],["tag_singleton",{"_index":564,"title":{},"body":{"classes/Field.html":{}}}],["tag_term",{"_index":539,"title":{},"body":{"classes/Field.html":{}}}],["tag_type_definition",{"_index":570,"title":{},"body":{"classes/Field.html":{}}}],["tags",{"_index":527,"title":{},"body":{"classes/Field.html":{},"index.html":{}}}],["tap",{"_index":1108,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["target",{"_index":275,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["target.type",{"_index":2028,"title":{},"body":{"classes/ODataModel.html":{}}}],["targetnamespace",{"_index":384,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["templateurl",{"_index":2885,"title":{},"body":{"index.html":{}}}],["term",{"_index":278,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["termnamespace",{"_index":383,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["terms",{"_index":463,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["test",{"_index":2188,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["testing",{"_index":2367,"title":{},"body":{"classes/ODataResource.html":{}}}],["text",{"_index":977,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["text/plain",{"_index":2313,"title":{},"body":{"classes/ODataRequest.html":{}}}],["text/xml",{"_index":621,"title":{},"body":{"classes/Field.html":{}}}],["this._api",{"_index":1002,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{}}}],["this._config.fields({include_navigation",{"_index":1943,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._context",{"_index":1455,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this._entity",{"_index":1940,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._functions",{"_index":1483,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this._meta",{"_index":1280,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._meta.attributes(data",{"_index":1974,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._meta.clone",{"_index":1311,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._meta.entity(value",{"_index":1294,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._meta.etag",{"_index":2009,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._meta.options",{"_index":1970,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._models",{"_index":1270,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._models.map(model",{"_index":1309,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._navigationproperty(field.name",{"_index":2020,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._options",{"_index":2456,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setcache(cachecontrol",{"_index":2471,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setfeatures(features",{"_index":2463,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setversion(version",{"_index":2468,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._properties",{"_index":1457,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this._query.skip(this._state.skip",{"_index":1328,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._query.skiptoken(this._state.skiptoken",{"_index":1330,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._relations",{"_index":1941,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._relations[field.name",{"_index":2024,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._relations[field.name].rel",{"_index":2025,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource",{"_index":1279,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.all",{"_index":1332,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._resource.api.options",{"_index":1973,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.clone",{"_index":1289,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.delete(object.assign",{"_index":2008,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.get",{"_index":1325,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.get(options).pipe",{"_index":1322,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.post(attrs",{"_index":1990,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.reference",{"_index":1337,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._resource.segment.key().empty",{"_index":1986,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.segment.key(this",{"_index":1985,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.type",{"_index":1285,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._state",{"_index":1277,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.page",{"_index":1306,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.pages",{"_index":1304,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.records",{"_index":1303,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.size",{"_index":1298,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.skip",{"_index":1299,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.skiptoken",{"_index":1301,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.top",{"_index":1296,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.alias",{"_index":1594,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataSchema.html":{}}}],["this.annotations",{"_index":1450,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["this.annotations.find(annot",{"_index":1568,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["this.api",{"_index":1018,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{}}}],["this.api.findentitysetbyname(this.name",{"_index":1745,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["this.api.findparserfortype(type",{"_index":2474,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.api.findstructuredtypefortype(this.entitytype",{"_index":1746,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["this.api.options",{"_index":2574,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.api.options.fetchpolicy",{"_index":2298,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.helper",{"_index":1750,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.api.options.ieee754compatible",{"_index":2308,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.metadata",{"_index":2305,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.withcredentials",{"_index":2296,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.request",{"_index":1016,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.api.servicerooturl}${this.path",{"_index":2320,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.servicerooturl}${this.pathwithparams",{"_index":2321,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.apis",{"_index":2651,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.every(c",{"_index":2660,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.filter(c",{"_index":2657,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.find(a",{"_index":2668,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.find(c",{"_index":2665,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.foreach(api",{"_index":2663,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.length",{"_index":2654,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.map(api",{"_index":2670,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.some(c",{"_index":2655,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis[0].default",{"_index":2662,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.assertarray",{"_index":2227,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().filter(v",{"_index":2216,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().push(value",{"_index":2214,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray()[index",{"_index":2222,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertobject(false",{"_index":2245,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertobject(true",{"_index":2233,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.attach(options.resource",{"_index":1282,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this.base",{"_index":1591,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.batchboundary",{"_index":1004,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.body",{"_index":1031,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.body)[\"d",{"_index":2476,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.bound",{"_index":1152,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.cache",{"_index":799,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.cache.handlerequest(req",{"_index":822,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.cache.iscacheable(req",{"_index":821,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.cacheability",{"_index":2524,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.callables",{"_index":2565,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.callables.find(e",{"_index":2580,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.checkversion(document",{"_index":622,"title":{},"body":{"classes/Field.html":{}}}],["this.children",{"_index":1595,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.children.find(c",{"_index":1647,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.client",{"_index":2348,"title":{},"body":{"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{}}}],["this.client.apibyname(options.apiname",{"_index":2383,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.client.apifortype(this.entitytype",{"_index":1744,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["this.client.collectionfortype(type",{"_index":2365,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.client.entityset(this.name",{"_index":1736,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.client.get(this",{"_index":1887,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["this.client.modelfortype(type",{"_index":2362,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.client.post(this",{"_index":1030,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.client.request(method",{"_index":2395,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.client.singleton(this.name",{"_index":2696,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["this.collection",{"_index":1553,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataStructuredType.html":{}}}],["this.complete",{"_index":985,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.composable",{"_index":1153,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.constructor",{"_index":1313,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this.containers",{"_index":2568,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.context",{"_index":1463,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.create(entity",{"_index":1767,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.create(options",{"_index":2006,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.creation",{"_index":794,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.default",{"_index":791,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.deserialize(type",{"_index":2481,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.entities",{"_index":1738,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSchema.html":{}}}],["this.entities.find(e",{"_index":2579,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entity(entity",{"_index":1752,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.entity(entity).fetch(options",{"_index":1763,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.entity(entity).segment.key().empty",{"_index":1769,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.entitysets",{"_index":1503,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["this.entitysets.find(e",{"_index":2581,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entitytype",{"_index":1737,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["this.entries",{"_index":1113,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.entries.delete(key",{"_index":1121,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.foreach((entry",{"_index":1120,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.get(key",{"_index":1116,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.set(key",{"_index":1114,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.enums",{"_index":2549,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.enums.find(e",{"_index":2577,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.error(new",{"_index":989,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.error(res",{"_index":994,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.errorhandler",{"_index":801,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.factory.entity(\"airports",{"_index":2894,"title":{},"body":{"index.html":{}}}],["this.factory.entity(\"people",{"_index":2896,"title":{},"body":{"index.html":{}}}],["this.fetch(options",{"_index":1329,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.fetchpolicy",{"_index":888,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["this.field",{"_index":1560,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.fields",{"_index":1596,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["this.fields().find(f",{"_index":1823,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.fields().map(mapper",{"_index":1825,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.fields(opts).map(f",{"_index":2721,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.fields.filter(f",{"_index":1625,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.fields.find(f",{"_index":1628,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.fields.foreach(f",{"_index":1613,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.find(name",{"_index":2126,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.find(predicate",{"_index":1650,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.findcallablefortype(type",{"_index":856,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findenumtypefortype(type",{"_index":854,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findparserfortype(type",{"_index":812,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findschemafortype(type)?.findcallablefortype(type",{"_index":834,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findschemafortype(type)?.findentitysetfortype(type",{"_index":835,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findschemafortype(type)?.findenumtypefortype(type",{"_index":832,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findschemafortype(type)?.findstructuredtypefortype(type",{"_index":833,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findstructuredtypebyname(name",{"_index":846,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findstructuredtypefortype(type",{"_index":855,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findstructuredtypefortype(type)?.collection",{"_index":837,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findstructuredtypefortype(type)?.model",{"_index":836,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.flags",{"_index":1783,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["this.functions[name",{"_index":1485,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.get(req.urlwithparams",{"_index":1844,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.getfieldvaluebyattribute",{"_index":624,"title":{},"body":{"classes/Field.html":{}}}],["this.getnavigationproperty(field",{"_index":1950,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.getobjects(dataservices",{"_index":640,"title":{},"body":{"classes/Field.html":{}}}],["this.getobjects(document.documentelement",{"_index":629,"title":{},"body":{"classes/Field.html":{}}}],["this.getresponse(req",{"_index":1126,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.handleresponse(resp",{"_index":1035,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.headers",{"_index":884,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.headers.get(cache_control",{"_index":2470,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(content_type",{"_index":2458,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(key",{"_index":2466,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.getall(name",{"_index":2452,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.keys",{"_index":2450,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.keys().find(k",{"_index":2464,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.ieee754compatible",{"_index":880,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.isexpired(entry",{"_index":1117,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.key",{"_index":1551,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.keys",{"_index":1634,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.keys().length",{"_index":1644,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.maxage",{"_index":2522,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.maxlength",{"_index":1549,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.members",{"_index":1785,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{}}}],["this.metadata",{"_index":876,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.metadataurl",{"_index":786,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.method",{"_index":2283,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.model",{"_index":2711,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.n",{"_index":2207,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.name",{"_index":788,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{}}}],["this.name).split('/').reduce((acc",{"_index":1569,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.namespace",{"_index":1593,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataSchema.html":{}}}],["this.namespace}.${this.name",{"_index":1600,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.navigation",{"_index":1558,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.next(odataresponse.fromhttpresponse(this.request",{"_index":984,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.nextlink",{"_index":1493,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.nullable",{"_index":1555,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.o[this.n",{"_index":2208,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].filter((v",{"_index":2251,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].length",{"_index":2219,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n][0",{"_index":2220,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.observe",{"_index":2293,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.odata.batch(\"trippin\").post(batch",{"_index":2932,"title":{},"body":{"index.html":{}}}],["this.odata.fromjson(json",{"_index":2922,"title":{},"body":{"index.html":{}}}],["this.odv.annotations(data",{"_index":1451,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.attributes(data",{"_index":1468,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.context(this.annotations",{"_index":1456,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.count(this.annotations",{"_index":1489,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.deltalink(this.annotations",{"_index":1491,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.editlink(this.annotations",{"_index":1476,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.entities(data",{"_index":1487,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.entity(data",{"_index":1466,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.etag(this.annotations",{"_index":1454,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.functions(this.annotations",{"_index":1484,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.id(this.annotations",{"_index":1469,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediacontenttype(this.annotations",{"_index":1482,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediaeditlink(this.annotations",{"_index":1480,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediaetag(this.annotations",{"_index":1471,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediareadlink(this.annotations",{"_index":1478,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.metadataetag(this.annotations",{"_index":1473,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.nextlink(this.annotations",{"_index":1490,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.properties(this.annotations",{"_index":1458,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.property(data",{"_index":1462,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.readlink(this.annotations",{"_index":1474,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.type(this.annotations",{"_index":1464,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.option(name).clear",{"_index":2200,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options",{"_index":796,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.options.helper",{"_index":1446,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.options.helper.etag(attrs",{"_index":2726,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.options.helper.etag(value",{"_index":2725,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.options.helper.type(value",{"_index":2472,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.options.version",{"_index":2475,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.options[k",{"_index":2205,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[key",{"_index":2182,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[name",{"_index":2196,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[queryoptionnames.custom",{"_index":2185,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[type",{"_index":2140,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.parameters",{"_index":1187,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parameters.foreach(p",{"_index":1199,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.params",{"_index":882,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["this.params.keys().length",{"_index":2318,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.parent",{"_index":1602,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parent.deserialize(value",{"_index":1603,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parent.keys",{"_index":1631,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parent.serialize(value",{"_index":1608,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parent.typefor(name",{"_index":1629,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parse(parser",{"_index":1578,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{}}}],["this.parse(this._entity",{"_index":1975,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.parse(values",{"_index":1308,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.parser",{"_index":1155,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{}}}],["this.parser.configure(settings",{"_index":1164,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataStructuredType.html":{}}}],["this.parser.deserialize(value",{"_index":1181,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.fields",{"_index":1822,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.parser.iscomplextype",{"_index":1589,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parser.serialize(value",{"_index":1182,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.tojsonschema(options",{"_index":1584,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parsers",{"_index":803,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.parsers[type",{"_index":850,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.path",{"_index":1148,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/SegmentHandler.html":{}}}],["this.pathandparams",{"_index":2368,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments",{"_index":2349,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.clone",{"_index":1009,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["this.pathsegments.last",{"_index":2351,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.path",{"_index":2354,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.tojson",{"_index":2379,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.types",{"_index":2352,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.populate((values",{"_index":1283,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.populate(data",{"_index":1942,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.populate(entities",{"_index":1324,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.populate(entity",{"_index":1988,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.populate(this._entity",{"_index":1953,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.precision",{"_index":1562,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.properties[name",{"_index":1459,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.put(req.urlwithparams",{"_index":1842,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.putresponse(req",{"_index":1131,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.queries",{"_index":2891,"title":{},"body":{"index.html":{}}}],["this.queryoptions",{"_index":2350,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.queryoptions.alias(name",{"_index":2381,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.queryoptions.clone",{"_index":1401,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataValueResource.html":{}}}],["this.queryoptions.params",{"_index":2355,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.queryoptions.tojson",{"_index":2380,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.ref",{"_index":1566,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.references",{"_index":628,"title":{},"body":{"classes/Field.html":{}}}],["this.remove",{"_index":1115,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.reportprogress",{"_index":2289,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.request('delete",{"_index":2412,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('get",{"_index":2407,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('patch",{"_index":2411,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('post",{"_index":2408,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('put",{"_index":2410,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request.headers",{"_index":970,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.method",{"_index":965,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.pathwithparams",{"_index":966,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.urlwithparams",{"_index":983,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requester",{"_index":808,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.requester(req",{"_index":814,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.requests",{"_index":1006,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests.push(new",{"_index":1025,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests[index",{"_index":1068,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests[this.requests.length",{"_index":1027,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.resource",{"_index":2285,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.resource.type",{"_index":2480,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.responsetype",{"_index":2291,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.return",{"_index":1185,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.scale",{"_index":1564,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.schema",{"_index":1147,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.alias",{"_index":1160,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.namespace}.${this.name",{"_index":1159,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.options",{"_index":1163,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schemas",{"_index":639,"title":{},"body":{"classes/Field.html":{},"classes/ODataApi.html":{}}}],["this.schemas.filter(s",{"_index":824,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.schemas.foreach(schema",{"_index":810,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.schemas.reduce((acc",{"_index":838,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.segment.name",{"_index":2133,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.options",{"_index":2132,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.path",{"_index":2136,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.type",{"_index":2134,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments",{"_index":2107,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.filter(s",{"_index":2130,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.length",{"_index":2124,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.map(s",{"_index":2111,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.map(segment",{"_index":2113,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.push(segment",{"_index":2127,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments].reverse().find(s",{"_index":2121,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.servicerooturl",{"_index":776,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.servicerooturl.endswith",{"_index":785,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.servicerooturl.indexof",{"_index":778,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.setnavigationproperty(field",{"_index":1952,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.status",{"_index":2453,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.statustext",{"_index":2454,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.streaming",{"_index":2514,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.stringasenum",{"_index":878,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.timeout",{"_index":1111,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.toentity",{"_index":1989,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.tojson(parser",{"_index":1583,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.type",{"_index":680,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{}}}],["this.type}'${name",{"_index":1794,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["this.update(entity",{"_index":1770,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.update(options",{"_index":2007,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.url",{"_index":2455,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.value",{"_index":1780,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["this.version",{"_index":623,"title":{},"body":{"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.withcredentials",{"_index":886,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["throw",{"_index":654,"title":{},"body":{"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataSettings.html":{},"classes/SegmentHandler.html":{}}}],["throw(\"no",{"_index":1966,"title":{},"body":{"classes/ODataModel.html":{}}}],["throwerror",{"_index":1106,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{}}}],["throwerror(\"no",{"_index":1128,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["throwerror(\"resource",{"_index":1754,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["throwerror(error",{"_index":1768,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["thrown",{"_index":155,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["time",{"_index":939,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["timeout",{"_index":1076,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["title",{"_index":1585,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"index.html":{}}}],["todo",{"_index":961,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/OptionHandler.html":{}}}],["toentities",{"_index":1213,"title":{},"body":{"classes/ODataCollection.html":{}}}],["toentity",{"_index":1897,"title":{},"body":{"classes/ODataModel.html":{}}}],["tojson",{"_index":1356,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["tojson(parser",{"_index":1541,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["tojsonschema",{"_index":1514,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{}}}],["tojsonschema(config",{"_index":1615,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["tojsonschema(options",{"_index":1543,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["tokens",{"_index":2045,"title":{},"body":{"modules/ODataModule.html":{}}}],["tools",{"_index":2197,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["top",{"_index":1272,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["tort",{"_index":3020,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":896,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["transform",{"_index":2167,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transforms",{"_index":2842,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trim",{"_index":2516,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["trippin",{"_index":2890,"title":{},"body":{"index.html":{}}}],["trippinconfig",{"_index":2939,"title":{},"body":{"index.html":{}}}],["trippinmodule",{"_index":2940,"title":{},"body":{"index.html":{}}}],["trips",{"_index":2930,"title":{},"body":{"index.html":{}}}],["true",{"_index":1557,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"index.html":{}}}],["true}).subscribe(console.log",{"_index":2936,"title":{},"body":{"index.html":{}}}],["try",{"_index":616,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{}}}],["tslib",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":139,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type(value",{"_index":86,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["type.startswith(\"edm",{"_index":853,"title":{},"body":{"classes/ODataApi.html":{}}}],["type.startswith(this.alias",{"_index":2573,"title":{},"body":{"classes/ODataSchema.html":{}}}],["type.startswith(this.namespace",{"_index":2572,"title":{},"body":{"classes/ODataSchema.html":{}}}],["type.ts",{"_index":295,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:1",{"_index":355,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:10",{"_index":349,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:11",{"_index":1811,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:12",{"_index":350,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:13",{"_index":351,"title":{},"body":{"classes/CsdlEnumMember.html":{}}}],["type.ts:14",{"_index":303,"title":{},"body":{"classes/CsdlComplexType.html":{}}}],["type.ts:20",{"_index":1817,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:23",{"_index":2707,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:27",{"_index":344,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:3",{"_index":358,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:30",{"_index":346,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:31",{"_index":1812,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:34",{"_index":2701,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:35",{"_index":1814,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:36",{"_index":345,"title":{},"body":{"classes/CsdlEntityType.html":{}}}],["type.ts:38",{"_index":2703,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:39",{"_index":1816,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:4",{"_index":357,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:42",{"_index":391,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:43",{"_index":1819,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:44",{"_index":392,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:48",{"_index":434,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:5",{"_index":359,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:50",{"_index":436,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:51",{"_index":435,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:56",{"_index":2706,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:6",{"_index":356,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:60",{"_index":2709,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:7",{"_index":491,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:8",{"_index":490,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:9",{"_index":492,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["typealiases",{"_index":3029,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedefinition",{"_index":571,"title":{},"body":{"classes/Field.html":{}}}],["typedefinitions",{"_index":464,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["typefor",{"_index":1678,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["typefor(name",{"_index":1627,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["typeof",{"_index":848,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataSettings.html":{},"classes/SegmentHandler.html":{}}}],["types",{"_index":519,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["types.isarray(custom",{"_index":2186,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isarray(path",{"_index":2238,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isarray(this.o[this.n",{"_index":2212,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(key",{"_index":1643,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["types.isempty(options",{"_index":2116,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isempty(this.o[this.n",{"_index":2209,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(this.options[key",{"_index":2181,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(v",{"_index":2252,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isobject(this.o[this.n",{"_index":2225,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isobject(v",{"_index":2230,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isobject(value",{"_index":1571,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{}}}],["types.some(type",{"_index":2667,"title":{},"body":{"classes/ODataSettings.html":{}}}],["undefined",{"_index":186,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["underlayingtype",{"_index":505,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["underlyingtype",{"_index":353,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["unicode",{"_index":409,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["uniqid",{"_index":2827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniqid(batch_prefix",{"_index":1005,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["uniqid(changeset_prefix",{"_index":1045,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["uniqid(prefix",{"_index":942,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["united",{"_index":2915,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":993,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["unnamed",{"_index":2828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unpacked",{"_index":3044,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unset",{"_index":2743,"title":{},"body":{"classes/OptionHandler.html":{}}}],["unset(path",{"_index":2250,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["unsuccessful",{"_index":986,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["up",{"_index":142,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["update",{"_index":131,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["update(entity",{"_index":1725,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["update(options",{"_index":1930,"title":{},"body":{"classes/ODataModel.html":{}}}],["updated",{"_index":146,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["updating",{"_index":151,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["uri",{"_index":379,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["url",{"_index":964,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["urls",{"_index":2165,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{}}}],["urls.parsequerystring(parts[1",{"_index":2360,"title":{},"body":{"classes/ODataResource.html":{}}}],["urls.parsequerystring(query.substr(1",{"_index":2184,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["urlwithparams",{"_index":2259,"title":{},"body":{"classes/ODataRequest.html":{}}}],["usage",{"_index":2872,"title":{},"body":{"index.html":{}}}],["use",{"_index":782,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataModel.html":{},"index.html":{},"license.html":{}}}],["usefactory",{"_index":2052,"title":{},"body":{"modules/ODataModule.html":{}}}],["uses",{"_index":130,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["usevalue",{"_index":2051,"title":{},"body":{"modules/ODataModule.html":{}}}],["using",{"_index":2951,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1545,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["utils/index",{"_index":2346,"title":{},"body":{"classes/ODataResource.html":{}}}],["utils/types",{"_index":520,"title":{},"body":{"classes/Field.html":{},"classes/ODataResponse.html":{}}}],["v",{"_index":1579,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{}}}],["v.rel",{"_index":1981,"title":{},"body":{"classes/ODataModel.html":{}}}],["v4",{"_index":2950,"title":{},"body":{"index.html":{}}}],["val",{"_index":2853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":61,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["value(v",{"_index":2210,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["value).reduce((acc",{"_index":1789,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["value.attach(this.entities",{"_index":1742,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["value.attach(this.entities().entity(value.toentity",{"_index":1741,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["value.attach(this.entity",{"_index":2697,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["value.field.collection",{"_index":1995,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.field.navigation",{"_index":1994,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.map(e",{"_index":2376,"title":{},"body":{"classes/ODataResource.html":{}}}],["value.map(v",{"_index":1577,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{}}}],["value.rel",{"_index":1999,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.toentities",{"_index":1983,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.toentity",{"_index":1982,"title":{},"body":{"classes/ODataModel.html":{}}}],["value?.parser",{"_index":857,"title":{},"body":{"classes/ODataApi.html":{}}}],["value[f.name",{"_index":1606,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["value[k",{"_index":2723,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["value_separator",{"_index":2343,"title":{},"body":{"classes/ODataResource.html":{}}}],["values",{"_index":1221,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{}}}],["values.length",{"_index":1307,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataSettings.html":{}}}],["values.some(v",{"_index":1640,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["values[0",{"_index":1639,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataSettings.html":{}}}],["van",{"_index":2964,"title":{},"body":{"license.html":{}}}],["var",{"_index":936,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["variables",{"_index":996,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResource.html":{}}}],["version",{"_index":98,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["version.replace(/\\;/g",{"_index":2515,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_2_0",{"_index":2504,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_3_0",{"_index":2505,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_4_0",{"_index":522,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataResponseOptions.html":{}}}],["version_4_0].indexof(value",{"_index":2517,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["versions",{"_index":2947,"title":{},"body":{"index.html":{}}}],["view",{"_index":2478,"title":{},"body":{"classes/ODataResponse.html":{}}}],["viewed",{"_index":2953,"title":{},"body":{"index.html":{}}}],["void",{"_index":184,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["warranties",{"_index":3006,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3001,"title":{},"body":{"license.html":{}}}],["whether",{"_index":137,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"license.html":{}}}],["wiki",{"_index":2956,"title":{},"body":{"index.html":{}}}],["window.addeventlistener(\"beforeunload",{"_index":1856,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["withcount",{"_index":1321,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataResource.html":{}}}],["withcredentials",{"_index":174,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["without",{"_index":148,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"license.html":{}}}],["works",{"_index":2942,"title":{},"body":{"index.html":{}}}],["xssi_prefix",{"_index":933,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["yes",{"_index":248,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataCache.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Annotation.html":{"url":"interfaces/Annotation.html","title":"interface - Annotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Annotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bool\n                                \n                                \n                                            Optional\n                                        int\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        properties\n                                \n                                \n                                            Optional\n                                        string\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bool\n                                    \n                                \n                                \n                                    \n                                        bool:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        int\n                                    \n                                \n                                \n                                    \n                                        int:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        string\n                                    \n                                \n                                \n                                    \n                                        string:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiOptions.html":{"url":"interfaces/ApiOptions.html","title":"interface - ApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fetchPolicy\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                            Optional\n                                        withCredentials\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fetchPolicy\n                                    \n                                \n                                \n                                    \n                                        fetchPolicy:         FetchPolicy\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchPolicy\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cache.html":{"url":"interfaces/Cache.html","title":"interface - Cache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    get\n                                \n                                \n                                    put\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAction.html":{"url":"classes/CsdlAction.html","title":"class - CsdlAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                    Optional\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType?: CsdlReturnType, isBound?: boolean, entitySetPath?: string, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlActionImport.html":{"url":"classes/CsdlActionImport.html","title":"class - CsdlActionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlActionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, action: string, entitySet?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotable.html":{"url":"classes/CsdlAnnotable.html","title":"class - CsdlAnnotable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotation.html":{"url":"classes/CsdlAnnotation.html","title":"class - CsdlAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                term\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(term: string, qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            term\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotations.html":{"url":"classes/CsdlAnnotations.html","title":"class - CsdlAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                target\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(target: string, annotationList: CsdlAnnotation[], qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlComplexType.html":{"url":"classes/CsdlComplexType.html","title":"class - CsdlComplexType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlComplexType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityContainer.html":{"url":"classes/CsdlEntityContainer.html","title":"class - CsdlEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actionImports\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySets\n                            \n                            \n                                    Public\n                                    Optional\n                                extend\n                            \n                            \n                                    Public\n                                    Optional\n                                functionImports\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                singletons\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, extend?: string, entitySets?: CsdlEntitySet[], singletons?: CsdlSingleton[], functionImports?: CsdlFunctionImport[], actionImports?: CsdlActionImport[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extend\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySets\n                                                  \n                                                        \n                                                                        CsdlEntitySet[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        singletons\n                                                  \n                                                        \n                                                                        CsdlSingleton[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionImports\n                                                  \n                                                        \n                                                                    CsdlFunctionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionImports\n                                                  \n                                                        \n                                                                    CsdlActionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlActionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntitySet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            extend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlFunctionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            singletons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlSingleton[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlEntitySet } from './csdl-entity-set';\nimport { CsdlSingleton } from './csdl-singleton';\nimport { CsdlFunctionImport, CsdlActionImport } from './csdl-function-action';\n\nexport class CsdlEntityContainer {\n    constructor(\n        public name: string,\n        public extend?: string,\n        public entitySets?: CsdlEntitySet[],\n        public singletons?: CsdlSingleton[],\n        public functionImports?: CsdlFunctionImport[],\n        public actionImports?: CsdlActionImport[]\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntitySet.html":{"url":"classes/CsdlEntitySet.html","title":"class - CsdlEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entityType\n                            \n                            \n                                    Public\n                                    Optional\n                                includeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBinding\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, entityType: string, navigationPropertyBinding?: CsdlNavigationPropertyBinding[], includeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBinding\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBinding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlEntitySet {\n    constructor(\n        public name: string,\n        public entityType: string,\n        public navigationPropertyBinding?: CsdlNavigationPropertyBinding[],\n        public includeInServiceDocument?: boolean\n    ) {\n\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityType.html":{"url":"classes/CsdlEntityType.html","title":"class - CsdlEntityType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                hasStream\n                            \n                            \n                                    Public\n                                    Optional\n                                key\n                            \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, key?: CsdlKey, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean, hasStream?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        CsdlKey\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        hasStream\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            hasStream\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlKey\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumMember.html":{"url":"classes/CsdlEnumMember.html","title":"class - CsdlEnumMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value?: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumType.html":{"url":"classes/CsdlEnumType.html","title":"class - CsdlEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                isFlags\n                            \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                underlyingType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, members: CsdlEnumMember[], underlyingType?: string, isFlags?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        members\n                                                  \n                                                        \n                                                                        CsdlEnumMember[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlyingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isFlags\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isFlags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumMember[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            underlyingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunction.html":{"url":"classes/CsdlFunction.html","title":"class - CsdlFunction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                    Optional\n                                isComposable\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType: CsdlReturnType, isBound?: boolean, entitySetPath?: string, isComposable?: boolean, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isComposable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isComposable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunctionImport.html":{"url":"classes/CsdlFunctionImport.html","title":"class - CsdlFunctionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunctionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                functionName\n                            \n                            \n                                    Public\n                                    Optional\n                                IncludeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, functionName: string, entitySet?: string, IncludeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        IncludeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            functionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            IncludeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlInclude.html":{"url":"classes/CsdlInclude.html","title":"class - CsdlInclude","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlInclude\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                namespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlIncludeAnnotations.html":{"url":"classes/CsdlIncludeAnnotations.html","title":"class - CsdlIncludeAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlIncludeAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                    Optional\n                                targetNamespace\n                            \n                            \n                                    Public\n                                termNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(termNamespace: string, qualifier?: string, targetNamespace?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        termNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            targetNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            termNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlKey.html":{"url":"classes/CsdlKey.html","title":"class - CsdlKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                propertyRefs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(propertyRefs: CsdlPropertyRef[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyRefs\n                                                  \n                                                        \n                                                                    CsdlPropertyRef[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propertyRefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlPropertyRef[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationProperty.html":{"url":"classes/CsdlNavigationProperty.html","title":"class - CsdlNavigationProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                containsTarget\n                            \n                            \n                                    Public\n                                    Optional\n                                onDelete\n                            \n                            \n                                    Public\n                                    Optional\n                                partner\n                            \n                            \n                                    Public\n                                    Optional\n                                referentialConstraints\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, partner?: string, containsTarget?: boolean, referentialConstraints?: CsdlReferentialConstraint[], onDelete?: CsdlOnDelete)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        partner\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        containsTarget\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        referentialConstraints\n                                                  \n                                                        \n                                                                        CsdlReferentialConstraint[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        onDelete\n                                                  \n                                                        \n                                                                        CsdlOnDelete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            containsTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDelete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlOnDelete\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            partner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            referentialConstraints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReferentialConstraint[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationPropertyBinding.html":{"url":"classes/CsdlNavigationPropertyBinding.html","title":"class - CsdlNavigationPropertyBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationPropertyBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(path: string, target: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlNavigationPropertyBinding {\n    constructor(\n        public path: string,\n        public target: string,\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlOnDelete.html":{"url":"classes/CsdlOnDelete.html","title":"class - CsdlOnDelete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlOnDelete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlParameter.html":{"url":"classes/CsdlParameter.html","title":"class - CsdlParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlProperty.html":{"url":"classes/CsdlProperty.html","title":"class - CsdlProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, defaultValue?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlPropertyRef.html":{"url":"classes/CsdlPropertyRef.html","title":"class - CsdlPropertyRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlPropertyRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReference.html":{"url":"classes/CsdlReference.html","title":"class - CsdlReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                includeAnnotations\n                            \n                            \n                                    Public\n                                    Optional\n                                includes\n                            \n                            \n                                    Public\n                                uri\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uri: string, includes?: CsdlInclude[], includeAnnotations?: CsdlIncludeAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        includes\n                                                  \n                                                        \n                                                                        CsdlInclude[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeAnnotations\n                                                  \n                                                        \n                                                                        CsdlIncludeAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeAnnotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlIncludeAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlInclude[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReferentialConstraint.html":{"url":"classes/CsdlReferentialConstraint.html","title":"class - CsdlReferentialConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReferentialConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                property\n                            \n                            \n                                    Public\n                                referencedProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, referencedProperty: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referencedProperty\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            property\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referencedProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReturnType.html":{"url":"classes/CsdlReturnType.html","title":"class - CsdlReturnType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReturnType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSchema.html":{"url":"classes/CsdlSchema.html","title":"class - CsdlSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actions\n                            \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationsList\n                            \n                            \n                                    Public\n                                    Optional\n                                complexTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                entityContainer\n                            \n                            \n                                    Public\n                                    Optional\n                                entityTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                enumTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                functions\n                            \n                            \n                                    Public\n                                namespace\n                            \n                            \n                                    Public\n                                    Optional\n                                terms\n                            \n                            \n                                    Public\n                                    Optional\n                                typeDefinitions\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string, enumTypes?: CsdlEnumType[], complexTypes?: CsdlComplexType[], entityTypes?: CsdlEntityType[], functions?: CsdlFunction[], actions?: CsdlAction[], entityContainer?: CsdlEntityContainer, typeDefinitions?: CsdlTypeDefinition[], terms?: CsdlTerm[], annotationsList?: CsdlAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        enumTypes\n                                                  \n                                                        \n                                                                        CsdlEnumType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        complexTypes\n                                                  \n                                                        \n                                                                        CsdlComplexType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityTypes\n                                                  \n                                                        \n                                                                        CsdlEntityType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functions\n                                                  \n                                                        \n                                                                        CsdlFunction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                        CsdlAction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityContainer\n                                                  \n                                                        \n                                                                        CsdlEntityContainer\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeDefinitions\n                                                  \n                                                        \n                                                                        CsdlTypeDefinition[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        terms\n                                                  \n                                                        \n                                                                        CsdlTerm[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationsList\n                                                  \n                                                        \n                                                                        CsdlAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            complexTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlComplexType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            enumTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlFunction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            terms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTerm[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            typeDefinitions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTypeDefinition[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotation, CsdlAnnotable, CsdlTerm, CsdlAnnotations } from './csdl-annotation';\nimport { CsdlTypeDefinition } from './csdl-type-definition';\nimport { CsdlEnumType } from './csdl-enum-type';\nimport { CsdlEntityType, CsdlComplexType } from './csdl-structured-type';\nimport { CsdlFunction, CsdlAction } from './csdl-function-action';\nimport { CsdlEntityContainer } from './csdl-entity-container';\n\nexport class CsdlSchema extends CsdlAnnotable {\n    constructor(\n        public namespace: string,\n        public alias?: string,\n        public enumTypes?: CsdlEnumType[],\n        public complexTypes?: CsdlComplexType[],\n        public entityTypes?: CsdlEntityType[],\n        public functions?: CsdlFunction[],\n        public actions?: CsdlAction[],\n        public entityContainer?: CsdlEntityContainer,\n        public typeDefinitions?: CsdlTypeDefinition[],\n        public terms?: CsdlTerm[],\n        public annotationsList?: CsdlAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSingleton.html":{"url":"classes/CsdlSingleton.html","title":"class - CsdlSingleton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSingleton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBindings\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, navigationPropertyBindings?: CsdlNavigationPropertyBinding[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBindings\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBindings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlSingleton {\n    constructor(\n        public name: string,\n        public type: string,\n        public navigationPropertyBindings?: CsdlNavigationPropertyBinding[]\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuralProperty.html":{"url":"classes/CsdlStructuralProperty.html","title":"class - CsdlStructuralProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuralProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuredType.html":{"url":"classes/CsdlStructuredType.html","title":"class - CsdlStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTerm.html":{"url":"classes/CsdlTerm.html","title":"class - CsdlTerm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTerm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appliesTo\n                            \n                            \n                                    Public\n                                    Optional\n                                baseTerm\n                            \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, baseTerm?: string, defaultValue?: string, appliesTo?: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseTerm\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        appliesTo\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appliesTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseTerm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTypeDefinition.html":{"url":"classes/CsdlTypeDefinition.html","title":"class - CsdlTypeDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTypeDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                underlayingType\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, underlayingType: string, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlayingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            underlayingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlTypeDefinition extends CsdlAnnotable {\n    constructor(\n        public name: string,\n        public underlayingType: string,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        annotationList?: CsdlAnnotation[]) {\n        super(annotationList);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnumTypeField.html":{"url":"interfaces/EnumTypeField.html","title":"interface - EnumTypeField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EnumTypeField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        annotations\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        annotations\n                                    \n                                \n                                \n                                    \n                                        annotations:         Annotation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Annotation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/metadata.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldType\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, fieldType: FieldType)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fieldType\n                                                  \n                                                        \n                                                                        FieldType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlTypeDefinition } from './csdl/csdl-type-definition';\nimport { CsdlSchema } from './csdl/csdl-schema';\nimport { Types } from '../../utils/types';\nimport { CsdlEnumType, CsdlEnumMember } from './csdl/csdl-enum-type';\nimport { CsdlEntityType, CsdlPropertyRef, CsdlKey, CsdlComplexType } from './csdl/csdl-structured-type';\nimport { CsdlFunction, CsdlParameter, CsdlFunctionImport, CsdlActionImport, CsdlReturnType, CsdlAction } from './csdl/csdl-function-action';\nimport { CsdlProperty, CsdlNavigationProperty, CsdlReferentialConstraint, CsdlOnDelete } from './csdl/csdl-structural-property';\nimport { CsdlEntitySet } from './csdl/csdl-entity-set';\nimport { CsdlSingleton } from './csdl/csdl-singleton';\nimport { CsdlEntityContainer } from './csdl/csdl-entity-container';\nimport { CsdlReference, CsdlInclude, CsdlIncludeAnnotations } from './csdl/csdl-reference';\nimport { CsdlAnnotation, CsdlTerm, CsdlAnnotations } from './csdl/csdl-annotation';\nimport { CsdlNavigationPropertyBinding } from './csdl/csdl-navigation-property-binding';\nimport { VERSION_4_0 } from '../../constants';\n\nenum FieldType {\n    ATTRIBUTE, TAG\n}\n\nclass Field {\n    constructor(public name: string, public fieldType: FieldType) { }\n}\n\nexport class ODataMetadata {\n    // TAGS\n    private static readonly TAG_EDMX = 'edmx:Edmx';\n    private static readonly TAG_DATA_SERVICES = 'edmx:DataServices';\n    private static readonly TAG_REFERENCE = 'edmx:Reference';\n    private static readonly TAG_INCLUDE = 'edmx:Include';\n    private static readonly TAG_INCLUDE_ANNOTATIONS = 'edmx:IncludeAnnotations';\n    private static readonly TAG_TERM = 'Term';\n    private static readonly TAG_ANNOTATIONS = 'Annotations';\n    private static readonly TAG_ANNOTATION = 'Annotation';\n    private static readonly TAG_SCHEMA = 'Schema';\n    private static readonly TAG_ENUM_TYPE = 'EnumType';\n    private static readonly TAG_MEMBER = 'Member';\n    private static readonly TAG_COMPLEX_TYPE = 'ComplexType';\n    private static readonly TAG_ENTITY_TYPE = 'EntityType';\n    private static readonly TAG_PROPERTY = 'Property';\n    private static readonly TAG_KEY = 'Key';\n    private static readonly TAG_PROPERTY_REF = 'PropertyRef';\n    private static readonly TAG_NAVIGATION_PROPERTY = 'NavigationProperty';\n    private static readonly TAG_REFERENTIAL_CONSTRAINT = 'ReferentialConstraint';\n    private static readonly TAG_ON_DELETE = 'OnDelete';\n    private static readonly TAG_FUNCTION = 'Function';\n    private static readonly TAG_RETURN_TYPE = 'ReturnType';\n    private static readonly TAG_PARAMETER = 'Parameter';\n    private static readonly TAG_ACTION = 'Action';\n    private static readonly TAG_ENTITY_CONTAINER = 'EntityContainer';\n    private static readonly TAG_ENTITY_SET = 'EntitySet';\n    private static readonly TAG_SINGLETON = 'Singleton';\n    private static readonly TAG_FUNCTION_IMPORT = 'FunctionImport';\n    private static readonly TAG_ACTION_IMPORT = 'ActionImport';\n    private static readonly TAG_NAVIGATION_PROPERTY_BINDING = 'NavigationPropertyBinding';\n    private static readonly TAG_TYPE_DEFINITION = 'TypeDefinition';\n\n    // ATTRIBUTES\n    private static readonly ATTRIBUTE_VERSION = 'Version';\n    private static readonly ATTRIBUTE_URI = 'Uri';\n    private static readonly ATTRIBUTE_ALIAS = 'Alias';\n    private static readonly ATTRIBUTE_NAMESPACE = 'Namespace';\n    private static readonly ATTRIBUTE_TERM_NAMESPACE = 'TermNamespace';\n    private static readonly ATTRIBUTE_QUALIFIER = 'Qualifier';\n    private static readonly ATTRIBUTE_TARGET_NAMESPACE = 'TargetNamespace';\n    private static readonly ATTRIBUTE_TERM = 'Term';\n    private static readonly ATTRIBUTE_NAME = 'Name';\n    private static readonly ATTRIBUTE_VALUE = 'Value';\n    private static readonly ATTRIBUTE_BASE_TYPE = 'BaseType';\n    private static readonly ATTRIBUTE_OPEN_TYPE = 'OpenType';\n    private static readonly ATTRIBUTE_TYPE = 'Type';\n    private static readonly ATTRIBUTE_NULLABLE = 'Nullable';\n    private static readonly ATTRIBUTE_MAX_LENGTH = 'MaxLength';\n    private static readonly ATTRIBUTE_PRECISION = 'Precision';\n    private static readonly ATTRIBUTE_SCALE = 'Scale';\n    private static readonly ATTRIBUTE_UNICODE = 'Unicode';\n    private static readonly ATTRIBUTE_SRID = 'SRID';\n    private static readonly ATTRIBUTE_DEFAULT_VALUE = 'DefaultValue';\n    private static readonly ATTRIBUTE_PARTNER = 'Partner';\n    private static readonly ATTRIBUTE_PROPERTY = 'Property';\n    private static readonly ATTRIBUTE_REFERENCED_PROPERTY = 'ReferencedProperty';\n    private static readonly ATTRIBUTE_HAS_STREAM = 'HasStream';\n    private static readonly ATTRIBUTE_CONTAINS_TARGET = 'ContainsTarget';\n    private static readonly ATTRIBUTE_IS_BOUND = 'IsBound';\n    private static readonly ATTRIBUTE_ENTITY_SET_PATH = 'EntitySetPath';\n    private static readonly ATTRIBUTE_IS_COMPOSABLE = 'IsComposable';\n    private static readonly ATTRIBUTE_ENTITY_TYPE = 'EntityType';\n    private static readonly ATTRIBUTE_PATH = 'Path';\n    private static readonly ATTRIBUTE_TARGET = 'Target';\n    private static readonly ATTRIBUTE_FUNCTION = 'Function';\n    private static readonly ATTRIBUTE_ACTION = 'Action';\n    private static readonly ATTRIBUTE_ENTITY_SET = 'EntitySet';\n    private static readonly ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT = 'IncludeInServiceDocument';\n    private static readonly ATTRIBUTE_ABSTRACT = 'Abstract';\n    private static readonly ATTRIBUTE_UNDERLYING_TYPE = 'UnderlyingType';\n    private static readonly ATTRIBUTE_IS_FLAGS = 'IsFlags';\n    private static readonly ATTRIBUTE_EXTENDS = 'Extends';\n    private static readonly ATTRIBUTE_BASE_TERM = 'BaseTerm';\n    private static readonly ATTRIBUTE_APPLIES_TO = 'AppliesTo';\n\n    public readonly version: string;\n    public readonly references: CsdlReference[];\n    public readonly schemas: CsdlSchema[];\n\n    constructor(xml: string) {\n        try {\n            const parser: DOMParser = new DOMParser();\n            const document: Document = parser.parseFromString(xml, 'text/xml');\n\n            this.checkVersion(document);\n\n            this.version = this.getFieldValueByAttribute(\n                new Field(ODataMetadata.ATTRIBUTE_VERSION, FieldType.ATTRIBUTE),\n                document.documentElement.attributes);\n\n            this.references = this.getObjects(document.documentElement, ODataMetadata.TAG_REFERENCE, [\n                new Field(ODataMetadata.ATTRIBUTE_URI, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.TAG_INCLUDE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_INCLUDE_ANNOTATIONS, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n\n            const dataServices: Element = document.documentElement.getElementsByTagName(ODataMetadata.TAG_DATA_SERVICES)[0];\n            this.schemas = this.getObjects(dataServices, ODataMetadata.TAG_SCHEMA, [\n                new Field(ODataMetadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.TAG_ENUM_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_COMPLEX_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ENTITY_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_FUNCTION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ACTION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ENTITY_CONTAINER, FieldType.TAG),\n                new Field(ODataMetadata.TAG_TYPE_DEFINITION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_TERM, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATIONS, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n        } catch (error) {\n            throw new Error('Unable to parse metadata, ' + error);\n        }\n    }\n\n    protected checkVersion(document: Document) {\n        // check version\n        const attributes: NamedNodeMap = document.documentElement.attributes;\n        if (!attributes) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const attr: Attr | null = attributes.getNamedItem('Version');\n        if (attr === null) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const odataVersion = attr?.nodeValue;\n        if (odataVersion !== VERSION_4_0) {\n            throw new Error('OData version \"' + odataVersion + '\" is not supported');\n        }\n    }\n\n    protected getObjects(parentElement: Element, tag: string, fieldNames: Field[]): any[] {\n        let objects: any[] = [];\n\n        const children: HTMLCollection = parentElement.children;\n        for (let index = 0; index \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataAnnotation.html":{"url":"classes/ODataAnnotation.html","title":"class - ODataAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annot: AnnotationConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/annotation.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annot\n                                                  \n                                                        \n                                                                        AnnotationConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/annotation.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AnnotationConfig } from '../types';\n\nexport class ODataAnnotation {\n  type: string;\n  constructor(annot: AnnotationConfig) {\n    this.type = annot.type;\n    Object.assign(this, annot);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataApi.html":{"url":"classes/ODataApi.html","title":"class - ODataApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/api.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                            \n                                creation\n                            \n                            \n                                default\n                            \n                            \n                                    Optional\n                                errorHandler\n                            \n                            \n                                metadataUrl\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                options\n                            \n                            \n                                parsers\n                            \n                            \n                                    Optional\n                                requester\n                            \n                            \n                                schemas\n                            \n                            \n                                serviceRootUrl\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                    Public\n                                findCallableByName\n                            \n                            \n                                    Public\n                                findCallableForType\n                            \n                            \n                                    Public\n                                findCollectionByName\n                            \n                            \n                                    Public\n                                findCollectionForType\n                            \n                            \n                                    Public\n                                findEntitySetByName\n                            \n                            \n                                    Public\n                                findEntitySetForType\n                            \n                            \n                                    Public\n                                findEnumTypeByName\n                            \n                            \n                                    Public\n                                findEnumTypeForType\n                            \n                            \n                                    Public\n                                findModelByName\n                            \n                            \n                                    Public\n                                findModelForType\n                            \n                            \n                                    Public\n                                findParserForType\n                            \n                            \n                                    Private\n                                findSchemaForType\n                            \n                            \n                                    Public\n                                findStructuredTypeByName\n                            \n                            \n                                    Public\n                                findStructuredTypeForType\n                            \n                            \n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/api.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataCache\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            default\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errorHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metadataUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApiOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            requester\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceRootUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCallableByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCallableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:122\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCallableForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCallableForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:92\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCollectionByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCollectionByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCollectionForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCollectionForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEntitySetByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEntitySetByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEntitySetForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEntitySetForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEnumTypeByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEnumTypeByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:112\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEnumTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEnumTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findModelByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findModelByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findModelForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findModelForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findParserForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findParserForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:145\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            findSchemaForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findSchemaForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findStructuredTypeByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findStructuredTypeByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:117\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findStructuredTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findStructuredTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:88\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            request\n                        \n                        \n                    \n                \n            \n            \n                \nrequest(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { NEVER, Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { ApiConfig, ApiOptions, Parser } from './types';\nimport { EDM_PARSERS } from './parsers/index';\nimport { ODataSchema, ODataEnumType, ODataCallable, ODataEntitySet, ODataStructuredType } from './schema/index';\nimport { ODataModel, ODataCollection } from './models/index';\nimport { ODataRequest, ODataResponse } from './resources/index';\nimport { ODataCache, ODataInMemoryCache } from './cache/index';\nimport { ODataApiOptions } from './options';\nimport { DEFAULT_VERSION } from './constants';\n\nexport class ODataApi {\n  requester?: (request: ODataRequest) => Observable;\n  serviceRootUrl: string;\n  metadataUrl: string;\n  name?: string;\n  version: string;\n  default: boolean;\n  creation: Date;\n  // Options\n  options: ODataApiOptions;\n  // Cache\n  cache!: ODataCache;\n  // Error Handler\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  // Base Parsers\n  parsers: { [type: string]: Parser };\n  // Schemas\n  schemas: ODataSchema[];\n\n  constructor(config: ApiConfig) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.name = config.name;\n    this.version = config.version || DEFAULT_VERSION;\n    this.default = config.default || false;\n    this.creation = config.creation || new Date();\n    this.options = new ODataApiOptions(Object.assign({version: this.version}, config.options || {}));\n\n    this.cache = (config.cache as ODataCache) || new ODataInMemoryCache();\n    this.errorHandler = config.errorHandler;\n\n    this.parsers = config.parsers || EDM_PARSERS;\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema, this));\n  }\n\n  configure(settings: { requester?: (request: ODataRequest) => Observable } = {}) {\n    this.requester = settings.requester;\n    this.schemas.forEach(schema => {\n      schema.configure({ findParserForType: (type: string) => this.findParserForType(type) });\n    });\n  }\n\n  request(req: ODataRequest): Observable {\n    let res$ = this.requester !== undefined ? this.requester(req) : NEVER;\n    res$ = res$.pipe(\n      map((res: HttpEvent) => res.type === HttpEventType.Response ? ODataResponse.fromHttpResponse(req, res) : res\n    ));\n\n    if (this.errorHandler !== undefined)\n      res$ = res$.pipe(catchError(this.errorHandler));\n\n    return (this.cache.isCacheable(req)) ?\n      this.cache.handleRequest(req, res$) :\n      res$;\n  }\n\n  //#region Find Schema for Type\n  private findSchemaForType(type: string) {\n    const schemas = this.schemas.filter(s => s.isNamespaceOf(type));\n    if (schemas.length > 1)\n      return schemas.sort((s1, s2) => s1.namespace.length - s2.namespace.length).pop();\n    if (schemas.length === 1) return schemas[0];\n    return undefined;\n  }\n\n  public findEnumTypeForType(type: string) {\n    return this.findSchemaForType(type)?.findEnumTypeForType(type);\n  }\n\n  public findStructuredTypeForType(type: string) {\n    return this.findSchemaForType(type)?.findStructuredTypeForType(type);\n  }\n\n  public findCallableForType(type: string) {\n    return this.findSchemaForType(type)?.findCallableForType(type);\n  }\n\n  public findEntitySetForType(type: string) {\n    return this.findSchemaForType(type)?.findEntitySetForType(type);\n  }\n\n  //#region Model and Collection for type\n  public findModelForType(type: string) {\n    return this.findStructuredTypeForType(type)?.model;\n  }\n\n  public findCollectionForType(type: string) {\n    return this.findStructuredTypeForType(type)?.collection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public findEnumTypeByName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name);\n  }\n\n  public findStructuredTypeByName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name);\n  }\n\n  public findCallableByName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.callables], []>[])\n      .find(e => e.name === name);\n  }\n\n  public findEntitySetByName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entitySets], [])\n      .find(e => e.name === name);\n  }\n\n  //#region Model and Collection for type\n  public findModelByName(name: string) {\n    let schema = this.findStructuredTypeByName(name);\n    return schema !== undefined ? schema.model as typeof ODataModel : null;\n  }\n\n  public findCollectionByName(name: string) {\n    let schema = this.findStructuredTypeByName(name);\n    return schema !== undefined ? schema.collection as typeof ODataCollection : null;\n  }\n  //#endregion\n  //#endregion\n\n  public findParserForType(type: string) {\n    if (type in this.parsers) {\n      return this.parsers[type] as Parser;\n    }\n    // Not edms here\n    if (!type.startsWith(\"Edm.\")) {\n      let value = this.findEnumTypeForType(type) || this.findStructuredTypeForType(type) || this.findCallableForType(type);\n      return value?.parser as Parser;\n    }\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataApiOptions.html":{"url":"classes/ODataApiOptions.html","title":"class - ODataApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataApiOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/options.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ApiOptions\n                            OptionsHelper\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fetchPolicy\n                            \n                            \n                                headers\n                            \n                            \n                                    Optional\n                                ieee754Compatible\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                params\n                            \n                            \n                                    Optional\n                                streaming\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                version\n                            \n                            \n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/options.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FetchPolicy\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ieee754Compatible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            metadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataMetadataType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            streaming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataVersion\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/options.ts:28\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DEFAULT_FETCH_POLICY, DEFAULT_VERSION } from './constants';\nimport { ODataHelper } from './helpers';\nimport { ApiOptions, FetchPolicy, ODataMetadataType, ODataVersion, OptionsHelper } from './types';\n\nexport class ODataApiOptions implements ApiOptions, OptionsHelper {\n  version: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  fetchPolicy: FetchPolicy;\n  streaming?: boolean;\n  // Http\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n\n  constructor(config: ApiOptions) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.metadata = config.metadata;\n    this.stringAsEnum = config.stringAsEnum;\n    this.ieee754Compatible = config.ieee754Compatible;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.withCredentials = config.withCredentials;\n    this.fetchPolicy = config.fetchPolicy || DEFAULT_FETCH_POLICY;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBatchRequest.html":{"url":"classes/ODataBatchRequest.html","title":"class - ODataBatchRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBatchRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/batch.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onError\n                            \n                            \n                                onLoad\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: ODataRequest)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/types/batch.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                        ODataRequest\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataRequest\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:50\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(content: string[], status: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoad\n                        \n                        \n                    \n                \n            \n            \n                \nonLoad(content: string[], status: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ODataClient } from '../../client';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataResource } from '../resource';\nimport { HttpHeaders, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { BOUNDARY_PREFIX_SUFFIX, APPLICATION_JSON, HTTP11, CONTENT_TYPE, NEWLINE, BATCH_PREFIX, $BATCH, MULTIPART_MIXED_BOUNDARY, VERSION_4_0, MULTIPART_MIXED, ODATA_VERSION, ACCEPT, CONTENT_TRANSFER_ENCODING, APPLICATION_HTTP, CONTENT_ID, BINARY, CHANGESET_PREFIX, NEWLINE_REGEXP } from '../../constants';\nimport { ODataRequest } from '../request';\nimport { ODataApi } from '../../api';\nimport { ODataResponse } from '../responses';\n\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n\n// From https://github.com/adamhalasz/uniqid\nvar glast: number;\nfunction now() {\n  let time = Date.now();\n  let last = glast || time;\n  return glast = time > last ? time : last + 1;\n}\nfunction uniqid(prefix?: string, suffix?: string): string { return (prefix ? prefix : '') + now().toString(36) + (suffix ? suffix : ''); }\n\nfunction getHeaderValue(header: string): string {\n  let res: string = header.split(';')[0].trim();\n  res = res.split(':')[1].trim();\n  return res;\n}\n\nfunction getBoundaryDelimiter(contentType: string): string {\n  const contentTypeParts: string[] = contentType.split(';');\n  if (contentTypeParts.length === 2) {\n    const boundary: string = contentType.split(';')[1].trim();\n    const boundaryDelimiter: string = BOUNDARY_PREFIX_SUFFIX + boundary.split('=')[1];\n    return boundaryDelimiter;\n  } else {\n    return '';\n  }\n}\n\nfunction getBoundaryEnd(boundaryDelimiter: string): string {\n  if (!boundaryDelimiter.length) {\n    return '';\n  }\n  const boundaryEnd: string = boundaryDelimiter + BOUNDARY_PREFIX_SUFFIX;\n  return boundaryEnd;\n}\n\nexport class ODataBatchRequest extends Subject> {\n  constructor(public request: ODataRequest)\n   {\n    super();\n  }\n\n  toString() {\n    //TODO: Relative or Absolute url ?\n    let res = [`${this.request.method} ${this.request.pathWithParams} ${HTTP11}`];\n    if (this.request.method === 'POST' || this.request.method === 'PATCH' || this.request.method === 'PUT') {\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_JSON}`);\n    }\n\n    if (this.request.headers instanceof HttpHeaders) {\n      let headers = this.request.headers;\n      res = [\n        ...res,\n        ...headers.keys().map(key => `${key}: ${(headers.getAll(key) || []).join(',')}`)\n      ];\n    }\n\n    return res.join(NEWLINE);\n  }\n\n  onLoad(content: string[], status: { code: number, text: string }) {\n    let headers: HttpHeaders = new HttpHeaders();\n    var index = 1;\n    for (; index = 200 && status.code ({\n        body,\n        headers,\n        status: status.code,\n        statusText: status.text,\n        url: this.request.urlWithParams\n      });\n      this.next(ODataResponse.fromHttpResponse(this.request, res));\n      this.complete();\n    } else {\n      // An unsuccessful request is delivered on the error channel.\n      this.error(new HttpErrorResponse({\n        // The error in this case is the response body (error from the server).\n        error: body,\n        headers,\n        status: status.code,\n        statusText: status.text,\n        url: this.request.urlWithParams\n      }));\n    }\n  }\n\n  onError(content: string[], status: { code: number, text: string }) {\n    const res = new HttpErrorResponse({\n      error: content.join(NEWLINE),\n      status: status.code || 0,\n      statusText: status.text || 'Unknown Error',\n      url: this.request.urlWithParams || undefined,\n    });\n    this.error(res);\n  }\n}\n\nexport class ODataBatchResource extends ODataResource {\n  // VARIABLES\n  private requests: ODataBatchRequest[];\n  private _api: ODataApi;\n  batchBoundary: string;\n\n  constructor(client: ODataClient, api?: ODataApi, segments?: ODataPathSegments) {\n    super(client, segments);\n    this._api = api || client.apiFor(this);\n    this.batchBoundary = uniqid(BATCH_PREFIX);\n    this.requests = [];\n  }\n\n  clone() {\n    //TODO: Clone\n    return new ODataBatchResource(this.client, this._api, this.pathSegments.clone());\n  }\n\n  //#region Factory\n  static factory(client: ODataClient, api?: ODataApi) {\n    let segments = new ODataPathSegments();\n    segments.segment(PathSegmentNames.batch, $BATCH);\n    return new ODataBatchResource(client, api, segments);\n  }\n  //#endregion\n\n  //#region Api Config\n  get api(): ODataApi {\n    return this._api;\n  }\n  ////#endregion\n\n  post(func: (batch: ODataBatchResource) => void) {\n    const current = this.api.request;\n    this.api.request = (req: ODataRequest): Observable => {\n      if (req.api !== this.api)\n        throw new Error(\"Batch Request are for the same api.\");\n      if (req.observe === 'events')\n        throw new Error(\"Batch Request does not allows observe == 'events'.\");\n      this.requests.push(new ODataBatchRequest(req));\n      return this.requests[this.requests.length - 1];\n    }\n    try {\n      func(this);\n    } finally {\n      this.api.request = current;\n    }\n\n    return this.client.post(this, this.body(), {\n      observe: 'response',\n      responseType: 'text',\n      headers: {\n        [ODATA_VERSION]: VERSION_4_0,\n        [CONTENT_TYPE]: MULTIPART_MIXED_BOUNDARY + this.batchBoundary,\n        [ACCEPT]: MULTIPART_MIXED\n      }\n    }).pipe(\n      map((resp: ODataResponse) => {\n        this.handleResponse(resp);\n        return resp;\n      })\n    );\n  }\n\n  body(): string {\n    let res = [];\n    let changesetBoundary: string | null = null;\n    let changesetId = 1;\n\n    for (const batch of this.requests) {\n      // if method is GET and there is a changeset boundary open then close it\n      if (batch.request.method === 'GET' && changesetBoundary !== null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n        changesetBoundary = null;\n      }\n\n      // if there is no changeset boundary open then open a batch boundary\n      if (changesetBoundary === null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${this.batchBoundary}`);\n      }\n\n      // if method is not GET and there is no changeset boundary open then open a changeset boundary\n      if (batch.request.method !== 'GET') {\n        if (changesetBoundary === null) {\n          changesetBoundary = uniqid(CHANGESET_PREFIX);\n          res.push(`${CONTENT_TYPE}: ${MULTIPART_MIXED_BOUNDARY}${changesetBoundary}`);\n          res.push(NEWLINE);\n        }\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}`);\n      }\n\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_HTTP}`);\n      res.push(`${CONTENT_TRANSFER_ENCODING}: ${BINARY}`);\n\n      if (batch.request.method !== 'GET') {\n        res.push(`${CONTENT_ID}: ${changesetId++}`);\n      }\n\n      res.push(NEWLINE);\n      res.push(`${batch}`);\n\n      if (batch.request.method === 'GET' || batch.request.method === 'DELETE') {\n        res.push(NEWLINE);\n      } else {\n        res.push(JSON.stringify(batch.request.body));\n      }\n    }\n\n    if (res.length) {\n      if (changesetBoundary !== null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n        changesetBoundary = null;\n      }\n      res.push(`${BOUNDARY_PREFIX_SUFFIX}${this.batchBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n    }\n    return res.join(NEWLINE);\n  }\n\n  handleResponse(response: ODataResponse) {\n    let chunks: string[][] = [];\n    const contentType: string = response.headers.get(CONTENT_TYPE) || \"\";\n    const batchBoundary: string = getBoundaryDelimiter(contentType);\n    const endLine: string = getBoundaryEnd(batchBoundary);\n\n    const lines: string[] = response.body.split(NEWLINE_REGEXP);\n\n    let changesetResponses: string[][] | null = null;\n    let contentId: number | null = null;\n    let changesetBoundary: string | null = null;\n    let changesetEndLine: string | null = null;\n    let startIndex: number | null = null;\n    for (let index = 0; index  {\n      const req = this.requests[index];\n      const statusParts = chunk[0].split(' ');\n      req.onLoad(chunk.slice(1), {\n        code: Number(statusParts[1]),\n        text: statusParts[2]\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCache.html":{"url":"classes/ODataCache.html","title":"class - ODataCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/cache.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Cache\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEntry\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init?: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/cache.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/cache/cache.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/cache/cache.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: T; lastRead: any; timeout: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\nimport { DEFAULT_TIMEOUT } from '../constants';\nimport { Cache } from '../types';\nimport { ODataRequest, ODataResponse } from '../resources';\n\nexport interface ODataCacheEntry {\n  payload: T;\n  lastRead: number;\n  timeout?: number;\n}\n\nexport abstract class ODataCache implements Cache {\n  timeout: number;\n  entries: Map>;\n  constructor(init?: {timeout?: number}) {\n    this.timeout = init?.timeout || DEFAULT_TIMEOUT;\n    this.entries = new Map>();\n  }\n  abstract getResponse(req: ODataRequest): ODataResponse | undefined;\n  abstract putResponse(req: ODataRequest, res: ODataResponse): void;\n\n  buildEntry(payload: T, timeout?: number) {\n    return {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    };\n  }\n\n  put(key: string, payload: T, timeout?: number) {\n    const entry = {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    } as ODataCacheEntry;\n    this.entries.set(key, entry);\n    this.remove();\n  }\n\n  get(key: string) {\n    const entry = this.entries.get(key);\n    return entry !== undefined && !this.isExpired(entry) ? entry.payload : undefined;\n  }\n\n  private remove() {\n    // remove expired cache entries\n    this.entries.forEach((entry, key) => {\n      if (this.isExpired(entry)) {\n        this.entries.delete(key);\n      }\n    });\n  }\n\n  isExpired(entry: ODataCacheEntry) {\n    return entry.lastRead ) {\n    return req.observe === 'response' && req.method === 'GET';\n  }\n\n  handleRequest(req: ODataRequest, res$: Observable>): Observable> {\n    const policy = req.fetchPolicy;\n    const cached = this.getResponse(req);\n    if (policy === 'no-cache') {\n      return res$;\n    }\n    if (policy === 'cache-only') {\n      if (cached) {\n        return of(cached);\n      } else {\n        return throwError(\"No Cached\");\n      }\n    }\n    if (policy === 'cache-first' || policy === 'cache-and-network' || policy === 'network-only') {\n      res$ = res$.pipe(tap((res: ODataResponse) => {\n        if (res.options.cacheability !== 'no-store')\n          this.putResponse(req, res);\n      }));\n    }\n    return (cached !== undefined && policy !== 'network-only') ?\n      (policy === 'cache-and-network' ? res$.pipe(startWith(cached)) : of(cached)) :\n      res$;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ODataCacheEntry.html":{"url":"interfaces/ODataCacheEntry.html","title":"interface - ODataCacheEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ODataCacheEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/cache.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastRead\n                                \n                                \n                                        payload\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastRead\n                                    \n                                \n                                \n                                    \n                                        lastRead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\nimport { DEFAULT_TIMEOUT } from '../constants';\nimport { Cache } from '../types';\nimport { ODataRequest, ODataResponse } from '../resources';\n\nexport interface ODataCacheEntry {\n  payload: T;\n  lastRead: number;\n  timeout?: number;\n}\n\nexport abstract class ODataCache implements Cache {\n  timeout: number;\n  entries: Map>;\n  constructor(init?: {timeout?: number}) {\n    this.timeout = init?.timeout || DEFAULT_TIMEOUT;\n    this.entries = new Map>();\n  }\n  abstract getResponse(req: ODataRequest): ODataResponse | undefined;\n  abstract putResponse(req: ODataRequest, res: ODataResponse): void;\n\n  buildEntry(payload: T, timeout?: number) {\n    return {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    };\n  }\n\n  put(key: string, payload: T, timeout?: number) {\n    const entry = {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    } as ODataCacheEntry;\n    this.entries.set(key, entry);\n    this.remove();\n  }\n\n  get(key: string) {\n    const entry = this.entries.get(key);\n    return entry !== undefined && !this.isExpired(entry) ? entry.payload : undefined;\n  }\n\n  private remove() {\n    // remove expired cache entries\n    this.entries.forEach((entry, key) => {\n      if (this.isExpired(entry)) {\n        this.entries.delete(key);\n      }\n    });\n  }\n\n  isExpired(entry: ODataCacheEntry) {\n    return entry.lastRead ) {\n    return req.observe === 'response' && req.method === 'GET';\n  }\n\n  handleRequest(req: ODataRequest, res$: Observable>): Observable> {\n    const policy = req.fetchPolicy;\n    const cached = this.getResponse(req);\n    if (policy === 'no-cache') {\n      return res$;\n    }\n    if (policy === 'cache-only') {\n      if (cached) {\n        return of(cached);\n      } else {\n        return throwError(\"No Cached\");\n      }\n    }\n    if (policy === 'cache-first' || policy === 'cache-and-network' || policy === 'network-only') {\n      res$ = res$.pipe(tap((res: ODataResponse) => {\n        if (res.options.cacheability !== 'no-store')\n          this.putResponse(req, res);\n      }));\n    }\n    return (cached !== undefined && policy !== 'network-only') ?\n      (policy === 'cache-and-network' ? res$.pipe(startWith(cached)) : of(cached)) :\n      res$;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCallable.html":{"url":"classes/ODataCallable.html","title":"class - ODataCallable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCallable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/callable.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bound\n                            \n                            \n                                    Optional\n                                composable\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                path\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                isTypeOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: CallableConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/callable.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CallableConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            composable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataCallableParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Parser, CallableConfig } from '../types';\nimport { ODataSchema } from './schema';\nimport { ODataCallableParser } from '../parsers';\n\nexport class ODataCallable {\n  schema: ODataSchema;\n  name: string;\n  path: string;\n  bound?: boolean;\n  composable?: boolean;\n  parser: ODataCallableParser;\n\n  constructor(config: CallableConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.path = config.path || (config.bound ? `${schema.namespace}.${config.name}` : config.name);\n    this.bound = config.bound;\n    this.composable = config.composable;\n    this.parser = new ODataCallableParser(config, schema.namespace);\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser.configure(settings);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCallableParser.html":{"url":"classes/ODataCallableParser.html","title":"class - ODataCallableParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCallableParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/callable.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                parameters\n                            \n                            \n                                parser\n                            \n                            \n                                    Optional\n                                return\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: CallableConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/callable.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CallableConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataParameterParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            return\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     R\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(params: any, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parser, Options, Parameter, CallableConfig, OptionsHelper, StructuredTypeFieldOptions } from '../types';\n\nconst NONE_PARSER = {\n  deserialize(value: any, options: Options) {return value},\n  serialize(value: any, options: Options) {return value}\n} as Parser;\n\nexport class ODataParameterParser implements Parser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  collection?: boolean;\n  nullable?: boolean;\n\n  constructor(name: string, parameter: Parameter) {\n    this.name = name;\n    this.type = parameter.type;\n    this.parser = NONE_PARSER;\n    Object.assign(this, parameter);\n  }\n\n  // Deserialize\n  deserialize(value: any, options: StructuredTypeFieldOptions): Type {\n    return this.parser.deserialize(value, options);\n  }\n\n  // Serialize\n  serialize(value: Type, options: StructuredTypeFieldOptions): any {\n    return this.parser.serialize(value, options);\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser = settings.findParserForType(this.type) || NONE_PARSER;\n  }\n}\n\nexport class ODataCallableParser implements Parser {\n  name: string;\n  type: string;\n  return?: string;\n  parser: Parser;\n  parameters: ODataParameterParser[];\n\n  constructor(config: CallableConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${config.name}`;\n    this.return = config.return;\n    this.parser = NONE_PARSER;\n    this.parameters = Object.entries(config.parameters || [])\n      .map(([name, p]) => new ODataParameterParser(name, p as Parameter));\n  }\n\n  // Deserialize\n  deserialize(value: any, options: StructuredTypeFieldOptions): R {\n    return this.parser.deserialize(value, options);\n  }\n\n  // Serialize\n  serialize(params: any, options: StructuredTypeFieldOptions): any {\n    return Object.assign({}, this.parameters\n      .filter(p => p.name in params && params[p.name] !== undefined)\n      .reduce((acc, p) => Object.assign(acc, { [p.name]: p.serialize(params[p.name], options) }), {})\n    );\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    if (this.return)\n      this.parser = settings.findParserForType(this.return) || NONE_PARSER;\n    this.parameters.forEach(p => p.configure(settings));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCollection.html":{"url":"classes/ODataCollection.html","title":"class - ODataCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/collection.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Iterable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _meta\n                            \n                            \n                                    Protected\n                                _models\n                            \n                            \n                                    Protected\n                                _resource\n                            \n                            \n                                    Private\n                                _state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _action\n                            \n                            \n                                    Protected\n                                _function\n                            \n                            \n                                add\n                            \n                            \n                                all\n                            \n                            \n                                attach\n                            \n                            \n                                clone\n                            \n                            \n                                count\n                            \n                            \n                                fetch\n                            \n                            \n                                next\n                            \n                            \n                                    Protected\n                                parse\n                            \n                            \n                                    Protected\n                                populate\n                            \n                            \n                                remove\n                            \n                            \n                                target\n                            \n                            \n                                toEntities\n                            \n                            \n                                    Public\n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    models\n                                \n                                \n                                    state\n                                \n                                \n                                    _config\n                                \n                                \n                                    _segment\n                                \n                                \n                                    _query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(values?: any[], options: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/collection.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntitiesMeta | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     M[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _action\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _action(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:227\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _function\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _function(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:220\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(model: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            all\n                        \n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \nattach(resource: ODataResource)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataCollection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            next\n                        \n                        \n                    \n                \n            \n            \n                \nnext(options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(values: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            populate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populate(values: any[], annots?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    annots\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(model: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            target\n                        \n                        \n                    \n                \n            \n            \n                \ntarget()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toEntities\n                        \n                        \n                    \n                \n            \n            \n                \ntoEntities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { next(): any; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        models\n                    \n                \n\n                \n                    \n                        getmodels()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _config\n                    \n                \n\n                \n                    \n                        get_config()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:201\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _segment\n                    \n                \n\n                \n                    \n                        get_segment()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:207\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _query\n                    \n                \n\n                \n                    \n                        get_query()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:213\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { map } from 'rxjs/operators';\nimport { Observable, EMPTY } from 'rxjs';\n\nimport {\n  ODataResource,\n  ODataEntitySetResource,\n  ODataEntityResource,\n  ODataNavigationPropertyResource,\n  ODataFunctionResource,\n  ODataEntitiesMeta,\n  HttpOptions,\n  HttpEntitiesOptions\n} from '../resources/index';\n\nimport { ODataModel } from './model';\n\nexport class ODataCollection> implements Iterable {\n  protected _resource: ODataResource | null;\n  protected _meta: ODataEntitiesMeta | null;\n\n  protected _models: M[];\n  get models() {\n    return [...this._models];\n  }\n\n  private _state: {\n    records?: number,\n    skip?: number,\n    top?: number,\n    skiptoken?: string,\n    size?: number,\n    page?: number,\n    pages?: number\n  } = {};\n  get state() {\n    return Object.assign({}, this._state);\n  }\n\n  constructor(values?: any[], options: { resource?: ODataResource, meta?: ODataEntitiesMeta } = {}) {\n    this._resource = null;\n    this._meta = null;\n    this._models = [];\n    if (options.resource instanceof ODataResource)\n      this.attach(options.resource);\n    this.populate((values || []), options.meta);\n  }\n\n  attach(resource: ODataResource) {\n    if (this._resource && this._resource.type() !== resource.type())\n      throw new Error(`Can't reattach ${resource.type()} with ${this._resource.type()}`);\n    this._resource = resource;\n    return this;\n  }\n\n  target() {\n    return this._resource !== null ? this._resource.clone() as ODataResource : null;\n  }\n\n  protected parse(values: any[]): M[] {\n    let resource = this._resource ? this._resource.clone() : null;\n    if (resource instanceof ODataEntitySetResource)\n      resource = resource.entity();\n    return (values as T[]).map(value => {\n      if (resource instanceof ODataEntityResource || resource instanceof ODataNavigationPropertyResource)\n        resource.segment.key(value);\n      return (resource ? resource.clone().asModel(value, this._meta !== null ? this._meta.entity(value) : undefined) : value) as M;\n    });\n  }\n\n  protected populate(values: any[], annots?: ODataEntitiesMeta): this {\n    this._meta = annots || null;\n\n    if (annots instanceof ODataEntitiesMeta) {\n      this._state = {};\n      if (annots.top)\n        this._state.top = annots.top;\n      if (annots.skip)\n        this._state.size = this._state.skip = annots.skip;\n      if (annots.skiptoken)\n        this._state.skiptoken = annots.skiptoken;\n      if (annots.count) {\n        this._state.records = annots.count;\n      if (this._state.records && this._state.size)\n        this._state.pages = Math.ceil(this._state.records / this._state.size);\n      if (this._state.top && this._state.size)\n        this._state.page = (this._state.top / this._state.size) + 1;\n      }\n    } else {\n      this._state = {\n        records: values.length, size: values.length,\n        page: 1, pages: 1\n      };\n    }\n\n    this._models = this.parse(values);\n    return this;\n  }\n\n  toEntities() {\n    return this._models.map(model => model.toEntity());\n  }\n\n  clone() {\n    let options: {resource?: ODataResource, meta?: ODataEntitiesMeta} = {};\n    if (this._resource)\n      options.resource = this._resource.clone();\n    if (this._meta)\n      options.meta = this._meta.clone();\n    let Ctor = this.constructor;\n    return new Ctor(this.models, options);\n  }\n\n  // Iterable\n  public [Symbol.iterator]() {\n    let pointer = 0;\n    let models = this._models;\n    return {\n      next(): IteratorResult {\n        return {\n          done: pointer === models.length,\n          value: models[pointer++]\n        };\n      }\n    }\n  }\n\n  // Requests\n  fetch(options?: HttpOptions & {withCount?: boolean}): Observable {\n    if (this._resource instanceof ODataEntitySetResource) {\n      return this._resource.get(options).pipe(\n      map(({entities, meta}) => this.populate(entities || [], meta)));\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      return this._resource.get(\n        Object.assign({responseType: 'entities'}, options || {})).pipe(\n      map(({entities, meta}) => this.populate(entities || [], meta)));\n    } else if (this._resource instanceof ODataFunctionResource) {\n      return this._resource.get(\n        Object.assign({responseType: 'entities'}, options || {})).pipe(\n      map(({entities, meta}) => this.populate(entities || [], meta)));\n    }\n    throw new Error(\"Not Yet!\");\n  }\n\n  next(options?: HttpOptions & {withCount?: boolean}) {\n    if (this._state.skip) {\n      this._query.skip(this._state.skip);\n      return this.fetch(options);\n    }\n    else if (this._state.skiptoken) {\n      this._query.skiptoken(this._state.skiptoken);\n      return this.fetch(options);\n    }\n    return EMPTY;\n  }\n\n  all(): Observable {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = this._resource.all();\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      obs$ = this._resource.all();\n    } else {\n      throw new Error(\"Not Yet!\");\n    }\n    return obs$.pipe(\n      map(entities => this.populate(entities)));\n  }\n\n  // Mutate\n  add(model: M): Observable {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = model.save();\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      let ref = this._resource.reference();\n      obs$ = ref.add(model.target() as ODataEntityResource);\n    } else {\n      throw new Error(`Can't add`);\n    }\n    return obs$.pipe(map(() => this));\n  }\n\n  remove(model: M) {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = model.destroy();\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      let ref = this._resource.reference();\n      obs$ = ref.remove(model.target() as ODataEntityResource);\n    } else {\n      throw new Error(`Can't remove`);\n    }\n    return obs$.pipe(map(() => this));\n  }\n\n  // Count\n  count() {\n    return (this._resource as ODataEntitySetResource).count().get();\n  }\n\n  get _config() {\n    if (!this._resource)\n      throw new Error(`Can't config without ODataResource`);\n    return (this._resource as ODataEntitySetResource).schema;\n  }\n\n  get _segment() {\n    if (!this._resource)\n      throw new Error(`Can't call without ODataResource`);\n    return (this._resource as ODataEntitySetResource).segment;\n  }\n\n  get _query() {\n    if (!this._resource)\n      throw new Error(`Can't query without ODataResource`);\n    return (this._resource as ODataEntitySetResource).query;\n  }\n\n  // Function\n  protected _function(path: string) {\n    if (!this._resource)\n      throw new Error(`Can't navigationProperty without ODataResource`);\n    return (this._resource as ODataEntitySetResource).function(path);\n  }\n\n  // Action\n  protected _action(path: string) {\n    if (!this._resource)\n      throw new Error(`Can't navigationProperty without ODataResource`);\n    return (this._resource as ODataEntitySetResource).action(path);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCountResource.html":{"url":"classes/ODataCountResource.html","title":"class - ODataCountResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCountResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/count.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                client\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                get\n                            \n                            \n                                alias\n                            \n                            \n                                asCollection\n                            \n                            \n                                asModel\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:30\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataCountResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(client: ODataClient, segments: ODataPathSegments, options: ODataQueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                ODataClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                                ODataPathSegments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataCountResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:125\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asCollection\n                        \n                        \n                    \n                \n            \n            \n                \nasCollection(entities: Partial[], meta?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:84\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asModel\n                        \n                        \n                    \n                \n            \n            \n                \nasModel(entity: Partial, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:75\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:102\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:226\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:218\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:64\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:203\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:210\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:104\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:45\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataQueryOptions, QueryOptionNames } from '../query-options';\nimport { ODataResource } from '../resource';\nimport { ODataClient } from '../../client';\nimport { HttpOptions } from './options';\nimport { $COUNT } from '../../constants';\n\nexport class ODataCountResource extends ODataResource {\n  //#region Factory\n  static factory(client: ODataClient, segments: ODataPathSegments, options: ODataQueryOptions) {\n    segments.segment(PathSegmentNames.count, $COUNT).setType('Edm.Int32');\n    options.keep(QueryOptionNames.filter, QueryOptionNames.search);\n    return new ODataCountResource(client, segments, options);\n  }\n\n  clone() {\n    return new ODataCountResource(this.client, this.pathSegments.clone(), this.queryOptions.clone());\n  }\n  //#endregion\n\n  //#region Requests\n  get(options?: HttpOptions): Observable {\n    return super.get(\n      Object.assign({responseType: 'value'}, options || {})\n    );\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitiesMeta.html":{"url":"classes/ODataEntitiesMeta.html","title":"class - ODataEntitiesMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitiesMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataMeta\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                entity\n                            \n                            \n                                function\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    readLink\n                                \n                                \n                                    count\n                                \n                                \n                                    nextLink\n                                \n                                \n                                    deltaLink\n                                \n                                \n                                    top\n                                \n                                \n                                    skip\n                                \n                                \n                                    skiptoken\n                                \n                                \n                                    functions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:177\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitiesMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \nentity(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityMeta\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:146\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        count\n                    \n                \n\n                \n                    \n                        getcount()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:150\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextLink\n                    \n                \n\n                \n                    \n                        getnextLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:154\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deltaLink\n                    \n                \n\n                \n                    \n                        getdeltaLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:158\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n\n                \n                    \n                        gettop()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:162\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:167\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skiptoken\n                    \n                \n\n                \n                    \n                        getskiptoken()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:172\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:178\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    if (!this.options)\n      throw Error(\"No helper\");\n    return this.options.helper;\n  }\n\n  constructor(data: Object, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    //TODO: Default options\n    this.options = opt.options;\n    this.annotations = (this.options ? this.odv.annotations(data) : data) || {};\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context: any;\n  get context(): ODataContext {\n    if (!this._context) {\n      this._context = this.odv.context(this.annotations) || {};\n    }\n    return this._context;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = this.odv.properties(this.annotations) || {};\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone() : ODataMeta;\n  abstract data(data: Object) : Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag(): string {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink(): string {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink(): string {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink(): string {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType(): string {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations) || {};\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n\n  entity(data: Object) {\n    return new ODataEntityMeta(data, {options: this.options});\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count(): number {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink(): string {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink(): string {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityContainer.html":{"url":"classes/ODataEntityContainer.html","title":"class - ODataEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/entity-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                entitySets\n                            \n                            \n                                name\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntityContainerConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/entity-container.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntityContainerConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entitySets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntitySet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { EntityContainerConfig } from '../types';\nimport { ODataEntitySet } from './entity-set';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataEntityContainer {\n  schema: ODataSchema;\n  name: string;\n  annotations: ODataAnnotation[];\n  entitySets: ODataEntitySet[];\n  constructor(config: EntityContainerConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.annotations = (config.annotations || []);\n    this.entitySets = (config.entitySets || []).map(config => new ODataEntitySet(config, schema));\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityFieldParser.html":{"url":"classes/ODataEntityFieldParser.html","title":"class - ODataEntityFieldParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityFieldParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StructuredTypeField\n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                collection\n                            \n                            \n                                    Optional\n                                default\n                            \n                            \n                                    Optional\n                                field\n                            \n                            \n                                key\n                            \n                            \n                                    Optional\n                                maxLength\n                            \n                            \n                                name\n                            \n                            \n                                navigation\n                            \n                            \n                                nullable\n                            \n                            \n                                    Private\n                                parser\n                            \n                            \n                                    Optional\n                                precision\n                            \n                            \n                                    Optional\n                                ref\n                            \n                            \n                                    Optional\n                                scale\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                annotation\n                            \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                isComplexType\n                            \n                            \n                                isNavigation\n                            \n                            \n                                    Private\n                                parse\n                            \n                            \n                                resolve\n                            \n                            \n                                serialize\n                            \n                            \n                                    Private\n                                toJson\n                            \n                            \n                                toJsonSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, field: StructuredTypeField)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/entity.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        StructuredTypeField\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Annotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            default\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ref\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            annotation\n                        \n                        \n                    \n                \n            \n            \n                \nannotation(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplexType\n                        \n                        \n                    \n                \n            \n            \n                \nisComplexType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNavigation\n                        \n                        \n                    \n                \n            \n            \n                \nisNavigation()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(parser: ODataEntityParser, value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parser\n                                    \n                                                ODataEntityParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: Type, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJson(parser: ODataEntityParser, value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parser\n                                    \n                                                ODataEntityParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaExpandOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                JsonSchemaExpandOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types } from '../utils';\nimport { Parser, StructuredTypeField, JsonSchemaExpandOptions, JsonSchemaConfig, StructuredTypeConfig, Annotation, OptionsHelper } from '../types';\n\nconst NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value\n} as Parser;\n\nexport class ODataEntityFieldParser implements StructuredTypeField, Parser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  default?: any;\n  maxLength?: number;\n  key: boolean;\n  collection: boolean;\n  nullable: boolean;\n  navigation: boolean;\n  field?: string;\n  precision?: number;\n  scale?: number;\n  ref?: string;\n  annotations: Annotation[];\n\n  constructor(name: string, field: StructuredTypeField) {\n    this.name = name;\n    this.type = field.type;\n    this.parser = NONE_PARSER;\n    this.annotations = field.annotations || [];\n    this.default = field.default;\n    this.maxLength = field.maxLength;\n    this.key = field.key !== undefined ? field.key : false;\n    this.collection = field.collection !== undefined ? field.collection : false;\n    this.nullable = field.nullable !== undefined ? field.nullable : true;\n    this.navigation = field.navigation !== undefined ? field.navigation : false;\n    this.field = field.field;\n    this.precision = field.precision;\n    this.scale = field.scale;\n    this.ref = field.ref;\n  }\n  annotation(type: string) {\n    return this.annotations.find(annot => annot.type === type);\n  }\n\n  resolve(value: any) {\n    return (this.ref || this.name).split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  private parse(parser: ODataEntityParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).deserialize(value, options);\n    }\n    return parser.deserialize(value, options);\n  }\n\n  deserialize(value: any, options: OptionsHelper): Type {\n    const parser = this.parser;\n    if (parser instanceof ODataEntityParser) {\n      return Array.isArray(value) ?\n        value.map(v => this.parse(parser, v, options)) :\n        this.parse(parser, value, options);\n    }\n    return parser.deserialize(value, Object.assign({field: this}, options));\n  }\n\n  // Serialize\n  private toJson(parser: ODataEntityParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).serialize(value, options);\n    }\n    return parser.serialize(value, options);\n  }\n\n  serialize(value: Type, options: OptionsHelper): any {\n    const parser = this.parser;\n    if (parser instanceof ODataEntityParser) {\n      return Array.isArray(value) ?\n        value.map(v => this.toJson(parser, v, options)) :\n        this.toJson(parser, value, options);\n    }\n    return parser.serialize(value, Object.assign({field: this}, options));\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser = settings.findParserForType(this.type) || NONE_PARSER;\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property: any = this.parser instanceof ODataEntityParser ? this.parser.toJsonSchema(options) : {\n      title: `The ${this.name} field`,\n      type: this.parser ? \"object\" : this.type\n    };\n    if (this.maxLength)\n      property.maxLength = this.maxLength;\n    if (this.collection)\n      property = {\n        type: \"array\",\n        items: property,\n        additionalItems: false\n      };\n    return property;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n\n  isComplexType() {\n    return this.parser instanceof ODataEntityParser && this.parser.isComplexType();\n  }\n}\n\nexport class ODataEntityParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  base?: string;\n  parent?: ODataEntityParser;\n  children: ODataEntityParser[];\n  fields: ODataEntityFieldParser[];\n\n  constructor(config: StructuredTypeConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.children = [];\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataEntityFieldParser(name, f as StructuredTypeField));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias)\n      names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options: OptionsHelper): Type {\n    if (this.parent)\n      value = this.parent.deserialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && value[f.name] !== undefined && value[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.deserialize(value[f.name], options) }), {})\n    );\n  }\n\n  // Serialize\n  serialize(value: Type, options: OptionsHelper): any {\n    if (this.parent)\n      value = this.parent.serialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && (value as any)[f.name] !== undefined && (value as any)[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.serialize((value as any)[f.name], options) }), {})\n    );\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    if (this.base) {\n      const parent = settings.findParserForType(this.base) as ODataEntityParser;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(config: JsonSchemaConfig = {}) {\n    let properties: any = this.fields\n      .filter(f => (!f.navigation || (config.expand && f.name in config.expand)) && (!config.select || (config.select).indexOf(f.name) !== -1))\n      .map(f => ({ [f.name]: f.toJsonSchema((config as any)[f.name]) }))\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    return {\n      title: `The ${this.name} schema`,\n      type: \"object\",\n      description: `The ${this.name} configuration`,\n      properties: properties,\n      required: this.fields.filter(f => !f.nullable).map(f => f.name)\n    };\n  }\n\n  typeFor(name: string): string | null {\n    const field = this.fields.find(f => f.name === name);\n    if (field === undefined && this.parent !== undefined)\n      return this.parent.typeFor(name);\n    return field !== undefined ? field.type : null;\n  }\n\n  keys() {\n    const keys: ODataEntityFieldParser[] = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {}) as any;\n    const values = Object.values(key);\n    if (values.length === 1) {\n      // Single primitive key value\n      key = values[0];\n    } else if (values.some(v => v === undefined)) {\n      // Compose key, needs all values\n      key = null;\n    }\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplexType() {\n    return this.keys().length === 0;\n  }\n\n  find(predicate: (p: ODataEntityParser) => boolean): ODataEntityParser | undefined {\n    if (predicate(this))\n      return this;\n    return this.children.find(c => c.find(predicate));\n  }\n\n  findParser(predicate: (p: ODataEntityParser) => boolean): Parser {\n    return this.find(predicate) || NONE_PARSER;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityMeta.html":{"url":"classes/ODataEntityMeta.html","title":"class - ODataEntityMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataMeta\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attributes\n                            \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                function\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                                \n                                    id\n                                \n                                \n                                    etag\n                                \n                                \n                                    mediaEtag\n                                \n                                \n                                    metadataEtag\n                                \n                                \n                                    readLink\n                                \n                                \n                                    editLink\n                                \n                                \n                                    mediaReadLink\n                                \n                                \n                                    mediaEditLink\n                                \n                                \n                                    mediaContentType\n                                \n                                \n                                    functions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attributes\n                        \n                        \n                    \n                \n            \n            \n                \nattributes(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:76\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntityMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:80\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:84\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        etag\n                    \n                \n\n                \n                    \n                        getetag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:88\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEtag\n                    \n                \n\n                \n                    \n                        getmediaEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:92\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        metadataEtag\n                    \n                \n\n                \n                    \n                        getmetadataEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:96\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:100\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        editLink\n                    \n                \n\n                \n                    \n                        geteditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaReadLink\n                    \n                \n\n                \n                    \n                        getmediaReadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:108\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEditLink\n                    \n                \n\n                \n                    \n                        getmediaEditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:112\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaContentType\n                    \n                \n\n                \n                    \n                        getmediaContentType()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:116\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:121\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    if (!this.options)\n      throw Error(\"No helper\");\n    return this.options.helper;\n  }\n\n  constructor(data: Object, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    //TODO: Default options\n    this.options = opt.options;\n    this.annotations = (this.options ? this.odv.annotations(data) : data) || {};\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context: any;\n  get context(): ODataContext {\n    if (!this._context) {\n      this._context = this.odv.context(this.annotations) || {};\n    }\n    return this._context;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = this.odv.properties(this.annotations) || {};\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone() : ODataMeta;\n  abstract data(data: Object) : Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag(): string {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink(): string {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink(): string {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink(): string {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType(): string {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations) || {};\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n\n  entity(data: Object) {\n    return new ODataEntityMeta(data, {options: this.options});\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count(): number {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink(): string {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink(): string {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityParser.html":{"url":"classes/ODataEntityParser.html","title":"class - ODataEntityParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                    Optional\n                                base\n                            \n                            \n                                children\n                            \n                            \n                                fields\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                            \n                                    Optional\n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                find\n                            \n                            \n                                findParser\n                            \n                            \n                                isComplexType\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                keys\n                            \n                            \n                                resolveKey\n                            \n                            \n                                serialize\n                            \n                            \n                                toJsonSchema\n                            \n                            \n                                typeFor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: StructuredTypeConfig, namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/entity.ts:124\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StructuredTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityFieldParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:122\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(predicate: (p: ODataEntityParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityParser | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findParser\n                        \n                        \n                    \n                \n            \n            \n                \nfindParser(predicate: (p: ODataEntityParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Parser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplexType\n                        \n                        \n                    \n                \n            \n            \n                \nisComplexType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keys\n                        \n                        \n                    \n                \n            \n            \n                \nkeys()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveKey\n                        \n                        \n                    \n                \n            \n            \n                \nresolveKey(attrs: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: Type, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(config: JsonSchemaConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            JsonSchemaConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { title: string; type: string; description: string; properties: any; required: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeFor\n                        \n                        \n                    \n                \n            \n            \n                \ntypeFor(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types } from '../utils';\nimport { Parser, StructuredTypeField, JsonSchemaExpandOptions, JsonSchemaConfig, StructuredTypeConfig, Annotation, OptionsHelper } from '../types';\n\nconst NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value\n} as Parser;\n\nexport class ODataEntityFieldParser implements StructuredTypeField, Parser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  default?: any;\n  maxLength?: number;\n  key: boolean;\n  collection: boolean;\n  nullable: boolean;\n  navigation: boolean;\n  field?: string;\n  precision?: number;\n  scale?: number;\n  ref?: string;\n  annotations: Annotation[];\n\n  constructor(name: string, field: StructuredTypeField) {\n    this.name = name;\n    this.type = field.type;\n    this.parser = NONE_PARSER;\n    this.annotations = field.annotations || [];\n    this.default = field.default;\n    this.maxLength = field.maxLength;\n    this.key = field.key !== undefined ? field.key : false;\n    this.collection = field.collection !== undefined ? field.collection : false;\n    this.nullable = field.nullable !== undefined ? field.nullable : true;\n    this.navigation = field.navigation !== undefined ? field.navigation : false;\n    this.field = field.field;\n    this.precision = field.precision;\n    this.scale = field.scale;\n    this.ref = field.ref;\n  }\n  annotation(type: string) {\n    return this.annotations.find(annot => annot.type === type);\n  }\n\n  resolve(value: any) {\n    return (this.ref || this.name).split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  private parse(parser: ODataEntityParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).deserialize(value, options);\n    }\n    return parser.deserialize(value, options);\n  }\n\n  deserialize(value: any, options: OptionsHelper): Type {\n    const parser = this.parser;\n    if (parser instanceof ODataEntityParser) {\n      return Array.isArray(value) ?\n        value.map(v => this.parse(parser, v, options)) :\n        this.parse(parser, value, options);\n    }\n    return parser.deserialize(value, Object.assign({field: this}, options));\n  }\n\n  // Serialize\n  private toJson(parser: ODataEntityParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).serialize(value, options);\n    }\n    return parser.serialize(value, options);\n  }\n\n  serialize(value: Type, options: OptionsHelper): any {\n    const parser = this.parser;\n    if (parser instanceof ODataEntityParser) {\n      return Array.isArray(value) ?\n        value.map(v => this.toJson(parser, v, options)) :\n        this.toJson(parser, value, options);\n    }\n    return parser.serialize(value, Object.assign({field: this}, options));\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser = settings.findParserForType(this.type) || NONE_PARSER;\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property: any = this.parser instanceof ODataEntityParser ? this.parser.toJsonSchema(options) : {\n      title: `The ${this.name} field`,\n      type: this.parser ? \"object\" : this.type\n    };\n    if (this.maxLength)\n      property.maxLength = this.maxLength;\n    if (this.collection)\n      property = {\n        type: \"array\",\n        items: property,\n        additionalItems: false\n      };\n    return property;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n\n  isComplexType() {\n    return this.parser instanceof ODataEntityParser && this.parser.isComplexType();\n  }\n}\n\nexport class ODataEntityParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  base?: string;\n  parent?: ODataEntityParser;\n  children: ODataEntityParser[];\n  fields: ODataEntityFieldParser[];\n\n  constructor(config: StructuredTypeConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.children = [];\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataEntityFieldParser(name, f as StructuredTypeField));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias)\n      names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options: OptionsHelper): Type {\n    if (this.parent)\n      value = this.parent.deserialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && value[f.name] !== undefined && value[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.deserialize(value[f.name], options) }), {})\n    );\n  }\n\n  // Serialize\n  serialize(value: Type, options: OptionsHelper): any {\n    if (this.parent)\n      value = this.parent.serialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && (value as any)[f.name] !== undefined && (value as any)[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.serialize((value as any)[f.name], options) }), {})\n    );\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    if (this.base) {\n      const parent = settings.findParserForType(this.base) as ODataEntityParser;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(config: JsonSchemaConfig = {}) {\n    let properties: any = this.fields\n      .filter(f => (!f.navigation || (config.expand && f.name in config.expand)) && (!config.select || (config.select).indexOf(f.name) !== -1))\n      .map(f => ({ [f.name]: f.toJsonSchema((config as any)[f.name]) }))\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    return {\n      title: `The ${this.name} schema`,\n      type: \"object\",\n      description: `The ${this.name} configuration`,\n      properties: properties,\n      required: this.fields.filter(f => !f.nullable).map(f => f.name)\n    };\n  }\n\n  typeFor(name: string): string | null {\n    const field = this.fields.find(f => f.name === name);\n    if (field === undefined && this.parent !== undefined)\n      return this.parent.typeFor(name);\n    return field !== undefined ? field.type : null;\n  }\n\n  keys() {\n    const keys: ODataEntityFieldParser[] = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {}) as any;\n    const values = Object.values(key);\n    if (values.length === 1) {\n      // Single primitive key value\n      key = values[0];\n    } else if (values.some(v => v === undefined)) {\n      // Compose key, needs all values\n      key = null;\n    }\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplexType() {\n    return this.keys().length === 0;\n  }\n\n  find(predicate: (p: ODataEntityParser) => boolean): ODataEntityParser | undefined {\n    if (predicate(this))\n      return this;\n    return this.children.find(c => c.find(predicate));\n  }\n\n  findParser(predicate: (p: ODataEntityParser) => boolean): Parser {\n    return this.find(predicate) || NONE_PARSER;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityService.html":{"url":"classes/ODataEntityService.html","title":"class - ODataEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assign\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Public\n                                fetchOrCreate\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                                \n                                    entitySetSchema\n                                \n                                \n                                    entitySchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient, name: string, entityType?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assign(entity: Partial, attrs: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:23\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:24\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitySetResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchOrCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchOrCreate(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        entitySetSchema\n                    \n                \n\n                \n                    \n                        getentitySetSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        entitySchema\n                    \n                \n\n                \n                    \n                        getentitySchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity.ts:44\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataEntitySetResource, ODataEntityResource, HttpOptions } from '../resources';\nimport { ODataClient } from \"../client\";\nimport { EntityKey } from '../types';\nimport { ODataCollection } from '../models/collection';\nimport { ODataModel } from '../models/model';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\n\nexport class ODataEntityService {\n  constructor(protected client: ODataClient, protected name: string, protected entityType?: string) { }\n\n  public entities(): ODataEntitySetResource {\n    return this.client.entitySet(this.name, this.entityType);\n  }\n\n  public entity(key?: EntityKey): ODataEntityResource {\n    return this.entities()\n      .entity(key);\n  }\n\n  // Models\n  public attach>(value: M): M;\n  public attach>>(value: C): C;\n  public attach(value: any): any {\n    if (value instanceof ODataModel) {\n      return value.attach(this.entities().entity(value.toEntity()));\n    } else if (value instanceof ODataCollection) {\n      return value.attach(this.entities());\n    }\n  }\n\n  // Service Config\n  get api() {\n    return this.client.apiForType(this.entityType);\n  }\n\n  // Service Config\n  get entitySetSchema() {\n    return this.api.findEntitySetByName(this.name) || null;\n  }\n\n  // Entity Config\n  get entitySchema() {\n    if (this.entityType === undefined)\n      return null;\n    return this.api.findStructuredTypeForType(this.entityType) || null;\n  }\n\n  public create(entity: Partial, options?: HttpOptions): Observable {\n    return this.entities()\n      .post(entity, options)\n      .pipe(map(({entity}) => entity));\n  }\n\n  public update(entity: Partial, options?: HttpOptions): Observable {\n    const odata = this.api.options.helper;\n    const etag = odata.etag(entity);\n    const res = this.entity(entity);\n    if (res.segment.key().empty())\n      return throwError(\"Resource without key\");\n    return this.entity(entity as EntityKey)\n      .put(entity, Object.assign({etag}, options || {}))\n      .pipe(map(({entity}) => entity));\n  }\n\n  public assign(entity: Partial, attrs: Partial, options?: HttpOptions): Observable {\n    const odata = this.api.options.helper;\n    const etag = odata.etag(entity);\n    const res = this.entity(entity);\n    if (res.segment.key().empty())\n      return throwError(\"Resource without key\");\n    return res.patch(attrs, Object.assign({etag}, options || {}))\n      .pipe(map(({entity: newentity, meta}) => newentity ? newentity :\n        Object.assign(entity, attrs, meta.annotations) as T));\n  }\n\n  public destroy(entity: Partial, options?: HttpOptions) {\n    const odata = this.api.options.helper;\n    const etag = odata.etag(entity);\n    const res = this.entity(entity);\n    if (res.segment.key().empty())\n      return throwError(\"Resource without key\");\n    return res.delete(Object.assign({etag}, options || {}));\n  }\n\n  // Shortcuts\n  public fetchOrCreate(entity: Partial, options?: HttpOptions): Observable {\n    return this.entity(entity).fetch(options)\n      .pipe(catchError((error: HttpErrorResponse) => {\n        if (error.status === 404)\n          return this.create(entity, options);\n        else\n          return throwError(error);\n      }));\n  }\n\n  public save(entity: Partial, options?: HttpOptions) {\n    return this.entity(entity).segment.key().empty() ?\n      this.create(entity, options) :\n      this.update(entity, options);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitySet.html":{"url":"classes/ODataEntitySet.html","title":"class - ODataEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/entity-set.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                name\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isTypeOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntitySetConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/entity-set.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntitySetConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { EntitySetConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataEntitySet {\n  schema: ODataSchema\n  name: string;\n  annotations: ODataAnnotation[];\n  constructor(config: EntitySetConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumFieldParser.html":{"url":"classes/ODataEnumFieldParser.html","title":"class - ODataEnumFieldParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumFieldParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/enum.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            EnumTypeField\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                annotation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, field: EnumTypeField)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/enum.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        EnumTypeField\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Annotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            annotation\n                        \n                        \n                    \n                \n            \n            \n                \nannotation(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EnumHelper } from '../helpers';\nimport { JsonSchemaExpandOptions, EnumTypeConfig, Parser, StructuredTypeFieldOptions, EnumTypeField, Annotation, OptionsHelper } from '../types';\n\nexport class ODataEnumFieldParser implements EnumTypeField {\n  name: string;\n  value: number;\n  annotations: Annotation[];\n  constructor(name: string, field: EnumTypeField) {\n    this.name = name;\n    this.value = field.value;\n    this.annotations = field.annotations || [];\n  }\n  annotation(type: string) {\n    return this.annotations.find(annot => annot.type === type);\n  }\n}\n\nexport class ODataEnumParser implements Parser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: ODataEnumFieldParser[];\n\n  constructor(config: EnumTypeConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${config.name}`;\n    this.flags = config.flags;\n    this.members = config.members;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataEnumFieldParser(name, f as EnumTypeField));\n  }\n\n  // Deserialize\n  deserialize(value: string, options: OptionsHelper): Type {\n    // string -> Type\n    if (this.flags) {\n      return EnumHelper.toValues(this.members, value).reduce((acc, v) => acc | v, 0) as any;\n    } else {\n      return EnumHelper.toValue(this.members, value) as any;\n    }\n  }\n\n  // Serialize\n  serialize(value: Type, options: OptionsHelper): string {\n    // Type -> string\n    if (this.flags) {\n      let names = EnumHelper.toNames(this.members, value);\n      if (!options.stringAsEnum)\n        names = names.map(name => `${this.type}'${name}'`)\n      return names.join(\", \");\n    } else {\n      let name = EnumHelper.toName(this.members, (value) as number);\n      if (!options.stringAsEnum)\n        name = `${this.type}'${name}'`;\n      return name;\n    }\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = {\n      title: `The ${this.name} field`,\n      type: \"string\"\n    };\n    property.enum = EnumHelper.names(this.members);\n    return property;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumParser.html":{"url":"classes/ODataEnumParser.html","title":"class - ODataEnumParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/enum.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                    Optional\n                                flags\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                            \n                                toJsonSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumTypeConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/enum.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumFieldParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            flags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: string, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: Type, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaExpandOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                JsonSchemaExpandOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EnumHelper } from '../helpers';\nimport { JsonSchemaExpandOptions, EnumTypeConfig, Parser, StructuredTypeFieldOptions, EnumTypeField, Annotation, OptionsHelper } from '../types';\n\nexport class ODataEnumFieldParser implements EnumTypeField {\n  name: string;\n  value: number;\n  annotations: Annotation[];\n  constructor(name: string, field: EnumTypeField) {\n    this.name = name;\n    this.value = field.value;\n    this.annotations = field.annotations || [];\n  }\n  annotation(type: string) {\n    return this.annotations.find(annot => annot.type === type);\n  }\n}\n\nexport class ODataEnumParser implements Parser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: ODataEnumFieldParser[];\n\n  constructor(config: EnumTypeConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${config.name}`;\n    this.flags = config.flags;\n    this.members = config.members;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataEnumFieldParser(name, f as EnumTypeField));\n  }\n\n  // Deserialize\n  deserialize(value: string, options: OptionsHelper): Type {\n    // string -> Type\n    if (this.flags) {\n      return EnumHelper.toValues(this.members, value).reduce((acc, v) => acc | v, 0) as any;\n    } else {\n      return EnumHelper.toValue(this.members, value) as any;\n    }\n  }\n\n  // Serialize\n  serialize(value: Type, options: OptionsHelper): string {\n    // Type -> string\n    if (this.flags) {\n      let names = EnumHelper.toNames(this.members, value);\n      if (!options.stringAsEnum)\n        names = names.map(name => `${this.type}'${name}'`)\n      return names.join(\", \");\n    } else {\n      let name = EnumHelper.toName(this.members, (value) as number);\n      if (!options.stringAsEnum)\n        name = `${this.type}'${name}'`;\n      return name;\n    }\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = {\n      title: `The ${this.name} field`,\n      type: \"string\"\n    };\n    property.enum = EnumHelper.names(this.members);\n    return property;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumType.html":{"url":"classes/ODataEnumType.html","title":"class - ODataEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                findFieldByName\n                            \n                            \n                                findFieldByValue\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                mapFields\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumTypeConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/enum-type.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fields\n                        \n                        \n                    \n                \n            \n            \n                \nfields()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEnumFieldParser[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findFieldByName\n                        \n                        \n                    \n                \n            \n            \n                \nfindFieldByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findFieldByValue\n                        \n                        \n                    \n                \n            \n            \n                \nfindFieldByValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapFields\n                        \n                        \n                    \n                \n            \n            \n                \nmapFields(mapper: (field: ODataEnumFieldParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapper\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:27\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { ODataEnumFieldParser, ODataEnumParser } from '../parsers';\nimport { EnumTypeConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataEnumType {\n  schema: ODataSchema;\n  name: string;\n  parser: ODataEnumParser;\n  members: { [name: string]: number } | { [value: number]: string };\n  annotations: ODataAnnotation[];\n  constructor(config: EnumTypeConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.members = config.members;\n    this.parser = new ODataEnumParser(config, schema.namespace);\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n\n  fields(): ODataEnumFieldParser[] {\n    return this.parser.fields;\n  }\n\n  findFieldByName(name: string) {\n    return this.fields().find(f => f.name === name);\n  }\n\n  findFieldByValue(value: number) {\n    return this.fields().find(f => f.value === value);\n  }\n\n  mapFields(mapper: (field: ODataEnumFieldParser) => T) {\n    return this.fields().map(mapper);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataInMemoryCache.html":{"url":"classes/ODataInMemoryCache.html","title":"class - ODataInMemoryCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataInMemoryCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/memory.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                            \n                                putResponse\n                            \n                            \n                                buildEntry\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init?: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/memory.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:14\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/memory.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \nputResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/memory.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: T; lastRead: any; timeout: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache } from './cache';\nexport class ODataInMemoryCache extends ODataCache> {\n  constructor(init?: {timeout?: number}) {\n    super(init);\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.urlWithParams, res, res.options.maxAge);\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    return this.get(req.urlWithParams);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataInStorageCache.html":{"url":"classes/ODataInStorageCache.html","title":"class - ODataInStorageCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataInStorageCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/storage.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                            \n                                putResponse\n                            \n                            \n                                buildEntry\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/storage.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:14\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/storage.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \nputResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/storage.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: T; lastRead: any; timeout: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache, ODataCacheEntry } from './cache';\n\ninterface StoragePayload {\n    body: any | null;\n    headers: {[name: string]: string | string[]};\n    status: number;\n    statusText: string;\n    url: string | null;\n}\n\nexport class ODataInStorageCache extends ODataCache {\n  constructor(init: {timeout?: number, name: string, storage?: Storage}) {\n    super(init);\n    const name = init.name;\n    const storage = init.storage || sessionStorage;\n    this.entries = new Map>(JSON.parse(storage.getItem(name) || \"[]\"));\n    window.addEventListener(\"beforeunload\", ((backend, key, responses) => function() {\n      backend.setItem(key, JSON.stringify(Array.from(responses.entries())))\n    })(storage, name, this.entries));\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.urlWithParams, res.toJSON(), res.options.maxAge);\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    const data = this.get(req.urlWithParams);\n\n    return data !== undefined ? ODataResponse.fromJSON(req, data) : undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataMeta.html":{"url":"classes/ODataMeta.html","title":"class - ODataMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    odv\n                                \n                                \n                                    context\n                                \n                                \n                                    properties\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Object, opt: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opt\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odv\n                    \n                \n\n                \n                    \n                        getodv()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:7\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n\n                \n                    \n                        getcontext()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        properties\n                    \n                \n\n                \n                    \n                        getproperties()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    if (!this.options)\n      throw Error(\"No helper\");\n    return this.options.helper;\n  }\n\n  constructor(data: Object, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    //TODO: Default options\n    this.options = opt.options;\n    this.annotations = (this.options ? this.odv.annotations(data) : data) || {};\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context: any;\n  get context(): ODataContext {\n    if (!this._context) {\n      this._context = this.odv.context(this.annotations) || {};\n    }\n    return this._context;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = this.odv.properties(this.annotations) || {};\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone() : ODataMeta;\n  abstract data(data: Object) : Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag(): string {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink(): string {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink(): string {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink(): string {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType(): string {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations) || {};\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n\n  entity(data: Object) {\n    return new ODataEntityMeta(data, {options: this.options});\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count(): number {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink(): string {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink(): string {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataMetadataResource.html":{"url":"classes/ODataMetadataResource.html","title":"class - ODataMetadataResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataMetadataResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/metadata.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _api\n                            \n                            \n                                    Protected\n                                client\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                get\n                            \n                            \n                                alias\n                            \n                            \n                                asCollection\n                            \n                            \n                                asModel\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient, api?: ODataApi, segments?: ODataPathSegments)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataPathSegments\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:30\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMetadataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(client: ODataClient, api?: ODataApi)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                ODataClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    api\n                                    \n                                                ODataApi\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataMetadataResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:125\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asCollection\n                        \n                        \n                    \n                \n            \n            \n                \nasCollection(entities: Partial[], meta?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:84\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asModel\n                        \n                        \n                    \n                \n            \n            \n                \nasModel(entity: Partial, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:75\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:102\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:226\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:218\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:64\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:203\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:210\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:104\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:45\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:33\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { ODataResource } from '../resource';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { map } from 'rxjs/operators';\nimport { ODataClient } from '../../client';\nimport { HttpOptions } from './options';\nimport { ODataMetadata } from '../responses';\nimport { $METADATA } from '../../constants';\nimport { ODataApi } from '../../api';\n\nexport class ODataMetadataResource extends ODataResource {\n  private _api: ODataApi;\n\n  constructor(client: ODataClient, api?: ODataApi, segments?: ODataPathSegments) {\n    super(client, segments);\n    this._api = api || client.apiFor(this);\n  }\n\n  clone() {\n    return new ODataMetadataResource(this.client, this._api, this.pathSegments.clone());\n  }\n\n  //#region Factory\n  static factory(client: ODataClient, api?: ODataApi) {\n    let segments = new ODataPathSegments();\n    segments.segment(PathSegmentNames.metadata, $METADATA);\n    return new ODataMetadataResource(client, api, segments);\n  }\n  //#endregion\n\n  //#region Api Config\n  get api(): ODataApi {\n    return this._api;\n  }\n  //#endregion\n\n  //#region Requests\n  get(options?: HttpOptions): Observable {\n    let opts = Object.assign({ observe: 'body', responseType: 'text' }, options || {});\n    return this.client.get(this, opts).pipe(map((body: any) => new ODataMetadata(body)));\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataModel.html":{"url":"classes/ODataModel.html","title":"class - ODataModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _entity\n                            \n                            \n                                    Protected\n                                _meta\n                            \n                            \n                                    Protected\n                                _relations\n                            \n                            \n                                    Protected\n                                _resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _action\n                            \n                            \n                                    Protected\n                                _cast\n                            \n                            \n                                    Protected\n                                _function\n                            \n                            \n                                    Protected\n                                _navigationProperty\n                            \n                            \n                                attach\n                            \n                            \n                                clone\n                            \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                fetch\n                            \n                            \n                                    Protected\n                                getNavigationProperty\n                            \n                            \n                                    Protected\n                                parse\n                            \n                            \n                                    Protected\n                                populate\n                            \n                            \n                                save\n                            \n                            \n                                    Protected\n                                setNavigationProperty\n                            \n                            \n                                target\n                            \n                            \n                                toEntity\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _config\n                                \n                                \n                                    _segment\n                                \n                                \n                                    _query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: any, options: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/model.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityMeta | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _relations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _action\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _action(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:259\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _cast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _cast(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:235\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _function\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _function(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:247\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _navigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _navigationProperty(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:271\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \nattach(resource: ODataResource)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNavigationProperty(field: ODataEntityFieldParser)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:282\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                ODataEntityFieldParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ODataModel | ODataCollection | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            populate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populate(data: Object, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setNavigationProperty(field: ODataEntityFieldParser, model: Pm | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:296\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        Pm\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                ODataEntityFieldParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                            Pm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            target\n                        \n                        \n                    \n                \n            \n            \n                \ntarget()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toEntity\n                        \n                        \n                    \n                \n            \n            \n                \ntoEntity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _config\n                    \n                \n\n                \n                    \n                        get_config()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:203\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _segment\n                    \n                \n\n                \n                    \n                        get_segment()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:212\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _query\n                    \n                \n\n                \n                    \n                        get_query()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:223\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport {\n  ODataResource,\n  ODataEntityResource,\n  ODataPropertyResource,\n  ODataFunctionResource,\n  ODataNavigationPropertyResource,\n  HttpOptions,\n  HttpEntityOptions,\n  ODataEntityMeta,\n  ODataEntitiesMeta\n} from '../resources/index';\n\nimport { ODataCollection } from './collection';\nimport { ODataEntityFieldParser } from '../parsers/entity';\n\nexport class ODataModel {\n  protected _resource: ODataResource | null;\n  protected _entity: T;\n  protected _meta: ODataEntityMeta | null;\n  protected _relations: { [name: string]: {\n    rel: ODataModel | ODataCollection> | null,\n    field: ODataEntityFieldParser\n  }};\n\n  constructor(data?: any, options: { resource?: ODataResource, meta?: ODataEntityMeta } = {}) {\n    this._resource = null;\n    this._entity = {} as T;\n    this._meta = null;\n    this._relations = {};\n    if (options.resource instanceof ODataResource)\n      this.attach(options.resource);\n    this.populate(data || {}, options.meta);\n  }\n\n  attach(resource: ODataResource) {\n    if (this._resource !== null && this._resource.type() !== resource.type())\n      throw new Error(`Can't reattach ${resource.type()} with ${this._resource.type()}`);\n    let first = !this._resource;\n    this._resource = resource;\n    if (first) {\n      this._config.fields({include_navigation: true, include_parents: true})\n        .filter(field => field.isNavigation())\n        .forEach(field => {\n          Object.defineProperty(this, field.name, {\n            get() {\n              return this.getNavigationProperty(field);\n            },\n            set(model: ODataModel | null) {\n              this.setNavigationProperty(field, model);\n            }\n          });\n        });\n      if (this._entity)\n        this.populate(this._entity, this._meta !== null ? this._meta : undefined);\n    }\n    return this;\n  }\n\n  target() {\n    return this._resource !== null ? this._resource.clone() as ODataResource : null;\n  }\n\n  protected parse(entity: T) {\n    let fields = this._resource ? this._config.fields({include_navigation: true, include_parents: true}) : [];\n    let entries = Object.entries(entity)\n      .map(([key, value]) => [key, value, fields.find(f => f.name === key)]);\n    //Attributes\n    let attrs = Object.assign({}, entries\n      .filter(([, , f]) => f && !(f.isNavigation() || f.isComplexType()))\n      .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v }), {}));\n    //Others\n    Object.assign(attrs, entries\n      .filter(([, , f]) => !f)\n      .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v }), {}));\n    //Complexes\n    Object.assign(attrs, entries\n      .filter(([, , f]) => f && f.isComplexType())\n      .reduce((acc, [k, , f]) => {\n        let value = (this._entity as any)[f.name];\n        if (value) {\n          let prop = (this._resource as ODataEntityResource).property(f.name);\n          if (this._meta === null)\n            throw(\"No metadata value\");\n          value = f.collection ?\n            prop.asCollection(value, new ODataEntitiesMeta(this._meta.property(f.name) || {}, {options: this._meta.options})) :\n            prop.asModel(value, new ODataEntityMeta(value || {}, {options: this._meta.options}));\n        }\n        return Object.assign(acc, { [k]: value });\n      }, {}));\n    return attrs;\n  }\n\n  protected populate(data: Object, meta?: ODataEntityMeta) {\n    this._meta = meta || new ODataEntityMeta(data, {options: this._resource ? this._resource.api.options : undefined});\n    this._entity = this._meta.attributes(data);\n    this._relations = {};\n    return Object.assign(this, this.parse(this._entity));\n  }\n\n  toEntity(): T {\n    return Object.entries(\n      Object.assign({},\n        this._entity,\n        Object.entries(this)\n          .filter(([key, ]) => !(key.startsWith(\"_\")))\n          .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v }), {}),\n        Object.entries(this._relations).reduce((acc, [k, v]) => Object.assign(acc, {[k]: v.rel}), {})\n      )\n    ).reduce((acc, [k, value]) =>\n      Object.assign(acc, { [k]: (value instanceof ODataModel) ?\n        value.toEntity() :\n        (value instanceof ODataCollection) ?\n        value.toEntities() : value }),\n      {}) as T;\n  }\n\n  clone() {\n    let options: {resource?: ODataResource, meta?: ODataEntityMeta} = {};\n    if (this._resource)\n      options.resource = this._resource.clone();\n    if (this._meta)\n      options.meta = this._meta.clone();\n    let Ctor = this.constructor;\n    return new Ctor(this.toEntity(), options);\n  }\n\n  fetch(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't fetch entity without key`);\n      return this._resource.get(options).pipe(\n        map(({entity, meta}) => this.populate(entity, meta)));\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      return this._resource.get(\n        Object.assign({responseType: 'entity'}, options || {})).pipe(\n          map(({entity, meta}) => this.populate(entity, meta)));\n    } else if (this._resource instanceof ODataPropertyResource) {\n      return this._resource.get(\n        Object.assign({responseType: 'entity'}, options || {})).pipe(\n          map(({entity, meta}) => this.populate(entity, meta)));\n    } else if (this._resource instanceof ODataFunctionResource) {\n      return this._resource.get(\n        Object.assign({responseType: 'entity'}, options || {})).pipe(\n          map(({entity, meta}) => this.populate(entity, meta)));\n    }\n    throw new Error(\"Not Yet!\");\n  }\n\n  create(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      let attrs = this.toEntity();\n      return this._resource.post(attrs, options).pipe(\n        map(({entity, meta}) => this.populate(entity || attrs, meta)));\n    }\n    throw new Error(`Can't create`);\n  }\n\n  update(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't update entity without key`);\n      let resource = this._resource;\n      let attrs = this.toEntity() as any;\n      return Object.values(this._relations)\n        .filter((value) => value.field.navigation && !value.field.collection)\n        .reduce((acc, value) => {\n          let ref = (this._resource as ODataEntityResource).navigationProperty(value.field.name).reference();\n          delete attrs[value.field.name];\n          return acc.pipe(switchMap(({meta}) => value.rel != null ?\n            ref.set(value.rel.target() as ODataEntityResource, {etag: meta.etag}) :\n            ref.unset({etag: meta.etag})));\n        }, of({meta: this._meta as ODataEntityMeta}))\n        .pipe(\n          switchMap(({meta}) => resource.put(attrs, Object.assign({ etag: meta.etag }, options || {}))),\n          map(({entity, meta}) => this.populate(entity || attrs, meta)));\n    }\n    throw new Error(`Can't update`);\n  }\n\n  save(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      return this._resource.segment.key().empty() ? this.create(options) : this.update(options);\n    }\n    throw new Error(`Can't save`);\n  }\n\n  destroy(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't destroy entity without key`);\n      return this._resource.delete(Object.assign({ etag: this._meta !== null ? this._meta.etag : undefined }, options || {}));\n    }\n    throw new Error(`Can't destroy`);\n  }\n\n  get _config() {\n    if (!this._resource)\n      throw new Error(`Can't config without ODataResource`);\n    let schema = (this._resource as ODataEntityResource).schema;\n    if (schema === null)\n      throw new Error(`Can't config without schema`);\n    return schema;\n  }\n\n  get _segment() {\n    if (!this._resource)\n      throw new Error(`Can't call without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't use without key`);\n    }\n    return (this._resource as ODataEntityResource).segment;\n  }\n\n  get _query() {\n    if (!this._resource)\n      throw new Error(`Can't query without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't query without key`);\n    }\n    return (this._resource as ODataEntityResource).query;\n  }\n\n  // Function\n  protected _cast(type: string) {\n    if (!this._resource)\n      throw new Error(`Can't cast without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't cast without key`);\n    }\n    return (this._resource as ODataEntityResource).cast(type);\n  }\n\n  // Function\n  protected _function(path: string) {\n    if (!this._resource)\n      throw new Error(`Can't navigationProperty without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't navigationProperty without key`);\n    }\n    return (this._resource as ODataEntityResource).function(path);\n  }\n\n  // Action\n  protected _action(path: string) {\n    if (!this._resource)\n      throw new Error(`Can't navigationProperty without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't navigationProperty without key`);\n    }\n    return (this._resource as ODataEntityResource).action(path);\n  }\n\n  // Navigation\n  protected _navigationProperty(path: string) {\n    if (!this._resource)\n      throw new Error(`Can't navigationProperty without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't navigationProperty without key`);\n    }\n    return (this._resource as ODataEntityResource).navigationProperty(path);\n  }\n\n  protected getNavigationProperty(field: ODataEntityFieldParser): ODataModel | ODataCollection> | null {\n    if (!(field.name in this._relations)) {\n      let value = (this._entity as any)[field.name];\n      let nav = this._navigationProperty(field.name);\n      if (this._meta === null)\n        throw new Error(\"No Meta\")\n      let rel = field.collection ?\n          nav.asCollection(value, new ODataEntitiesMeta(this._meta.property(field.name) || {}, {options: this._meta.options})) :\n          nav.asModel(value, new ODataEntityMeta(value || {}, {options: this._meta.options}));\n      this._relations[field.name] = {field, rel};\n    }\n    return this._relations[field.name].rel;\n  }\n\n  protected setNavigationProperty>(field: ODataEntityFieldParser, model: Pm | null) {\n    let target = model?.target();\n    if (field.collection)\n      throw new Error(`Can't set ${field.name} to collection, use add`);\n    if (model instanceof ODataModel && target && target.type() !== field.type)\n      throw new Error(`Can't set ${target.type()} to ${field.type}`);\n    this._relations[field.name] = {rel: model, field};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ODataModule.html":{"url":"modules/ODataModule.html","title":"module - ODataModule","body":"\n                   \n\n\n\n\n    Modules\n    ODataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-odata/src/lib/module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ODataClient\n                        \n                        \n                            ODataServiceFactory\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(configs: ApiConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                ApiConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ODataSettings } from './settings';\nimport { ODataClient } from './client';\nimport { ODataServiceFactory } from './services/index';\nimport { ApiConfig } from './types';\nimport { ODATA_CONFIGURATIONS } from './tokens';\n\nexport function createSettings(configs: ApiConfig[]) {\n  return new ODataSettings(...configs);\n}\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [ODataClient, ODataServiceFactory]\n})\nexport class ODataModule {\n  public static forRoot(...configs: ApiConfig[]): ModuleWithProviders {\n    return {\n      ngModule: ODataModule,\n      providers: [\n        { provide: ODATA_CONFIGURATIONS, useValue: configs },\n        {\n          provide: ODataSettings,\n          useFactory: createSettings,\n          deps: [ODATA_CONFIGURATIONS]\n        },\n        ODataClient,\n        ODataServiceFactory\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataParameterParser.html":{"url":"classes/ODataParameterParser.html","title":"class - ODataParameterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataParameterParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/callable.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                nullable\n                            \n                            \n                                    Private\n                                parser\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, parameter: Parameter)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/callable.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameter\n                                                  \n                                                        \n                                                                        Parameter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: Type, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parser, Options, Parameter, CallableConfig, OptionsHelper, StructuredTypeFieldOptions } from '../types';\n\nconst NONE_PARSER = {\n  deserialize(value: any, options: Options) {return value},\n  serialize(value: any, options: Options) {return value}\n} as Parser;\n\nexport class ODataParameterParser implements Parser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  collection?: boolean;\n  nullable?: boolean;\n\n  constructor(name: string, parameter: Parameter) {\n    this.name = name;\n    this.type = parameter.type;\n    this.parser = NONE_PARSER;\n    Object.assign(this, parameter);\n  }\n\n  // Deserialize\n  deserialize(value: any, options: StructuredTypeFieldOptions): Type {\n    return this.parser.deserialize(value, options);\n  }\n\n  // Serialize\n  serialize(value: Type, options: StructuredTypeFieldOptions): any {\n    return this.parser.serialize(value, options);\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser = settings.findParserForType(this.type) || NONE_PARSER;\n  }\n}\n\nexport class ODataCallableParser implements Parser {\n  name: string;\n  type: string;\n  return?: string;\n  parser: Parser;\n  parameters: ODataParameterParser[];\n\n  constructor(config: CallableConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${config.name}`;\n    this.return = config.return;\n    this.parser = NONE_PARSER;\n    this.parameters = Object.entries(config.parameters || [])\n      .map(([name, p]) => new ODataParameterParser(name, p as Parameter));\n  }\n\n  // Deserialize\n  deserialize(value: any, options: StructuredTypeFieldOptions): R {\n    return this.parser.deserialize(value, options);\n  }\n\n  // Serialize\n  serialize(params: any, options: StructuredTypeFieldOptions): any {\n    return Object.assign({}, this.parameters\n      .filter(p => p.name in params && params[p.name] !== undefined)\n      .reduce((acc, p) => Object.assign(acc, { [p.name]: p.serialize(params[p.name], options) }), {})\n    );\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    if (this.return)\n      this.parser = settings.findParserForType(this.return) || NONE_PARSER;\n    this.parameters.forEach(p => p.configure(settings));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPathSegments.html":{"url":"classes/ODataPathSegments.html","title":"class - ODataPathSegments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPathSegments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                find\n                            \n                            \n                                has\n                            \n                            \n                                last\n                            \n                            \n                                path\n                            \n                            \n                                remove\n                            \n                            \n                                segment\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segments?: ODataSegment[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataSegment[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            segments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSegment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:55\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPathSegments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            last\n                        \n                        \n                    \n                \n            \n            \n                \nlast()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SegmentHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            path\n                        \n                        \n                    \n                \n            \n            \n                \npath()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            segment\n                        \n                        \n                    \n                \n            \n            \n                \nsegment(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SegmentHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import buildQuery, { guid, Alias, alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { Types, Dates } from '../utils';\n\nimport { OptionHandler } from './query-options';\nimport { PATH_SEPARATOR } from '../constants';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action'\n}\n\nexport enum SegmentOptionNames {\n  key = 'key',\n  parameters = 'parameters'\n}\n\nexport type ODataSegment = {\n  name: string;\n  path: string;\n  type?: string;\n  options: PlainObject;\n}\n\nfunction pathSegmentsBuilder(segment: ODataSegment): string {\n  switch (segment.name) {\n    case PathSegmentNames.function:\n      let parameters = segment.options[SegmentOptionNames.parameters];\n      return (parameters ?\n        buildQuery({ func: { [segment.path]: parameters }}) :\n        buildQuery({ func: segment.path})\n      ).slice(1);\n    default:\n      let key = segment.options[SegmentOptionNames.key];\n      if (typeof (key) === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(key)) {\n        key = guid(key);\n      }\n      return segment.path + (key ? buildQuery({ key }) : \"\");\n  }\n}\n\nexport class ODataPathSegments {\n  protected segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this.segments = (segments || []).map(({name, path, type, options}) => ({name, path, type, options: options || {}}));\n  }\n\n  path(): string {\n    let chunks = this.segments\n      .map(pathSegmentsBuilder);\n    return chunks.join(PATH_SEPARATOR);\n  }\n\n  types(): string[] {\n    return this.segments.map(s => s.type).filter(t => t !== undefined) as string[];\n  }\n\n  toString(): string {\n    return this.path();\n  }\n\n  toJSON() {\n    return this.segments.map(segment => {\n      let json = { name: segment.name, path: segment.path, type: segment.type };\n      let options = Dates.isoStringToDate(JSON.parse(JSON.stringify(segment.options)));\n      if (!Types.isEmpty(options))\n        json.options = options;\n      return json;\n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(name: string, path?: string) {\n    // Backward search\n    return [...this.segments].reverse().find(s =>\n      s.name === name &&\n      (path === undefined || s.path === path));\n  }\n\n  last() {\n    return (this.segments.length > 0) ?\n       new SegmentHandler(this.segments[this.segments.length - 1]) : null;\n  }\n\n  segment(name: string, path?: string) {\n    let segment = this.find(name, path);\n    if (!segment && path !== undefined) {\n      segment = { name, path, options: {} } as ODataSegment;\n      this.segments.push(segment);\n    }\n    if (segment === undefined)\n      throw new Error(`No segment with name: ${name}`)\n    return new SegmentHandler(segment);\n  }\n\n  has(name: string, path?: string) {\n    return !!this.find(name, path);\n  }\n\n  remove(name: string, path?: string) {\n    let segment = this.find(name, path);\n    this.segments = this.segments.filter(s => s !== segment);\n  }\n}\n\nexport class SegmentHandler {\n  options: PlainObject\n  constructor(private segment: ODataSegment) {\n    this.options = this.segment.options;\n  }\n\n  get name() {\n    return this.segment.name;\n  }\n\n  get type() {\n    return this.segment.type || null;\n  }\n\n  setType(value: string) {\n    this.segment.type = value;\n  }\n\n  get path() {\n    return this.segment.path;\n  }\n\n  setPath(value: string) {\n    this.segment.path = value;\n  }\n\n  // Option Handler\n  option(type: SegmentOptionNames, opts?: T) {\n    if (opts !== undefined)\n      this.options[type] = opts;\n    return new OptionHandler(this.options, type as any);\n  }\n\n  // Aliases\n  alias(name: string, value?: any): Alias {\n    return alias(name, value);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPropertyMeta.html":{"url":"classes/ODataPropertyMeta.html","title":"class - ODataPropertyMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPropertyMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataMeta\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPropertyMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:62\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    if (!this.options)\n      throw Error(\"No helper\");\n    return this.options.helper;\n  }\n\n  constructor(data: Object, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    //TODO: Default options\n    this.options = opt.options;\n    this.annotations = (this.options ? this.odv.annotations(data) : data) || {};\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context: any;\n  get context(): ODataContext {\n    if (!this._context) {\n      this._context = this.odv.context(this.annotations) || {};\n    }\n    return this._context;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = this.odv.properties(this.annotations) || {};\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone() : ODataMeta;\n  abstract data(data: Object) : Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag(): string {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink(): string {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink(): string {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink(): string {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType(): string {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations) || {};\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n\n  entity(data: Object) {\n    return new ODataEntityMeta(data, {options: this.options});\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count(): number {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink(): string {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink(): string {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataQueryOptions.html":{"url":"classes/ODataQueryOptions.html","title":"class - ODataQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataQueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                clear\n                            \n                            \n                                clone\n                            \n                            \n                                has\n                            \n                            \n                                keep\n                            \n                            \n                                option\n                            \n                            \n                                params\n                            \n                            \n                                remove\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: PlainObject)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        PlainObject\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlainObject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alias\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataQueryOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: QueryOptionNames)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keep\n                        \n                        \n                    \n                \n            \n            \n                \nkeep(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            option\n                        \n                        \n                    \n                \n            \n            \n                \noption(name: QueryOptionNames, opts?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:75\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OptionHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            params\n                        \n                        \n                    \n                \n            \n            \n                \nparams()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PlainObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import buildQuery, { alias, Alias } from './builder';\nimport { PlainObject } from './builder';\n\nimport { Dates, Types, Urls } from '../utils';\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  expand = 'expand',\n  format = 'format',\n  // Custom options\n  custom = 'custom'\n}\n\nexport class ODataQueryOptions {\n  options: PlainObject;\n\n  constructor(options?: PlainObject) {\n    this.options = options || {};\n  }\n\n  // Params\n  params(): PlainObject {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format]\n        .filter(key => !Types.isEmpty(this.options[key]))\n        .reduce((acc, key) => Object.assign(acc, {[key]: this.options[key]}), {});\n\n    let query = buildQuery(options);\n    let params = (query) ? Urls.parseQueryString(query.substr(1)) : {};\n\n    // Custom\n    let custom = this.options[QueryOptionNames.custom] || {};\n    if (Types.isArray(custom)) {\n      //TODO: split test for item type\n      custom = custom.reduce((acc: {[name: string]: any}, item: {[name: string]: any}) => Object.assign(acc, item), {});\n    }\n    Object.assign(params, custom);\n\n    return params;\n  }\n\n  toString(): string {\n    return Object.entries(this.params())\n      .filter(([, value]) => value)\n      .map(([key, value]) => `${key}=${value}`)\n      .join(\"&\");\n  }\n\n  toJSON() {\n    return Dates.isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (opts !== undefined)\n      this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return this.options[name] !== undefined;\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach(name => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter(k => names.indexOf(k as QueryOptionNames) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Aliases\n  alias(name: string, value: any): Alias {\n    return alias(name, value);\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(private o: PlainObject, private n: QueryOptionNames) { }\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  empty() {\n    return Types.isEmpty(this.o[this.n]);\n  }\n\n  //#region Primitive Value\n  value(v?: any) {\n    return v !== undefined && (this.o[this.n] = v) || this.o[this.n];\n  }\n  //#endregion\n\n  //#region Array Value\n  private assertArray(): any[] {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = this.o[this.n] !== undefined ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter(v => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1)\n      this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n  //#endregion\n\n  //#region HashMap Value\n  private assertObject(create: boolean): PlainObject {\n    if (!Types.isArray(this.o[this.n]) && Types.isObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find(v => Types.isObject(v));\n    if (!obj && create) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(path: string, value: any) {\n    let obj = this.assertObject(true);\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n\n    pathArray.reduce((acc, key, i) => {\n      if (acc[key] === undefined) acc[key] = {};\n      if (i === pathArray.length - 1) acc[key] = value;\n      return acc[key];\n    }, obj);\n  }\n\n  get(path: string, def?: any): any {\n    let obj = this.assertObject(false) || {};\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n    // Find value if exist return otherwise return undefined value;\n    return (pathArray.reduce((prevObj, key) => prevObj && prevObj[key], obj) || def);\n  }\n\n  unset(path: string) {\n    let obj = this.assertObject(true);\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n\n    pathArray.reduce((acc, key, i) => {\n      if (i === pathArray.length - 1) delete acc[key];\n      return acc[key];\n    }, obj);\n\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter((v: any) => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1)\n        this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(path: string) {\n    let obj = this.assertObject(false) || {};\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n\n    return !!pathArray.reduce((prevObj, key) => prevObj && prevObj[key], obj);\n  }\n\n  assign(values: PlainObject) {\n    let obj = this.assertObject(true);\n    Object.assign(obj, values);\n  }\n  //#endregion\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataRequest.html":{"url":"classes/ODataRequest.html","title":"class - ODataRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/request.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                body\n                            \n                            \n                                    Readonly\n                                fetchPolicy\n                            \n                            \n                                    Readonly\n                                headers\n                            \n                            \n                                    Readonly\n                                method\n                            \n                            \n                                    Readonly\n                                observe\n                            \n                            \n                                    Readonly\n                                params\n                            \n                            \n                                    Readonly\n                                path\n                            \n                            \n                                    Readonly\n                                    Optional\n                                reportProgress\n                            \n                            \n                                    Readonly\n                                resource\n                            \n                            \n                                    Readonly\n                                    Optional\n                                responseType\n                            \n                            \n                                    Readonly\n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pathWithParams\n                                \n                                \n                                    url\n                                \n                                \n                                    urlWithParams\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fetchPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"cache-first\" | \"cache-and-network\" | \"network-only\" | \"no-cache\" | \"cache-only\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            observe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"events\" | \"response\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpParams\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            reportProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            responseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pathWithParams\n                    \n                \n\n                \n                    \n                        getpathWithParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:79\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        urlWithParams\n                    \n                \n\n                \n                    \n                        geturlWithParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:83\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ODataApi } from '../api';\nimport { ACCEPT, IF_MATCH_HEADER } from '../constants';\nimport { Http } from '../utils';\nimport { ODataResource } from './resource';\n\nexport class ODataRequest {\n  readonly method: string;\n  readonly api: ODataApi;\n  readonly body: T | null;\n  readonly observe: 'events' | 'response'\n  readonly reportProgress?: boolean;\n  readonly withCredentials?: boolean;\n  readonly responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  readonly fetchPolicy: 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\n  readonly headers: HttpHeaders;\n  readonly params: HttpParams;\n  readonly path: string;\n  readonly resource: ODataResource;\n\n  constructor(init: {\n    method: string,\n    api: ODataApi,\n    resource: ODataResource,\n    body: T | null,\n    observe: 'events' | 'response',\n    etag?: string,\n    headers?: HttpHeaders | { [header: string]: string | string[] },\n    reportProgress?: boolean,\n    params?: HttpParams | { [param: string]: string | string[] },\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text',\n    fetchPolicy?: 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only',\n    withCredentials?: boolean\n  }) {\n    this.method = init.method;\n    this.resource = init.resource;\n\n    this.api = init.api;\n    this.body = init.body;\n    this.reportProgress = init.reportProgress;\n    this.responseType = init.responseType;\n    this.observe = init.observe;\n\n    this.withCredentials = (init.withCredentials === undefined) ? this.api.options.withCredentials : init.withCredentials;\n    this.fetchPolicy = init.fetchPolicy || this.api.options.fetchPolicy;\n\n    // The Path and Params from resource\n    const [resourcePath, resourceParams] = init.resource.pathAndParams();\n    this.path = resourcePath;\n\n    // Headers\n    let customHeaders: {[name: string]: string | string[]} = {};\n    if (typeof init.etag === 'string')\n      customHeaders[IF_MATCH_HEADER] = init.etag;\n\n    let accept = [];\n    // Metadata ?\n    if (this.api.options.metadata !== undefined)\n      accept.push(`odata.metadata=${this.api.options.metadata}`);\n    // IEEE754\n    if (this.api.options.ieee754Compatible !== undefined)\n      accept.push(`IEEE754Compatible=${this.api.options.ieee754Compatible}`);\n    if (accept.length > 0)\n      customHeaders[ACCEPT] = `application/json;${accept.join(';')}, text/plain, */*`;\n    this.headers = Http.mergeHttpHeaders(this.api.options.headers, customHeaders, init.headers || {});\n\n    // Params\n    this.params = Http.mergeHttpParams(this.api.options.params, resourceParams, init.params || {});\n  }\n\n  get pathWithParams() {\n    let path = this.path;\n    if (this.params.keys().length > 0) {\n      path = `${path}?${this.params}`;\n    }\n    return path;\n  }\n\n  get url() {\n    return `${this.api.serviceRootUrl}${this.path}`;\n  }\n\n  get urlWithParams() {\n    return `${this.api.serviceRootUrl}${this.pathWithParams}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResource.html":{"url":"classes/ODataResource.html","title":"class - ODataResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/resource.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                client\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                asCollection\n                            \n                            \n                                asModel\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient, segments?: ODataPathSegments, options?: ODataQueryOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/resource.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataPathSegments\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ODataQueryOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataClient\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asCollection\n                        \n                        \n                    \n                \n            \n            \n                \nasCollection(entities: Partial[], meta?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asModel\n                        \n                        \n                    \n                \n            \n            \n                \nasModel(entity: Partial, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:75\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:64\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:58\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  VALUE_SEPARATOR,\n  PARAM_SEPARATOR,\n  QUERY_SEPARATOR\n} from '../constants';\nimport { ODataClient } from '../client';\nimport { Http, Urls } from '../utils/index';\n\nimport { PlainObject } from './builder';\nimport { ODataPathSegments } from './path-segments';\nimport {\n  ODataQueryOptions\n} from './query-options';\nimport { HttpOptions } from './types';\nimport {\n  ODataModel,\n  ODataCollection\n} from '../models/index';\nimport { ODataResponse, ODataEntityMeta, ODataEntitiesMeta } from './responses/index';\nimport { ODataApi } from '../api';\nimport { Parser } from '../types';\n\nexport abstract class ODataResource {\n  // VARIABLES\n  protected client: ODataClient;\n  protected pathSegments: ODataPathSegments;\n  protected queryOptions: ODataQueryOptions;\n\n  constructor(\n    client: ODataClient,\n    segments?: ODataPathSegments,\n    options?: ODataQueryOptions\n  ) {\n    this.client = client;\n    this.pathSegments = segments || new ODataPathSegments();\n    this.queryOptions = options || new ODataQueryOptions();\n  }\n\n  /**\n   * @returns string The type of the resource\n   */\n  type() {\n    const segment = this.pathSegments.last();\n    return segment !== null ? segment.type : null;\n  }\n\n  /**\n   * @returns string All covered types of the resource\n   */\n  types(): string[] {\n    return this.pathSegments.types();\n  }\n\n  //#region Api\n  get api(): ODataApi {\n    return this.client\n      .apiFor(this);\n  }\n  ////#endregion\n\n  pathAndParams(): [string, PlainObject] {\n    let path = this.pathSegments.path();\n    let params = this.queryOptions.params();\n    if (path.indexOf(QUERY_SEPARATOR) !== -1) {\n      let parts = path.split(QUERY_SEPARATOR);\n      path = parts[0];\n      Object.assign(params, Urls.parseQueryString(parts[1]));\n    }\n    return [path, params];\n  }\n\n  asModel>(entity: Partial, meta?: ODataEntityMeta): M {\n    let Model = ODataModel;\n    let type = this.type();\n    if (type !== null) {\n      Model = this.client.modelForType(type);\n    }\n    return new Model(entity, {resource: this, meta}) as M;\n  }\n\n  asCollection>>(entities: Partial[], meta?: ODataEntitiesMeta): C {\n    let Collection = ODataCollection;\n    let type = this.type();\n    if (type !== null) {\n      Collection = this.client.collectionForType(type);\n    }\n    return new Collection(entities, {resource: this, meta}) as C;\n  }\n\n  // Testing\n  toString(): string {\n    let [path, params] = this.pathAndParams();\n    let queryString = Object.entries(params)\n      .map(e => `${e[0]}${VALUE_SEPARATOR}${e[1]}`)\n      .join(PARAM_SEPARATOR);\n    return queryString ? `${path}${QUERY_SEPARATOR}${queryString}` : path;\n  }\n\n  abstract clone(): ODataResource;\n\n  serialize(value: any): any {\n    let api = this.api;\n    let type = this.type();\n    if (type !== null) {\n      let parser = api.findParserForType(type);\n      if (parser !== undefined && 'serialize' in parser) {\n        return Array.isArray(value) ?\n          value.map(e => (parser as Parser).serialize(e, api.options)) :\n          parser.serialize(value, api.options);\n      }\n    }\n    return value;\n  }\n\n  toJSON() {\n    return {\n      segments: this.pathSegments.toJSON(),\n      options: this.queryOptions.toJSON()\n    };\n  }\n\n  alias(name: string, value?: any) {\n    return this.queryOptions.alias(name, value);\n  }\n\n  // Base Requests\n  protected request(\n    method: string,\n    options: HttpOptions & {\n      attrs?: any,\n      etag?: string,\n      responseType?: 'arraybuffer' | 'blob' | 'value' | 'property' | 'entity' | 'entities',\n      withCount?: boolean\n    }): Observable {\n\n    let api = options.apiName ? this.client.apiByName(options.apiName) : this.api;\n    const copts = api.options;\n    let params = options.params || {};\n    if (options.withCount) {\n      params = Http.mergeHttpParams(params, copts.helper.countParam());\n    }\n\n    let responseType: 'arraybuffer' | 'blob' | 'json' | 'text' =\n      (options.responseType && ['property', 'entity', 'entities'].indexOf(options.responseType) !== -1) ?\n        'json' :\n      (options.responseType === 'value') ?\n        'text' :\n        options.responseType;\n\n    let body = null;\n    if (options.attrs !== undefined) {\n      let type = this.type();\n      if (type !== null) {\n        let parser = api.findParserForType(type);\n        if (parser !== undefined) {\n            body = parser.serialize(options.attrs, copts);\n        }\n      } else  {\n        body = options.attrs;\n      }\n    }\n\n    let etag = options.etag;\n    if (etag === undefined && options.attrs != null) {\n      etag = copts.helper.etag(options.attrs);\n    }\n    const res$ = this.client.request(method, this, {\n      body,\n      etag,\n      apiName: options.apiName,\n      headers: options.headers,\n      observe: 'response',\n      params: params,\n      responseType: responseType,\n      reportProgress: options.reportProgress,\n      withCredentials: options.withCredentials,\n      fetchPolicy: options.fetchPolicy\n    });\n    switch (options.responseType) {\n      case 'entities':\n        return res$.pipe(map((res: ODataResponse) => res.entities()));\n      case 'entity':\n        return res$.pipe(map((res: ODataResponse) => res.entity()));\n      case 'property':\n        return res$.pipe(map((res: ODataResponse) => res.property()));\n      case 'value':\n        return res$.pipe(map((res: ODataResponse) => res.value() as Type));\n      default:\n        return res$.pipe(map((res: ODataResponse) => res.body));\n    }\n  }\n\n  protected get(options: HttpOptions & {\n    responseType?: 'arraybuffer' | 'blob' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('GET', options);\n  }\n\n  protected post(attrs: any, options: HttpOptions & {\n    responseType?: 'arraybuffer' | 'blob' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('POST', Object.assign(options, { attrs }));\n  }\n\n  protected put(attrs: any, options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('PUT', Object.assign(options, { attrs }));\n  }\n\n  protected patch(attrs: any, options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('PATCH', Object.assign(options, { attrs }));\n  }\n\n  protected delete(options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('DELETE', options);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponse.html":{"url":"classes/ODataResponse.html","title":"class - ODataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/response.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HttpResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _options\n                            \n                            \n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deserialize\n                            \n                            \n                                entities\n                            \n                            \n                                entity\n                            \n                            \n                                    Static\n                                fromHttpResponse\n                            \n                            \n                                    Static\n                                fromJSON\n                            \n                            \n                                    Private\n                                parse\n                            \n                            \n                                property\n                            \n                            \n                                toJSON\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/response.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ODataResponseOptions | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deserialize(type: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \nentities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \nentity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromHttpResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromHttpResponse(req: ODataRequest, res: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:31\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSON(req: ODataRequest, json: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    json\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(parser: Parser, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parser\n                                    \n                                                Parser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataProperty\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { body: any; headers: any; status: any; statusText: any; url: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T | null\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:74\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ODataEntityMeta, ODataEntitiesMeta, ODataPropertyMeta } from './meta';\nimport { Parser } from '../../types';\nimport { Types } from '../../utils/types';\nimport { ODataResource } from '../resource';\nimport { ODataEntityParser } from '../../parsers/entity';\nimport { ODataEntities, ODataEntity, ODataProperty } from './types';\nimport { APPLICATION_JSON, ODATA_VERSION_HEADERS, CONTENT_TYPE, CACHE_CONTROL, MAX_AGE } from '../../constants';\nimport { ODataApi } from '../../api';\nimport { ODataRequest } from '../request';\nimport { ODataResponseOptions } from './options';\n\nexport class ODataResponse extends HttpResponse {\n  readonly api: ODataApi;\n  readonly resource: ODataResource;\n\n  constructor(init: {\n      api: ODataApi,\n      resource: ODataResource,\n      body: T | null;\n      headers: HttpHeaders;\n      status: number;\n      statusText: string;\n      url?: string;\n  }) {\n    super(init);\n    this.api = init.api;\n    this.resource = init.resource;\n  }\n\n  static fromHttpResponse(req: ODataRequest, res: HttpResponse) {\n    return new ODataResponse({\n      api: req.api,\n      resource: req.resource,\n      body: res.body,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n      url: res.url || undefined,\n    });\n  }\n\n  static fromJSON(req: ODataRequest, json: {\n      body: T | null;\n      headers: {[name: string]: string | string[]};\n      status: number;\n      statusText: string;\n      url: string | null;\n  }) {\n    return new ODataResponse({\n      api: req.api,\n      resource: req.resource,\n      body: json.body,\n      headers: new HttpHeaders(json.headers),\n      status: json.status,\n      statusText: json.statusText,\n      url: json.url || undefined,\n    });\n  }\n\n  toJSON() {\n    return {\n      body: this.body,\n      headers: this.headers.keys()\n        .map(name => ({[name]: this.headers.getAll(name) || []}))\n        .reduce((acc, header) => Object.assign(acc, header), {}),\n      status: this.status,\n      statusText: this.statusText,\n      url: this.url\n    }\n  }\n\n  private _options: ODataResponseOptions | null = null;\n  get options(): ODataResponseOptions {\n    if (this._options === null) {\n      this._options = new ODataResponseOptions(this.api.options);\n      const contentType = this.headers.get(CONTENT_TYPE);\n      if (contentType && contentType.indexOf(APPLICATION_JSON) !== -1) {\n        const features = contentType.split(\",\").find(p => p.startsWith(APPLICATION_JSON)) as string;\n        this._options.setFeatures(features);\n      }\n      const key = this.headers.keys().find(k => ODATA_VERSION_HEADERS.indexOf(k) !== -1);\n      if (key) {\n        const version = (this.headers.get(key) || \"\").replace(/\\;/g, \"\") as '2.0' | '3.0' | '4.0';\n        this._options.setVersion(version);\n      }\n      const cacheControl = this.headers.get(CACHE_CONTROL);\n      if (cacheControl) {\n        this._options.setCache(cacheControl);\n      }\n    }\n    return this._options;\n  }\n\n  private parse(parser: Parser, value: any): any {\n    const type = Types.isObject(value) ? this.options.helper.type(value) : undefined;\n    if (type !== undefined && parser instanceof ODataEntityParser) {\n      parser = parser.findParser(c => c.isTypeOf(type));\n    }\n    return parser.deserialize(value, this.options);\n  }\n\n  private deserialize(type: string, value: any): any {\n    const parser = this.api.findParserForType(type);\n    if (parser !== undefined)\n      return Array.isArray(value) ?\n        value.map(v => this.parse(parser, v)) :\n        this.parse(parser, value);\n    return value;\n  }\n\n  entity(): ODataEntity {\n    const payload = this.body && this.options.version === \"2.0\" ? (this.body)[\"d\"] : this.body;\n    const meta = new ODataEntityMeta(payload || {}, {options: this.options, headers: this.headers});\n    //TODO: View the type in meta.context\n    const type = this.resource.type();\n    const entity = payload ?\n      (type !== null ? this.deserialize(type, meta.data(payload)) : payload) as T:\n      null;\n    return { entity, meta };\n  }\n\n  entities(): ODataEntities {\n    const payload = this.options.version === \"2.0\" ? (this.body)[\"d\"] : this.body;\n    const meta = new ODataEntitiesMeta(payload || {}, {options: this.options, headers: this.headers});\n    //TODO: View the type in meta.context\n    const type = this.resource.type();\n    const entities = payload ?\n      (type !== null ? this.deserialize(type, meta.data(payload)) : payload) as T[]:\n      null;\n    return { entities, meta };\n  }\n\n  property(): ODataProperty {\n    const payload = this.options.version === \"2.0\" ? (this.body)[\"d\"] : this.body;\n    const meta = new ODataPropertyMeta(payload || {}, {options: this.options, headers: this.headers});\n    //TODO: View the type in meta.context\n    const type = this.resource.type();\n    const property = payload ?\n      (type !== null ? this.deserialize(type, meta.data(payload)) : payload) as T:\n      null;\n    return { property, meta };\n  }\n\n  value(): T | null {\n    const payload = this.body && this.options.version === \"2.0\" ? this.body : this.body;\n    const type = this.resource.type();\n    return payload ?\n      (type !== null ? this.deserialize(type, payload) : payload) as T:\n      null;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponseOptions.html":{"url":"classes/ODataResponseOptions.html","title":"class - ODataResponseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/options.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ResponseOptions\n                            OptionsHelper\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cacheability\n                            \n                            \n                                    Optional\n                                ieee754Compatible\n                            \n                            \n                                    Optional\n                                maxAge\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                    Optional\n                                streaming\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                setCache\n                            \n                            \n                                setFeatures\n                            \n                            \n                                setVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Options)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cacheability\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"public\" | \"private\" | \"no-cache\" | \"no-store\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ieee754Compatible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            metadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataMetadataType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            streaming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataVersion\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResponseOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCache\n                        \n                        \n                    \n                \n            \n            \n                \nsetCache(cacheControl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cacheControl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFeatures\n                        \n                        \n                    \n                \n            \n            \n                \nsetFeatures(features: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    features\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVersion\n                        \n                        \n                    \n                \n            \n            \n                \nsetVersion(version: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DEFAULT_VERSION, MAX_AGE, VERSION_2_0, VERSION_3_0, VERSION_4_0 } from '../../constants';\nimport { ODataHelper } from '../../helpers/odata';\nimport { CacheCacheability, ODataMetadataType, ODataVersion, Options, OptionsHelper, ResponseOptions } from '../../types';\n\nexport class ODataResponseOptions implements ResponseOptions, OptionsHelper {\n  version: ODataVersion;\n  streaming?: boolean;\n  // OData\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  // Cache\n  cacheability?: 'public' | 'private' | 'no-cache' | 'no-store';\n  maxAge?: number;\n\n  constructor(config: Options) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.metadata = config.metadata;\n    this.stringAsEnum = config.stringAsEnum;\n    this.ieee754Compatible = config.ieee754Compatible;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n\n  clone() {\n    return new ODataResponseOptions(this);\n  }\n\n  setFeatures(features: string) {\n    features.split(\";\").forEach(o => {\n      let [k, v] = o.split(\"=\");\n      switch (k.trim()) {\n        case 'odata.metadata':\n          this.metadata = v as ODataMetadataType;\n          break;\n        case 'odata.streaming':\n          this.streaming = v == \"true\";\n          break;\n        case 'IEEE754Compatible':\n          this.ieee754Compatible = v == \"true\";\n          break;\n      }\n    });\n  }\n\n  setVersion(version: string) {\n    const value = version.replace(/\\;/g, \"\").trim();\n    if ([VERSION_2_0, VERSION_3_0, VERSION_4_0].indexOf(value) !== -1)\n      this.version = value as ODataVersion;\n  }\n\n  setCache(cacheControl: string) {\n    cacheControl.split(\",\").forEach(directive => {\n      if (directive.startsWith(MAX_AGE)) {\n        let maxAge = Number(directive.split(\"=\")[1]);\n        if (!Number.isNaN(maxAge))\n          this.maxAge = maxAge;\n      }\n      if (['public', 'private', 'no-cache', 'no-store'].indexOf(directive) !== -1) {\n        this.cacheability = directive as CacheCacheability;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSchema.html":{"url":"classes/ODataSchema.html","title":"class - ODataSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                annotations\n                            \n                            \n                                api\n                            \n                            \n                                callables\n                            \n                            \n                                containers\n                            \n                            \n                                entities\n                            \n                            \n                                enums\n                            \n                            \n                                namespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                    Public\n                                findCallableForType\n                            \n                            \n                                    Public\n                                findEntitySetForType\n                            \n                            \n                                    Public\n                                findEnumTypeForType\n                            \n                            \n                                    Public\n                                findStructuredTypeForType\n                            \n                            \n                                isNamespaceOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                                \n                                    entitySets\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: SchemaConfig, api: ODataApi)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SchemaConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataCallable[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enums\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCallableForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCallableForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEntitySetForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEntitySetForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEnumTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEnumTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findStructuredTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findStructuredTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNamespaceOf\n                        \n                        \n                    \n                \n            \n            \n                \nisNamespaceOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        entitySets\n                    \n                \n\n                \n                    \n                        getentitySets()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataStructuredType } from './structured-type';\nimport { ODataCallable } from './callable';\nimport { ODataEntityContainer } from './entity-container';\nimport { ODataEnumType } from './enum-type';\nimport { ODataApi } from '../api';\nimport { SchemaConfig, Parser, CallableConfig } from '../types';\nimport { ODataEntitySet } from './entity-set';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataSchema {\n  api: ODataApi;\n  namespace: string;\n  alias?: string;\n  enums: ODataEnumType[];\n  entities: ODataStructuredType[];\n  callables: ODataCallable[];\n  containers: ODataEntityContainer[];\n  annotations: ODataAnnotation[];\n\n  constructor(config: SchemaConfig, api: ODataApi) {\n    this.api = api;\n    this.namespace = config.namespace;\n    this.alias = config.alias;\n    this.enums = (config.enums || []).map(config => new ODataEnumType(config, this));\n    this.entities = (config.entities || []).map(config => new ODataStructuredType(config, this));\n    // Merge callables\n    let callableConfigs = (config.callables || []);\n    callableConfigs = callableConfigs.reduce((acc: CallableConfig[], config) => {\n      if (acc.every(c => c.name !== config.name)) {\n        config = callableConfigs.filter(c => c.name === config.name).reduce((acc, c) => {\n          acc.parameters = Object.assign(acc.parameters || {}, c.parameters || {});\n          return acc;\n        }, config);\n        return [...acc, config];\n      }\n      return acc;\n    }, [] as CallableConfig[]);\n    this.callables = callableConfigs.map(config => new ODataCallable(config, this));\n    this.containers = (config.containers || []).map(container => new ODataEntityContainer(container, this));\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isNamespaceOf(type: string) {\n    return type.startsWith(this.namespace) || (this.alias && type.startsWith(this.alias));\n  }\n\n  get options() {\n    return this.api.options;\n  }\n\n  get entitySets() {\n    return this.containers\n      .reduce(\n        (acc, container) => [...acc, ...container.entitySets], [] as ODataEntitySet[]);\n  }\n\n  //#region Find for Type\n  public findEnumTypeForType(type: string) {\n    return this.enums.find(e => e.isTypeOf(type));\n  }\n\n  public findStructuredTypeForType(type: string) {\n    return this.entities.find(e => e.isTypeOf(type));\n  }\n\n  public findCallableForType(type: string) {\n    return this.callables.find(e => e.isTypeOf(type));\n  }\n\n  public findEntitySetForType(type: string) {\n      return this.entitySets.find(e => e.isTypeOf(type));\n  }\n  //#endregion\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    // Configure Entities\n    this.entities\n      .forEach(config => config.configure(settings));\n    // Configure callables\n    this.callables\n      .forEach(callable => callable.configure(settings));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ODataServiceFactory.html":{"url":"injectables/ODataServiceFactory.html","title":"injectable - ODataServiceFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ODataServiceFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/factory.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entity\n                            \n                            \n                                singleton\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/factory.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \nentity(name: string, entityType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:10\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            singleton\n                        \n                        \n                    \n                \n            \n            \n                \nsingleton(name: string, entityType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:15\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataSingletonService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ODataClient } from \"../client\";\nimport { ODataEntityService } from './entity';\nimport { ODataSingletonService } from './singleton';\n\n@Injectable()\nexport class ODataServiceFactory {\n  constructor(protected client: ODataClient) { }\n\n  entity(name: string, entityType?: string): ODataEntityService {\n    return new class extends ODataEntityService {\n    }(this.client, name, entityType);\n  }\n\n  singleton(name: string, entityType?: string): ODataSingletonService {\n    return new class extends ODataSingletonService {\n    }(this.client, name, entityType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSettings.html":{"url":"classes/ODataSettings.html","title":"class - ODataSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apis\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiByName\n                            \n                            \n                                    Public\n                                apiForType\n                            \n                            \n                                    Public\n                                callableByName\n                            \n                            \n                                    Public\n                                callableFor\n                            \n                            \n                                    Public\n                                collectionByName\n                            \n                            \n                                    Public\n                                collectionForType\n                            \n                            \n                                configure\n                            \n                            \n                                    Public\n                                defaultApi\n                            \n                            \n                                    Public\n                                entitySetByName\n                            \n                            \n                                    Public\n                                entitySetForType\n                            \n                            \n                                    Public\n                                enumTypeByName\n                            \n                            \n                                    Public\n                                enumTypeForType\n                            \n                            \n                                    Public\n                                findForTypes\n                            \n                            \n                                    Public\n                                modelByName\n                            \n                            \n                                    Public\n                                modelForType\n                            \n                            \n                                    Public\n                                parserForType\n                            \n                            \n                                    Public\n                                structuredTypeByName\n                            \n                            \n                                    Public\n                                structuredTypeForType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: ApiConfig[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/settings.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        ApiConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apis\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/settings.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            callableByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:132\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            callableFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callableFor(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:69\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultApi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultApi()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entitySetByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entitySetByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entitySetForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entitySetForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enumTypeByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enumTypeByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:114\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enumTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enumTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:51\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findForTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findForTypes(types: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    types\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            parserForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parserForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:87\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            structuredTypeByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    structuredTypeByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:123\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            structuredTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    structuredTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiConfig, Parser } from './types';\nimport { ODataApi } from './api';\nimport { ODataCallable, ODataEntitySet, ODataEnumType, ODataStructuredType } from './schema';\nimport { ODataRequest } from './resources';\nimport { Observable } from 'rxjs';\nimport { ODataCollection, ODataModel } from './models';\n\nexport class ODataSettings {\n  apis: ODataApi[];\n\n  constructor(...configs: ApiConfig[]) {\n    this.apis = configs.map(config => new ODataApi(config));\n    if (this.apis.length > 1) {\n      if (this.apis.some(c => c.name === undefined))\n        throw new Error(\"Multiple APIs: Needs configuration names\");\n      if (this.apis.filter(c => c.default).length > 1)\n        throw new Error(\"Multiple APIs: Needs only one default api\");\n    }\n    // If not default setup first config as default api\n    if (this.apis.every(c => !c.default))\n      this.apis[0].default = true;\n  }\n\n  configure(settings: { requester?: (request: ODataRequest) => Observable }) {\n    this.apis.forEach(api => api.configure(settings));\n  }\n\n  public defaultApi() {\n    return this.apis.find(c => c.default) as ODataApi;\n  }\n\n  public apiByName(name: string) {\n    const api = this.apis.find(c => c.name === name);\n    if (api === undefined)\n      throw new Error(`No API for name: ${name}`);\n    return api;\n  }\n\n  public findForTypes(types: string[]) {\n    return this.apis.find(c => c.schemas.some(s => types.some(type => s.isNamespaceOf(type))));\n  }\n\n  public apiForType(type: string) {\n    const api = this.apis.find(a => a.schemas.some(s => s.isNamespaceOf(type)));\n    if (api === undefined)\n      throw new Error(`No API for type: ${type}`);\n    return api;\n  }\n\n  //#region Configs shortcuts\n  public enumTypeForType(type: string) {\n    let values = this.apis.map(api => api.findEnumTypeForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Enum for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataEnumType;\n  }\n\n  public structuredTypeForType(type: string) {\n    let values = this.apis.map(api => api.findStructuredTypeForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Structured for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataStructuredType;\n  }\n\n  public callableFor(type: string) {\n    let values = this.apis.map(api => api.findCallableForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Callable for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataCallable;\n  }\n\n  public entitySetForType(type: string) {\n    let values = this.apis.map(api => api.findEntitySetForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No EntitySet for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataEntitySet;\n  }\n\n  public parserForType(type: string) {\n    let values = this.apis.map(api => api.findParserForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Parser for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as Parser;\n  }\n\n  public modelForType(type: string) {\n    let values = this.apis.map(api => api.findModelForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Model for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as typeof ODataModel;\n  }\n\n  public collectionForType(type: string) {\n    let values = this.apis.map(api => api.findCollectionForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Collection for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as typeof ODataCollection;\n  }\n\n  public enumTypeByName(name: string) {\n    let values = this.apis.map(api => api.findEnumTypeByName(name)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Enum for name ${name} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataEnumType;\n  }\n\n  public structuredTypeByName(name: string) {\n    let values = this.apis.map(api => api.findStructuredTypeByName(name)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Structured for name ${name} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataStructuredType;\n  }\n\n  public callableByName(name: string) {\n    let values = this.apis.map(api => api.findCallableByName(name)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Callable for name ${name} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataCallable;\n  }\n\n  public entitySetByName(name: string) {\n    let values = this.apis.map(api => api.findEntitySetByName(name)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No EntitySet for name ${name} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataEntitySet;\n  }\n\n  public modelByName(name: string) {\n    let values = this.apis.map(api => api.findModelByName(name)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Model for name ${name} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as typeof ODataModel;\n  }\n\n  public collectionByName(name: string) {\n    let values = this.apis.map(api => api.findCollectionByName(name)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Collection for name ${name} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as typeof ODataCollection;\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSingletonService.html":{"url":"classes/ODataSingletonService.html","title":"class - ODataSingletonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSingletonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/singleton.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                                \n                                    entitySetSchema\n                                \n                                \n                                    structuredSchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient, name: string, entityType?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/singleton.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/singleton.ts:13\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/singleton.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataSingletonResource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/singleton.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        entitySetSchema\n                    \n                \n\n                \n                    \n                        getentitySetSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/singleton.ts:23\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        structuredSchema\n                    \n                \n\n                \n                    \n                        getstructuredSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/singleton.ts:28\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataClient } from \"../client\";\nimport { ODataModel } from '../models/model';\nimport { ODataSingletonResource } from '../resources';\n\nexport class ODataSingletonService {\n  constructor(protected client: ODataClient, protected name: string, protected entityType?: string) { }\n\n  public entity(): ODataSingletonResource {\n    return this.client.singleton(this.name, this.entityType);\n  }\n\n  // Models\n  public attach>(value: M): M {\n    return value.attach(this.entity());\n  }\n\n  // Service Config\n  get api() {\n    return this.client.apiForType(this.entityType);\n  }\n\n  // Service Config\n  get entitySetSchema() {\n    return this.api.findEntitySetByName(this.name);\n  }\n\n  // Entity Config\n  get structuredSchema() {\n    if (this.entityType === undefined)\n      return null;\n    return this.api.findStructuredTypeForType(this.entityType) || null;\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataStructuredType.html":{"url":"classes/ODataStructuredType.html","title":"class - ODataStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                    Optional\n                                model\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                fields\n                            \n                            \n                                findField\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                pick\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: StructuredTypeConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/structured-type.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StructuredTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fields\n                        \n                        \n                    \n                \n            \n            \n                \nfields(opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { include_navigation: false, include_parents: true }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityFieldParser[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findField\n                        \n                        \n                    \n                \n            \n            \n                \nfindField(name: P)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:56\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                            P\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pick\n                        \n                        \n                    \n                \n            \n            \n                \npick(value: literal type, opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { include_navigation: false, include_parents: true, include_etag: true }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Partial\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:30\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataEntityFieldParser, ODataEntityParser } from '../parsers';\nimport { Parser, StructuredTypeConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\nimport { ODataSchema } from './schema';\n\nexport class ODataStructuredType {\n  schema: ODataSchema;\n  name: string;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  parser: ODataEntityParser;\n  annotations: ODataAnnotation[];\n\n  constructor(config: StructuredTypeConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, schema.namespace, schema.alias);\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = { include_navigation: false, include_parents: true }): ODataEntityFieldParser[] {\n    let parent = this.parser as ODataEntityParser | undefined;\n    let fields = []>[];\n    while (parent !== undefined) {\n      fields = [\n        ...parent.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parent = parent.parent;\n    }\n    return fields;\n  }\n\n  findField(name: P) {\n    return this.fields().find(f => f.name === name);\n  }\n\n  pick(value: {[name:string]: any}, opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean,\n    include_etag?: boolean\n  } = { include_navigation: false, include_parents: true, include_etag: true }): Partial {\n    const names = this.fields(opts).map(f => f.name);\n    let attrs = Object.keys(value)\n      .filter(k => names.indexOf(k) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: value[k] }), {});\n    if (opts.include_etag) {\n      const etag = this.options.helper.etag(value);\n      this.options.helper.etag(attrs, etag);\n    }\n    return attrs;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataValueResource.html":{"url":"classes/ODataValueResource.html","title":"class - ODataValueResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataValueResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/value.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                client\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arraybuffer\n                            \n                            \n                                blob\n                            \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                get\n                            \n                            \n                                alias\n                            \n                            \n                                asCollection\n                            \n                            \n                                asModel\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:30\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            arraybuffer\n                        \n                        \n                    \n                \n            \n            \n                \narraybuffer(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            blob\n                        \n                        \n                    \n                \n            \n            \n                \nblob(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataValueResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(client: ODataClient, type: string | null, segments: ODataPathSegments, options: ODataQueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        V\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                ODataClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                                ODataPathSegments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataValueResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:125\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asCollection\n                        \n                        \n                    \n                \n            \n            \n                \nasCollection(entities: Partial[], meta?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:84\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asModel\n                        \n                        \n                    \n                \n            \n            \n                \nasModel(entity: Partial, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:75\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:102\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:226\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:218\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:64\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:203\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:210\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:104\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:45\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { ODataResource } from '../resource';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataQueryOptions } from '../query-options';\nimport { ODataClient } from '../../client';\nimport { HttpOptions } from './options';\nimport { $VALUE } from '../../constants';\n\nexport class ODataValueResource extends ODataResource {\n  //#region Factory\n  static factory(client: ODataClient, type: string | null, segments: ODataPathSegments, options: ODataQueryOptions) {\n    const segment = segments.segment(PathSegmentNames.value, $VALUE);\n    if (type)\n      segment.setType(type);\n    options.clear();\n    return new ODataValueResource(client, segments, options);\n  }\n\n  clone() {\n    return new ODataValueResource(this.client, this.pathSegments.clone(), this.queryOptions.clone());\n  }\n  //#endregion\n\n  //#region Requests\n  arraybuffer(options?: HttpOptions): Observable {\n    return super.get(\n      Object.assign({ responseType: 'arraybuffer' }, options || {})\n    );\n  }\n\n  blob(options?: HttpOptions): Observable {\n    return super.get(\n      Object.assign({ responseType: 'blob' }, options || {})\n    );\n  }\n\n  get(options?: HttpOptions): Observable {\n    return super.get(\n      Object.assign({ responseType: 'value' }, options || {})\n    );\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionHandler.html":{"url":"classes/OptionHandler.html","title":"class - OptionHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assertArray\n                            \n                            \n                                    Private\n                                assertObject\n                            \n                            \n                                assign\n                            \n                            \n                                at\n                            \n                            \n                                clear\n                            \n                            \n                                empty\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                push\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                toJSON\n                            \n                            \n                                unset\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: PlainObject, n: QueryOptionNames)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:107\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                        PlainObject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        n\n                                                  \n                                                        \n                                                                        QueryOptionNames\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertArray()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertObject(create: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PlainObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \nassign(values: PlainObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                PlainObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            at\n                        \n                        \n                    \n                \n            \n            \n                \nat(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            empty\n                        \n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(path: string, def?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            push\n                        \n                        \n                    \n                \n            \n            \n                \npush(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(path: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unset\n                        \n                        \n                    \n                \n            \n            \n                \nunset(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue(v?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:110\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import buildQuery, { alias, Alias } from './builder';\nimport { PlainObject } from './builder';\n\nimport { Dates, Types, Urls } from '../utils';\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  expand = 'expand',\n  format = 'format',\n  // Custom options\n  custom = 'custom'\n}\n\nexport class ODataQueryOptions {\n  options: PlainObject;\n\n  constructor(options?: PlainObject) {\n    this.options = options || {};\n  }\n\n  // Params\n  params(): PlainObject {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format]\n        .filter(key => !Types.isEmpty(this.options[key]))\n        .reduce((acc, key) => Object.assign(acc, {[key]: this.options[key]}), {});\n\n    let query = buildQuery(options);\n    let params = (query) ? Urls.parseQueryString(query.substr(1)) : {};\n\n    // Custom\n    let custom = this.options[QueryOptionNames.custom] || {};\n    if (Types.isArray(custom)) {\n      //TODO: split test for item type\n      custom = custom.reduce((acc: {[name: string]: any}, item: {[name: string]: any}) => Object.assign(acc, item), {});\n    }\n    Object.assign(params, custom);\n\n    return params;\n  }\n\n  toString(): string {\n    return Object.entries(this.params())\n      .filter(([, value]) => value)\n      .map(([key, value]) => `${key}=${value}`)\n      .join(\"&\");\n  }\n\n  toJSON() {\n    return Dates.isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (opts !== undefined)\n      this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return this.options[name] !== undefined;\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach(name => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter(k => names.indexOf(k as QueryOptionNames) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Aliases\n  alias(name: string, value: any): Alias {\n    return alias(name, value);\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(private o: PlainObject, private n: QueryOptionNames) { }\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  empty() {\n    return Types.isEmpty(this.o[this.n]);\n  }\n\n  //#region Primitive Value\n  value(v?: any) {\n    return v !== undefined && (this.o[this.n] = v) || this.o[this.n];\n  }\n  //#endregion\n\n  //#region Array Value\n  private assertArray(): any[] {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = this.o[this.n] !== undefined ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter(v => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1)\n      this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n  //#endregion\n\n  //#region HashMap Value\n  private assertObject(create: boolean): PlainObject {\n    if (!Types.isArray(this.o[this.n]) && Types.isObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find(v => Types.isObject(v));\n    if (!obj && create) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(path: string, value: any) {\n    let obj = this.assertObject(true);\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n\n    pathArray.reduce((acc, key, i) => {\n      if (acc[key] === undefined) acc[key] = {};\n      if (i === pathArray.length - 1) acc[key] = value;\n      return acc[key];\n    }, obj);\n  }\n\n  get(path: string, def?: any): any {\n    let obj = this.assertObject(false) || {};\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n    // Find value if exist return otherwise return undefined value;\n    return (pathArray.reduce((prevObj, key) => prevObj && prevObj[key], obj) || def);\n  }\n\n  unset(path: string) {\n    let obj = this.assertObject(true);\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n\n    pathArray.reduce((acc, key, i) => {\n      if (i === pathArray.length - 1) delete acc[key];\n      return acc[key];\n    }, obj);\n\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter((v: any) => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1)\n        this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(path: string) {\n    let obj = this.assertObject(false) || {};\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n\n    return !!pathArray.reduce((prevObj, key) => prevObj && prevObj[key], obj);\n  }\n\n  assign(values: PlainObject) {\n    let obj = this.assertObject(true);\n    Object.assign(obj, values);\n  }\n  //#endregion\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        ieee754Compatible\n                                \n                                \n                                            Optional\n                                        metadata\n                                \n                                \n                                            Optional\n                                        streaming\n                                \n                                \n                                            Optional\n                                        stringAsEnum\n                                \n                                \n                                            Optional\n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ieee754Compatible\n                                    \n                                \n                                \n                                    \n                                        ieee754Compatible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:         ODataMetadataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataMetadataType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streaming\n                                    \n                                \n                                \n                                    \n                                        streaming:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stringAsEnum\n                                    \n                                \n                                \n                                    \n                                        stringAsEnum:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         ODataVersion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataVersion\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionsHelper.html":{"url":"interfaces/OptionsHelper.html","title":"interface - OptionsHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OptionsHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        helper\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        helper\n                                    \n                                \n                                \n                                    \n                                        helper:         ODataVersionHelper\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataVersionHelper\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Parser.html":{"url":"interfaces/Parser.html","title":"interface - Parser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Parser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    deserialize\n                                \n                                \n                                    serialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseOptions.html":{"url":"interfaces/ResponseOptions.html","title":"interface - ResponseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cacheability\n                                \n                                \n                                            Optional\n                                        maxAge\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cacheability\n                                    \n                                \n                                \n                                    \n                                        cacheability:         CacheCacheability\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CacheCacheability\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SegmentHandler.html":{"url":"classes/SegmentHandler.html","title":"class - SegmentHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SegmentHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                option\n                            \n                            \n                                setPath\n                            \n                            \n                                setType\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    type\n                                \n                                \n                                    path\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segment: ODataSegment)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:123\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segment\n                                                  \n                                                        \n                                                                        ODataSegment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlainObject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:123\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alias\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            option\n                        \n                        \n                    \n                \n            \n            \n                \noption(type: SegmentOptionNames, opts?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:149\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SegmentOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPath\n                        \n                        \n                    \n                \n            \n            \n                \nsetPath(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:128\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:132\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        path\n                    \n                \n\n                \n                    \n                        getpath()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:140\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import buildQuery, { guid, Alias, alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { Types, Dates } from '../utils';\n\nimport { OptionHandler } from './query-options';\nimport { PATH_SEPARATOR } from '../constants';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action'\n}\n\nexport enum SegmentOptionNames {\n  key = 'key',\n  parameters = 'parameters'\n}\n\nexport type ODataSegment = {\n  name: string;\n  path: string;\n  type?: string;\n  options: PlainObject;\n}\n\nfunction pathSegmentsBuilder(segment: ODataSegment): string {\n  switch (segment.name) {\n    case PathSegmentNames.function:\n      let parameters = segment.options[SegmentOptionNames.parameters];\n      return (parameters ?\n        buildQuery({ func: { [segment.path]: parameters }}) :\n        buildQuery({ func: segment.path})\n      ).slice(1);\n    default:\n      let key = segment.options[SegmentOptionNames.key];\n      if (typeof (key) === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(key)) {\n        key = guid(key);\n      }\n      return segment.path + (key ? buildQuery({ key }) : \"\");\n  }\n}\n\nexport class ODataPathSegments {\n  protected segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this.segments = (segments || []).map(({name, path, type, options}) => ({name, path, type, options: options || {}}));\n  }\n\n  path(): string {\n    let chunks = this.segments\n      .map(pathSegmentsBuilder);\n    return chunks.join(PATH_SEPARATOR);\n  }\n\n  types(): string[] {\n    return this.segments.map(s => s.type).filter(t => t !== undefined) as string[];\n  }\n\n  toString(): string {\n    return this.path();\n  }\n\n  toJSON() {\n    return this.segments.map(segment => {\n      let json = { name: segment.name, path: segment.path, type: segment.type };\n      let options = Dates.isoStringToDate(JSON.parse(JSON.stringify(segment.options)));\n      if (!Types.isEmpty(options))\n        json.options = options;\n      return json;\n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(name: string, path?: string) {\n    // Backward search\n    return [...this.segments].reverse().find(s =>\n      s.name === name &&\n      (path === undefined || s.path === path));\n  }\n\n  last() {\n    return (this.segments.length > 0) ?\n       new SegmentHandler(this.segments[this.segments.length - 1]) : null;\n  }\n\n  segment(name: string, path?: string) {\n    let segment = this.find(name, path);\n    if (!segment && path !== undefined) {\n      segment = { name, path, options: {} } as ODataSegment;\n      this.segments.push(segment);\n    }\n    if (segment === undefined)\n      throw new Error(`No segment with name: ${name}`)\n    return new SegmentHandler(segment);\n  }\n\n  has(name: string, path?: string) {\n    return !!this.find(name, path);\n  }\n\n  remove(name: string, path?: string) {\n    let segment = this.find(name, path);\n    this.segments = this.segments.filter(s => s !== segment);\n  }\n}\n\nexport class SegmentHandler {\n  options: PlainObject\n  constructor(private segment: ODataSegment) {\n    this.options = this.segment.options;\n  }\n\n  get name() {\n    return this.segment.name;\n  }\n\n  get type() {\n    return this.segment.type || null;\n  }\n\n  setType(value: string) {\n    this.segment.type = value;\n  }\n\n  get path() {\n    return this.segment.path;\n  }\n\n  setPath(value: string) {\n    this.segment.path = value;\n  }\n\n  // Option Handler\n  option(type: SegmentOptionNames, opts?: T) {\n    if (opts !== undefined)\n      this.options[type] = opts;\n    return new OptionHandler(this.options, type as any);\n  }\n\n  // Aliases\n  alias(name: string, value?: any): Alias {\n    return alias(name, value);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoragePayload.html":{"url":"interfaces/StoragePayload.html","title":"interface - StoragePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StoragePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/storage.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        headers\n                                \n                                \n                                        status\n                                \n                                \n                                        statusText\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusText\n                                    \n                                \n                                \n                                    \n                                        statusText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache, ODataCacheEntry } from './cache';\n\ninterface StoragePayload {\n    body: any | null;\n    headers: {[name: string]: string | string[]};\n    status: number;\n    statusText: string;\n    url: string | null;\n}\n\nexport class ODataInStorageCache extends ODataCache {\n  constructor(init: {timeout?: number, name: string, storage?: Storage}) {\n    super(init);\n    const name = init.name;\n    const storage = init.storage || sessionStorage;\n    this.entries = new Map>(JSON.parse(storage.getItem(name) || \"[]\"));\n    window.addEventListener(\"beforeunload\", ((backend, key, responses) => function() {\n      backend.setItem(key, JSON.stringify(Array.from(responses.entries())))\n    })(storage, name, this.entries));\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.urlWithParams, res.toJSON(), res.options.maxAge);\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    const data = this.get(req.urlWithParams);\n\n    return data !== undefined ? ODataResponse.fromJSON(req, data) : undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StructuredTypeField.html":{"url":"interfaces/StructuredTypeField.html","title":"interface - StructuredTypeField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StructuredTypeField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        annotations\n                                \n                                \n                                            Optional\n                                        collection\n                                \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                            Optional\n                                        field\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        maxLength\n                                \n                                \n                                            Optional\n                                        navigation\n                                \n                                \n                                            Optional\n                                        nullable\n                                \n                                \n                                            Optional\n                                        precision\n                                \n                                \n                                            Optional\n                                        ref\n                                \n                                \n                                            Optional\n                                        scale\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        annotations\n                                    \n                                \n                                \n                                    \n                                        annotations:         Annotation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Annotation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                    \n                                \n                                \n                                    \n                                        collection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxLength\n                                    \n                                \n                                \n                                    \n                                        maxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        navigation\n                                    \n                                \n                                \n                                    \n                                        navigation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullable\n                                    \n                                \n                                \n                                    \n                                        nullable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precision\n                                    \n                                \n                                \n                                    \n                                        precision:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StructuredTypeFieldOptions.html":{"url":"interfaces/StructuredTypeFieldOptions.html","title":"interface - StructuredTypeFieldOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StructuredTypeFieldOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        OptionsHelper\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         StructuredTypeField\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StructuredTypeField\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.1\n        \n            @angular/common : ~11.0.1\n        \n            @angular/compiler : ~11.0.1\n        \n            @angular/core : ~11.0.1\n        \n            @angular/forms : ~11.0.1\n        \n            @angular/platform-browser : ~11.0.1\n        \n            @angular/platform-browser-dynamic : ~11.0.1\n        \n            @angular/router : ~11.0.1\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FieldType   (projects/.../metadata.ts)\n                        \n                        \n                            PathSegmentNames   (projects/.../path-segments.ts)\n                        \n                        \n                            QueryOptionNames   (projects/.../query-options.ts)\n                        \n                        \n                            SegmentOptionNames   (projects/.../path-segments.ts)\n                        \n                        \n                            StandardAggregateMethods   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/responses/metadata.ts\n    \n        \n            \n                \n                    \n                        \n                        FieldType\n                    \n                \n                        \n                            \n                                 ATTRIBUTE\n                            \n                        \n                        \n                            \n                                 TAG\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n        \n            \n                \n                    \n                        \n                        PathSegmentNames\n                    \n                \n                        \n                            \n                                 batch\n                            \n                        \n                        \n                            \n                                Value : batch\n                            \n                        \n                        \n                            \n                                 metadata\n                            \n                        \n                        \n                            \n                                Value : metadata\n                            \n                        \n                        \n                            \n                                 entitySet\n                            \n                        \n                        \n                            \n                                Value : entitySet\n                            \n                        \n                        \n                            \n                                 singleton\n                            \n                        \n                        \n                            \n                                Value : singleton\n                            \n                        \n                        \n                            \n                                 type\n                            \n                        \n                        \n                            \n                                Value : type\n                            \n                        \n                        \n                            \n                                 property\n                            \n                        \n                        \n                            \n                                Value : property\n                            \n                        \n                        \n                            \n                                 navigationProperty\n                            \n                        \n                        \n                            \n                                Value : navigationProperty\n                            \n                        \n                        \n                            \n                                 reference\n                            \n                        \n                        \n                            \n                                Value : reference\n                            \n                        \n                        \n                            \n                                 value\n                            \n                        \n                        \n                            \n                                Value : value\n                            \n                        \n                        \n                            \n                                 count\n                            \n                        \n                        \n                            \n                                Value : count\n                            \n                        \n                        \n                            \n                                 function\n                            \n                        \n                        \n                            \n                                Value : function\n                            \n                        \n                        \n                            \n                                 action\n                            \n                        \n                        \n                            \n                                Value : action\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SegmentOptionNames\n                    \n                \n                        \n                            \n                                 key\n                            \n                        \n                        \n                            \n                                Value : key\n                            \n                        \n                        \n                            \n                                 parameters\n                            \n                        \n                        \n                            \n                                Value : parameters\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/query-options.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryOptionNames\n                    \n                \n                        \n                            \n                                 select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 filter\n                            \n                        \n                        \n                            \n                                Value : filter\n                            \n                        \n                        \n                            \n                                 search\n                            \n                        \n                        \n                            \n                                Value : search\n                            \n                        \n                        \n                            \n                                 transform\n                            \n                        \n                        \n                            \n                                Value : transform\n                            \n                        \n                        \n                            \n                                 orderBy\n                            \n                        \n                        \n                            \n                                Value : orderBy\n                            \n                        \n                        \n                            \n                                 top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 skip\n                            \n                        \n                        \n                            \n                                Value : skip\n                            \n                        \n                        \n                            \n                                 skiptoken\n                            \n                        \n                        \n                            \n                                Value : skiptoken\n                            \n                        \n                        \n                            \n                                 expand\n                            \n                        \n                        \n                            \n                                Value : expand\n                            \n                        \n                        \n                            \n                                 format\n                            \n                        \n                        \n                            \n                                Value : format\n                            \n                        \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n            \n                \n                    \n                        \n                        StandardAggregateMethods\n                    \n                \n                        \n                            \n                                 sum\n                            \n                        \n                        \n                            \n                                Value : sum\n                            \n                        \n                        \n                            \n                                 min\n                            \n                        \n                        \n                            \n                                Value : min\n                            \n                        \n                        \n                            \n                                 max\n                            \n                        \n                        \n                            \n                                Value : max\n                            \n                        \n                        \n                            \n                                 average\n                            \n                        \n                        \n                            \n                                Value : average\n                            \n                        \n                        \n                            \n                                 countdistinct\n                            \n                        \n                        \n                            \n                                Value : countdistinct\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addBody   (projects/.../client.ts)\n                        \n                        \n                            buildAggregate   (projects/.../builder.ts)\n                        \n                        \n                            buildExpand   (projects/.../builder.ts)\n                        \n                        \n                            buildFilter   (projects/.../builder.ts)\n                        \n                        \n                            buildGroupBy   (projects/.../builder.ts)\n                        \n                        \n                            buildOrderBy   (projects/.../builder.ts)\n                        \n                        \n                            buildTransforms   (projects/.../builder.ts)\n                        \n                        \n                            buildUrl   (projects/.../builder.ts)\n                        \n                        \n                            createSettings   (projects/.../module.ts)\n                        \n                        \n                            escapeIllegalChars   (projects/.../builder.ts)\n                        \n                        \n                            getBoundaryDelimiter   (projects/.../batch.ts)\n                        \n                        \n                            getBoundaryEnd   (projects/.../batch.ts)\n                        \n                        \n                            getHeaderValue   (projects/.../batch.ts)\n                        \n                        \n                            getStringCollectionClause   (projects/.../builder.ts)\n                        \n                        \n                            handleValue   (projects/.../builder.ts)\n                        \n                        \n                            now   (projects/.../batch.ts)\n                        \n                        \n                            parseNot   (projects/.../builder.ts)\n                        \n                        \n                            pathSegmentsBuilder   (projects/.../path-segments.ts)\n                        \n                        \n                            renderPrimitiveValue   (projects/.../builder.ts)\n                        \n                        \n                            uniqid   (projects/.../batch.ts)\n                        \n                        \n                            Unnamed function   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/client.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addBody\n                        \n                        \n                    \n                \n            \n            \n                \naddBody(options, body)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            buildAggregate\n                        \n                        \n                    \n                \n            \n            \n                \nbuildAggregate(aggregate)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aggregate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildExpand\n                        \n                        \n                    \n                \n            \n            \n                \nbuildExpand(expands)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expands\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildFilter\n                        \n                        \n                    \n                \n            \n            \n                \nbuildFilter(filters, aliases, propPrefix: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propPrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildGroupBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildGroupBy(groupBy)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildOrderBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildOrderBy(orderBy, prefix)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prefix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildTransforms\n                        \n                        \n                    \n                \n            \n            \n                \nbuildTransforms(transforms)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transforms\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildUrl\n                        \n                        \n                    \n                \n            \n            \n                \nbuildUrl(path, params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            escapeIllegalChars\n                        \n                        \n                    \n                \n            \n            \n                \nescapeIllegalChars(string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStringCollectionClause\n                        \n                        \n                    \n                \n            \n            \n                \ngetStringCollectionClause(lambdaParameter, value: any, collectionOperator, propName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lambdaParameter\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionOperator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propName\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleValue\n                        \n                        \n                    \n                \n            \n            \n                \nhandleValue(value, aliases?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseNot\n                        \n                        \n                    \n                \n            \n            \n                \nparseNot(builtFilters)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builtFilters\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renderPrimitiveValue\n                        \n                        \n                    \n                \n            \n            \n                \nrenderPrimitiveValue(key, val: any, aliases)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Unnamed function\n                        \n                        \n                    \n                \n            \n            \n                \nUnnamed function(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createSettings\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSettings(configs)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/types/batch.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getBoundaryDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \ngetBoundaryDelimiter(contentType)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBoundaryEnd\n                        \n                        \n                    \n                \n            \n            \n                \ngetBoundaryEnd(boundaryDelimiter)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    boundaryDelimiter\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHeaderValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetHeaderValue(header)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            now\n                        \n                        \n                    \n                \n            \n            \n                \nnow()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uniqid\n                        \n                        \n                    \n                \n            \n            \n                \nuniqid(prefix?, suffix?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prefix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    suffix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            pathSegmentsBuilder\n                        \n                        \n                    \n                \n            \n            \n                \npathSegmentsBuilder(segment)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    segment\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular OData\n\n\nA fluent API for querying, creating, updating and deleting OData resources in Angular.\nOData service for Angular.\nPlease check also my other related project, OData Angular Generator\nDemo:\nFull examples of the library:\n\nAngularODataEntity\n\nTable of contents\n\nInstallation\nUsage\nGenerator\nOData Version\nQuery Builder\nDocumentation\n\nInstallation\nInstall from npm:\nnpm i angular-odataUsage\n1) Add module to your project\nimport { NgModule } from '@angular/core';\nimport { ODataModule } from 'angular-odata';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot({\n      serviceRootUrl: 'https://services.odata.org/V4/(S(4m0tuxtnhcfctl4gzem3gr10))/TripPinServiceRW/'\n    })\n    ...\n  ]\n})\nexport class AppModule {}2) Inject and use the ODataServiceFactory\nimport { Component } from '@angular/core';\nimport { ODataClient, ODATA_ETAG } from 'angular-odata';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TripPin';\n  constructor(private factory: ODataServiceFactory) {\n    this.queries();\n  }\n\n  queries() {\n    // Use OData Service Factory\n    let airportsService = this.factory.entity(\"Airports\");\n    let peopleService = this.factory.entity(\"People\");\n\n    let airports = airportsService.entities();\n\n    // Fetch all airports\n    airports\n    .all()\n    .subscribe(aports => console.log(\"All: \", aports));\n\n    // Fetch airports with count\n    airports\n    .get({withCount: true})\n    .subscribe(({entities, meta}) => console.log(\"Airports: \", entities, \"Annotations: \", meta));\n\n    // Fetch airport with key\n    airports\n    .entity(\"CYYZ\").get()\n    .pipe(switchMap(() => airports.entity(\"CYYZ\").get({fetchPolicy: 'cache-first'}))) // From Cache!\n    .subscribe(({entity, meta}) => console.log(\"Airport: \", entity, \"Annotations: \", meta));\n\n    // Filter airports (inmutable resource)\n    airports\n    .filter({Location: {City: {CountryRegion: \"United States\"}}})\n    .get()\n    .subscribe(({entities, meta}) => console.log(\"Airports of United States: \", entities, \"Annotations: \", meta));\n\n    // Add filter (mutable resource)\n    airports.query.filter().push({Location: {City: {Region: \"California\"}}});\n    airports\n    .get()\n    .subscribe(({entities, meta}) => console.log(\"Airports in California: \", entities, \"Annotations: \", meta));\n\n    // Resource to JSON\n    const json = airports.toJSON();\n    console.log(json);\n    // JSON to Resource\n    const query = this.odata.fromJSON(json);\n    console.log(query);\n\n    // Remove filter (mutable resource)\n    airports.query.filter().clear();\n    airports\n    .get()\n    .subscribe(({entities, meta}) => console.log(\"Airports: \", entities, \"Annotations: \", meta));\n\n    let people = peopleService.entities();\n\n    // Expand (inmutable resource)\n    people.expand({\n      Friends: {\n        expand: { Friends: { select: ['AddressInfo']}}\n      },\n      Trips: { select: ['Name', 'Tags'] },\n    })\n    .get({withCount: true})\n    .subscribe(({entities, meta}) => console.log(\"People with Friends and Trips: \", entities, \"Annotations: \", meta));\n\n    this.odata.batch(\"TripPin\").post(batch => {\n      airports.get().subscribe(console.log);\n      airport.get().subscribe(console.log);\n      people.get({withCount: true}).subscribe(console.log);\n    }).subscribe();\n  }\n}Generator\nIf you use OData Angular Generator, import the config and the module from generated source.\nimport { NgModule } from '@angular/core';\n\nimport { ODataModule } from 'angular-odata';\nimport { TripPinConfig, TripPinModule } from './trippin';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot(TripPinConfig),\n    TripPinModule\n  ]\n  ...\n})\nexport class AppModule {}OData Version\nThe library works mainly with OData Version 4, however, it incorporates basic support for versions 3 and 2.\nQuery Builder\nFor a deep query customizations the library use odata-query as a builder.\n\nOData v4 query builder\n\nDocumentation\nThe api documentation is generated using compodoc and can be viewed here: https://diegomvh.github.io/angular-odata/docs/\nLibrary documentation can be viewed on the wiki here: https://github.com/diegomvh/angular-odata/wiki\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Diego van Haaster\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ODataModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    81 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Aggregate   (projects/.../builder.ts)\n                        \n                        \n                            Alias   (projects/.../builder.ts)\n                        \n                        \n                            AnnotationConfig   (projects/.../types.ts)\n                        \n                        \n                            ApiConfig   (projects/.../types.ts)\n                        \n                        \n                            Binary   (projects/.../builder.ts)\n                        \n                        \n                            CacheCacheability   (projects/.../types.ts)\n                        \n                        \n                            CallableConfig   (projects/.../types.ts)\n                        \n                        \n                            Duration   (projects/.../builder.ts)\n                        \n                        \n                            Duration   (projects/.../edm.ts)\n                        \n                        \n                            EntityContainerConfig   (projects/.../types.ts)\n                        \n                        \n                            EntityKey   (projects/.../types.ts)\n                        \n                        \n                            EntitySetConfig   (projects/.../types.ts)\n                        \n                        \n                            EnumTypeConfig   (projects/.../types.ts)\n                        \n                        \n                            Expand   (projects/.../builder.ts)\n                        \n                        \n                            ExpandObject   (projects/.../builder.ts)\n                        \n                        \n                            ExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ExpandType   (projects/.../builder.ts)\n                        \n                        \n                            FetchPolicy   (projects/.../types.ts)\n                        \n                        \n                            Filter   (projects/.../builder.ts)\n                        \n                        \n                            FilterType   (projects/.../builder.ts)\n                        \n                        \n                            GroupBy   (projects/.../builder.ts)\n                        \n                        \n                            Guid   (projects/.../builder.ts)\n                        \n                        \n                            HttpEntitiesOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpEntityOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpPropertyOptions   (projects/.../options.ts)\n                        \n                        \n                            Json   (projects/.../builder.ts)\n                        \n                        \n                            JsonSchemaConfig   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaExpand   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaExpandOptions   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaOrder   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaSelect   (projects/.../types.ts)\n                        \n                        \n                            NestedExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ODataContext   (projects/.../types.ts)\n                        \n                        \n                            ODataEntities   (projects/.../types.ts)\n                        \n                        \n                            ODataEntity   (projects/.../types.ts)\n                        \n                        \n                            ODataMetadataType   (projects/.../types.ts)\n                        \n                        \n                            ODataProperty   (projects/.../types.ts)\n                        \n                        \n                            ODataSegment   (projects/.../path-segments.ts)\n                        \n                        \n                            ODataVersion   (projects/.../types.ts)\n                        \n                        \n                            OrderBy   (projects/.../builder.ts)\n                        \n                        \n                            OrderByObject   (projects/.../builder.ts)\n                        \n                        \n                            OrderByType   (projects/.../builder.ts)\n                        \n                        \n                            Parameter   (projects/.../types.ts)\n                        \n                        \n                            PlainObject   (projects/.../builder.ts)\n                        \n                        \n                            QueryOptions   (projects/.../builder.ts)\n                        \n                        \n                            Raw   (projects/.../builder.ts)\n                        \n                        \n                            SchemaConfig   (projects/.../types.ts)\n                        \n                        \n                            Select   (projects/.../builder.ts)\n                        \n                        \n                            SelectType   (projects/.../builder.ts)\n                        \n                        \n                            StructuredTypeConfig   (projects/.../types.ts)\n                        \n                        \n                            Transform   (projects/.../builder.ts)\n                        \n                        \n                            Unpacked   (projects/.../builder.ts)\n                        \n                        \n                            Value   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n    \n        \n            \n                \n                    \n                    Aggregate\n                \n            \n            \n                \n                        string | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Alias\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Binary\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Duration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Expand\n                \n            \n            \n                \n                        ExpandType | ExpandType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandObject\n                \n            \n            \n                \n                             | NestedExpandOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandType\n                \n            \n            \n                \n                        string | ExpandObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                        FilterType | FilterType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterType\n                \n            \n            \n                \n                            string | PlainObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GroupBy\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Guid\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Json\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NestedExpandOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderBy\n                \n            \n            \n                \n                        OrderByType | OrderByType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByObject\n                \n            \n            \n                \n                         |  | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByType\n                \n            \n            \n                \n                        string | OrderByObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PlainObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Raw\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Select\n                \n            \n            \n                \n                        SelectType | SelectType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectType\n                \n            \n            \n                \n                        string | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Transform\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Unpacked\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Value\n                \n            \n            \n                \n                        string | Date | number | boolean | Raw | Guid | Duration | Binary | Json | Alias\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    AnnotationConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ApiConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CacheCacheability\n                \n            \n            \n                \n                        \"public\" | \"private\" | \"no-cache\" | \"no-store\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CallableConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityContainerConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityKey\n                \n            \n            \n                \n                         | string | number\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntitySetConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EnumTypeConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FetchPolicy\n                \n            \n            \n                \n                        \"cache-first\" | \"cache-and-network\" | \"network-only\" | \"no-cache\" | \"cache-only\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaConfig\n                \n            \n            \n                \n                            JsonSchemaExpandOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaOrder\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaSelect\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataContext\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataMetadataType\n                \n            \n            \n                \n                        \"minimal\" | \"full\" | \"none\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataVersion\n                \n            \n            \n                \n                        \"2.0\" | \"3.0\" | \"4.0\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Parameter\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SchemaConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StructuredTypeConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/parsers/edm.ts\n    \n    \n        \n            \n                \n                    \n                    Duration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/types/options.ts\n    \n    \n        \n            \n                \n                    \n                    HttpEntitiesOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpEntityOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpPropertyOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/responses/types.ts\n    \n    \n        \n            \n                \n                    \n                    ODataEntities\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataEntity\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataProperty\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n    \n        \n            \n                \n                    \n                    ODataSegment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
