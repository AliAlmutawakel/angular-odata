var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Annotation.html",[0,1.261,1,1.3]],["body/interfaces/Annotation.html",[0,2.304,1,1.86,2,1.375,3,0.069,4,0.061,5,0.069,6,0.044,7,1.49,8,0.044,9,0.313,10,0.221,11,3.377,12,3.377,13,3.377,14,0.209,15,0.127,16,0.777,17,0.012,18,1.349,19,0.233,20,1.833,21,1.042,22,0.174,23,1.149,24,1.375,25,1.997,26,2.248,27,1.558,28,1.555,29,2.771,30,2.248,31,1.555,32,1.009,33,0.999,34,0.662,35,0.948,36,2.598,37,1.387,38,0.84,39,2.582,40,1.229,41,1.231,42,1.794,43,0.84,44,2.246,45,0.84,46,1.43,47,2.074,48,1.393,49,2.346,50,1.555,51,1.555,52,1.555,53,1.555,54,1.49,55,1.555,56,1.555,57,1.555,58,0.176,59,2.405,60,1.555,61,1.555,62,1.555,63,1.555,64,1.555,65,1.276,66,1.67,67,1.555,68,1.623,69,1.555,70,1.555,71,1.555,72,1.555,73,1.555,74,1.43,75,1.555,76,1.555,77,1.555,78,1.555,79,1.555,80,1.555,81,1.555,82,1.555,83,1.555,84,2.036,85,1.788,86,2.318,87,1.734,88,1.571,89,1.833,90,2.158,91,2.158,92,2.678,93,1.555,94,2.346,95,1.555,96,1.231,97,1.555,98,1.555,99,3.05,100,1.925,101,1.77,102,2.019,103,3.323,104,3.258,105,2.825,106,2.346,107,1.189,108,1.555,109,2.346,110,2.707,111,2.875,112,1.555,113,1.555,114,1.555,115,3.137,116,2.088,117,2.707,118,2.825,119,1.555,120,2.248,121,1.555,122,3.146,123,0.87,124,1.43,125,1.555,126,1.49,127,1.43,128,1.555,129,1.555,130,1.555,131,1.555,132,2.158,133,0.504,134,1.555,135,2.346,136,2.346,137,2.405,138,2.346,139,2.158,140,1.49,141,1.555,142,1.49,143,1.997,144,1.555,145,2.405,146,1.43,147,1.43,148,1.43,149,2.074,150,2.158,151,1.43,152,1.43,153,2.158,154,0.362,155,0.791,156,1.324,157,1.43,158,2.456,159,0.989,160,1.43,161,2.158,162,2.158,163,1.276,164,1.555,165,1.555,166,1.555,167,1.555,168,1.555,169,1.555,170,1.555,171,1.49,172,1.555,173,1.43,174,1.43,175,1.49,176,1.43,177,1.49,178,1.49,179,1.375,180,1.722,181,1.276,182,1.076,183,0.682,184,1.375,185,1.231,186,1.076,187,1.324,188,1.276,189,0.703,190,1.324,191,1.076,192,1.43,193,1.43,194,1.555,195,1.555,196,1.555,197,1.276,198,1.49,199,2.158,200,3.265,201,1.042,202,0.606,203,1.49,204,1.997,205,1.276,206,2.074,207,1.49,208,1.925,209,1.49,210,2.158,211,1.375,212,2.158,213,1.43,214,1.276,215,1.858,216,1.375,217,1.43,218,1.43,219,1.43,220,2.598,221,1.997,222,1.149,223,1.49,224,1.49,225,0.078,226,1.375,227,1.324,228,1.112,229,0.004,230,0.006,231,0.004]],["title/interfaces/ApiOptions.html",[0,1.261,161,2.022]],["body/interfaces/ApiOptions.html",[0,2.3,1,1.662,2,1.364,3,0.069,4,0.06,5,0.069,6,0.044,7,1.478,8,0.044,9,0.266,10,0.227,11,2.332,12,2.332,13,2.332,14,0.209,15,0.128,16,0.777,17,0.012,18,1.319,19,0.231,20,1.824,21,1.033,22,0.174,23,1.14,24,1.364,25,1.985,26,2.234,27,1.553,28,1.542,29,2.761,30,2.234,31,1.542,32,1.001,33,0.993,34,0.657,35,0.94,36,2.585,37,1.378,38,0.833,39,2.571,40,1.222,41,1.221,42,1.783,43,0.833,44,2.24,45,0.833,46,1.418,47,2.062,48,1.389,49,2.332,50,1.542,51,1.542,52,1.542,53,1.542,54,1.478,55,1.542,56,1.542,57,1.542,58,0.176,59,2.393,60,1.542,61,1.542,62,1.542,63,1.542,64,1.542,65,1.266,66,1.667,67,1.542,68,2.327,69,1.542,70,1.542,71,1.542,72,1.542,73,1.542,74,1.418,75,1.542,76,1.542,77,1.542,78,1.542,79,1.542,80,1.542,81,1.542,82,1.542,83,1.542,84,2.029,85,1.812,86,2.307,87,1.723,88,2.254,89,2.296,90,2.144,91,2.144,92,3.297,93,1.542,94,2.332,95,1.542,96,1.221,97,1.542,98,1.542,99,3.048,100,1.913,101,1.763,102,2.009,103,3.32,104,3.249,105,2.811,106,2.332,107,1.179,108,1.542,109,2.332,110,2.693,111,2.864,112,1.542,113,1.542,114,1.542,115,3.128,116,2.077,117,2.693,118,2.811,119,1.542,120,2.234,121,1.542,122,3.133,123,0.866,124,1.418,125,1.542,126,1.478,127,1.418,128,1.542,129,1.542,130,1.542,131,1.542,132,2.144,133,0.5,134,1.542,135,2.332,136,2.332,137,2.393,138,2.332,139,2.144,140,1.478,141,1.542,142,1.478,143,1.985,144,1.542,145,2.393,146,1.418,147,1.418,148,1.418,149,2.062,150,2.144,151,1.418,152,1.418,153,2.144,154,0.359,155,0.785,156,1.313,157,1.418,158,2.448,159,1.058,160,1.418,161,2.585,162,2.144,163,2.571,164,1.542,165,1.542,166,1.542,167,1.542,168,1.542,169,1.542,170,1.542,171,1.478,172,1.542,173,2.882,174,1.418,175,1.478,176,1.418,177,1.478,178,1.478,179,1.364,180,1.714,181,1.266,182,1.067,183,0.677,184,1.364,185,1.221,186,1.067,187,1.313,188,1.266,189,0.697,190,1.313,191,1.067,192,1.418,193,1.418,194,1.542,195,1.542,196,1.542,197,1.266,198,1.478,199,2.144,200,3.254,201,1.033,202,0.601,203,1.478,204,1.985,205,1.266,206,2.062,207,1.478,208,1.913,209,1.478,210,2.144,211,1.364,212,2.144,213,1.418,214,1.266,215,1.846,216,1.364,217,1.418,218,1.418,219,1.418,220,2.585,221,1.985,222,1.14,223,1.478,224,1.478,225,0.077,226,1.364,227,1.313,228,1.102,229,0.004,230,0.006,231,0.004,232,2.17]],["title/interfaces/Cache.html",[0,1.261,99,1.521]],["body/interfaces/Cache.html",[0,2.31,1,1.68,2,1.389,3,0.07,4,0.062,5,0.07,6,0.081,7,1.505,8,0.045,9,0.201,10,0.132,11,2.363,12,2.363,13,2.363,14,0.209,15,0.125,16,0.772,17,0.012,18,1.324,19,0.235,20,1.844,21,1.052,22,0.174,23,1.161,24,1.389,25,2.012,26,2.264,27,1.708,28,1.57,29,2.782,30,2.264,31,1.57,32,1.019,33,1.347,34,0.669,35,0.957,36,2.614,37,1.397,38,0.848,39,2.594,40,1.239,41,1.243,42,1.807,43,0.848,44,2.254,45,0.848,46,1.444,47,2.09,48,1.398,49,2.363,50,1.57,51,1.57,52,1.57,53,1.57,54,1.505,55,1.57,56,1.57,57,1.57,58,0.177,59,2.419,60,1.57,61,1.57,62,1.57,63,1.57,64,1.57,65,1.289,66,1.687,67,1.57,68,1.635,69,1.57,70,1.57,71,1.57,72,1.57,73,1.57,74,1.444,75,1.57,76,1.57,77,1.57,78,1.57,79,1.57,80,1.57,81,1.57,82,1.57,83,1.57,84,2.043,85,1.792,86,2.332,87,1.747,88,1.583,89,1.844,90,2.174,91,2.174,92,2.692,93,1.57,94,2.363,95,1.57,96,1.243,97,1.57,98,1.57,99,3.063,100,1.939,101,1.777,102,2.031,103,3.328,104,3.269,105,2.842,106,2.363,107,1.201,108,1.57,109,2.363,110,2.723,111,2.887,112,1.57,113,1.57,114,1.57,115,3.147,116,2.1,117,2.723,118,2.842,119,1.57,120,2.264,121,1.57,122,3.162,123,0.874,124,1.444,125,1.57,126,1.505,127,1.444,128,1.57,129,1.57,130,1.57,131,1.57,132,2.174,133,0.509,134,1.57,135,2.363,136,2.363,137,2.419,138,2.363,139,2.174,140,1.505,141,1.57,142,1.505,143,2.012,144,1.57,145,2.419,146,1.444,147,1.444,148,1.444,149,2.09,150,2.174,151,1.444,152,1.444,153,2.174,154,0.366,155,0.799,156,1.337,157,1.444,158,2.465,159,0.994,160,1.444,161,2.174,162,2.174,163,1.289,164,1.57,165,1.57,166,1.57,167,1.57,168,1.57,169,1.57,170,1.57,171,1.505,172,1.57,173,1.444,174,1.444,175,1.505,176,1.444,177,1.505,178,1.505,179,1.389,180,1.732,181,1.289,182,1.086,183,0.689,184,1.389,185,1.243,186,1.086,187,2.012,188,2.332,189,1.068,190,2.012,191,1.086,192,1.444,193,1.444,194,1.57,195,1.57,196,1.57,197,1.289,198,1.505,199,2.174,200,3.277,201,1.052,202,0.612,203,1.505,204,2.012,205,1.289,206,2.09,207,1.505,208,1.939,209,1.505,210,2.174,211,1.389,212,2.174,213,1.444,214,1.289,215,1.871,216,1.389,217,1.444,218,1.444,219,1.444,220,2.614,221,2.012,222,1.161,223,1.505,224,1.505,225,0.143,226,1.389,227,1.337,228,1.122,229,0.004,230,0.006,231,0.004,233,0.949,234,2.264,235,0.244,236,2.978,237,0.921,238,2.978]],["title/classes/CsdlAction.html",[239,0.311,240,2.301]],["body/classes/CsdlAction.html",[3,0.114,4,0.1,5,0.114,6,0.121,8,0.073,9,0.283,10,0.243,14,0.205,15,0.122,16,0.776,17,0.012,18,1.353,22,0.163,32,2.16,38,1.797,40,1.744,43,1.797,45,1.797,58,0.171,154,1.089,222,3.082,225,0.213,229,0.006,230,0.008,231,0.006,235,0.431,239,0.589,240,3.482,241,0.313,242,2.098,243,2.293,244,3.119,245,4.817,246,4.817,247,0.726,248,1.51,249,4.577,250,4.577,251,4.846,252,1.195,253,4.846,254,4.846,255,4.846,256,4.846,257,4.846,258,2.673,259,2.951,260,2.673,261,3.119,262,2.804,263,2.673,264,1.826,265,2.545]],["title/classes/CsdlActionImport.html",[239,0.311,263,2.301]],["body/classes/CsdlActionImport.html",[3,0.12,4,0.105,5,0.12,6,0.117,8,0.076,9,0.292,10,0.211,14,0.207,15,0.12,16,0.753,17,0.012,18,1.37,22,0.166,32,2.741,38,1.854,40,1.799,43,1.854,45,1.854,58,0.172,154,1.089,222,2.537,225,0.19,229,0.007,230,0.009,231,0.007,235,0.413,239,0.597,240,2.803,241,0.329,242,2.039,243,2.23,244,3.272,245,3.965,246,3.965,247,0.734,248,1.584,249,4.156,250,4.156,252,0.816,258,2.803,259,3.095,260,2.803,261,3.272,262,2.941,263,3.591,264,2.951,265,2.625,266,5.082,267,5.082,268,5.082,269,5.082]],["title/classes/CsdlAnnotable.html",[239,0.311,270,2.199]],["body/classes/CsdlAnnotable.html",[3,0.136,4,0.119,5,0.136,6,0.114,8,0.086,9,0.315,10,0.224,14,0.202,15,0.114,16,0.54,17,0.012,18,1.3,22,0.164,38,1.638,40,1.59,43,1.638,45,1.638,58,0.145,154,1.073,159,0.954,225,0.152,229,0.008,230,0.009,231,0.008,235,0.384,239,0.59,241,0.372,242,1.979,247,0.713,252,0.924,265,2.32,270,4.008,271,4.218,272,4.481,273,5.754,274,4.175,275,5.754,276,5.754,277,3.504,278,3.504,279,3.504,280,4.072,281,3.174,282,3.938,283,3.504,284,3.938,285,3.034,286,3.938]],["title/classes/CsdlAnnotation.html",[239,0.311,274,2.107]],["body/classes/CsdlAnnotation.html",[3,0.133,4,0.117,5,0.133,6,0.118,8,0.084,9,0.312,10,0.222,14,0.205,15,0.118,16,0.53,17,0.012,18,1.289,22,0.162,38,1.606,40,1.558,43,1.606,45,1.606,58,0.144,154,1.076,159,0.935,225,0.149,229,0.007,230,0.009,231,0.007,235,0.411,239,0.586,241,0.365,242,2.048,247,0.708,252,0.906,265,2.274,270,3.665,271,4.135,272,3.834,274,3.973,277,3.435,278,3.435,279,3.435,280,4.759,281,3.111,282,5.382,283,3.435,284,3.86,285,2.974,286,3.86,287,5.64,288,5.64,289,5.64,290,5.64]],["title/classes/CsdlAnnotations.html",[239,0.311,278,2.54]],["body/classes/CsdlAnnotations.html",[3,0.13,4,0.114,5,0.13,6,0.117,8,0.082,9,0.307,10,0.236,14,0.205,15,0.12,16,0.517,17,0.012,18,1.275,22,0.161,38,1.566,40,1.52,43,1.566,45,1.566,58,0.141,154,1.077,159,1.135,225,0.146,229,0.007,230,0.009,231,0.007,235,0.425,239,0.581,241,0.356,242,2.03,247,0.702,252,0.884,265,2.218,270,4.111,271,4.033,272,4.51,274,4.13,277,3.351,278,4.169,279,4.748,280,4.73,281,3.035,282,3.765,283,3.351,284,3.765,285,2.901,286,3.765,291,5.502,292,5.502,293,5.502,294,5.502,295,2.074,296,4.033]],["title/classes/CsdlComplexType.html",[239,0.311,297,2.413]],["body/classes/CsdlComplexType.html",[3,0.115,4,0.101,5,0.115,6,0.095,8,0.073,9,0.377,10,0.247,14,0.201,15,0.121,16,0.798,17,0.012,19,0.385,22,0.16,33,1.096,34,1.096,58,0.169,154,1.072,159,1.168,202,1.002,225,0.129,229,0.006,230,0.008,231,0.006,235,0.44,239,0.576,241,0.315,242,1.651,247,0.714,248,1.521,252,1.242,295,2.987,297,3.669,298,3.498,299,2.275,300,5.37,301,2.426,302,5.324,303,5.659,304,5.324,305,3.913,306,3.913,307,4.879,308,4.273,309,4.273,310,4.273,311,4.273,312,4.273,313,4.273,314,2.275,315,2.465,316,3.344,317,2.823,318,3.862,319,3.141,320,3.339,321,3.862]],["title/classes/CsdlEntityContainer.html",[239,0.311,322,3.058]],["body/classes/CsdlEntityContainer.html",[3,0.126,4,0.11,5,0.126,6,0.125,8,0.08,9,0.301,10,0.251,14,0.196,15,0.123,17,0.012,19,0.579,22,0.11,35,2.701,58,0.164,154,1.07,211,3.704,225,0.141,229,0.007,230,0.009,231,0.007,235,0.449,239,0.397,241,0.345,242,2.168,243,1.517,247,0.604,248,1.661,252,1.276,260,4.382,263,4.382,264,2.009,314,3.424,322,4.919,323,4.668,324,7.945,325,7.945,326,7.945,327,7.945,328,5.825,329,5.825,330,5.33,331,5.33,332,4.668,333,4.668,334,5.33,335,4.668,336,4.668,337,3.246,338,3.431]],["title/classes/CsdlEntitySet.html",[239,0.311,328,3.058]],["body/classes/CsdlEntitySet.html",[3,0.136,4,0.119,5,0.136,6,0.124,8,0.086,9,0.316,10,0.239,14,0.199,15,0.122,16,0.744,17,0.012,19,0.454,22,0.119,34,1.294,35,2.658,41,2.405,58,0.168,154,1.061,225,0.153,226,3.789,229,0.008,230,0.009,231,0.008,235,0.443,239,0.429,241,0.373,242,2.153,247,0.634,248,1.796,252,1.131,262,4.702,314,2.686,328,5.163,339,4.576,340,7.118,341,5.562,342,5.762,343,5.047,344,5.047,345,5.047,346,5.047,347,3.709]],["title/classes/CsdlEntityType.html",[239,0.311,317,2.413]],["body/classes/CsdlEntityType.html",[3,0.11,4,0.097,5,0.11,6,0.11,8,0.07,9,0.374,10,0.251,14,0.2,15,0.123,16,0.804,17,0.012,19,0.369,22,0.158,33,1.713,34,1.05,58,0.167,154,1.075,159,1.144,202,0.96,225,0.124,229,0.006,230,0.008,231,0.006,235,0.447,239,0.568,241,0.302,242,1.911,247,0.705,248,1.457,252,1.283,295,2.952,297,2.705,298,4.047,299,2.18,300,5.331,301,2.406,302,5.28,303,5.613,304,5.28,305,3.873,306,3.873,308,4.095,309,4.095,310,4.095,311,4.095,312,4.095,313,4.095,314,2.18,315,2.362,316,3.252,317,3.568,318,4.645,319,4.91,320,3.2,321,3.756,348,4.095,349,4.095,350,4.095]],["title/classes/CsdlEnumMember.html",[239,0.311,351,3.058]],["body/classes/CsdlEnumMember.html",[3,0.141,4,0.124,5,0.141,6,0.12,8,0.09,9,0.323,10,0.228,14,0.196,15,0.116,16,0.562,17,0.012,18,1.373,22,0.149,48,1.637,58,0.172,154,1.058,214,2.591,225,0.159,229,0.008,230,0.01,231,0.008,235,0.422,239,0.537,241,0.387,242,2.09,247,0.697,248,1.867,252,0.962,299,2.792,351,5.671,352,4.233,353,4.39,354,5.245,355,4.756,356,4.098,357,4.756,358,4.756]],["title/classes/CsdlEnumType.html",[239,0.311,356,2.854]],["body/classes/CsdlEnumType.html",[3,0.134,4,0.118,5,0.134,6,0.124,8,0.085,9,0.314,10,0.239,14,0.2,15,0.121,16,0.742,17,0.012,18,0.976,22,0.145,48,1.138,58,0.17,154,1.067,214,3.507,225,0.151,229,0.008,230,0.009,231,0.008,235,0.442,239,0.522,241,0.369,242,2.148,247,0.682,248,1.779,252,1.125,299,2.661,351,5.942,352,4.35,356,4.792,357,6.437,358,6.437,359,5.708,360,4.533,361,5.708,362,4.999,363,4.533]],["title/classes/CsdlFunction.html",[239,0.311,258,2.301]],["body/classes/CsdlFunction.html",[3,0.112,4,0.098,5,0.112,6,0.122,8,0.071,9,0.28,10,0.242,14,0.204,15,0.123,16,0.791,17,0.012,18,1.346,22,0.163,32,2.135,38,1.776,40,1.724,43,1.776,45,1.776,58,0.17,154,1.089,222,3.067,225,0.212,229,0.006,230,0.008,231,0.006,235,0.437,239,0.586,240,2.625,241,0.308,242,2.119,243,2.317,244,3.064,245,4.794,246,4.794,247,0.722,248,1.483,249,4.554,250,4.554,252,1.187,258,3.441,259,4.672,260,2.625,261,3.064,262,2.754,263,2.625,264,1.794,265,2.515,364,4.759,365,4.759,366,4.759,367,4.759,368,4.759,369,4.759,370,4.759]],["title/classes/CsdlFunctionImport.html",[239,0.311,260,2.301]],["body/classes/CsdlFunctionImport.html",[3,0.117,4,0.103,5,0.117,6,0.119,8,0.074,9,0.288,10,0.229,14,0.206,15,0.121,16,0.779,17,0.012,18,1.362,22,0.165,32,2.725,38,1.827,40,1.773,43,1.827,45,1.827,58,0.171,154,1.089,222,2.501,225,0.188,229,0.007,230,0.008,231,0.007,235,0.424,239,0.593,240,2.741,241,0.321,242,2.074,243,2.267,244,3.199,245,3.908,246,3.908,247,0.73,248,1.549,249,4.113,250,4.113,252,1.031,258,2.741,259,3.027,260,3.54,261,5.007,262,4.5,263,2.741,264,1.873,265,2.587,371,4.97,372,4.97,373,4.97,374,4.97,375,4.97]],["title/classes/CsdlInclude.html",[239,0.311,376,2.854]],["body/classes/CsdlInclude.html",[1,1.808,3,0.137,4,0.12,5,0.137,6,0.119,8,0.087,9,0.317,10,0.225,14,0.204,15,0.114,17,0.012,19,0.457,22,0.158,58,0.12,154,1.062,159,0.962,201,2.805,202,1.672,225,0.154,229,0.008,230,0.009,231,0.008,235,0.416,239,0.568,241,0.375,242,2.068,247,0.715,252,0.932,270,3.729,272,3.2,274,3.572,280,3.356,281,3.2,314,2.705,376,5.221,377,4.607,378,5.081,379,5.801,380,5.801,381,5.801,382,3.97,383,4.253,384,4.607,385,4.607,386,4.84,387,4.253,388,4.253]],["title/classes/CsdlIncludeAnnotations.html",[239,0.311,386,2.854]],["body/classes/CsdlIncludeAnnotations.html",[1,1.765,3,0.133,4,0.117,5,0.133,6,0.121,8,0.085,9,0.312,10,0.238,14,0.205,15,0.118,17,0.012,19,0.446,22,0.156,58,0.117,154,1.066,159,0.939,201,2,202,1.163,225,0.15,229,0.007,230,0.009,231,0.007,235,0.43,239,0.562,241,0.366,242,2.106,247,0.709,252,1.119,270,3.674,272,3.123,274,3.52,280,4.679,281,3.123,314,2.64,376,4.769,377,4.497,382,3.875,383,4.151,384,4.497,385,4.497,386,5.166,387,5.774,388,5.928,389,5.662,390,5.662,391,5.662,392,5.662,393,5.662]],["title/classes/CsdlKey.html",[239,0.311,318,2.54]],["body/classes/CsdlKey.html",[3,0.128,4,0.112,5,0.128,6,0.111,8,0.082,9,0.371,10,0.16,14,0.197,15,0.102,16,0.777,17,0.012,19,0.429,22,0.165,33,1.223,34,1.223,58,0.165,154,1.058,159,1.127,202,1.119,225,0.144,229,0.007,230,0.009,231,0.007,235,0.371,239,0.596,241,0.352,242,1.931,247,0.734,297,3.151,298,4.091,299,2.539,300,4.775,301,2.346,302,5.147,303,5.472,304,5.147,305,3.767,306,3.767,314,2.539,315,2.751,316,3.586,317,3.151,318,4.517,319,3.506,320,5.316,321,4.869,394,5.446,395,5.446,396,5.446]],["title/classes/CsdlNavigationProperty.html",[239,0.311,306,2.022]],["body/classes/CsdlNavigationProperty.html",[3,0.114,4,0.1,5,0.114,6,0.118,8,0.072,9,0.282,10,0.247,14,0.205,15,0.129,16,0.788,17,0.012,18,1.199,22,0.159,34,1.085,38,1.375,40,2.28,43,1.375,45,1.375,58,0.166,154,1.08,159,1.162,225,0.128,229,0.006,230,0.008,231,0.006,235,0.445,239,0.574,241,0.312,242,2.058,247,0.712,248,1.505,252,1.238,264,1.82,265,1.947,285,2.546,295,2.642,301,1.417,305,2.342,306,3.055,315,3.992,316,3.321,397,3.305,398,5.182,399,4.961,400,4.961,401,4.961,402,5.274,403,4.694,404,4.694,405,4.829,406,4.829,407,4.829,408,4.829,409,4.829,410,4.23,411,4.23,412,4.23,413,2.941,414,3.109]],["title/classes/CsdlNavigationPropertyBinding.html",[239,0.311,341,2.854]],["body/classes/CsdlNavigationPropertyBinding.html",[3,0.145,4,0.127,5,0.145,6,0.121,8,0.092,9,0.329,10,0.181,14,0.201,15,0.117,17,0.011,22,0.127,34,1.82,41,3.383,58,0.127,154,1.031,225,0.163,229,0.008,230,0.01,231,0.008,235,0.427,239,0.459,241,0.398,242,2.11,247,0.66,279,5.041,341,5.019,415,6.161,416,3.267,417,6.161,418,6.161,419,6.161,420,6.161]],["title/classes/CsdlOnDelete.html",[239,0.311,404,2.54]],["body/classes/CsdlOnDelete.html",[3,0.13,4,0.114,5,0.13,6,0.112,8,0.083,9,0.307,10,0.162,14,0.205,15,0.124,16,0.754,17,0.012,18,1.276,22,0.166,34,1.239,38,1.57,40,2.218,43,1.57,45,1.57,58,0.161,154,1.074,159,1.136,225,0.146,229,0.007,230,0.009,231,0.007,235,0.374,239,0.598,241,0.357,242,1.942,247,0.737,264,2.941,265,2.224,285,2.908,301,1.618,305,2.675,306,2.675,315,3.769,316,3.615,397,3.775,398,4.803,399,3.551,400,3.551,401,3.551,402,3.775,403,4.175,404,4.543,413,3.359,414,3.551,421,5.516,422,5.516,423,5.516]],["title/classes/CsdlParameter.html",[239,0.311,250,2.413]],["body/classes/CsdlParameter.html",[3,0.11,4,0.096,5,0.11,6,0.123,8,0.07,9,0.276,10,0.246,14,0.205,15,0.127,16,0.77,17,0.012,18,1.457,22,0.162,32,2.105,38,2.228,40,2.162,43,2.228,45,2.228,58,0.169,154,1.089,222,2.398,225,0.182,229,0.006,230,0.008,231,0.006,235,0.442,239,0.583,240,2.571,241,0.301,242,2.134,243,2.334,244,3,245,3.748,246,3.748,247,0.719,248,1.453,249,3.986,250,4.24,252,1.224,258,2.571,259,2.838,260,2.571,261,3,262,2.696,263,2.571,264,1.756,265,3.155,424,4.66,425,4.66,426,4.66,427,4.66,428,4.66,429,4.66,430,4.66,431,4.66]],["title/classes/CsdlProperty.html",[239,0.311,305,2.022]],["body/classes/CsdlProperty.html",[3,0.109,4,0.096,5,0.109,6,0.121,8,0.069,9,0.275,10,0.251,14,0.205,15,0.129,16,0.783,17,0.012,18,1.435,22,0.157,34,1.04,38,2.164,40,2.262,43,2.164,45,2.164,58,0.165,154,1.081,159,1.138,225,0.123,229,0.006,230,0.008,231,0.006,235,0.451,239,0.566,241,0.299,242,2.106,247,0.704,248,1.443,252,1.28,264,1.745,265,3.065,285,4.009,295,2.588,301,1.358,305,2.971,306,2.245,315,4.086,316,3.231,397,3.169,398,5.129,399,2.981,400,2.981,401,2.981,402,3.169,403,3.732,404,3.732,410,4.055,411,4.055,412,4.055,413,4.63,414,2.981,432,4.63,433,4.63,434,4.63,435,4.63,436,4.63,437,4.63,438,4.63]],["title/classes/CsdlPropertyRef.html",[239,0.311,321,2.54]],["body/classes/CsdlPropertyRef.html",[3,0.125,4,0.11,5,0.125,6,0.115,8,0.08,9,0.369,10,0.216,14,0.203,15,0.11,16,0.773,17,0.012,19,0.419,22,0.164,33,1.194,34,1.194,58,0.172,154,1.062,159,1.111,202,1.631,225,0.141,229,0.007,230,0.009,231,0.007,235,0.4,239,0.591,241,0.344,242,2.005,247,0.73,248,1.657,252,0.854,297,3.076,298,4.248,299,2.479,300,4.723,301,2.329,302,5.111,303,5.433,304,5.111,305,3.735,306,3.735,314,2.479,315,2.686,316,3.533,317,3.076,318,4.08,319,3.423,320,3.638,321,4.468,439,5.317,440,4.657,441,5.317]],["title/classes/CsdlReference.html",[239,0.311,382,2.854]],["body/classes/CsdlReference.html",[1,1.719,3,0.13,4,0.114,5,0.13,6,0.12,8,0.083,9,0.307,10,0.244,14,0.199,15,0.12,17,0.012,19,0.435,22,0.154,58,0.114,154,1.069,159,1.136,201,1.948,202,1.133,225,0.146,229,0.007,230,0.009,231,0.007,235,0.438,239,0.556,241,0.357,242,2.09,247,0.703,252,1.198,270,4.115,272,4.427,274,4.054,280,3.192,281,3.043,295,2.079,296,4.044,314,2.572,376,5.493,377,4.381,382,4.692,383,5.721,384,6.374,385,6.374,386,5.493,387,4.044,388,4.044,442,5.516,443,5.516,444,5.516,445,5.516,446,5.516]],["title/classes/CsdlReferentialConstraint.html",[239,0.311,403,2.54]],["body/classes/CsdlReferentialConstraint.html",[3,0.127,4,0.112,5,0.127,6,0.116,8,0.081,9,0.303,10,0.159,14,0.206,15,0.125,16,0.749,17,0.012,18,1.264,22,0.165,34,1.74,38,1.539,40,2.204,43,1.539,45,1.539,58,0.16,154,1.076,159,1.122,225,0.143,229,0.007,230,0.009,231,0.007,235,0.403,239,0.594,241,0.349,242,2.017,247,0.733,264,2.037,265,2.179,285,2.849,301,1.585,305,2.621,306,2.621,315,3.914,316,3.569,397,3.698,398,4.758,399,3.479,400,3.479,401,3.479,402,3.698,403,4.501,404,4.122,413,3.291,414,5.136,447,5.404,448,5.404,449,5.404,450,5.404]],["title/classes/CsdlReturnType.html",[239,0.311,249,2.413]],["body/classes/CsdlReturnType.html",[3,0.112,4,0.098,5,0.112,6,0.122,8,0.071,9,0.279,10,0.246,14,0.204,15,0.126,16,0.773,17,0.012,18,1.46,22,0.162,32,2.13,38,2.239,40,2.173,43,2.239,45,2.239,58,0.162,154,1.089,222,2.426,225,0.184,229,0.006,230,0.008,231,0.006,235,0.437,239,0.586,240,2.616,241,0.307,242,2.117,243,2.315,244,3.054,245,3.791,246,3.791,247,0.722,249,4.269,250,4.021,252,1.231,258,2.616,259,2.889,260,2.616,261,3.054,262,2.744,263,2.616,264,1.788,265,3.171,451,4.743,452,4.743,453,4.743,454,4.743,455,4.743,456,4.743,457,4.743,458,4.743]],["title/classes/CsdlSchema.html",[239,0.311,459,3.312]],["body/classes/CsdlSchema.html",[1,1.404,3,0.106,4,0.093,5,0.106,6,0.126,8,0.067,9,0.27,10,0.255,14,0.189,15,0.128,17,0.012,19,0.611,22,0.093,35,1.447,58,0.093,154,1.081,159,0.997,201,2.553,202,1.547,225,0.119,229,0.006,230,0.008,231,0.006,235,0.458,239,0.335,240,4.155,241,0.291,242,2.188,243,1.282,247,0.542,252,1.332,258,4.155,264,1.697,270,3.811,272,4.155,274,3.805,278,4.587,281,2.484,283,4.587,295,1.697,296,3.301,297,4.358,298,2.484,314,3.613,317,4.358,322,5.522,352,2.374,356,5.155,378,3.944,459,4.777,460,4.503,461,7.533,462,7.533,463,7.533,464,6.598,465,7.533,466,7.533,467,4.587,468,7.533,469,7.533,470,5.522,471,4.503,472,4.503,473,4.503,474,4.503,475,4.503,476,4.503,477,4.503,478,4.503,479,4.503,480,4.503,481,4.503,482,4.503,483,3.944,484,3.576]],["title/classes/CsdlSingleton.html",[239,0.311,329,3.058]],["body/classes/CsdlSingleton.html",[3,0.141,4,0.124,5,0.141,6,0.123,8,0.09,9,0.323,10,0.228,14,0.2,15,0.128,17,0.012,19,0.472,22,0.124,34,1.343,41,2.496,58,0.17,154,1.052,225,0.158,229,0.008,230,0.01,231,0.008,235,0.438,239,0.445,241,0.387,242,2.138,247,0.649,248,1.864,252,0.96,314,2.788,329,5.281,341,5.619,347,3.85,485,5.98,486,8.211,487,5.98,488,5.98,489,5.98,490,5.98]],["title/classes/CsdlStructuralProperty.html",[239,0.311,398,2.685]],["body/classes/CsdlStructuralProperty.html",[3,0.124,4,0.109,5,0.124,6,0.119,8,0.079,9,0.299,10,0.215,14,0.205,15,0.129,16,0.781,17,0.012,18,1.25,22,0.164,34,1.185,38,1.502,40,2.318,43,1.502,45,1.502,58,0.17,154,1.077,159,1.105,225,0.14,229,0.007,230,0.009,231,0.007,235,0.419,239,0.59,241,0.341,242,2.063,247,0.729,248,1.645,252,0.847,264,1.989,265,2.128,285,2.782,301,1.548,305,2.559,306,2.559,315,4.002,316,3.516,397,3.611,398,4.945,399,3.397,400,3.397,401,3.397,402,3.611,403,4.061,404,4.061,413,3.214,414,3.397,491,5.277,492,5.277,493,5.277,494,5.277]],["title/classes/CsdlStructuredType.html",[239,0.311,300,2.685]],["body/classes/CsdlStructuredType.html",[3,0.114,4,0.1,5,0.114,6,0.122,8,0.073,9,0.376,10,0.247,14,0.201,15,0.121,16,0.798,17,0.012,19,0.383,22,0.159,33,1.091,34,1.091,58,0.169,154,1.072,159,1.048,202,0.998,225,0.129,229,0.006,230,0.008,231,0.006,235,0.44,239,0.575,241,0.314,242,2.128,247,0.713,248,1.514,252,1.24,297,2.81,298,4.508,299,2.264,300,4.794,301,2.424,302,5.319,303,5.654,304,5.319,305,3.909,306,3.909,314,2.264,315,2.453,316,3.334,317,2.81,318,3.85,319,3.127,320,3.324,321,3.85,353,3.56,360,3.857,362,4.254,363,3.857,495,3.857,496,3.857,497,3.857]],["title/classes/CsdlTerm.html",[239,0.311,283,2.54]],["body/classes/CsdlTerm.html",[3,0.112,4,0.098,5,0.112,6,0.126,8,0.071,9,0.279,10,0.253,14,0.207,15,0.128,16,0.694,17,0.012,18,1.44,22,0.153,38,2.183,40,2.119,43,2.183,45,2.183,58,0.158,154,1.083,159,0.788,225,0.126,229,0.006,230,0.008,231,0.006,235,0.456,239,0.55,241,0.307,242,2.193,247,0.665,248,1.482,252,1.307,265,3.092,270,3.287,271,3.485,272,3.439,274,3.515,277,2.895,278,2.895,279,2.895,280,3.607,281,2.622,282,3.253,283,3.797,284,5.248,285,4.043,286,5.248,498,4.754,499,4.754,500,4.754,501,4.754,502,4.754,503,4.754,504,4.754,505,4.754,506,4.754,507,4.754,508,4.754]],["title/classes/CsdlTypeDefinition.html",[239,0.311,470,3.058]],["body/classes/CsdlTypeDefinition.html",[1,1.603,3,0.121,4,0.106,5,0.121,6,0.125,8,0.077,9,0.294,10,0.252,14,0.201,15,0.13,16,0.715,17,0.011,18,1.457,19,0.406,22,0.106,38,2.238,43,2.238,45,2.238,58,0.162,154,1.076,159,1.088,225,0.136,229,0.007,230,0.009,231,0.007,235,0.455,239,0.383,241,0.333,242,2.174,247,0.591,248,1.603,252,1.291,265,3.169,270,4.012,272,4.336,274,3.971,281,2.837,295,1.939,296,3.771,314,2.398,413,4.787,470,4.81,509,5.144,510,7.86,511,5.144,512,5.144,513,5.144,514,5.144,515,5.144,516,5.144,517,5.144,518,5.144]],["title/interfaces/EnumTypeField.html",[0,1.261,47,1.944]],["body/interfaces/EnumTypeField.html",[0,2.318,1,2.018,2,1.41,3,0.071,4,0.062,5,0.071,6,0.045,7,1.528,8,0.045,9,0.271,10,0.134,11,2.391,12,2.391,13,2.391,14,0.209,15,0.125,16,0.773,17,0.012,18,1.356,19,0.239,20,1.861,21,1.068,22,0.174,23,1.179,24,1.41,25,2.035,26,2.291,27,1.572,28,1.595,29,2.801,30,2.291,31,1.595,32,1.035,33,1.018,34,0.679,35,0.972,36,2.638,37,1.414,38,0.861,39,2.615,40,1.253,41,1.263,42,1.828,43,0.861,44,2.427,45,0.861,46,1.467,47,2.536,48,1.505,49,2.391,50,1.595,51,1.595,52,1.595,53,1.595,54,1.528,55,1.595,56,1.595,57,1.595,58,0.177,59,2.442,60,1.595,61,1.595,62,1.595,63,1.595,64,1.595,65,1.309,66,1.678,67,1.595,68,1.654,69,1.595,70,1.595,71,1.595,72,1.595,73,1.595,74,1.467,75,1.595,76,1.595,77,1.595,78,1.595,79,1.595,80,1.595,81,1.595,82,1.595,83,1.595,84,2.055,85,1.799,86,2.354,87,1.767,88,1.602,89,1.861,90,2.199,91,2.199,92,2.713,93,1.595,94,2.391,95,1.595,96,1.263,97,1.595,98,1.595,99,3.059,100,1.962,101,1.789,102,2.05,103,3.334,104,3.286,105,2.868,106,2.391,107,1.219,108,1.595,109,2.391,110,2.748,111,2.906,112,1.595,113,1.595,114,1.595,115,3.164,116,2.12,117,2.748,118,2.868,119,1.595,120,2.291,121,1.595,122,3.186,123,0.881,124,1.467,125,1.595,126,1.528,127,1.467,128,1.595,129,1.595,130,1.595,131,1.595,132,2.199,133,0.517,134,1.595,135,2.391,136,2.391,137,2.442,138,2.391,139,2.199,140,1.528,141,1.595,142,1.528,143,2.035,144,1.595,145,2.442,146,1.467,147,1.467,148,1.467,149,2.114,150,2.199,151,1.467,152,1.467,153,2.199,154,0.371,155,0.811,156,1.358,157,1.467,158,2.479,159,1.002,160,1.467,161,2.199,162,2.199,163,1.309,164,1.595,165,1.595,166,1.595,167,1.595,168,1.595,169,1.595,170,1.595,171,1.528,172,1.595,173,1.467,174,1.467,175,1.528,176,1.467,177,1.528,178,1.528,179,1.41,180,1.749,181,1.309,182,1.103,183,0.7,184,1.41,185,1.263,186,1.103,187,1.358,188,1.309,189,0.721,190,1.358,191,1.103,192,1.467,193,1.467,194,1.595,195,1.595,196,1.595,197,1.309,198,1.528,199,2.199,200,3.296,201,1.068,202,0.621,203,1.528,204,2.035,205,1.309,206,2.114,207,1.528,208,1.962,209,1.528,210,2.199,211,1.41,212,2.199,213,1.467,214,1.309,215,1.893,216,1.41,217,1.467,218,1.467,219,1.467,220,2.638,221,2.035,222,1.179,223,1.528,224,1.528,225,0.08,226,1.41,227,1.358,228,1.14,229,0.004,230,0.006,231,0.004]],["title/classes/Field.html",[42,1.682,239,0.311]],["body/classes/Field.html",[1,1.407,3,0.071,4,0.062,5,0.071,6,0.09,8,0.081,9,0.202,10,0.088,14,0.166,15,0.105,17,0.012,19,0.624,22,0.062,24,4.11,32,1.544,33,0.675,34,1.353,35,1.451,38,0.856,40,0.83,41,1.255,42,2.185,43,0.856,44,0.966,45,0.856,48,0.599,58,0.14,86,2.934,87,2.112,133,1.419,143,2.026,145,2.433,154,0.888,155,2.362,159,0.498,180,0.966,183,1.627,198,1.518,201,1.061,202,0.617,216,1.401,221,1.349,222,1.171,225,0.08,226,2.104,229,0.004,230,0.006,231,0.004,235,0.296,239,0.336,240,1.658,241,0.194,243,1.543,245,1.83,246,1.83,247,0.271,248,0.937,249,1.739,250,1.739,258,1.658,259,1.83,260,1.658,262,1.739,263,1.658,264,2.042,265,1.212,274,1.518,277,1.83,278,1.83,279,1.83,280,1.739,282,3.089,283,1.83,284,2.057,285,1.585,286,2.057,297,1.739,298,1.658,301,0.882,302,1.935,304,1.935,305,1.457,306,1.457,315,1.518,317,1.739,318,1.83,319,1.935,321,1.83,322,2.203,328,2.203,329,2.203,337,1.83,338,2.905,340,2.633,341,2.057,347,1.935,351,2.203,352,2.38,356,2.057,357,2.387,358,2.387,376,2.057,382,3.089,383,2.203,386,2.057,387,2.203,388,2.203,399,1.935,400,1.935,401,1.935,403,1.83,404,1.83,413,1.83,414,1.935,416,1.212,459,3.584,464,2.633,470,2.203,483,2.633,484,2.387,519,2.633,520,5.987,521,3.006,522,4.513,523,7.755,524,2.38,525,0.695,526,2.203,527,2.057,528,3.309,529,1.061,530,2.387,531,3.953,532,2.633,533,2.633,534,5.095,535,3.006,536,3.006,537,3.006,538,3.006,539,3.006,540,3.006,541,3.006,542,3.006,543,3.006,544,3.006,545,3.006,546,3.006,547,3.006,548,3.006,549,3.006,550,2.633,551,3.006,552,3.006,553,3.006,554,3.006,555,3.006,556,3.006,557,3.006,558,3.006,559,3.006,560,2.057,561,3.006,562,3.006,563,3.006,564,3.006,565,3.006,566,3.006,567,3.006,568,3.006,569,3.006,570,3.006,571,3.006,572,3.006,573,3.006,574,3.006,575,3.006,576,3.006,577,3.006,578,4.304,579,3.006,580,3.006,581,3.006,582,3.006,583,3.006,584,3.006,585,3.006,586,3.006,587,3.006,588,3.006,589,3.006,590,3.006,591,3.006,592,3.006,593,3.006,594,3.006,595,3.006,596,3.006,597,3.006,598,3.006,599,3.006,600,3.006,601,3.006,602,3.006,603,3.006,604,3.006,605,3.006,606,3.006,607,3.006,608,3.006,609,3.006,610,3.006,611,3.006,612,3.006,613,3.006,614,3.006,615,3.006,616,3.006,617,3.006,618,3.006,619,3.006,620,3.006,621,3.006,622,2.387,623,4.513,624,5.419,625,3.006,626,3.006,627,3.006,628,2.387,629,3.006,630,3.006,631,6.024,632,4.513,633,3.006,634,3.006,635,3.006,636,3.006,637,3.006,638,7.842,639,3.006,640,4.513,641,3.006,642,4.513,643,3.006,644,3.006,645,3.006,646,3.006,647,3.006,648,3.006,649,3.006,650,3.006,651,3.006,652,3.006,653,3.006,654,3.006,655,3.006,656,3.006,657,3.006,658,3.006,659,3.669,660,3.006,661,2.633,662,2.026,663,3.006,664,2.633,665,3.006,666,5.419,667,4.513,668,4.304,669,1.953,670,3.006,671,3.006,672,3.006,673,3.006,674,3.006,675,2.203,676,2.633,677,3.006,678,3.006,679,1.658]],["title/classes/ODataAnnotation.html",[239,0.311,680,2.54]],["body/classes/ODataAnnotation.html",[3,0.15,4,0.131,5,0.15,6,0.119,8,0.095,9,0.335,10,0.187,14,0.176,15,0.125,17,0.012,19,0.502,22,0.131,58,0.131,200,3.971,225,0.168,229,0.008,230,0.01,231,0.008,235,0.408,239,0.474,241,0.411,247,0.573,525,1.472,680,4.552,681,6.363,682,7.475,683,7.475,684,4.123,685,4.355,686,6.363,687,5.054]],["title/classes/ODataApiOptions.html",[239,0.311,688,3.653]],["body/classes/ODataApiOptions.html",[3,0.113,4,0.099,5,0.113,6,0.127,8,0.072,9,0.28,10,0.249,14,0.186,15,0.128,16,0.781,17,0.012,18,0.818,19,0.55,22,0.099,37,1.49,48,0.953,58,0.099,68,2.544,86,3.018,87,2.718,88,2.464,89,2.387,90,3.383,91,3.383,92,3.537,123,0.912,145,3.131,149,3.252,150,2.318,157,3.383,158,2.544,160,3.383,161,3.822,162,3.034,163,3.018,171,3.524,173,3.383,174,2.318,175,2.415,225,0.127,229,0.006,230,0.008,231,0.006,232,2.238,235,0.462,239,0.356,241,0.309,247,0.431,525,1.106,529,1.688,628,3.796,688,5.481,689,4.78,690,3.452,691,2.282,692,2.917,693,4.78,694,2.068,695,4.028,696,6.976,697,3.452,698,4.78,699,4.78,700,4.78,701,4.78,702,4.78,703,4.78,704,4.78,705,4.78,706,4.78,707,4.78,708,4.78,709,4.187,710,4.78,711,6.258,712,4.028,713,3.077,714,2.911,715,3.272,716,4.187,717,4.187,718,4.187,719,4.187,720,4.187,721,4.187,722,4.187,723,4.187,724,4.78,725,3.796,726,4.78,727,4.187,728,4.78,729,4.187,730,4.78,731,4.78,732,4.78,733,4.78,734,4.78,735,4.187]],["title/classes/ODataBatchRequest.html",[239,0.311,736,3.312]],["body/classes/ODataBatchRequest.html",[3,0.07,4,0.061,5,0.07,6,0.101,8,0.096,9,0.2,10,0.158,14,0.201,15,0.108,17,0.012,18,1.097,19,0.601,20,1.837,21,1.045,22,0.092,33,0.665,58,0.111,66,1.136,84,1.624,85,1.424,88,1.045,89,2.394,101,1.652,111,1.328,116,2.872,123,1.15,133,1.232,139,1.435,143,3.026,154,0.548,155,0.794,159,0.89,163,1.281,183,1.856,189,1.279,191,1.079,218,3.11,225,0.142,228,1.115,229,0.004,230,0.006,231,0.004,232,1.807,233,0.944,234,1.495,235,0.35,237,1.103,239,0.332,241,0.191,243,1.826,247,0.267,277,1.802,416,1.193,528,3.271,529,1.045,534,1.712,622,2.35,659,2.717,669,3.516,679,2.461,715,2.025,736,4.264,737,2.35,738,4.264,739,4.461,740,4.461,741,3.152,742,2.96,743,3.535,744,2.96,745,2.96,746,3.908,747,5.043,748,2.96,749,4.461,750,3.908,751,2.96,752,2.96,753,1.561,754,1.712,755,2.962,756,1.712,757,3.711,758,2.08,759,2.352,760,3.459,761,4.264,762,2.35,763,1.561,764,4.703,765,3.543,766,3.908,767,3.543,768,2.592,769,2.592,770,4.389,771,3.908,772,3.908,773,3.908,774,3.543,775,2.592,776,3.908,777,2.592,778,3.543,779,2.592,780,2.592,781,2.962,782,2.831,783,2.025,784,2.461,785,2.592,786,2.592,787,2.17,788,2.592,789,2.461,790,4.703,791,2.35,792,4.747,793,2.17,794,3.936,795,2.35,796,4.264,797,3.543,798,2.592,799,2.35,800,3.886,801,2.592,802,2.592,803,3.543,804,2.592,805,2.592,806,2.592,807,5.905,808,2.592,809,4.264,810,2.592,811,2.35,812,2.592,813,3.908,814,2.592,815,2.872,816,2.592,817,2.592,818,3.848,819,5.236,820,2.592,821,2.717,822,1.435,823,4.703,824,3.908,825,1.905,826,2.592,827,2.592,828,2.17,829,3.908,830,4.703,831,4.091,832,2.592,833,5.236,834,3.711,835,3.675,836,4.703,837,4.703,838,2.592,839,2.592,840,2.592,841,2.592,842,2.592,843,2.592,844,1.802,845,2.872,846,2.592,847,2.592,848,2.592,849,3.543,850,2.35,851,1.905,852,3.908,853,2.17,854,2.35,855,3.908,856,2.592,857,3.908,858,1.862,859,2.592,860,2.025,861,1.905,862,2.025,863,2.592,864,2.592,865,2.592,866,3.543,867,4.703,868,2.872,869,2.35,870,2.872,871,3.908,872,2.592,873,2.17,874,3.271,875,2.592,876,3.271,877,2.592,878,2.592,879,2.592,880,2.592,881,2.592,882,2.592,883,2.35,884,2.712,885,2.17,886,1.802,887,2.35,888,2.35,889,2.592,890,2.592,891,2.592,892,2.592,893,6.455,894,3.908,895,5.236,896,2.592,897,5.618,898,3.908,899,2.592,900,2.592,901,2.592,902,4.703,903,2.592,904,2.592,905,2.592,906,2.592,907,1.632,908,2.592,909,2.592,910,2.592,911,2.592,912,2.17,913,2.17,914,2.592,915,2.592,916,2.592,917,2.592,918,2.592,919,2.592,920,2.592,921,2.592,922,2.592,923,2.592,924,2.592,925,2.592,926,2.592,927,2.592,928,2.592]],["title/classes/ODataBatchResource.html",[239,0.311,849,3.312]],["body/classes/ODataBatchResource.html",[3,0.057,4,0.05,5,0.057,6,0.104,8,0.087,9,0.171,10,0.22,14,0.2,15,0.119,16,0.226,17,0.012,18,0.998,19,0.571,20,2.428,21,0.851,22,0.079,33,0.541,37,1.819,48,1.342,58,0.156,66,0.998,84,1.964,85,1.856,88,0.851,89,2.222,101,1.481,111,1.081,116,2.624,123,1.102,133,1.152,139,1.168,143,2.784,154,0.467,155,1.265,159,0.782,163,1.042,182,0.878,183,1.787,186,1.388,189,1.124,191,0.878,202,0.781,218,2.829,225,0.198,228,0.908,229,0.003,230,0.005,231,0.003,233,0.805,234,2.383,235,0.448,237,1.634,239,0.283,241,0.156,243,1.766,247,0.217,252,0.757,277,1.467,295,2.98,301,1.116,416,0.971,525,1.24,528,2.789,529,0.851,534,2.729,622,1.913,659,2.317,662,3.467,669,3.397,679,2.099,715,1.648,736,3.746,737,1.913,738,3.022,741,2.825,743,2.707,746,2.109,747,3.993,750,2.109,753,1.27,754,1.393,755,3.421,756,1.393,757,3.896,758,3.802,759,2.825,760,3.1,761,3.746,762,1.913,763,1.27,764,4.131,765,3.022,766,3.333,767,3.022,768,2.109,769,2.109,770,4.245,771,3.333,772,3.333,773,3.333,774,3.022,775,2.109,776,3.333,777,2.109,778,3.022,779,2.109,780,2.109,781,3.714,782,3.076,783,1.648,784,2.956,785,2.109,786,2.109,787,1.766,788,2.109,789,2.099,790,4.131,791,1.913,792,4.255,793,1.766,794,3.458,795,1.913,796,3.746,797,3.022,798,2.109,799,1.913,800,3.654,801,2.109,802,2.109,803,3.022,804,2.109,805,2.109,806,2.109,807,5.433,808,2.109,809,3.746,810,2.109,811,1.913,812,2.109,813,3.333,814,2.109,815,2.449,816,2.109,817,2.109,818,3.45,819,4.693,820,2.109,821,3.777,822,2.287,823,4.131,824,3.333,825,1.55,826,2.109,827,2.109,828,1.766,829,3.333,830,4.131,831,3.667,832,2.109,833,4.693,834,3.896,835,3.228,836,4.131,837,4.131,838,2.109,839,2.109,840,2.109,841,2.109,842,2.109,843,2.109,844,1.467,845,3.036,846,2.109,847,2.109,848,2.109,849,4.926,850,1.913,851,3.036,852,4.693,853,2.789,854,1.913,855,3.333,856,2.109,857,3.333,858,2.811,859,2.109,860,1.648,861,3.036,862,2.604,863,2.109,864,2.109,865,3.333,866,3.022,867,4.131,868,2.449,869,1.913,870,2.449,871,3.333,872,2.109,873,1.766,874,2.789,875,2.109,876,2.789,877,2.109,878,2.109,879,2.109,880,2.109,881,2.109,882,2.109,883,1.913,884,2.707,885,1.766,886,1.467,887,1.913,888,1.913,889,2.109,890,2.109,891,2.109,892,2.109,893,6.07,894,3.333,895,4.693,896,2.109,897,5.111,898,3.333,899,2.109,900,2.109,901,2.109,902,4.131,903,2.109,904,2.109,905,2.109,906,2.109,907,2.601,908,2.109,909,2.109,910,2.109,911,3.333,912,1.766,913,1.766,914,2.109,915,2.109,916,2.109,917,2.109,918,2.109,919,2.109,920,2.109,921,2.109,922,2.109,923,2.109,924,2.109,925,2.109,926,2.109,927,2.109,928,2.109,929,2.604,930,2.449,931,3.805,932,3.228,933,2.604,934,3.228,935,2.487,936,3.805,937,2.408,938,1.766,939,1.766,940,1.393,941,1.766,942,2.408,943,2.408,944,2.408,945,2.408,946,2.408,947,1.913,948,1.328,949,1.766,950,1.766,951,1.648,952,1.766,953,1.766,954,1.55,955,1.766,956,1.648,957,1.766,958,1.648,959,1.766,960,2.601,961,1.766,962,1.648,963,1.766,964,1.648,965,1.766,966,1.648,967,1.766,968,1.766,969,1.766,970,1.766,971,1.766,972,1.766,973,1.648]],["title/classes/ODataCache.html",[239,0.311,974,2.685]],["body/classes/ODataCache.html",[0,1.184,3,0.092,4,0.081,5,0.092,6,0.123,8,0.059,9,0.245,10,0.233,14,0.175,15,0.123,16,0.514,17,0.012,18,1.396,19,0.566,20,2.542,21,1.383,22,0.113,27,1.8,33,1.415,58,0.163,66,1.518,99,2.883,100,1.694,115,3.061,123,1.134,124,3.306,133,0.67,155,1.69,156,1.758,183,1.577,187,2.454,188,3.366,189,1.625,190,2.454,225,0.209,229,0.005,230,0.007,231,0.005,232,1.653,233,1.157,234,2.762,235,0.445,237,1.623,239,0.292,241,0.253,247,0.353,252,1.012,301,2.237,525,0.906,529,1.383,690,3.016,743,4.124,753,3.322,754,2.266,782,4.021,793,4.008,800,4.221,845,2.521,868,4.39,873,2.871,974,3.52,975,3.43,976,4.666,977,5.728,978,4.342,979,4.342,980,4.342,981,4.342,982,4.342,983,4.342,984,4.368,985,3.33,986,5.468,987,2.68,988,3.916,989,4.008,990,3.916,991,4.999,992,3.916,993,3.742,994,3.916,995,4.008,996,3.916,997,3.11,998,3.916,999,4.008,1000,4.618,1001,3.916,1002,5.259,1003,3.916,1004,3.742,1005,3.916,1006,3.916,1007,2.871,1008,3.43,1009,3.11,1010,4.789,1011,2.16,1012,3.43,1013,3.43,1014,2.871,1015,3.43,1016,3.43,1017,3.43,1018,4.789,1019,3.43,1020,3.43,1021,3.43,1022,3.43,1023,3.43,1024,3.43,1025,6.814,1026,3.43,1027,3.43,1028,4.789,1029,3.43,1030,3.43,1031,3.43,1032,3.43,1033,3.43]],["title/interfaces/ODataCacheEntry.html",[0,1.261,1000,2.685]],["body/interfaces/ODataCacheEntry.html",[0,1.436,2,2.214,3,0.112,4,0.098,5,0.112,6,0.071,8,0.071,9,0.279,10,0.183,14,0.147,15,0.104,17,0.012,18,1.42,19,0.604,20,2.379,21,1.677,22,0.129,27,1.773,33,1.066,66,1.562,99,2.967,100,2.054,115,3.313,123,1.185,124,3.58,133,0.812,155,1.274,156,2.131,183,1.708,187,2.131,188,3.469,189,1.131,190,2.131,229,0.006,230,0.008,231,0.006,239,0.354,301,2.04,525,1.098,529,1.677,690,2.619,743,3.729,753,3.285,754,2.747,782,3.892,793,4.567,800,4.148,845,3.057,873,3.481,974,3.057,975,4.159,976,4.264,977,5.762,984,3.794,985,2.892,989,3.481,991,5.767,993,3.25,995,3.481,999,3.481,1000,4.752,1002,5.412,1004,3.25,1007,3.481,1008,4.159,1009,3.771,1010,5.457,1011,2.619,1012,4.159,1013,4.159,1014,3.481,1015,4.159,1016,4.159,1017,4.159,1018,5.457,1019,4.159,1020,4.159,1021,4.159,1022,4.159,1023,4.159,1024,4.159,1025,7.124,1026,4.159,1027,4.159,1028,5.457,1029,4.159,1030,4.159,1031,4.159,1032,4.159,1033,4.159]],["title/classes/ODataCallable.html",[239,0.311,1034,3.312]],["body/classes/ODataCallable.html",[3,0.111,4,0.098,5,0.111,6,0.127,8,0.071,9,0.279,10,0.244,14,0.197,15,0.129,16,0.719,17,0.012,19,0.547,22,0.098,37,1.475,48,0.943,58,0.165,84,2.099,123,1.074,133,0.809,180,2.461,183,1.095,189,1.128,197,2.048,202,1.277,208,3.19,222,2.705,223,3.507,224,3.507,225,0.195,229,0.006,230,0.008,231,0.006,232,2.229,233,1.316,235,0.459,237,1.514,239,0.353,241,0.306,247,0.426,416,3.315,524,4.286,525,1.095,691,2.267,692,2.898,694,2.048,697,2.61,1034,4.937,1035,4.733,1036,4.002,1037,3.786,1038,4.786,1039,6.217,1040,4.733,1041,4.733,1042,4.733,1043,4.733,1044,5.089,1045,4.733,1046,4.002,1047,4.733,1048,3.786,1049,3.429,1050,4.733,1051,4.733,1052,3.759,1053,4.733,1054,3.047,1055,4.733,1056,3.239,1057,3.507,1058,2.391,1059,6.942,1060,4.733,1061,6.217,1062,4.733,1063,4.733,1064,4.733,1065,2.882,1066,4.733,1067,3.759,1068,3.759,1069,4.557,1070,4.733,1071,4.733,1072,3.759,1073,3.47,1074,3.759,1075,3.239,1076,3.047,1077,4.145,1078,4.733,1079,3.759,1080,4.145]],["title/classes/ODataCallableParser.html",[239,0.311,1044,3.058]],["body/classes/ODataCallableParser.html",[3,0.1,4,0.087,5,0.1,6,0.125,8,0.063,9,0.258,10,0.237,14,0.202,15,0.128,16,0.662,17,0.012,19,0.455,22,0.119,25,2.945,27,0.979,39,1.83,40,1.169,48,0.843,58,0.168,66,0.895,85,1.955,88,2.037,101,1.169,123,1.155,133,0.724,155,1.135,179,3.695,180,2.658,181,2.495,182,1.543,184,3.285,185,2.739,186,2.393,189,1.008,201,2.75,202,1.599,208,3.049,221,3.31,225,0.21,229,0.006,230,0.008,231,0.006,232,1.984,233,1.22,235,0.451,237,1.515,239,0.43,241,0.274,247,0.381,248,1.319,252,0.679,347,4.536,525,0.979,529,1.494,685,2.895,687,3.36,690,3.181,692,2.689,694,1.83,789,2.333,1036,3.713,1037,3.512,1044,4.228,1046,4.224,1048,2.576,1049,3.181,1057,2.913,1058,2.137,1065,4.291,1076,3.713,1081,3.705,1082,5.767,1083,4.23,1084,4.23,1085,4.23,1086,5.211,1087,4.23,1088,4.23,1089,4.23,1090,4.23,1091,4.23,1092,5.051,1093,4.23,1094,5.051,1095,4.23,1096,5.747,1097,3.705,1098,2.895,1099,3.101,1100,3.705,1101,3.36,1102,3.36,1103,3.36,1104,2.723,1105,3.713,1106,5.051,1107,3.705,1108,3.705,1109,3.705,1110,2.895,1111,3.705,1112,2.448,1113,2.895,1114,2.895,1115,2.723,1116,3.36,1117,2.576,1118,3.705,1119,5.596,1120,3.705,1121,3.705,1122,2.448,1123,2.448,1124,3.705,1125,3.705,1126,3.705,1127,3.705,1128,3.705]],["title/classes/ODataCountResource.html",[239,0.311,1129,3.653]],["body/classes/ODataCountResource.html",[3,0.091,4,0.08,5,0.091,6,0.107,8,0.058,9,0.244,10,0.238,14,0.186,15,0.125,16,0.364,17,0.012,19,0.6,20,2.698,21,1.37,22,0.08,32,1.328,37,2.309,48,1.593,58,0.168,84,2.053,85,2.016,96,2.268,102,1.462,116,2.117,123,1.08,133,0.929,154,0.667,159,0.901,182,1.415,183,0.898,186,1.982,191,1.982,202,1.116,225,0.214,228,2.048,229,0.005,230,0.007,231,0.005,233,1.15,234,2.744,235,0.467,237,1.732,239,0.289,241,0.251,252,0.623,295,3.189,301,1.594,416,1.564,525,1.571,529,1.37,534,3.627,560,2.656,662,3.752,691,1.982,741,3.305,755,3.943,756,2.245,757,4.401,758,4.008,759,3.305,781,3.943,784,3.746,821,3.309,822,2.634,851,2.498,858,3.175,860,2.656,861,4.036,862,3.718,884,1.96,907,2.997,929,3.718,930,3.497,932,4.29,933,3.718,934,4.29,935,3.305,938,2.845,939,2.845,940,4.136,941,2.845,948,2.14,949,2.845,950,2.845,951,2.656,952,2.845,953,2.845,954,2.498,955,2.845,956,2.656,957,2.845,958,2.656,959,2.845,960,3.458,961,2.845,962,2.656,963,2.845,964,2.656,965,2.845,966,2.656,967,2.845,968,2.845,969,2.845,970,2.845,971,2.845,972,2.845,973,2.656,1129,5.949,1130,3.88,1131,4.29,1132,3.88,1133,3.88,1134,3.983,1135,3.88,1136,3.88,1137,3.88,1138,2.845,1139,2.14,1140,3.88,1141,3.88,1142,3.88,1143,3.082,1144,3.88,1145,3.399,1146,3.88,1147,3.88,1148,3.88,1149,3.399,1150,3.399,1151,3.88]],["title/classes/ODataEntitiesMeta.html",[239,0.311,1152,2.54]],["body/classes/ODataEntitiesMeta.html",[3,0.082,4,0.072,5,0.082,6,0.122,8,0.052,9,0.264,10,0.235,14,0.184,15,0.123,17,0.012,19,0.509,22,0.133,27,1.161,29,2.794,34,1.127,44,1.894,58,0.159,59,2.252,65,1.501,66,1.558,68,2.355,85,1.754,89,1.187,103,2.968,107,2.376,123,1.26,133,1.008,155,2.092,158,2.355,159,1.07,183,0.803,225,0.171,229,0.005,230,0.007,231,0.005,232,1.517,233,1.062,235,0.457,237,1.467,239,0.481,241,0.224,243,1.428,295,2.775,301,2.16,467,3.933,525,0.803,529,1.225,662,1.558,669,2.55,691,1.83,712,2.234,713,2.234,714,2.113,760,2.903,763,1.83,858,3.256,884,1.753,1139,3.251,1152,3.933,1153,2.544,1154,5.558,1155,4.734,1156,4.321,1157,4.033,1158,4.734,1159,4.321,1160,4.321,1161,3.589,1162,3.589,1163,3.47,1164,2.756,1165,2.756,1166,5.515,1167,2.756,1168,2.756,1169,3.47,1170,5.235,1171,3.47,1172,4.321,1173,3.47,1174,2.756,1175,2.756,1176,3.678,1177,2.756,1178,2.756,1179,3.47,1180,3.039,1181,3.47,1182,3.47,1183,3.47,1184,3.47,1185,3.47,1186,3.47,1187,3.47,1188,3.47,1189,3.47,1190,3.47,1191,3.47,1192,3.47,1193,3.47,1194,3.039,1195,3.47,1196,2.544,1197,2.544,1198,2.544,1199,2.375,1200,2.544,1201,4.172,1202,2.544,1203,1.683,1204,2.544,1205,2.544,1206,2.544,1207,3.678,1208,4.321,1209,2.544,1210,4.033,1211,2.544,1212,2.544,1213,3.23,1214,2.544,1215,2.544,1216,4.321,1217,3.678,1218,4.321,1219,3.056,1220,2.544,1221,2.544,1222,2.544,1223,2.544,1224,2.544,1225,2.544,1226,2.544,1227,2.544,1228,2.544,1229,3.678,1230,2.544,1231,2.544,1232,2.544,1233,2.544,1234,2.544,1235,2.544,1236,2.544,1237,2.544,1238,5.235,1239,3.678,1240,3.678,1241,2.544,1242,2.544,1243,2.544,1244,2.544,1245,2.544,1246,5.235,1247,4.321,1248,2.544,1249,3.678,1250,2.544,1251,2.544,1252,2.544]],["title/classes/ODataEntityContainer.html",[239,0.311,1253,3.312]],["body/classes/ODataEntityContainer.html",[1,2.412,3,0.127,4,0.111,5,0.127,6,0.125,8,0.081,9,0.303,10,0.199,14,0.159,15,0.122,16,0.506,17,0.012,19,0.61,22,0.111,35,1.73,44,2.372,58,0.165,84,2.231,123,0.984,133,1.155,189,1.283,210,3.752,211,3.44,225,0.179,229,0.007,230,0.009,231,0.007,233,1.429,235,0.45,237,1.106,239,0.401,241,0.348,243,1.533,247,0.485,323,4.716,332,4.716,333,4.716,335,4.716,336,5.915,337,3.279,524,4.439,525,1.245,680,4.493,684,3.725,691,2.463,692,3.148,694,2.329,1038,4.952,1054,3.466,1056,3.684,1057,2.72,1058,2.72,1075,3.684,1203,2.611,1253,5.363,1254,7.309,1255,4.347,1256,5.409,1257,3.907,1258,5.384,1259,3.115,1260,5.384,1261,5.384,1262,5.384,1263,4.716,1264,5.384,1265,3.684,1266,3.684,1267,3.684,1268,3.115]],["title/classes/ODataEntityMeta.html",[239,0.311,1219,2.54]],["body/classes/ODataEntityMeta.html",[3,0.08,4,0.07,5,0.08,6,0.123,8,0.051,9,0.26,10,0.236,14,0.183,15,0.124,17,0.012,19,0.503,22,0.132,27,1.475,29,2.759,34,1.105,44,1.866,58,0.16,59,2.209,65,2.512,66,1.546,68,2.581,85,1.74,89,1.156,103,3.017,107,1.362,123,1.257,133,0.993,155,2.08,158,2.326,159,1.057,183,0.782,225,0.187,229,0.004,230,0.007,231,0.004,232,1.488,233,1.042,235,0.46,237,1.5,239,0.475,241,0.219,243,1.401,295,2.752,301,2.143,467,3.884,525,0.782,529,1.193,578,3.909,662,1.517,669,2.512,691,1.795,712,2.176,713,2.176,714,2.058,760,2.848,763,1.782,858,3.237,884,1.707,1139,1.864,1152,2.998,1153,2.477,1154,5.534,1155,4.675,1156,4.256,1157,3.973,1158,4.675,1159,2.477,1160,2.477,1161,2.058,1162,2.058,1164,2.684,1165,2.684,1166,5.573,1167,2.684,1168,2.684,1170,5.187,1172,4.256,1174,2.684,1175,2.684,1176,3.608,1177,2.684,1178,2.684,1180,2.96,1194,2.96,1196,2.477,1197,2.477,1198,2.477,1199,2.313,1200,2.477,1201,4.128,1202,2.477,1203,1.639,1204,2.477,1205,2.477,1206,2.477,1207,3.608,1208,4.256,1209,2.477,1210,3.973,1211,2.477,1212,2.477,1213,3.169,1214,2.477,1215,2.477,1216,4.256,1217,3.608,1218,4.256,1219,3.884,1220,2.477,1221,2.477,1222,3.608,1223,2.477,1224,2.477,1225,4.256,1226,2.477,1227,4.256,1228,2.477,1229,3.608,1230,4.256,1231,2.477,1232,4.256,1233,2.477,1234,4.256,1235,2.477,1236,4.256,1237,2.477,1238,5.187,1239,3.608,1240,3.608,1241,2.477,1242,2.477,1243,2.477,1244,2.477,1245,2.477,1246,5.187,1247,4.256,1248,2.477,1249,3.608,1250,2.477,1251,2.477,1252,2.477,1269,3.379,1270,3.379,1271,3.379,1272,3.379,1273,3.379,1274,3.379,1275,3.379,1276,3.379,1277,3.379,1278,3.379,1279,3.379,1280,3.379,1281,3.379,1282,3.379,1283,3.379,1284,3.379,1285,3.379,1286,3.379,1287,3.379,1288,3.379,1289,3.379,1290,3.379,1291,3.379,1292,3.379]],["title/classes/ODataEntityService.html",[239,0.311,1293,3.058]],["body/classes/ODataEntityService.html",[3,0.129,4,0.113,5,0.129,6,0.122,8,0.082,10,0.219,14,0.192,15,0.116,17,0.012,19,0.613,22,0.113,23,3.031,33,1.228,35,2.388,48,1.09,58,0.169,66,1.443,84,2.352,104,3.464,123,0.993,154,1.002,189,1.624,225,0.206,229,0.007,230,0.009,231,0.007,233,1.443,235,0.437,237,1.4,239,0.407,241,0.353,247,0.492,252,1.095,301,2.429,525,1.265,662,3.06,691,2.487,694,2.95,758,3.464,1011,3.015,1054,3.519,1293,4.998,1294,5.466,1295,4.998,1296,7.43,1297,4.788,1298,5.703,1299,6.508,1300,5.466,1301,4.341,1302,6.178,1303,5.466,1304,5.414,1305,5.466,1306,5.466,1307,5.466,1308,5.466,1309,4.008,1310,4.341,1311,4.788,1312,4.341,1313,5.466,1314,4.341,1315,5.466]],["title/classes/ODataEntitySet.html",[239,0.311,1256,3.058]],["body/classes/ODataEntitySet.html",[1,2.372,3,0.121,4,0.106,5,0.121,6,0.126,8,0.077,9,0.294,10,0.213,14,0.192,15,0.126,16,0.616,17,0.012,19,0.57,22,0.106,44,2.322,58,0.166,84,2.184,101,1.421,123,1.053,133,0.88,189,1.226,212,3.69,220,2.494,225,0.191,226,3.368,227,3.243,229,0.007,230,0.009,231,0.007,232,1.555,233,1.388,235,0.455,237,1.348,239,0.383,241,0.333,243,1.464,247,0.463,339,4.085,343,4.505,344,4.505,345,4.505,346,4.505,524,4.36,525,1.19,680,4.4,684,3.619,691,2.393,692,3.059,694,2.225,789,2.837,1037,3.996,1038,4.895,1049,3.619,1054,3.311,1056,3.52,1057,2.598,1058,2.598,1069,3.771,1073,3.771,1075,3.52,1112,2.976,1115,3.311,1203,2.494,1254,7.371,1255,4.224,1256,4.81,1257,3.796,1259,2.976,1265,3.52,1266,3.52,1267,3.52,1268,2.976,1316,6.561,1317,5.144,1318,5.144,1319,5.144,1320,5.144,1321,5.144,1322,5.144,1323,5.144,1324,5.144]],["title/classes/ODataEntitySetService.html",[239,0.311,1325,3.312]],["body/classes/ODataEntitySetService.html",[3,0.08,4,0.071,5,0.08,6,0.121,8,0.051,10,0.237,14,0.08,15,0.123,17,0.012,19,0.592,20,2.694,21,1.206,22,0.071,23,3.028,27,0.79,33,1.529,35,2.622,48,1.415,58,0.166,68,2.337,85,2.042,96,2.07,120,2.505,123,1.189,137,2.621,154,1.068,159,0.822,183,1.77,189,1.746,205,2.773,225,0.217,227,1.533,229,0.005,230,0.007,231,0.005,233,1.049,235,0.445,237,1.664,239,0.254,241,0.221,252,1.229,295,1.869,301,1.88,339,2.712,525,0.79,691,1.809,694,1.477,753,1.8,754,1.976,758,1.592,761,3.938,763,1.8,784,4.614,800,3.079,825,3.193,954,2.198,960,3.535,1007,2.503,1011,1.883,1293,4.99,1295,5.503,1301,5.406,1302,5.819,1304,5.09,1309,3.636,1310,2.712,1312,2.712,1314,2.712,1325,3.938,1326,8.1,1327,4.344,1328,2.869,1329,4.344,1330,4.959,1331,4.344,1332,5.84,1333,4.959,1334,7.354,1335,3.414,1336,3.414,1337,5.09,1338,3.414,1339,3.414,1340,4.959,1341,3.414,1342,4.959,1343,3.414,1344,3.414,1345,5.115,1346,3.414,1347,4.638,1348,4.959,1349,3.414,1350,4.959,1351,3.414,1352,4.959,1353,3.414,1354,4.959,1355,3.414,1356,2.991,1357,2.991,1358,3.414,1359,3.414,1360,4.344,1361,3.414,1362,3.414,1363,3.414,1364,4.344,1365,2.712,1366,3.414,1367,3.414,1368,3.414,1369,2.991,1370,6.807,1371,6.409,1372,3.414,1373,3.996,1374,5.84,1375,5.84,1376,5.84,1377,5.115,1378,3.414,1379,4.959,1380,3.414,1381,5.84,1382,2.503,1383,3.414,1384,3.414,1385,3.414,1386,3.414,1387,3.414,1388,3.414,1389,3.414,1390,3.414,1391,4.959,1392,3.414,1393,3.414,1394,3.414]],["title/classes/ODataEnumType.html",[239,0.311,1395,3.312]],["body/classes/ODataEnumType.html",[1,2.222,3,0.102,4,0.09,5,0.102,6,0.126,8,0.065,9,0.263,10,0.231,14,0.194,15,0.129,16,0.552,17,0.012,18,1.274,19,0.562,22,0.09,27,1.36,37,1.356,42,2.37,44,2.14,48,1.421,58,0.173,84,2.013,123,1.162,133,1.005,180,2.14,189,1.401,197,1.883,202,1.207,204,3.2,214,2.88,215,2.976,225,0.211,229,0.006,230,0.008,231,0.006,232,2.156,233,1.244,235,0.458,237,1.611,239,0.324,241,0.281,243,1.673,247,0.392,299,2.029,353,3.19,495,3.456,496,3.456,497,3.456,524,4.206,525,1.007,680,4.054,684,3.242,691,2.144,692,2.741,694,1.883,697,2.4,1037,3.58,1038,4.673,1049,3.242,1052,3.456,1054,2.801,1056,2.978,1057,2.198,1058,2.198,1065,2.65,1067,3.456,1068,3.456,1069,3.19,1072,3.456,1073,3.19,1074,3.456,1075,2.978,1203,2.11,1255,3.784,1257,3.401,1259,2.518,1265,2.978,1266,2.978,1267,2.978,1268,2.518,1395,4.668,1396,8.447,1397,5.878,1398,5.878,1399,5.878,1400,5.149,1401,4.556,1402,3.456,1403,5.459,1404,4.351,1405,5.878,1406,4.351,1407,5.878,1408,3.811,1409,3.811,1410,5.878,1411,4.351,1412,4.351,1413,3.811,1414,4.351,1415,3.456,1416,3.456,1417,4.351,1418,4.351,1419,5.878,1420,2.978,1421,4.351,1422,4.351]],["title/classes/ODataEnumTypeFieldParser.html",[239,0.311,1403,3.058]],["body/classes/ODataEnumTypeFieldParser.html",[1,2.347,3,0.106,4,0.093,5,0.106,6,0.116,8,0.067,9,0.269,10,0.177,14,0.203,15,0.12,16,0.679,17,0.012,18,1.325,19,0.474,22,0.124,27,1.39,34,1.35,42,2.729,44,2.176,47,3.688,48,1.577,58,0.173,66,1.272,85,1.432,101,1.243,123,1.171,133,0.769,158,2.469,180,1.932,181,1.946,182,1.641,185,1.878,186,1.641,189,1.072,201,2.391,202,1.39,204,2.698,213,2.181,214,1.946,215,1.878,216,2.097,225,0.159,229,0.006,230,0.008,231,0.006,233,1.272,235,0.411,237,0.924,239,0.448,241,0.291,243,1.281,247,0.405,248,1.874,299,2.097,355,3.572,360,3.572,363,3.572,496,4.773,524,2.372,525,1.041,679,2.481,684,3.315,690,3.734,692,2.097,697,3.315,714,2.739,789,2.481,822,2.915,1049,2.481,1057,3.42,1058,2.272,1104,2.896,1105,3.87,1110,3.078,1112,3.917,1113,3.078,1114,3.078,1115,2.896,1203,2.181,1255,3.87,1257,3.478,1259,2.603,1268,2.603,1328,3.478,1401,3.078,1403,4.963,1415,4.773,1416,3.572,1420,3.078,1423,6.786,1424,3.94,1425,3.94,1426,3.94,1427,3.572,1428,5.929,1429,3.94,1430,3.572,1431,3.572,1432,4.113,1433,3.94,1434,3.94,1435,3.94,1436,3.169,1437,3.298,1438,3.94,1439,3.94,1440,5.265,1441,3.94,1442,5.265,1443,3.94,1444,3.94,1445,2.372,1446,3.298,1447,3.298,1448,3.94,1449,3.94,1450,3.94,1451,3.94]],["title/classes/ODataEnumTypeParser.html",[239,0.311,1401,2.854]],["body/classes/ODataEnumTypeParser.html",[1,1.981,3,0.094,4,0.082,5,0.094,6,0.124,8,0.06,9,0.248,10,0.234,14,0.205,15,0.127,16,0.702,17,0.012,18,1.31,19,0.436,22,0.114,27,1.669,34,1.242,37,1.241,42,1.605,44,1.28,47,3.202,48,1.557,58,0.171,66,1.453,85,1.78,101,1.1,123,1.138,133,0.681,158,2.794,180,2.043,181,2.393,182,2.017,185,2.653,186,2.318,201,2.706,202,1.574,204,3.083,213,3.082,214,2.75,215,2.653,216,2.579,225,0.191,229,0.005,230,0.007,231,0.005,232,2.077,233,1.171,235,0.446,237,1.482,239,0.412,241,0.257,247,0.359,248,1.241,252,0.639,299,1.856,440,3.488,524,2.099,525,0.921,679,2.196,684,2.196,690,3.506,692,2.579,694,1.723,697,3.051,714,2.425,789,2.196,822,2.682,1037,3.369,1049,3.051,1057,3.211,1058,2.011,1104,2.563,1105,3.561,1110,2.725,1112,3.678,1113,2.725,1114,2.725,1115,2.563,1203,1.931,1257,2.304,1268,2.304,1328,3.2,1401,3.785,1402,3.162,1403,4.66,1408,3.488,1409,3.488,1413,3.488,1415,4.393,1416,3.162,1420,2.725,1423,7.224,1424,3.488,1425,3.488,1426,3.488,1427,3.162,1428,5.567,1429,3.488,1430,3.162,1431,3.162,1432,3.785,1433,3.488,1434,3.488,1435,3.488,1436,2.917,1437,2.919,1438,3.488,1439,3.488,1440,4.845,1441,3.488,1442,4.845,1443,3.488,1444,3.488,1445,2.099,1446,5.035,1447,2.919,1448,3.488,1449,3.488,1450,4.845,1451,3.488,1452,4.055,1453,4.845,1454,3.982,1455,3.982,1456,3.982,1457,3.982,1458,3.982]],["title/classes/ODataInMemoryCache.html",[239,0.311,1459,3.653]],["body/classes/ODataInMemoryCache.html",[3,0.107,4,0.094,5,0.107,6,0.109,8,0.068,9,0.272,10,0.245,14,0.171,15,0.127,16,0.57,17,0.012,18,1.358,19,0.478,20,2.332,22,0.094,27,1.75,33,1.362,58,0.172,66,1.443,99,1.663,123,0.665,155,1.627,159,1.006,187,2.047,188,3.143,189,1.731,190,2.047,225,0.22,229,0.006,230,0.008,231,0.006,232,1.834,233,1.284,234,3.064,235,0.461,237,1.707,239,0.34,241,0.295,247,0.411,252,1.095,295,3.132,301,2.131,743,4.293,753,2.405,782,4.304,800,4.251,868,5.007,974,5.447,976,4.151,977,5.518,978,4.818,979,5.77,980,4.818,981,4.818,982,4.818,983,5.77,984,4.151,985,3.694,987,3.121,989,3.343,991,3.343,993,4.665,995,3.343,997,3.622,999,3.343,1000,3.905,1002,3.343,1004,4.665,1011,2.516,1459,5.313,1460,4.561,1461,4.561,1462,3.995,1463,3.995,1464,4.561,1465,4.561,1466,3.995,1467,3.995,1468,3.995,1469,3.995,1470,3.995,1471,3.995,1472,3.995,1473,3.995,1474,3.995,1475,3.343,1476,3.622,1477,3.622,1478,3.622]],["title/classes/ODataInStorageCache.html",[239,0.311,1479,3.312]],["body/classes/ODataInStorageCache.html",[0,1.291,3,0.101,4,0.088,5,0.101,6,0.106,8,0.064,9,0.26,10,0.242,14,0.192,15,0.126,16,0.545,17,0.012,18,1.359,19,0.458,20,2.255,22,0.088,27,1.711,33,1.48,58,0.174,66,1.565,89,1.46,99,1.557,103,2.658,123,0.622,133,0.73,155,1.556,159,0.962,183,1.525,187,1.916,188,3.06,189,1.685,190,1.916,225,0.218,229,0.006,230,0.008,231,0.006,232,1.754,233,1.228,234,2.931,235,0.457,237,1.688,239,0.318,241,0.276,243,1.215,247,0.384,252,0.932,295,3.097,301,2.075,669,2.51,743,4.257,747,2.921,753,2.251,782,4.246,783,2.921,800,4.116,818,2.748,834,2.47,835,2.921,868,4.912,974,5.398,976,3.971,977,5.435,978,4.608,979,5.617,980,4.608,981,4.608,982,4.608,983,5.617,984,4.014,985,3.534,987,2.921,989,3.129,991,3.129,993,4.511,995,3.129,997,3.39,999,3.129,1000,4.244,1002,3.129,1004,4.511,1011,2.354,1014,4.254,1462,3.739,1463,3.739,1466,3.739,1467,3.739,1468,3.739,1469,3.739,1470,3.739,1471,3.739,1472,3.739,1473,3.739,1474,3.739,1475,3.129,1476,3.39,1477,3.39,1478,3.39,1479,4.608,1480,3.739,1481,4.269,1482,4.269,1483,4.269,1484,3.39,1485,6.195,1486,3.739,1487,3.739,1488,3.739,1489,3.739,1490,3.739,1491,3.739,1492,3.739,1493,3.739,1494,3.739,1495,3.739]],["title/classes/ODataMeta.html",[239,0.311,1154,2.854]],["body/classes/ODataMeta.html",[3,0.088,4,0.077,5,0.088,6,0.121,8,0.056,9,0.315,10,0.23,14,0.181,15,0.122,17,0.012,19,0.525,22,0.138,27,1.22,29,2.883,34,1.184,44,1.969,58,0.155,59,2.991,65,1.609,66,1.59,68,2.431,85,1.791,89,1.272,103,2.837,107,1.499,123,1.266,133,1.048,155,2.059,158,2.431,159,1.015,183,0.86,225,0.162,229,0.005,230,0.007,231,0.005,232,1.852,233,1.116,235,0.437,237,1.258,239,0.496,241,0.24,247,0.335,301,2.205,467,3.21,525,0.86,529,1.313,662,1.669,669,2.65,691,1.923,712,2.394,713,2.394,714,2.264,760,3.05,763,1.96,858,3.137,884,1.878,1139,2.051,1152,3.21,1153,2.726,1154,5.143,1155,3.865,1156,4.49,1157,4.192,1158,3.865,1159,2.726,1160,2.726,1161,2.264,1162,2.264,1166,5.482,1170,5.158,1172,3.865,1176,3.865,1196,4.49,1197,2.726,1198,2.726,1199,3.608,1200,4.49,1201,4.285,1202,2.726,1203,1.803,1204,2.726,1205,2.726,1206,2.726,1207,3.865,1208,4.49,1209,2.726,1210,4.192,1211,2.726,1212,2.726,1213,3.394,1214,2.726,1215,2.726,1216,4.49,1217,3.865,1218,4.49,1219,3.21,1220,2.726,1221,2.726,1222,2.726,1223,2.726,1224,2.726,1225,2.726,1226,2.726,1227,2.726,1228,2.726,1229,3.865,1230,2.726,1231,2.726,1232,2.726,1233,2.726,1234,2.726,1235,2.726,1236,2.726,1237,2.726,1238,5.357,1239,3.865,1240,3.865,1241,2.726,1242,2.726,1243,2.726,1244,2.726,1245,2.726,1246,5.357,1247,4.49,1248,2.726,1249,3.865,1250,2.726,1251,2.726,1252,2.726,1496,3.718,1497,3.718,1498,3.718,1499,3.718,1500,3.718,1501,3.718,1502,3.718,1503,3.718,1504,3.718,1505,3.718,1506,3.718,1507,3.718,1508,3.718,1509,3.718]],["title/classes/ODataMetadataResource.html",[239,0.311,1510,3.653]],["body/classes/ODataMetadataResource.html",[3,0.092,4,0.081,5,0.092,6,0.107,8,0.058,9,0.245,10,0.24,14,0.186,15,0.126,16,0.367,17,0.012,19,0.613,20,2.702,21,1.379,22,0.081,37,2.234,48,1.55,58,0.17,84,2.167,85,1.972,87,2.126,96,2.278,116,2.126,123,0.917,133,1.165,154,0.67,159,0.905,182,1.424,186,1.99,191,1.99,202,1.121,225,0.216,228,2.057,229,0.005,230,0.007,231,0.005,233,1.155,234,2.757,235,0.467,237,1.733,239,0.291,241,0.253,247,0.352,252,1.01,295,3.191,301,1.601,416,1.574,525,1.575,529,1.379,532,3.421,534,3.64,662,3.755,741,3.317,753,2.059,754,2.26,755,4.095,756,2.26,757,4.498,758,4.01,759,3.317,781,4.288,783,2.673,784,3.756,821,3.323,822,2.646,831,2.673,851,2.514,853,4.001,854,3.101,858,3.181,860,2.673,861,4.05,862,3.735,884,1.973,886,2.378,907,3.01,929,3.735,930,3.513,932,4.305,933,3.735,934,4.305,935,3.317,938,2.863,939,2.863,940,2.26,941,2.863,948,2.154,949,2.863,950,2.863,951,2.673,952,2.863,953,2.863,954,2.514,955,2.863,956,2.673,957,2.863,958,2.673,959,2.863,960,3.47,961,2.863,962,2.673,963,2.863,964,2.673,965,2.863,966,2.673,967,2.863,968,2.863,969,2.863,970,2.863,971,2.863,972,2.863,973,2.673,1117,2.378,1134,4.001,1510,5.965,1511,3.905,1512,3.905,1513,3.905,1514,3.905,1515,3.905,1516,3.905,1517,3.905,1518,3.905,1519,2.673,1520,3.905,1521,3.905]],["title/classes/ODataModelProperty.html",[239,0.311,1522,3.653]],["body/classes/ODataModelProperty.html",[3,0.033,4,0.029,5,0.033,6,0.081,8,0.021,9,0.172,10,0.14,14,0.177,15,0.106,16,0.704,17,0.012,19,0.446,20,2.187,21,0.499,22,0.079,25,1.727,27,1.404,33,1.543,34,1.564,35,1.888,37,0.44,39,2.928,41,0.589,42,2.873,46,0.685,48,1.544,58,0.165,66,1.702,68,1.178,85,1.747,88,1.14,96,0.589,102,1.217,103,2.28,116,0.55,123,1.205,133,1.319,137,2.424,143,1.097,152,1.566,155,1.815,180,1.038,183,1.865,189,0.336,197,0.611,215,1.02,219,3.61,225,0.126,229,0.002,230,0.003,231,0.002,232,1.163,233,0.517,235,0.279,237,0.663,239,0.241,241,0.091,243,0.695,247,0.127,264,0.532,279,0.86,337,3.11,347,1.573,416,0.569,520,2.564,524,3.622,525,0.327,526,1.035,527,0.966,530,2.564,578,1.121,659,3.894,662,2.292,669,2.972,675,1.035,695,4.017,697,3.971,753,2.293,754,0.817,758,0.658,759,4.272,784,3.119,789,1.348,815,1.573,822,3.167,825,4.792,844,2.648,858,0.589,866,3.453,874,1.035,886,3.578,907,0.779,960,1.781,976,2.21,1007,1.035,1009,1.121,1057,0.713,1065,1.966,1117,2.648,1119,1.94,1122,0.817,1123,1.414,1134,1.035,1152,2.899,1157,1.672,1199,0.966,1210,0.966,1219,4.121,1295,1.035,1309,5.771,1328,3.272,1329,2.14,1331,1.237,1347,5.529,1360,6.016,1365,1.121,1377,2.828,1382,5.652,1432,3.696,1436,2.693,1452,2.821,1519,1.672,1522,5.316,1523,1.121,1524,2.443,1525,3.229,1526,2.443,1527,1.412,1528,2.443,1529,1.412,1530,1.412,1531,2.564,1532,2.443,1533,1.412,1534,1.412,1535,1.412,1536,2.443,1537,5.146,1538,1.412,1539,4.953,1540,4.731,1541,3.848,1542,2.443,1543,1.237,1544,1.121,1545,1.94,1546,2.443,1547,2.443,1548,1.412,1549,0.86,1550,4.76,1551,0.966,1552,3.49,1553,1.237,1554,3.229,1555,2.443,1556,3.37,1557,1.412,1558,1.412,1559,1.237,1560,1.412,1561,1.412,1562,1.412,1563,2.443,1564,1.412,1565,2.443,1566,1.412,1567,3.229,1568,3.229,1569,7.33,1570,1.412,1571,1.412,1572,1.412,1573,1.412,1574,1.412,1575,2.14,1576,3.229,1577,2.443,1578,1.412,1579,1.412,1580,1.412,1581,1.412,1582,1.412,1583,1.412,1584,1.412,1585,1.412,1586,3.229,1587,1.412,1588,1.412,1589,1.412,1590,4.76,1591,2.443,1592,2.443,1593,1.412,1594,5.655,1595,1.412,1596,1.412,1597,2.443,1598,1.412,1599,3.848,1600,1.412,1601,3.229,1602,3.229,1603,1.412,1604,1.412,1605,1.412,1606,1.412,1607,6.531,1608,1.412,1609,1.412,1610,1.412,1611,1.412,1612,3.229,1613,1.237,1614,1.412,1615,1.412,1616,1.412,1617,5.316,1618,1.237,1619,5.107,1620,3.229,1621,2.443,1622,3.229,1623,1.412,1624,1.412,1625,1.412,1626,1.412,1627,2.443,1628,1.412,1629,1.412,1630,1.412,1631,1.412,1632,1.412,1633,2.443,1634,1.412,1635,1.412,1636,1.412,1637,1.412,1638,1.412,1639,1.412,1640,1.412,1641,1.412,1642,1.412,1643,1.412,1644,1.412,1645,1.412,1646,6.869,1647,1.412,1648,3.229,1649,1.412,1650,1.573,1651,1.412,1652,2.21,1653,1.412,1654,1.412,1655,1.412,1656,1.412,1657,1.412,1658,1.121,1659,1.412,1660,1.121,1661,1.412,1662,1.412,1663,1.412,1664,1.412,1665,2.443,1666,1.412,1667,4.76,1668,1.412,1669,1.412,1670,1.121,1671,3.848,1672,1.412,1673,1.412,1674,3.229,1675,1.412,1676,1.412,1677,1.412,1678,1.412,1679,1.412,1680,2.443,1681,1.412,1682,2.443,1683,1.412,1684,1.412,1685,1.412,1686,1.412,1687,1.412,1688,1.412,1689,1.412,1690,1.412,1691,1.412,1692,2.443,1693,2.443,1694,3.229,1695,2.443,1696,6.24,1697,1.412,1698,3.229,1699,2.443,1700,1.412,1701,2.443,1702,1.412,1703,2.443,1704,1.412,1705,1.237,1706,1.94,1707,1.94,1708,1.412,1709,1.412,1710,1.412,1711,1.412,1712,2.443,1713,1.412,1714,1.412,1715,1.412,1716,1.412,1717,1.412,1718,1.412,1719,1.412,1720,2.14,1721,2.443,1722,3.229,1723,2.443,1724,1.412,1725,2.443,1726,1.412,1727,2.443,1728,1.412,1729,2.443,1730,1.412,1731,1.412,1732,1.412,1733,1.412,1734,1.412,1735,1.412,1736,1.237,1737,1.412,1738,1.412,1739,1.412,1740,1.237,1741,1.412,1742,2.443,1743,1.412,1744,2.443,1745,1.412,1746,1.412,1747,1.412,1748,1.412,1749,1.412,1750,1.412,1751,1.412,1752,1.412,1753,1.412,1754,1.412,1755,1.412,1756,1.412,1757,1.412,1758,1.237,1759,1.412,1760,1.412,1761,3.229,1762,1.412,1763,1.412,1764,1.121,1765,1.412,1766,1.412,1767,1.412,1768,1.412,1769,1.412,1770,1.412,1771,1.412,1772,1.412,1773,1.412,1774,4.491,1775,2.443,1776,1.412,1777,6.393,1778,2.443,1779,2.443,1780,1.412,1781,2.443,1782,5.401,1783,4.76,1784,1.412,1785,2.443,1786,3.229,1787,1.412,1788,3.848,1789,1.412,1790,1.412,1791,1.412,1792,1.412,1793,1.412,1794,1.412,1795,1.412,1796,1.412,1797,1.412,1798,2.443,1799,1.237,1800,1.412,1801,1.412,1802,1.412,1803,1.412,1804,1.672,1805,1.412,1806,1.412,1807,1.412,1808,1.412,1809,1.412,1810,2.443,1811,1.412,1812,2.443,1813,1.412,1814,1.237,1815,1.412,1816,2.443,1817,1.412,1818,1.412,1819,1.412,1820,1.412,1821,1.412,1822,1.412,1823,1.412,1824,1.412,1825,1.412,1826,1.412,1827,0.966,1828,1.412,1829,1.412,1830,1.412,1831,1.412,1832,1.412,1833,1.412,1834,1.412]],["title/modules/ODataModule.html",[1835,3.312,1836,3.058]],["body/modules/ODataModule.html",[3,0.137,4,0.12,5,0.137,6,0.106,10,0.171,15,0.087,17,0.012,19,0.661,22,0.146,58,0.12,104,2.708,123,1.031,133,0.994,154,0.713,192,3.432,193,3.95,225,0.154,229,0.008,230,0.009,231,0.008,233,1.229,235,0.317,237,1.193,239,0.433,243,1.654,525,1.344,534,4.095,763,3.063,1048,3.538,1298,5.825,1551,3.975,1836,5.596,1837,4.613,1838,5.088,1839,7.634,1840,5.825,1841,5.809,1842,5.809,1843,5.809,1844,7.634,1845,7.078,1846,6.686,1847,7.078,1848,5.809,1849,7.634,1850,5.809,1851,5.088,1852,5.809,1853,5.088,1854,5.809,1855,7.078,1856,5.809,1857,5.809,1858,5.088,1859,5.809]],["title/classes/ODataParameterParser.html",[239,0.311,1086,3.312]],["body/classes/ODataParameterParser.html",[3,0.105,4,0.093,5,0.105,6,0.122,8,0.067,9,0.269,10,0.233,14,0.2,15,0.127,16,0.706,17,0.012,19,0.473,22,0.124,25,3.032,27,1.563,39,2.923,40,1.867,48,0.893,58,0.168,66,0.948,85,1.938,88,1.582,101,1.238,123,1.128,133,0.766,155,1.812,179,3.608,180,2.663,181,1.938,182,2.186,184,3.363,185,1.87,186,2.464,189,1.067,201,2.386,202,1.388,208,2.593,221,3.65,225,0.191,229,0.006,230,0.008,231,0.006,232,1.812,233,1.268,235,0.438,237,1.231,239,0.447,241,0.29,247,0.403,248,1.868,347,2.884,525,1.036,529,1.582,685,3.065,687,3.557,690,2.471,692,2.088,789,2.471,1036,3.859,1044,3.284,1046,4.349,1048,2.728,1049,2.471,1057,3.028,1058,2.263,1065,4.393,1076,3.859,1081,3.923,1086,5.365,1092,3.923,1094,3.923,1096,5.917,1097,3.923,1098,3.065,1099,3.284,1100,3.923,1101,3.557,1102,3.557,1103,3.557,1104,2.884,1105,3.859,1106,5.25,1107,3.923,1108,3.923,1109,3.923,1110,3.065,1111,3.923,1112,2.592,1113,3.065,1114,3.065,1115,2.884,1116,3.557,1117,2.728,1118,3.923,1119,5.729,1120,3.923,1121,3.923,1122,2.592,1123,2.592,1124,3.923,1125,3.923,1126,3.923,1127,3.923,1128,3.923,1860,5.994,1861,4.479,1862,4.479,1863,4.479,1864,4.479,1865,4.479,1866,4.479]],["title/classes/ODataPathSegments.html",[239,0.311,755,2.301]],["body/classes/ODataPathSegments.html",[3,0.086,4,0.075,5,0.086,6,0.121,8,0.054,9,0.232,10,0.194,14,0.201,15,0.116,16,0.341,17,0.012,19,0.572,22,0.136,23,2.356,27,1.399,32,1.774,33,1.629,34,1.165,37,1.132,48,1.605,58,0.168,66,1.668,74,1.761,87,2.021,101,1.004,102,1.369,123,1.228,127,1.761,133,1.128,183,1.2,189,0.866,202,1.242,225,0.202,229,0.005,230,0.007,231,0.005,233,1.097,235,0.435,237,1.595,239,0.386,241,0.235,243,1.877,247,0.327,252,0.583,264,1.954,338,3.338,352,1.915,416,3.177,525,1.678,527,3.549,529,1.283,560,3.549,659,2.212,662,2.714,679,4,741,3.477,755,3.335,756,2.102,757,4.035,770,3.549,794,4.834,844,2.212,858,2.753,912,2.663,935,3.477,947,4.118,948,2.86,1131,5.108,1139,2.86,1259,2.102,1373,2.486,1445,2.734,1549,2.212,1707,4.118,1804,2.486,1827,4.138,1867,5.512,1868,2.486,1869,4.542,1870,6.332,1871,5.185,1872,4.542,1873,3.633,1874,5.237,1875,3.633,1876,4.118,1877,3.633,1878,4.542,1879,3.633,1880,3.633,1881,3.633,1882,3.633,1883,3.633,1884,3.633,1885,5.112,1886,2.885,1887,3.338,1888,2.663,1889,2.663,1890,3.182,1891,2.885,1892,4.542,1893,3.182,1894,4.542,1895,5.776,1896,3.182,1897,4.542,1898,2.663,1899,5.538,1900,5.538,1901,2.885,1902,4.802,1903,3.182,1904,3.182,1905,4.542,1906,3.182,1907,3.182,1908,3.182,1909,3.182,1910,2.885,1911,3.182,1912,4.542,1913,3.182,1914,3.182,1915,3.182,1916,3.182,1917,3.182,1918,3.182,1919,3.182,1920,3.182,1921,3.182,1922,3.182,1923,3.182,1924,4.542,1925,3.182,1926,3.182,1927,3.182,1928,2.486,1929,3.182,1930,4.542,1931,3.182,1932,4.542,1933,3.182,1934,4.542,1935,3.182,1936,3.182,1937,3.182,1938,4.542,1939,3.182,1940,3.182,1941,2.339]],["title/classes/ODataPropertyMeta.html",[239,0.311,1213,2.685]],["body/classes/ODataPropertyMeta.html",[3,0.087,4,0.076,5,0.087,6,0.1,8,0.055,9,0.274,10,0.23,14,0.181,15,0.122,17,0.012,19,0.524,22,0.137,27,1.216,29,2.878,34,1.18,44,1.964,58,0.155,59,2.359,65,1.602,66,1.588,68,2.426,85,1.788,89,1.266,103,3.026,107,1.492,123,1.266,133,1.045,155,2.057,158,2.426,159,1.102,183,0.856,225,0.162,229,0.005,230,0.007,231,0.005,232,1.119,233,1.112,235,0.431,237,1.443,239,0.495,241,0.239,295,2.829,301,2.202,467,3.201,525,0.856,529,1.307,662,1.662,669,2.644,691,1.917,712,2.383,713,2.383,714,2.254,760,3.041,763,1.952,858,3.303,884,1.87,1139,2.042,1152,3.201,1153,2.714,1154,5.617,1155,3.853,1156,4.479,1157,4.182,1158,3.853,1159,2.714,1160,2.714,1161,2.254,1162,2.254,1164,2.94,1165,2.94,1166,5.577,1167,2.94,1168,2.94,1170,5.349,1172,3.853,1174,2.94,1175,2.94,1176,3.853,1177,2.94,1178,2.94,1196,2.714,1197,2.714,1198,2.714,1199,2.533,1200,2.714,1201,4.278,1202,2.714,1203,1.795,1204,2.714,1205,2.714,1206,2.714,1207,3.853,1208,4.479,1209,2.714,1210,4.182,1211,2.714,1212,2.714,1213,4.282,1214,2.714,1215,2.714,1216,4.479,1217,3.853,1218,4.479,1219,3.201,1220,2.714,1221,2.714,1222,2.714,1223,2.714,1224,2.714,1225,2.714,1226,2.714,1227,2.714,1228,2.714,1229,3.853,1230,2.714,1231,2.714,1232,2.714,1233,2.714,1234,2.714,1235,2.714,1236,2.714,1237,2.714,1238,5.349,1239,3.853,1240,3.853,1241,2.714,1242,2.714,1243,2.714,1244,2.714,1245,2.714,1246,5.349,1247,4.479,1248,2.714,1249,3.853,1250,2.714,1251,2.714,1252,2.714,1942,3.702,1943,3.702,1944,3.702]],["title/classes/ODataQueryOptions.html",[239,0.311,940,2.413]],["body/classes/ODataQueryOptions.html",[3,0.079,4,0.069,5,0.079,6,0.12,8,0.05,9,0.219,10,0.208,14,0.194,15,0.12,16,0.46,17,0.012,18,0.574,19,0.386,22,0.119,27,1.633,33,1.1,48,1.61,58,0.171,66,1.345,85,1.815,88,2.574,101,1.598,102,2.179,107,1.974,123,1.206,133,0.838,155,1.551,189,1.378,191,2.109,202,1.45,225,0.193,228,2.179,229,0.004,230,0.006,231,0.004,232,1.922,233,1.036,235,0.433,237,1.59,239,0.365,241,0.217,247,0.302,252,0.786,352,1.769,416,2.563,525,0.776,668,2.665,675,2.46,741,3.351,787,2.46,815,2.16,828,2.46,858,2.654,907,1.851,935,3.564,940,3.345,948,3.189,984,2.982,1112,2.833,1122,2.833,1123,3.345,1138,5.964,1143,2.665,1161,2.982,1162,2.982,1201,3.521,1328,1.941,1436,3.049,1519,4.626,1549,2.043,1650,3.722,1652,3.351,1658,2.665,1660,2.665,1885,2.46,1887,2.16,1889,2.46,1928,2.296,1941,2.16,1945,6.361,1946,2.665,1947,6.182,1948,4.897,1949,5.064,1950,4.289,1951,4.897,1952,3.355,1953,3.355,1954,3.355,1955,4.289,1956,3.355,1957,3.355,1958,3.355,1959,4.289,1960,3.355,1961,3.889,1962,3.355,1963,3.355,1964,3.355,1965,3.355,1966,3.355,1967,2.665,1968,2.939,1969,3.152,1970,3.889,1971,3.59,1972,3.351,1973,3.152,1974,3.889,1975,5.342,1976,2.939,1977,2.939,1978,2.939,1979,2.939,1980,2.939,1981,2.939,1982,2.939,1983,2.939,1984,2.939,1985,2.939,1986,2.939,1987,2.939,1988,2.939,1989,2.939,1990,2.939,1991,2.939,1992,2.939,1993,2.939,1994,5.064,1995,2.939,1996,2.665,1997,2.939,1998,2.939,1999,2.939,2000,2.939,2001,2.939,2002,2.939,2003,4.289,2004,2.939,2005,2.939,2006,2.939,2007,2.939,2008,2.939,2009,2.939,2010,2.939,2011,2.665,2012,2.665,2013,2.939,2014,2.939,2015,2.939,2016,7.015,2017,2.939,2018,2.665,2019,2.939,2020,2.46,2021,2.939,2022,5.064,2023,2.939,2024,2.939,2025,2.939,2026,2.939,2027,2.939,2028,2.939,2029,4.289,2030,4.289,2031,2.939,2032,2.939,2033,2.939,2034,2.939,2035,2.939,2036,2.939,2037,2.939,2038,6.673,2039,2.939,2040,2.939,2041,2.939,2042,2.939,2043,5.064,2044,2.939,2045,2.939,2046,4.289,2047,4.289,2048,2.939,2049,2.939,2050,2.939,2051,2.939,2052,2.939,2053,2.939,2054,2.939,2055,2.939,2056,2.665]],["title/classes/ODataRequest.html",[239,0.311,743,2.107]],["body/classes/ODataRequest.html",[3,0.088,4,0.077,5,0.088,6,0.125,8,0.056,9,0.237,10,0.222,14,0.196,15,0.124,16,0.687,17,0.012,19,0.556,22,0.077,24,4.061,27,1.42,58,0.109,66,1.491,68,1.362,84,2.131,87,1.455,88,2.584,89,2.411,92,2.997,99,2.952,100,2.656,101,1.696,115,3.285,123,0.973,162,1.811,163,2.889,173,2.977,174,1.811,183,1.545,225,0.099,229,0.005,230,0.007,231,0.005,232,1.599,234,2.671,235,0.454,239,0.278,241,0.241,247,0.336,416,3.034,529,1.319,669,2.656,679,3.386,691,1.929,715,2.556,723,3.271,725,2.966,727,3.271,729,3.271,743,2.671,758,3.113,759,3.858,760,3.863,763,1.969,774,4.2,781,3.683,818,3.952,821,2.274,822,1.811,831,4.202,834,3.863,845,3.952,870,2.404,874,4.501,876,4.895,884,3.373,885,2.738,886,4.066,985,3.22,987,2.556,1445,3.237,1549,2.274,1774,2.966,1898,2.738,1910,4.2,2057,3.734,2058,5.848,2059,6.139,2060,6.139,2061,5.288,2062,3.734,2063,3.734,2064,3.734,2065,3.734,2066,3.734,2067,3.734,2068,6.677,2069,3.734,2070,3.734,2071,3.734,2072,4.876,2073,4.876,2074,3.734,2075,3.734,2076,3.734,2077,3.734,2078,3.734,2079,3.734,2080,3.734,2081,3.734,2082,3.734,2083,3.734,2084,2.966,2085,3.734,2086,3.734,2087,3.271,2088,3.271,2089,3.734,2090,3.734,2091,3.734,2092,3.734,2093,3.734,2094,3.734,2095,3.734,2096,5.288,2097,3.734,2098,3.734,2099,3.734,2100,5.288,2101,5.288,2102,3.734,2103,5.288,2104,6.139,2105,3.734,2106,3.734,2107,3.734,2108,3.734,2109,3.734,2110,3.734,2111,3.734,2112,3.734,2113,3.734,2114,3.734,2115,3.734,2116,3.734,2117,3.734,2118,3.734,2119,3.734,2120,3.734,2121,3.734,2122,3.734,2123,3.734,2124,3.734,2125,3.734,2126,3.734,2127,3.734,2128,3.734,2129,3.734,2130,3.734,2131,3.734,2132,3.734,2133,3.734,2134,3.734]],["title/classes/ODataResource.html",[239,0.311,758,1.944]],["body/classes/ODataResource.html",[3,0.064,4,0.056,5,0.064,6,0.122,8,0.04,9,0.187,10,0.216,14,0.192,15,0.121,16,0.637,17,0.012,19,0.605,20,2.624,21,0.955,22,0.056,27,0.625,34,1.572,35,2.25,37,2.028,48,1.606,58,0.154,66,1.435,68,2.619,84,2.256,85,1.958,88,2.394,89,0.925,92,1.213,101,1.15,102,1.019,116,2.4,123,1.192,133,0.868,154,0.623,163,1.169,180,1.98,182,1.518,183,1.568,186,1.852,197,1.169,202,0.855,205,2.933,217,1.311,225,0.194,229,0.004,230,0.006,231,0.004,233,0.881,234,2.103,235,0.442,237,1.634,239,0.201,241,0.175,247,0.375,252,0.815,301,1.673,416,2.623,525,1.619,529,0.955,662,3.702,669,1.801,685,2.849,697,1.491,715,1.85,741,3.008,743,2.103,753,1.425,754,1.564,755,3.739,757,3.923,758,3.161,759,3.248,781,3.589,782,3.431,784,3.739,800,1.425,821,2.535,822,2.019,831,4.914,834,2.938,844,3.474,845,1.74,850,2.146,851,1.74,853,1.981,858,2.381,870,3.966,876,1.981,883,2.146,884,2.565,886,4.373,887,2.146,888,2.146,907,2.296,929,3.475,930,3.269,932,3.904,933,2.849,934,3.904,935,3.008,940,3.923,948,2.296,951,2.849,954,2.68,956,2.849,958,2.849,960,3.739,962,2.849,964,2.849,966,1.85,973,2.849,1079,2.146,1098,1.85,1145,2.367,1445,3.786,1804,1.85,1887,1.74,1888,3.052,1967,2.146,1996,2.146,2058,2.367,2072,5.559,2073,5.559,2135,2.703,2136,4.163,2137,2.703,2138,2.703,2139,2.703,2140,2.703,2141,2.703,2142,2.703,2143,2.703,2144,2.703,2145,2.703,2146,2.703,2147,2.703,2148,2.703,2149,2.703,2150,2.703,2151,2.703,2152,2.703,2153,2.703,2154,2.703,2155,2.703,2156,2.703,2157,2.703,2158,2.703,2159,2.703,2160,2.849,2161,2.703,2162,2.703,2163,2.703,2164,4.163,2165,2.703,2166,2.703,2167,2.703,2168,2.703,2169,2.703,2170,2.703,2171,2.703,2172,2.703,2173,2.703,2174,2.703,2175,2.703,2176,2.703,2177,2.703,2178,2.703,2179,4.163,2180,2.703,2181,2.703,2182,2.703,2183,2.703,2184,2.703,2185,2.703,2186,2.703,2187,2.703,2188,4.163,2189,2.367,2190,2.703,2191,2.703,2192,2.703,2193,6.507,2194,2.703,2195,2.703,2196,2.703,2197,2.703,2198,2.703,2199,2.703,2200,5.704,2201,2.703,2202,4.163,2203,2.703,2204,2.703,2205,2.703,2206,2.703,2207,2.703,2208,2.703,2209,6.16,2210,2.703,2211,2.703,2212,2.703,2213,2.703,2214,2.703,2215,2.367,2216,2.703,2217,2.703,2218,5.077,2219,2.703,2220,2.703,2221,2.703]],["title/classes/ODataResponse.html",[239,0.311,782,2.199]],["body/classes/ODataResponse.html",[3,0.073,4,0.064,5,0.073,6,0.12,8,0.046,9,0.207,10,0.193,14,0.182,15,0.126,17,0.012,18,0.79,19,0.608,22,0.064,24,3.198,27,1.825,33,1.037,34,1.676,35,2.399,37,0.966,48,1.573,58,0.147,66,1.579,84,2.148,85,1.693,86,1.341,89,2.553,101,1.276,116,1.208,123,1.123,133,1.215,146,3.172,147,1.503,148,1.503,155,2.002,159,0.766,180,2.399,183,1.893,185,1.928,188,3.286,205,3.229,225,0.188,229,0.004,230,0.006,231,0.004,232,1.85,233,0.977,235,0.434,237,1.533,239,0.231,241,0.2,247,0.279,525,1.277,526,2.272,529,1.095,534,3.969,661,4.045,669,3.52,691,1.684,725,4.384,743,3.589,747,4.694,758,2.852,759,3.746,760,2.672,762,5.447,763,1.634,765,2.461,767,2.461,781,3.374,782,3.617,800,2.91,818,4.416,825,1.995,834,3.969,835,4.694,868,2.973,869,3.668,870,1.995,885,5.353,913,3.386,935,3.225,985,2.813,987,2.121,1098,2.121,1099,2.272,1122,1.793,1123,1.793,1152,1.888,1201,3.725,1213,1.995,1219,1.888,1382,5.209,1436,1.634,1445,2.91,1475,2.272,1544,4.384,1670,2.461,1736,4.835,1740,4.835,1774,2.461,2084,3.668,2087,2.715,2088,2.715,2160,3.161,2215,2.715,2222,3.099,2223,4.618,2224,4.618,2225,4.618,2226,4.858,2227,3.099,2228,3.099,2229,4.618,2230,3.099,2231,3.099,2232,4.835,2233,3.099,2234,4.618,2235,3.099,2236,4.618,2237,3.099,2238,4.045,2239,3.099,2240,3.099,2241,4.835,2242,3.099,2243,3.099,2244,3.099,2245,3.099,2246,3.099,2247,3.099,2248,3.099,2249,2.715,2250,4.618,2251,3.099,2252,3.099,2253,3.099,2254,3.099,2255,3.099,2256,3.099,2257,3.099,2258,3.099,2259,3.099,2260,3.099,2261,3.099,2262,3.099,2263,3.099,2264,3.099,2265,3.099,2266,3.099,2267,3.099,2268,3.099,2269,2.715,2270,3.099,2271,3.099,2272,3.099,2273,3.099,2274,3.099,2275,3.099,2276,3.099,2277,3.099,2278,4.045,2279,3.099,2280,3.099,2281,3.099,2282,2.715,2283,3.099,2284,2.715,2285,3.099,2286,4.045,2287,6.117,2288,5.52,2289,3.099,2290,5.52,2291,6.117,2292,6.117,2293,3.099,2294,3.099]],["title/classes/ODataResponseOptions.html",[239,0.311,2226,3.312]],["body/classes/ODataResponseOptions.html",[3,0.105,4,0.092,5,0.105,6,0.126,8,0.067,9,0.267,10,0.25,14,0.191,15,0.124,16,0.725,17,0.012,18,1.019,19,0.53,22,0.092,48,1.188,58,0.149,85,1.713,86,3.11,87,2.621,90,3.262,91,3.486,99,2.622,101,1.647,123,0.869,133,0.76,145,3.227,149,3.352,153,2.89,154,0.826,155,1.804,156,2.675,157,3.262,158,2.453,160,3.262,176,3.262,177,3.398,178,3.788,183,1.028,189,1.603,225,0.19,229,0.006,230,0.008,231,0.006,233,1.261,235,0.457,237,1.477,239,0.331,241,0.287,247,0.4,525,1.028,528,3.256,529,1.569,628,4.733,690,3.288,691,2.174,692,2.779,694,1.922,695,3.837,709,3.891,712,3.837,713,2.86,716,3.891,717,5.221,718,3.891,719,3.891,720,3.891,721,5.221,722,3.891,735,3.891,844,4.097,858,3.001,1373,3.04,1436,3.791,1652,3.04,1804,3.04,2226,5.342,2249,3.891,2269,3.891,2278,3.891,2295,4.442,2296,5.96,2297,5.96,2298,5.96,2299,5.96,2300,4.442,2301,4.442,2302,4.442,2303,4.442,2304,4.442,2305,4.442,2306,4.442,2307,5.96,2308,4.442,2309,5.96,2310,4.442,2311,5.96,2312,4.442,2313,4.442,2314,5.96,2315,5.96,2316,4.442,2317,4.442,2318,4.442,2319,4.442,2320,4.442,2321,4.442,2322,5.892,2323,4.442,2324,4.442,2325,4.442,2326,4.442,2327,4.442,2328,4.442,2329,4.442,2330,4.442,2331,4.442,2332,4.442,2333,4.442,2334,4.442,2335,4.442]],["title/classes/ODataSchema.html",[239,0.311,1038,2.54]],["body/classes/ODataSchema.html",[1,2.085,3,0.088,4,0.077,5,0.088,6,0.126,8,0.056,9,0.238,10,0.234,14,0.199,15,0.13,16,0.352,17,0.012,19,0.607,22,0.077,27,1.424,35,1.705,44,1.978,58,0.159,66,1.302,84,2.327,123,1.156,133,1.207,154,0.995,180,1.705,189,1.264,191,1.368,199,3.244,201,2.173,202,1.264,203,3.109,205,2.895,207,3.566,208,2.663,209,3.109,211,2.869,225,0.212,228,1.414,229,0.005,230,0.007,231,0.005,232,1.604,233,1.123,235,0.456,237,1.547,239,0.279,241,0.243,243,1.068,247,0.338,298,2.069,337,2.284,352,1.978,484,4.213,525,0.868,680,3.748,684,2.926,691,1.935,692,2.473,694,3.054,781,4.042,870,2.415,1034,5.313,1036,4.307,1038,3.23,1046,3.415,1048,2.284,1058,1.895,1076,2.415,1103,2.979,1104,2.415,1105,3.415,1203,1.819,1253,4.887,1255,3.415,1256,3.889,1257,3.069,1259,2.17,1263,4.646,1265,2.567,1266,2.567,1267,2.567,1268,2.17,1337,2.979,1364,4.646,1395,5.313,1437,5.175,1552,4.905,1827,2.567,2336,3.751,2337,5.304,2338,5.304,2339,5.304,2340,5.304,2341,5.304,2342,5.304,2343,3.751,2344,3.751,2345,3.751,2346,3.751,2347,3.751,2348,3.751,2349,3.751,2350,3.751,2351,3.751,2352,5.304,2353,3.751,2354,5.304,2355,3.751,2356,5.304,2357,3.751,2358,5.304,2359,3.751,2360,5.304,2361,3.751,2362,3.751,2363,3.751,2364,3.751,2365,3.751,2366,3.751,2367,3.751,2368,3.751,2369,3.751,2370,3.751,2371,3.285,2372,5.304,2373,3.751,2374,3.751,2375,3.751,2376,5.304,2377,3.751,2378,3.751,2379,3.751,2380,3.751,2381,3.751,2382,5.304,2383,3.751,2384,3.751,2385,5.304,2386,3.751,2387,3.751,2388,3.751,2389,3.751,2390,3.751,2391,3.751,2392,3.751,2393,3.751,2394,6.69,2395,3.751,2396,3.751,2397,3.751,2398,3.751,2399,3.751,2400,3.751,2401,3.751]],["title/injectables/ODataServiceFactory.html",[1840,3.058,2402,3.653]],["body/injectables/ODataServiceFactory.html",[3,0.133,4,0.116,5,0.133,6,0.118,8,0.084,10,0.222,14,0.203,15,0.121,17,0.012,19,0.62,22,0.116,27,1.607,32,2.376,35,1.81,58,0.156,104,3.511,123,1.012,133,1.188,159,1.151,225,0.214,229,0.007,230,0.009,231,0.007,233,1.47,235,0.411,237,1.427,239,0.561,247,0.507,252,1.115,337,3.43,338,4.848,416,3.169,1297,4.933,1298,5.763,1299,7.372,1311,4.933,1325,6.243,1551,3.855,1840,5.092,2402,6.083,2403,4.933,2404,5.632,2405,5.632,2406,6.945,2407,5.632,2408,6.945,2409,5.632,2410,6.243,2411,6.945]],["title/classes/ODataSingletonService.html",[239,0.311,2410,3.312]],["body/classes/ODataSingletonService.html",[3,0.131,4,0.115,5,0.131,6,0.117,8,0.083,10,0.22,15,0.12,17,0.012,19,0.59,22,0.115,23,2.685,33,1.248,35,2.671,48,1.373,58,0.155,123,1.004,154,1.046,159,1.142,189,1.642,225,0.213,227,2.495,229,0.007,230,0.009,231,0.007,233,1.458,235,0.439,237,1.607,239,0.414,241,0.359,252,0.893,295,2.596,301,2.296,691,2.513,694,2.405,758,2.592,1011,3.066,1293,5.897,1295,5.737,1301,5.471,1302,6.599,1304,4.415,1309,4.075,1310,4.415,1312,4.415,1314,4.415,1356,4.869,1357,4.869,1365,4.415,1369,4.869,1545,5.945,2410,5.471,2412,5.559,2413,7.486,2414,5.559,2415,5.559,2416,5.559,2417,5.559,2418,5.559,2419,5.559]],["title/classes/ODataStructuredType.html",[239,0.311,1552,3.058]],["body/classes/ODataStructuredType.html",[1,1.984,3,0.079,4,0.07,5,0.079,6,0.125,8,0.05,9,0.22,10,0.238,14,0.176,15,0.129,16,0.716,17,0.012,19,0.534,22,0.07,23,2.257,33,1.587,37,2.11,39,2.506,44,1.862,48,1.454,58,0.167,66,1.544,68,1.79,84,1.751,85,1.169,101,1.356,123,1.129,133,0.839,180,2.175,183,1.473,189,1.169,197,1.456,202,1.008,206,2.968,215,2.95,219,2.809,220,2.38,225,0.205,229,0.004,230,0.006,231,0.004,232,2.443,233,1.039,235,0.452,237,1.591,239,0.251,241,0.218,243,0.958,247,0.303,299,1.569,348,2.948,349,2.948,350,2.948,353,2.468,354,2.948,355,3.898,495,2.673,497,2.673,524,3.942,525,1.135,526,2.468,669,1.456,680,3.527,684,2.707,691,1.79,692,2.288,694,1.456,695,4.548,697,4.023,822,2.809,960,3.511,1036,3.16,1037,2.989,1038,4.303,1046,3.16,1048,2.989,1049,2.707,1052,2.673,1054,2.167,1056,2.304,1057,1.7,1058,1.7,1065,2.989,1067,2.673,1068,2.673,1069,2.468,1072,2.673,1073,2.468,1074,2.673,1075,2.304,1076,2.167,1077,2.948,1079,2.673,1080,2.948,1112,1.948,1117,2.05,1122,2.84,1123,2.84,1203,1.632,1255,3.16,1257,2.84,1259,1.948,1265,2.304,1266,2.304,1267,2.304,1268,1.948,1328,3.351,1334,5.928,1400,2.948,1402,2.673,1420,3.359,1432,2.304,1436,1.775,1446,3.598,1452,3.598,1453,2.948,1519,4.356,1531,4.6,1552,3.598,1617,6.189,1618,6.189,1652,3.359,1764,5.055,2011,2.673,2012,2.673,2018,2.673,2056,3.898,2160,4.356,2322,2.948,2420,8.316,2421,4.908,2422,4.908,2423,3.366,2424,4.908,2425,3.366,2426,4.908,2427,3.366,2428,5.792,2429,4.908,2430,3.366,2431,4.299,2432,5.055,2433,3.366,2434,4.299,2435,3.366,2436,3.366,2437,3.366,2438,2.948,2439,3.366,2440,3.366,2441,5.073,2442,3.366,2443,3.366,2444,2.948,2445,3.366,2446,3.366,2447,3.366,2448,3.366,2449,3.366,2450,3.366,2451,3.366,2452,3.366,2453,3.366,2454,3.366,2455,3.366,2456,3.366,2457,3.366,2458,3.366,2459,3.366,2460,3.366,2461,3.366,2462,3.366,2463,3.366,2464,2.948,2465,3.366]],["title/classes/ODataStructuredTypeParser.html",[239,0.311,2160,2.854]],["body/classes/ODataStructuredTypeParser.html",[1,1.3,3,0.047,4,0.041,5,0.047,6,0.116,8,0.03,9,0.147,10,0.219,14,0.196,15,0.124,16,0.68,17,0.012,18,0.909,19,0.329,22,0.086,23,0.781,25,2.563,26,2.435,27,1.588,33,1.413,36,2.337,37,1.3,38,0.571,39,0.868,40,0.554,41,0.837,42,2.625,43,0.571,44,0.645,45,0.571,46,0.972,48,1.626,58,0.158,65,0.868,66,1.727,85,1.909,101,1.578,123,1.196,132,1.592,133,0.713,137,0.9,155,1.118,158,2.6,180,2.251,181,1.804,182,1.521,183,1.62,184,1.944,185,2.012,186,1.758,189,0.993,191,1.521,201,2.129,202,1.238,206,2.247,215,2.384,217,2.022,225,0.177,228,1.571,229,0.003,230,0.004,231,0.003,232,1.726,233,0.695,235,0.42,237,1.439,239,0.245,241,0.13,243,0.935,247,0.181,248,0.625,252,0.322,298,1.106,299,0.935,352,1.731,524,3.868,525,0.76,550,1.756,659,2,669,2.47,676,3.652,679,3.149,684,1.106,685,4.125,690,2.3,692,1.531,694,0.868,695,1.291,697,3.47,789,1.811,792,2.608,815,1.291,822,3.328,825,4.05,960,1.811,1036,2.114,1037,2,1046,2.684,1048,1.221,1049,1.811,1057,2.435,1058,1.013,1065,4.408,1076,2.114,1098,2.853,1099,2.407,1101,1.593,1102,1.593,1104,1.291,1105,2.114,1110,1.372,1112,1.16,1113,2.247,1114,1.372,1115,1.291,1116,1.593,1117,2.539,1122,2.412,1123,2.789,1166,2.853,1203,0.972,1257,1.16,1259,1.9,1268,1.16,1328,4.052,1401,3.298,1420,4.696,1427,1.593,1430,4.223,1431,1.593,1432,3.908,1436,2.541,1437,1.47,1445,2.198,1446,2.407,1447,2.407,1452,3.533,1531,4.787,1549,1.221,1559,1.756,1613,5.001,1670,2.608,1705,2.876,1720,2.876,1758,5.704,1764,3.827,1814,1.756,1827,2.247,1876,2.608,1898,3.533,1899,4.223,1900,4.223,1901,1.593,1902,3.311,1969,1.291,1973,2.114,1975,1.47,2020,2.407,2160,5.376,2189,1.756,2238,1.756,2282,2.876,2284,1.756,2286,2.876,2431,3.652,2432,4.535,2434,1.756,2438,3.652,2441,4.657,2444,2.876,2464,1.756,2466,6.794,2467,3.283,2468,5.317,2469,5.71,2470,3.283,2471,3.283,2472,2.005,2473,2.005,2474,2.005,2475,2.005,2476,2.005,2477,2.005,2478,2.005,2479,2.005,2480,2.005,2481,2.005,2482,3.283,2483,2.005,2484,2.005,2485,2.005,2486,2.005,2487,2.005,2488,2.005,2489,3.283,2490,2.005,2491,2.005,2492,2.876,2493,2.876,2494,2.876,2495,5.317,2496,2.005,2497,5.317,2498,2.005,2499,3.283,2500,4.169,2501,3.283,2502,3.283,2503,2.005,2504,2.005,2505,2.005,2506,2.005,2507,2.005,2508,3.283,2509,2.005,2510,2.005,2511,2.005,2512,2.005,2513,2.005,2514,2.005,2515,3.283,2516,2.005,2517,3.283,2518,2.005,2519,3.283,2520,2.005,2521,2.005,2522,2.005,2523,2.005,2524,2.005,2525,2.005,2526,2.005,2527,2.005,2528,3.283,2529,3.283,2530,2.005,2531,3.283,2532,2.005,2533,2.005,2534,2.005,2535,3.283,2536,2.005,2537,2.005,2538,2.005,2539,2.005,2540,3.283,2541,3.283,2542,3.283,2543,3.283,2544,3.283,2545,2.005,2546,4.169,2547,2.005,2548,2.005,2549,2.005,2550,2.005,2551,2.005,2552,2.005,2553,2.005,2554,2.005,2555,2.005,2556,2.005,2557,2.005,2558,2.005,2559,2.005,2560,2.005,2561,2.005,2562,2.005,2563,2.005,2564,2.005,2565,2.005,2566,2.005,2567,2.005,2568,2.005,2569,2.005,2570,3.283,2571,2.005,2572,2.005,2573,2.005,2574,2.005,2575,3.283,2576,2.005,2577,2.005,2578,2.005,2579,6.028,2580,2.005,2581,4.169,2582,3.283,2583,2.005,2584,2.005,2585,4.82,2586,2.005,2587,2.005,2588,2.005,2589,2.005,2590,2.005,2591,2.005,2592,2.005,2593,2.005,2594,2.005,2595,5.317,2596,2.005,2597,2.005,2598,2.005,2599,2.005,2600,2.005,2601,3.283,2602,2.005,2603,2.005,2604,2.005,2605,2.005,2606,2.005,2607,2.005,2608,2.005,2609,2.005,2610,3.283,2611,2.005,2612,2.005,2613,2.005,2614,2.005,2615,2.005,2616,2.005,2617,2.005,2618,3.283,2619,3.283,2620,2.005,2621,2.005,2622,2.005,2623,2.005,2624,2.005,2625,4.169,2626,2.005,2627,2.005]],["title/classes/ODataValueResource.html",[239,0.311,2628,3.653]],["body/classes/ODataValueResource.html",[3,0.086,4,0.076,5,0.086,6,0.109,8,0.055,9,0.234,10,0.24,14,0.19,15,0.127,16,0.345,17,0.012,19,0.59,20,2.784,21,1.296,22,0.076,37,2.385,48,1.634,58,0.169,66,1.287,84,2.003,85,2.028,96,2.181,102,1.383,116,2.035,123,1.02,133,0.893,154,0.641,159,0.866,182,1.339,183,0.849,186,1.905,191,1.905,202,1.073,225,0.217,228,1.969,229,0.005,230,0.007,231,0.005,233,1.105,234,2.639,235,0.465,237,1.733,239,0.273,241,0.237,252,0.589,295,3.168,301,1.532,416,1.48,525,1.533,529,1.296,534,3.519,662,3.723,741,3.206,755,3.862,756,2.123,757,4.21,758,3.988,759,3.206,781,3.862,784,4.356,821,3.181,822,2.533,851,2.363,858,3.125,860,2.512,861,3.915,862,3.575,884,1.854,886,3.703,907,2.881,929,3.575,930,3.363,932,4.162,933,3.575,934,4.162,935,3.206,938,2.691,939,2.691,940,4.051,941,2.691,948,2.024,949,2.691,950,2.691,951,2.512,952,2.691,953,2.691,954,2.363,955,2.691,956,2.512,957,2.691,958,2.512,959,2.691,960,3.354,961,2.691,962,2.512,963,2.691,964,2.512,965,2.691,966,2.512,967,2.691,968,2.691,969,2.691,970,2.691,971,2.691,972,2.691,973,2.512,1117,3.703,1131,2.512,1134,3.829,1149,3.215,1150,5.326,1436,1.935,2072,2.915,2073,2.915,2628,5.803,2629,3.67,2630,5.223,2631,5.223,2632,3.67,2633,3.67,2634,3.67,2635,5.223,2636,3.67,2637,5.223,2638,3.67,2639,3.67,2640,3.67,2641,3.67,2642,3.67,2643,3.67]],["title/classes/OptionHandler.html",[239,0.311,1961,3.312]],["body/classes/OptionHandler.html",[3,0.075,4,0.066,5,0.075,6,0.122,8,0.071,10,0.228,14,0.197,15,0.122,16,0.527,17,0.012,18,0.959,19,0.372,22,0.116,27,1.658,33,1.058,48,1.637,58,0.173,66,1.312,85,1.651,88,2.189,101,1.55,102,2.114,107,1.9,123,1.197,133,0.806,155,1.923,189,1.577,191,2.046,202,1.152,225,0.205,228,2.114,229,0.004,230,0.006,231,0.004,232,2.001,233,0.997,235,0.443,237,1.644,239,0.351,241,0.206,247,0.287,252,0.757,337,2.87,352,1.679,416,2.967,525,0.737,668,2.529,675,2.335,691,1.719,741,1.679,787,4.112,815,2.05,828,2.335,858,1.33,907,1.757,935,3.489,940,1.843,948,2.599,984,2.87,1122,2.727,1123,3.246,1138,5.51,1143,2.529,1161,2.87,1162,2.87,1201,3.416,1327,4.128,1328,2.727,1436,3.269,1519,3.839,1549,1.94,1650,3.611,1652,3.225,1658,4.923,1660,2.529,1885,2.335,1887,2.05,1889,2.335,1928,2.18,1941,2.05,1945,6.488,1946,2.529,1947,6.068,1949,2.79,1950,2.79,1955,2.79,1959,2.79,1961,3.743,1967,2.529,1968,2.79,1969,3.034,1970,3.743,1971,3.455,1972,3.225,1973,3.034,1974,3.743,1975,5.255,1976,2.79,1977,2.79,1978,2.79,1979,2.79,1980,2.79,1981,2.79,1982,2.79,1983,2.79,1984,2.79,1985,2.79,1986,2.79,1987,2.79,1988,2.79,1989,2.79,1990,2.79,1991,2.79,1992,2.79,1993,2.79,1994,4.913,1995,2.79,1996,2.529,1997,2.79,1998,2.79,1999,2.79,2000,2.79,2001,2.79,2002,2.79,2003,4.128,2004,2.79,2005,2.79,2006,2.79,2007,2.79,2008,2.79,2009,2.79,2010,2.79,2011,2.529,2012,2.529,2013,2.79,2014,4.128,2015,2.79,2016,6.947,2017,2.79,2018,2.529,2019,4.128,2020,2.335,2021,5.43,2022,4.913,2023,4.128,2024,2.79,2025,4.128,2026,2.79,2027,2.79,2028,2.79,2029,4.128,2030,4.128,2031,4.128,2032,2.79,2033,2.79,2034,4.128,2035,2.79,2036,2.79,2037,2.79,2038,6.584,2039,2.79,2040,2.79,2041,2.79,2042,4.128,2043,4.913,2044,2.79,2045,4.128,2046,5.43,2047,4.128,2048,2.79,2049,4.128,2050,2.79,2051,2.79,2052,4.128,2053,2.79,2054,4.128,2055,2.79,2056,3.743,2644,4.713,2645,4.713,2646,4.713,2647,3.185,2648,3.185,2649,3.185,2650,3.185,2651,3.185,2652,3.185,2653,3.185,2654,3.185,2655,3.185,2656,3.185,2657,3.185,2658,3.185,2659,3.185,2660,3.185,2661,3.185,2662,3.185,2663,2.79,2664,3.185]],["title/interfaces/Options.html",[0,1.261,85,0.994]],["body/interfaces/Options.html",[0,2.307,1,1.675,2,1.382,3,0.07,4,0.061,5,0.07,6,0.044,7,1.497,8,0.044,9,0.268,10,0.221,11,2.355,12,2.355,13,2.355,14,0.209,15,0.126,16,0.788,17,0.012,18,1.322,19,0.234,20,1.838,21,1.047,22,0.174,23,1.155,24,1.382,25,2.005,26,2.256,27,1.56,28,1.563,29,2.777,30,2.256,31,1.563,32,1.014,33,1.003,34,0.666,35,0.953,36,2.606,37,1.392,38,0.844,39,2.588,40,1.234,41,1.237,42,1.801,43,0.844,44,2.25,45,0.844,46,1.437,47,2.082,48,1.395,49,2.355,50,1.563,51,1.563,52,1.563,53,1.563,54,1.497,55,1.563,56,1.563,57,1.563,58,0.176,59,2.412,60,1.563,61,1.563,62,1.563,63,1.563,64,1.563,65,1.282,66,1.671,67,1.563,68,1.629,69,1.563,70,1.563,71,1.563,72,1.563,73,1.563,74,1.437,75,1.563,76,1.563,77,1.563,78,1.563,79,1.563,80,1.563,81,1.563,82,1.563,83,1.563,84,2.039,85,1.818,86,2.918,87,2.501,88,1.577,89,1.838,90,3.112,91,3.112,92,2.685,93,1.563,94,2.355,95,1.563,96,1.237,97,1.563,98,1.563,99,3.052,100,1.932,101,1.773,102,2.025,103,3.326,104,3.264,105,2.833,106,2.355,107,1.195,108,1.563,109,2.355,110,2.715,111,2.881,112,1.563,113,1.563,114,1.563,115,3.142,116,2.094,117,2.715,118,2.833,119,1.563,120,2.256,121,1.563,122,3.154,123,0.872,124,1.437,125,1.563,126,1.497,127,1.437,128,1.563,129,1.563,130,1.563,131,1.563,132,2.166,133,0.507,134,1.563,135,2.355,136,2.355,137,2.412,138,2.355,139,2.166,140,1.497,141,1.563,142,1.497,143,2.005,144,1.563,145,2.881,146,1.437,147,1.437,148,1.437,149,2.789,150,2.166,151,1.437,152,1.437,153,2.166,154,0.364,155,0.795,156,1.33,157,2.901,158,2.46,159,0.992,160,1.437,161,2.166,162,2.166,163,1.282,164,1.563,165,1.563,166,1.563,167,1.563,168,1.563,169,1.563,170,1.563,171,1.497,172,1.563,173,1.437,174,1.437,175,1.497,176,1.437,177,1.497,178,1.497,179,1.382,180,1.727,181,1.282,182,1.081,183,0.686,184,1.382,185,1.237,186,1.081,187,1.33,188,1.282,189,0.706,190,1.33,191,1.081,192,1.437,193,1.437,194,1.563,195,1.563,196,1.563,197,1.282,198,1.497,199,2.166,200,3.271,201,1.047,202,0.609,203,1.497,204,2.005,205,1.282,206,2.082,207,1.497,208,1.932,209,1.497,210,2.166,211,1.382,212,2.166,213,1.437,214,1.282,215,1.864,216,1.382,217,1.437,218,1.437,219,1.437,220,2.606,221,2.005,222,1.155,223,1.497,224,1.497,225,0.078,226,1.382,227,1.33,228,1.117,229,0.004,230,0.006,231,0.004]],["title/interfaces/OptionsHelper.html",[0,1.261,158,1.521]],["body/interfaces/OptionsHelper.html",[0,2.321,1,1.701,2,1.417,3,0.072,4,0.063,5,0.072,6,0.046,7,1.536,8,0.046,9,0.272,11,2.4,12,2.4,13,2.4,14,0.209,15,0.125,16,0.774,17,0.012,18,1.33,19,0.24,20,1.867,21,1.074,22,0.174,23,1.185,24,1.417,25,2.043,26,2.299,27,1.575,28,1.603,29,2.807,30,2.299,31,1.603,32,1.04,33,1.022,34,0.683,35,0.977,36,2.646,37,1.419,38,0.865,39,2.621,40,1.258,41,1.269,42,1.835,43,0.865,44,2.269,45,0.865,46,1.474,47,2.122,48,1.407,49,3.194,50,1.603,51,1.603,52,1.603,53,1.603,54,1.536,55,1.603,56,1.603,57,1.603,58,0.177,59,2.449,60,1.603,61,1.603,62,1.603,63,1.603,64,1.603,65,1.315,66,1.679,67,1.603,68,1.66,69,1.603,70,1.603,71,1.603,72,1.603,73,1.603,74,1.474,75,1.603,76,1.603,77,1.603,78,1.603,79,1.603,80,1.603,81,1.603,82,1.603,83,1.603,84,2.059,85,1.829,86,2.361,87,1.774,88,1.607,89,1.867,90,2.207,91,2.207,92,2.719,93,1.603,94,2.4,95,1.603,96,1.269,97,1.603,98,1.603,99,3.061,100,1.969,101,1.793,102,2.056,103,3.337,104,3.291,105,2.877,106,2.4,107,1.226,108,1.603,109,2.4,110,2.756,111,2.912,112,1.603,113,1.603,114,1.603,115,3.169,116,2.126,117,2.756,118,2.877,119,1.603,120,2.299,121,1.603,122,3.194,123,0.883,124,1.474,125,1.603,126,1.536,127,1.474,128,1.603,129,1.603,130,1.603,131,1.603,132,2.207,133,0.52,134,1.603,135,2.4,136,2.4,137,2.449,138,2.4,139,2.207,140,1.536,141,1.603,142,1.536,143,2.043,144,1.603,145,2.449,146,1.474,147,1.474,148,1.474,149,2.122,150,2.207,151,1.474,152,1.474,153,2.207,154,0.373,155,0.815,156,1.364,157,1.474,158,2.575,159,1.075,160,2.938,161,2.207,162,2.207,163,1.315,164,1.603,165,1.603,166,1.603,167,1.603,168,1.603,169,1.603,170,1.603,171,1.536,172,1.603,173,1.474,174,1.474,175,1.536,176,1.474,177,1.536,178,1.536,179,1.417,180,1.754,181,1.315,182,1.109,183,0.703,184,1.417,185,1.269,186,1.109,187,1.364,188,1.315,189,0.724,190,1.364,191,1.109,192,1.474,193,1.474,194,1.603,195,1.603,196,1.603,197,1.315,198,1.536,199,2.207,200,3.302,201,1.074,202,0.624,203,1.536,204,2.043,205,1.315,206,2.122,207,1.536,208,1.969,209,1.536,210,2.207,211,1.417,212,2.207,213,1.474,214,1.315,215,1.9,216,1.417,217,1.474,218,1.474,219,1.474,220,2.646,221,2.043,222,1.185,223,1.536,224,1.536,225,0.08,226,1.417,227,1.364,228,1.146,229,0.004,230,0.006,231,0.004]],["title/interfaces/Parser.html",[0,1.261,180,1.341]],["body/interfaces/Parser.html",[0,2.309,1,1.679,2,1.388,3,0.07,4,0.061,5,0.07,6,0.081,7,1.503,8,0.045,9,0.201,10,0.132,11,2.362,12,2.362,13,2.362,14,0.209,15,0.125,16,0.772,17,0.012,18,1.324,19,0.235,20,1.843,21,1.051,22,0.174,23,1.16,24,1.388,25,2.011,26,2.263,27,1.707,28,1.569,29,2.782,30,2.263,31,1.569,32,1.018,33,1.006,34,0.668,35,0.957,36,2.612,37,1.396,38,0.847,39,2.594,40,1.238,41,1.242,42,1.806,43,0.847,44,2.253,45,0.847,46,1.443,47,2.089,48,1.471,49,2.362,50,1.569,51,1.569,52,1.569,53,1.569,54,1.503,55,1.569,56,1.569,57,1.569,58,0.177,59,2.418,60,1.569,61,1.569,62,1.569,63,1.569,64,1.569,65,1.288,66,1.672,67,1.569,68,1.634,69,1.569,70,1.569,71,1.569,72,1.569,73,1.569,74,1.443,75,1.569,76,1.569,77,1.569,78,1.569,79,1.569,80,1.569,81,1.569,82,1.569,83,1.569,84,2.043,85,1.883,86,2.331,87,1.746,88,1.582,89,1.843,90,2.172,91,2.172,92,2.691,93,1.569,94,2.362,95,1.569,96,1.242,97,1.569,98,1.569,99,3.053,100,1.938,101,1.776,102,2.03,103,3.327,104,3.268,105,2.841,106,2.362,107,1.2,108,1.569,109,2.362,110,2.722,111,2.886,112,1.569,113,1.569,114,1.569,115,3.147,116,2.099,117,2.722,118,2.841,119,1.569,120,2.263,121,1.569,122,3.161,123,0.873,124,1.443,125,1.569,126,1.503,127,1.443,128,1.569,129,1.569,130,1.569,131,1.569,132,2.172,133,0.509,134,1.569,135,2.362,136,2.362,137,2.418,138,2.362,139,2.172,140,1.503,141,1.569,142,1.503,143,2.011,144,1.569,145,2.418,146,1.443,147,1.443,148,1.443,149,2.089,150,2.172,151,1.443,152,1.443,153,2.172,154,0.365,155,0.798,156,1.336,157,1.443,158,2.743,159,0.994,160,1.443,161,2.172,162,2.172,163,1.288,164,1.569,165,1.569,166,1.569,167,1.569,168,1.569,169,1.569,170,1.569,171,1.503,172,1.569,173,1.443,174,1.443,175,1.503,176,1.443,177,1.503,178,1.503,179,1.388,180,1.927,181,1.938,182,1.634,183,0.688,184,1.388,185,2.249,186,1.965,187,1.336,188,1.288,189,0.709,190,1.336,191,1.086,192,1.443,193,1.443,194,1.569,195,1.569,196,1.569,197,1.288,198,1.503,199,2.172,200,3.276,201,1.051,202,0.611,203,1.503,204,2.011,205,1.288,206,2.089,207,1.503,208,1.938,209,1.503,210,2.172,211,1.388,212,2.172,213,1.443,214,1.288,215,1.87,216,1.388,217,1.443,218,1.443,219,1.443,220,2.612,221,2.011,222,1.16,223,1.503,224,1.503,225,0.143,226,1.388,227,1.336,228,1.122,229,0.004,230,0.006,231,0.004,233,0.948,235,0.244,237,0.92,2665,2.976,2666,2.976]],["title/interfaces/ResponseOptions.html",[0,1.261,176,2.022]],["body/interfaces/ResponseOptions.html",[0,2.317,1,1.693,2,1.406,3,0.071,4,0.062,5,0.071,6,0.045,7,1.524,8,0.045,9,0.27,10,0.178,11,2.386,12,2.386,13,2.386,14,0.209,15,0.125,16,0.773,17,0.012,18,1.355,19,0.238,20,1.858,21,1.065,22,0.174,23,1.175,24,1.406,25,2.031,26,2.286,27,1.571,28,1.59,29,2.798,30,2.286,31,1.59,32,1.032,33,1.016,34,0.677,35,0.969,36,2.633,37,1.411,38,0.859,39,2.611,40,1.25,41,1.259,42,1.824,43,0.859,44,2.263,45,0.859,46,1.463,47,2.11,48,1.404,49,2.386,50,1.59,51,1.59,52,1.59,53,1.59,54,1.524,55,1.59,56,1.59,57,1.59,58,0.177,59,2.438,60,1.59,61,1.59,62,1.59,63,1.59,64,1.59,65,1.305,66,1.677,67,1.59,68,1.65,69,1.59,70,1.59,71,1.59,72,1.59,73,1.59,74,1.463,75,1.59,76,1.59,77,1.59,78,1.59,79,1.59,80,1.59,81,1.59,82,1.59,83,1.59,84,2.053,85,1.826,86,2.35,87,1.763,88,1.598,89,1.858,90,2.194,91,2.194,92,2.709,93,1.59,94,2.386,95,1.59,96,1.259,97,1.59,98,1.59,99,3.058,100,1.958,101,1.787,102,2.047,103,3.333,104,3.283,105,2.864,106,2.386,107,1.216,108,1.59,109,2.386,110,2.743,111,2.902,112,1.59,113,1.59,114,1.59,115,3.161,116,2.116,117,2.743,118,2.864,119,1.59,120,2.286,121,1.59,122,3.182,123,0.879,124,1.463,125,1.59,126,1.524,127,1.463,128,1.59,129,1.59,130,1.59,131,1.59,132,2.194,133,0.516,134,1.59,135,2.386,136,2.386,137,2.438,138,2.386,139,2.194,140,1.524,141,1.59,142,1.524,143,2.031,144,1.59,145,2.438,146,1.463,147,1.463,148,1.463,149,2.11,150,2.194,151,1.463,152,1.463,153,2.926,154,0.37,155,0.809,156,1.354,157,1.463,158,2.476,159,1.072,160,1.463,161,2.194,162,2.194,163,1.305,164,1.59,165,1.59,166,1.59,167,1.59,168,1.59,169,1.59,170,1.59,171,1.524,172,1.59,173,1.463,174,1.463,175,1.524,176,2.194,177,3.049,178,3.049,179,1.406,180,1.746,181,1.305,182,1.1,183,0.698,184,1.406,185,1.259,186,1.1,187,1.354,188,1.305,189,0.719,190,1.354,191,1.1,192,1.463,193,1.463,194,1.59,195,1.59,196,1.59,197,1.305,198,1.524,199,2.194,200,3.292,201,1.065,202,0.62,203,1.524,204,2.031,205,1.305,206,2.11,207,1.524,208,1.958,209,1.524,210,2.194,211,1.406,212,2.194,213,1.463,214,1.305,215,1.889,216,1.406,217,1.463,218,1.463,219,1.463,220,2.633,221,2.031,222,1.175,223,1.524,224,1.524,225,0.08,226,1.406,227,1.354,228,1.137,229,0.004,230,0.006,231,0.004]],["title/classes/SegmentHandler.html",[239,0.311,1874,3.312]],["body/classes/SegmentHandler.html",[3,0.085,4,0.075,5,0.085,6,0.118,8,0.054,10,0.213,14,0.2,15,0.123,16,0.567,17,0.012,19,0.571,22,0.136,23,2.716,27,1.765,32,1.772,33,1.713,34,1.163,37,1.13,48,1.666,58,0.171,66,1.667,74,2.511,87,2.018,101,1.002,102,1.367,123,1.228,127,1.758,133,1.127,183,1.198,202,1.489,225,0.217,229,0.005,230,0.007,231,0.005,233,1.096,235,0.423,237,1.532,239,0.386,241,0.234,243,1.72,247,0.327,252,1.119,264,1.952,338,3.334,352,1.912,416,3.008,525,1.397,527,3.544,529,1.281,560,3.544,659,2.208,662,1.628,679,3.998,691,1.889,741,1.912,755,2,756,2.098,757,2.997,770,3.544,794,2.658,844,2.208,858,1.514,912,2.658,935,1.912,947,4.113,948,3.332,1131,5.105,1139,2.857,1373,2.482,1445,2.731,1549,2.208,1804,2.482,1827,2.482,1867,5.39,1868,2.482,1869,3.176,1870,6.166,1872,3.176,1874,4.113,1876,2.88,1878,3.176,1885,5.109,1886,2.88,1887,3.334,1888,2.658,1889,2.658,1890,3.176,1891,2.88,1892,4.536,1893,3.176,1894,4.536,1895,5.772,1896,3.176,1897,4.536,1898,2.658,1899,5.535,1900,5.535,1901,2.88,1902,4.797,1903,3.176,1904,3.176,1905,4.536,1906,3.176,1907,3.176,1908,3.176,1909,3.176,1910,2.88,1911,3.176,1912,4.536,1913,3.176,1914,3.176,1915,3.176,1916,3.176,1917,3.176,1918,3.176,1919,3.176,1920,3.176,1921,3.176,1922,3.176,1923,3.176,1924,4.536,1925,3.176,1926,3.176,1927,3.176,1928,2.482,1929,3.176,1930,4.536,1931,4.536,1932,4.536,1933,4.536,1934,4.536,1935,5.772,1936,3.176,1937,4.536,1938,4.536,1939,5.772,1940,3.176,1941,2.335,2663,3.176,2667,3.626,2668,3.626,2669,3.626,2670,3.626,2671,3.626,2672,3.626,2673,3.626,2674,3.626,2675,3.626,2676,3.626]],["title/interfaces/StoragePayload.html",[0,1.261,1484,3.312]],["body/interfaces/StoragePayload.html",[0,1.657,2,2.555,3,0.129,4,0.113,5,0.129,6,0.082,8,0.082,9,0.306,14,0.2,15,0.124,17,0.012,18,1.332,19,0.538,22,0.113,33,1.231,58,0.161,66,1.574,89,2.664,99,1.999,103,2.999,123,0.799,133,0.937,159,0.908,183,1.721,229,0.007,230,0.009,231,0.007,232,2.065,239,0.408,243,1.56,669,3.534,743,3.758,747,5.328,782,3.922,783,3.751,800,2.89,818,5.012,834,4.505,835,5.328,974,4.396,977,3.751,985,3.338,993,3.751,1000,3.528,1004,3.751,1011,3.023,1014,5.006,1475,4.018,1476,4.352,1477,4.352,1478,4.352,1479,4.352,1480,4.8,1484,5.423,1485,6.82,1486,4.8,1487,4.8,1488,4.8,1489,4.8,1490,4.8,1491,4.8,1492,4.8,1493,4.8,1494,4.8,1495,4.8]],["title/interfaces/StructuredTypeField.html",[0,1.261,36,2.022]],["body/interfaces/StructuredTypeField.html",[0,2.285,1,1.966,2,1.327,3,0.067,4,0.059,5,0.067,6,0.043,7,1.438,8,0.043,9,0.263,10,0.243,11,2.284,12,2.284,13,2.284,14,0.209,15,0.128,16,0.789,17,0.012,18,1.382,19,0.224,20,1.794,21,1.005,22,0.173,23,1.109,24,1.327,25,1.945,26,2.188,27,1.536,28,1.501,29,2.728,30,2.188,31,1.501,32,0.974,33,1.416,34,0.639,35,0.915,36,2.842,37,1.966,38,1.668,39,2.987,40,1.742,41,2.447,42,2.542,43,1.668,44,2.39,45,1.668,46,2.842,47,2.02,48,1.376,49,2.284,50,1.501,51,1.501,52,1.501,53,1.501,54,1.438,55,1.501,56,1.501,57,1.501,58,0.176,59,2.354,60,1.501,61,1.501,62,1.501,63,1.501,64,1.501,65,1.232,66,1.658,67,1.501,68,1.58,69,1.501,70,1.501,71,1.501,72,1.501,73,1.501,74,1.381,75,1.501,76,1.501,77,1.501,78,1.501,79,1.501,80,1.501,81,1.501,82,1.501,83,1.501,84,2.008,85,1.771,86,2.269,87,1.688,88,1.53,89,1.794,90,2.101,91,2.101,92,2.631,93,1.501,94,2.284,95,1.501,96,1.189,97,1.501,98,1.501,99,3.038,100,1.874,101,1.742,102,1.976,103,3.308,104,3.219,105,2.765,106,2.284,107,1.148,108,1.501,109,2.284,110,2.649,111,2.83,112,1.501,113,1.501,114,1.501,115,3.099,116,2.043,117,2.649,118,2.765,119,1.501,120,2.188,121,1.501,122,3.09,123,0.854,124,1.381,125,1.501,126,1.438,127,1.381,128,1.501,129,1.501,130,1.501,131,1.501,132,2.101,133,0.487,134,1.501,135,2.284,136,2.284,137,2.354,138,2.284,139,2.101,140,1.438,141,1.501,142,1.438,143,1.945,144,1.501,145,2.354,146,1.381,147,1.381,148,1.381,149,2.02,150,2.101,151,1.381,152,1.381,153,2.101,154,0.35,155,0.764,156,1.278,157,1.381,158,2.422,159,0.971,160,1.381,161,2.101,162,2.101,163,1.232,164,1.501,165,1.501,166,1.501,167,1.501,168,1.501,169,1.501,170,1.501,171,1.438,172,1.501,173,1.381,174,1.381,175,1.438,176,1.381,177,1.438,178,1.438,179,1.327,180,1.686,181,1.232,182,1.038,183,0.659,184,1.327,185,1.189,186,1.038,187,1.278,188,1.232,189,0.678,190,1.278,191,1.038,192,1.381,193,1.381,194,1.501,195,1.501,196,1.501,197,1.232,198,1.438,199,2.101,200,3.221,201,1.005,202,0.585,203,1.438,204,1.945,205,1.232,206,2.02,207,1.438,208,1.874,209,1.438,210,2.101,211,1.327,212,2.101,213,1.381,214,1.232,215,1.809,216,1.327,217,1.381,218,1.381,219,1.381,220,2.543,221,1.945,222,1.109,223,1.438,224,1.438,225,0.075,226,1.327,227,1.278,228,1.073,229,0.004,230,0.006,231,0.004]],["title/interfaces/StructuredTypeFieldOptions.html",[0,1.261,179,1.944]],["body/interfaces/StructuredTypeFieldOptions.html",[0,2.321,1,1.701,2,1.417,3,0.072,4,0.063,5,0.072,6,0.046,7,1.536,8,0.046,9,0.272,11,2.4,12,2.4,13,2.4,14,0.209,15,0.125,16,0.774,17,0.012,18,1.33,19,0.24,20,1.867,21,1.074,22,0.174,23,1.185,24,1.417,25,2.043,26,2.299,27,1.575,28,1.603,29,2.807,30,2.299,31,1.603,32,1.04,33,1.022,34,0.683,35,0.977,36,3.146,37,1.419,38,0.865,39,2.621,40,1.258,41,1.269,42,2.616,43,0.865,44,2.269,45,0.865,46,1.474,47,2.122,48,1.407,49,2.4,50,1.603,51,1.603,52,1.603,53,1.603,54,1.536,55,1.603,56,1.603,57,1.603,58,0.177,59,2.449,60,1.603,61,1.603,62,1.603,63,1.603,64,1.603,65,1.315,66,1.679,67,1.603,68,1.66,69,1.603,70,1.603,71,1.603,72,1.603,73,1.603,74,1.474,75,1.603,76,1.603,77,1.603,78,1.603,79,1.603,80,1.603,81,1.603,82,1.603,83,1.603,84,2.059,85,1.801,86,2.361,87,1.774,88,1.607,89,1.867,90,2.207,91,2.207,92,2.719,93,1.603,94,2.4,95,1.603,96,1.269,97,1.603,98,1.603,99,3.061,100,1.969,101,1.793,102,2.056,103,3.337,104,3.291,105,2.877,106,2.4,107,1.226,108,1.603,109,2.4,110,2.756,111,2.912,112,1.603,113,1.603,114,1.603,115,3.169,116,2.126,117,2.756,118,2.877,119,1.603,120,2.299,121,1.603,122,3.194,123,0.883,124,1.474,125,1.603,126,1.536,127,1.474,128,1.603,129,1.603,130,1.603,131,1.603,132,2.207,133,0.52,134,1.603,135,2.4,136,2.4,137,2.449,138,2.4,139,2.207,140,1.536,141,1.603,142,1.536,143,2.043,144,1.603,145,2.449,146,1.474,147,1.474,148,1.474,149,2.122,150,2.207,151,1.474,152,1.474,153,2.207,154,0.373,155,0.815,156,1.364,157,1.474,158,2.575,159,1.075,160,1.474,161,2.207,162,2.207,163,1.315,164,1.603,165,1.603,166,1.603,167,1.603,168,1.603,169,1.603,170,1.603,171,1.536,172,1.603,173,1.474,174,1.474,175,1.536,176,1.474,177,1.536,178,1.536,179,2.122,180,1.754,181,1.315,182,1.109,183,0.703,184,1.417,185,1.269,186,1.109,187,1.364,188,1.315,189,0.724,190,1.364,191,1.109,192,1.474,193,1.474,194,1.603,195,1.603,196,1.603,197,1.315,198,1.536,199,2.207,200,3.302,201,1.074,202,0.624,203,1.536,204,2.043,205,1.315,206,2.122,207,1.536,208,1.969,209,1.536,210,2.207,211,1.417,212,2.207,213,1.474,214,1.315,215,1.9,216,1.417,217,1.474,218,1.474,219,1.474,220,2.646,221,2.043,222,1.185,223,1.536,224,1.536,225,0.08,226,1.417,227,1.364,228,1.146,229,0.004,230,0.006,231,0.004]],["title/dependencies.html",[2677,3.474,2678,4.398]],["body/dependencies.html",[17,0.012,21,2.288,229,0.009,230,0.01,231,0.009,1551,4.434,2678,5.675,2679,6.479,2680,8.627,2681,6.479,2682,6.479,2683,6.479,2684,7.554,2685,7.554,2686,6.479,2687,6.479,2688,6.479,2689,6.479,2690,6.479,2691,6.479,2692,6.479,2693,6.479,2694,6.479]],["title/miscellaneous/enumerations.html",[2695,2.236,2696,4.398]],["body/miscellaneous/enumerations.html",[6,0.118,8,0.084,15,0.104,17,0.012,32,2.372,34,1.557,48,1.769,87,2.702,107,2.796,229,0.007,230,0.009,231,0.007,243,1.974,264,2.613,338,4.464,519,4.92,520,5.507,527,4.745,530,4.461,531,4.92,560,4.745,756,4.012,770,4.745,1138,5.083,1139,3.825,1161,4.223,1162,4.223,1650,4.464,1867,3.844,1868,4.745,1945,4.461,1946,5.507,1969,4.464,1970,5.507,1971,5.083,1972,4.745,1973,4.464,1974,5.507,1975,5.083,2695,3.616,2696,4.92,2697,5.618,2698,4.461,2699,5.618,2700,6.934,2701,4.461,2702,4.461,2703,6.934,2704,6.934,2705,6.934,2706,6.934,2707,6.934]],["title/miscellaneous/functions.html",[467,3.058,2695,2.236]],["body/miscellaneous/functions.html",[6,0.118,8,0.071,10,0.256,14,0.199,15,0.104,17,0.012,33,1.07,48,1.388,58,0.179,85,1.135,88,2.205,192,2.31,225,0.23,229,0.006,230,0.008,231,0.006,237,1.73,243,1.778,252,1.118,416,1.921,467,2.902,737,3.784,791,5.531,795,3.784,796,4.959,797,5.531,799,3.784,803,3.784,809,3.784,811,3.784,834,3.613,913,3.493,1131,3.261,1523,3.784,1553,5.469,1838,4.173,1851,4.173,1858,5.469,1867,3.261,1868,4.273,1891,3.784,1941,5.069,1972,3.261,2084,3.784,2695,3.067,2698,3.784,2701,6.726,2702,3.784,2708,6.244,2709,4.764,2710,6.244,2711,6.244,2712,6.244,2713,6.244,2714,6.244,2715,6.244,2716,6.244,2717,4.764,2718,6.244,2719,6.244,2720,7.674,2721,6.244,2722,6.244,2723,6.244,2724,6.244,2725,4.173,2726,6.244,2727,6.244,2728,6.244,2729,6.244,2730,6.965,2731,4.764,2732,4.764,2733,4.764,2734,4.173,2735,4.764,2736,4.764,2737,4.764,2738,6.244,2739,4.764,2740,4.764,2741,4.173,2742,4.764,2743,4.764,2744,4.764,2745,4.764,2746,4.764,2747,4.764,2748,6.244,2749,6.244,2750,4.764,2751,4.764,2752,4.764,2753,4.764,2754,4.764,2755,6.244,2756,4.764,2757,4.764]],["title/index.html",[8,0.052,2758,3.043,2759,3.043]],["body/index.html",[4,0.088,17,0.012,19,0.627,22,0.136,30,2.163,33,0.962,35,1.376,44,2.455,54,2.163,58,0.088,84,1.758,86,2.856,96,2.756,99,2.121,100,1.852,101,1.183,102,2.878,110,2.163,111,2.61,117,2.163,140,2.163,151,2.076,183,1.345,191,1.562,205,3.204,227,2.61,229,0.006,230,0.008,231,0.006,239,0.492,533,3.75,664,3.75,694,1.852,695,3.743,759,4.027,861,3.743,984,2.607,1011,2.362,1139,2.362,1298,3.139,1373,5.74,1382,6.074,1445,3.481,1447,3.139,1551,4.518,1650,4.25,1706,5.624,1707,4.617,1799,3.75,1835,4.617,1836,4.262,1840,4.262,1846,6.203,1853,5.093,1887,4.559,1928,2.93,1969,3.743,1973,3.743,2760,8.058,2761,4.281,2762,4.281,2763,4.281,2764,4.281,2765,4.281,2766,4.281,2767,5.814,2768,7.082,2769,4.281,2770,4.281,2771,7.082,2772,4.281,2773,4.281,2774,4.281,2775,5.814,2776,4.281,2777,6.203,2778,4.281,2779,5.814,2780,4.281,2781,4.281,2782,4.281,2783,5.814,2784,4.281,2785,5.814,2786,4.281,2787,4.281,2788,4.281,2789,4.281,2790,4.281,2791,4.281,2792,4.281,2793,4.281,2794,5.814,2795,4.281,2796,4.281,2797,4.281,2798,4.281,2799,4.281,2800,4.281,2801,8.147,2802,4.281,2803,5.814,2804,7.404,2805,7.082,2806,4.281,2807,4.281,2808,4.281,2809,4.281,2810,4.281,2811,4.281,2812,4.281,2813,4.281,2814,4.281,2815,4.281,2816,5.814,2817,4.281,2818,5.814,2819,4.281,2820,5.814,2821,5.814,2822,5.814,2823,4.281,2824,5.814,2825,4.281,2826,4.281,2827,4.281,2828,4.281,2829,4.281,2830,4.281,2831,4.281,2832,4.281,2833,6.602,2834,4.281,2835,5.814,2836,4.281,2837,4.281,2838,4.281,2839,4.281,2840,4.281,2841,4.281,2842,4.281,2843,5.814,2844,4.281,2845,5.814,2846,4.281,2847,4.281,2848,4.281,2849,4.281,2850,4.281,2851,4.281,2852,4.281,2853,4.281,2854,4.281,2855,4.281,2856,4.281,2857,4.281,2858,5.814,2859,5.814,2860,4.281,2861,4.281,2862,4.281,2863,4.281,2864,4.281]],["title/license.html",[2758,3.043,2759,3.043,2865,3.043]],["body/license.html",[17,0.01,126,3.025,137,3.472,142,3.025,229,0.008,230,0.01,231,0.008,264,2.257,738,4.756,1337,4.756,1706,5.725,2371,5.245,2777,5.245,2865,5.245,2866,5.988,2867,7.735,2868,5.988,2869,5.988,2870,5.988,2871,5.988,2872,7.209,2873,5.988,2874,5.988,2875,5.988,2876,5.988,2877,5.988,2878,5.988,2879,7.209,2880,8.568,2881,5.988,2882,5.988,2883,5.988,2884,5.988,2885,7.209,2886,5.988,2887,5.988,2888,5.988,2889,5.988,2890,5.988,2891,5.988,2892,5.988,2893,5.988,2894,7.209,2895,5.988,2896,5.988,2897,5.988,2898,5.988,2899,5.988,2900,5.988,2901,7.209,2902,7.209,2903,5.988,2904,5.988,2905,5.988,2906,5.988,2907,5.988,2908,5.988,2909,5.988,2910,5.988,2911,5.988,2912,5.988,2913,5.988,2914,5.988,2915,5.988,2916,5.988,2917,5.988,2918,5.988,2919,5.988,2920,5.988,2921,5.988,2922,5.988,2923,5.988,2924,5.988,2925,5.988,2926,5.988,2927,5.988,2928,5.988,2929,5.988,2930,5.988]],["title/modules.html",[1837,4.536]],["body/modules.html",[17,0.01,229,0.009,230,0.01,231,0.009,1836,5.033,1837,5.452,2931,6.865]],["title/overview.html",[2932,5.002]],["body/overview.html",[2,3.17,17,0.01,101,1.879,111,3.052,229,0.009,230,0.01,231,0.009,241,0.44,1835,5.4,2403,5.956,2932,5.956,2933,6.8,2934,6.8]],["title/miscellaneous/typealiases.html",[2695,2.236,2935,5.021]],["body/miscellaneous/typealiases.html",[6,0.121,7,2.203,8,0.065,14,0.185,15,0.131,16,0.41,17,0.012,18,1.007,23,2.294,29,2.547,48,1.173,92,2.642,99,2.718,100,1.886,115,2.642,132,2.114,145,2.642,146,2.114,147,2.114,148,2.114,149,2.744,150,2.114,151,2.114,152,2.114,153,2.854,154,0.535,155,1.169,156,1.957,193,2.854,199,2.854,200,2.854,202,1.369,204,2.642,206,2.744,208,2.547,210,2.854,212,2.854,221,2.642,229,0.006,230,0.008,231,0.006,232,2.646,299,3.474,778,5.292,784,3.247,930,3.789,1345,3.819,1347,3.463,1445,3.514,1523,3.463,1537,5.156,1539,5.156,1540,5.156,1543,5.156,1544,4.675,1545,3.463,1556,5.156,1575,5.156,1650,3.789,1867,2.984,1868,4.028,1870,4.675,1886,5.292,1888,4.885,1941,2.807,1969,3.789,1971,4.315,1972,4.028,1973,3.789,2020,3.197,2232,5.156,2241,5.156,2432,4.675,2466,3.819,2492,5.156,2493,5.156,2494,5.156,2695,2.807,2698,3.463,2701,6.906,2702,3.463,2725,5.837,2734,5.156,2741,5.156,2936,8.545,2937,6.664,2938,7.451,2939,4.36,2940,6.664,2941,5.886,2942,7.135,2943,7.135,2944,5.886,2945,7.135,2946,5.886,2947,7.135,2948,6.664,2949,5.886,2950,4.36,2951,6.664,2952,7.135,2953,6.664,2954,7.135,2955,5.886,2956,4.36,2957,4.36,2958,4.36,2959,4.36]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":679,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["0.11.3",{"_index":2694,"title":{},"body":{"dependencies.html":{}}}],["07/schema",{"_index":2593,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["1",{"_index":101,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"overview.html":{}}}],["1.1.11",{"_index":2689,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":2680,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":2934,"title":{},"body":{"overview.html":{}}}],["2",{"_index":111,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"overview.html":{}}}],["2.0",{"_index":146,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["2.0.0",{"_index":2692,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":832,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["2019",{"_index":2868,"title":{},"body":{"license.html":{}}}],["3",{"_index":117,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["3.0",{"_index":147,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["4",{"_index":110,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["4.0",{"_index":148,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["404",{"_index":1390,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["5",{"_index":134,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["6.6.0",{"_index":2690,"title":{},"body":{"dependencies.html":{}}}],["705b5ad71980",{"_index":98,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["84",{"_index":2933,"title":{},"body":{"overview.html":{}}}],["9a",{"_index":1899,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["_attributes",{"_index":1578,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_call",{"_index":1803,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_changes",{"_index":1579,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_context",{"_index":1156,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["_entity",{"_index":1788,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_functions",{"_index":1155,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["_get(model",{"_index":1691,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_meta",{"_index":1583,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_modelcollectionfactory",{"_index":1673,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_options",{"_index":1736,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataResponse.html":{}}}],["_properties",{"_index":1157,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPropertyMeta.html":{}}}],["_relations",{"_index":1580,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_request(resource",{"_index":1776,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_resetting",{"_index":1584,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_resource",{"_index":1581,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_schema",{"_index":1582,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_set(model",{"_index":1702,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["_subscribe(self",{"_index":1728,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["a.type",{"_index":2521,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["above",{"_index":2900,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":817,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["abstract",{"_index":301,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{}}}],["acc",{"_index":1437,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["acc.every(c",{"_index":2375,"title":{},"body":{"classes/ODataSchema.html":{}}}],["acc.parameters",{"_index":2379,"title":{},"body":{"classes/ODataSchema.html":{}}}],["acc[name",{"_index":2512,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["accept",{"_index":774,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataRequest.html":{}}}],["accept.length",{"_index":2116,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push(`ieee754compatible=${this.api.options.ieee754compatible",{"_index":2115,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push(`odata.metadata=${this.api.options.metadata",{"_index":2112,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accessors",{"_index":691,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["action",{"_index":264,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["action.ts",{"_index":244,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["action.ts:1",{"_index":364,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:12",{"_index":251,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:14",{"_index":255,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:15",{"_index":257,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:16",{"_index":254,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:17",{"_index":253,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:18",{"_index":256,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:22",{"_index":371,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:24",{"_index":375,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:25",{"_index":373,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:26",{"_index":372,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:27",{"_index":374,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:3",{"_index":368,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:31",{"_index":266,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:33",{"_index":269,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:34",{"_index":267,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:35",{"_index":268,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:39",{"_index":424,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:4",{"_index":370,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:41",{"_index":426,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:42",{"_index":431,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:43",{"_index":427,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:44",{"_index":425,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:45",{"_index":428,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:46",{"_index":429,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:47",{"_index":430,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:5",{"_index":366,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:51",{"_index":452,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:53",{"_index":458,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:54",{"_index":454,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:55",{"_index":453,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:56",{"_index":455,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:57",{"_index":456,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:58",{"_index":457,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:6",{"_index":365,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:7",{"_index":367,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:8",{"_index":369,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["actionimport",{"_index":574,"title":{},"body":{"classes/Field.html":{}}}],["actionimports",{"_index":324,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["actions",{"_index":461,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["add",{"_index":1707,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"index.html":{}}}],["add(name",{"_index":1872,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["addbody",{"_index":2708,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addbody(options",{"_index":2732,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additionalitems",{"_index":2565,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["addressinfo",{"_index":2834,"title":{},"body":{"index.html":{}}}],["aggregate",{"_index":2734,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["airport",{"_index":2810,"title":{},"body":{"index.html":{}}}],["airport.get().subscribe(console.log",{"_index":2839,"title":{},"body":{"index.html":{}}}],["airports",{"_index":2801,"title":{},"body":{"index.html":{}}}],["airports.entity(\"cyyz\").get({fetchpolicy",{"_index":2813,"title":{},"body":{"index.html":{}}}],["airports.get().subscribe(console.log",{"_index":2838,"title":{},"body":{"index.html":{}}}],["airports.query.filter().clear",{"_index":2829,"title":{},"body":{"index.html":{}}}],["airports.query.filter().push({location",{"_index":2823,"title":{},"body":{"index.html":{}}}],["airports.tojson",{"_index":2825,"title":{},"body":{"index.html":{}}}],["airportsservice",{"_index":2797,"title":{},"body":{"index.html":{}}}],["airportsservice.entities",{"_index":2802,"title":{},"body":{"index.html":{}}}],["alias",{"_index":202,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["alias(name",{"_index":948,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["aliases",{"_index":1941,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":875,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["along",{"_index":130,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["and/or",{"_index":2892,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2760,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2679,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2681,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":763,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMeta.html":{},"modules/ODataModule.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["angular/compiler",{"_index":2682,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1551,"title":{},"body":{"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":2683,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2684,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2687,"title":{},"body":{"dependencies.html":{}}}],["angularodataentity",{"_index":2772,"title":{},"body":{"index.html":{}}}],["annot",{"_index":684,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["annot.type",{"_index":686,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["annotate(model",{"_index":1632,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["annotation",{"_index":1,"title":{"interfaces/Annotation.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["annotation.ts",{"_index":271,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{}}}],["annotation.ts:1",{"_index":275,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:15",{"_index":288,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:17",{"_index":290,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:18",{"_index":289,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:2",{"_index":276,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:22",{"_index":498,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:24",{"_index":503,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:25",{"_index":508,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:26",{"_index":500,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:27",{"_index":501,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:28",{"_index":499,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:29",{"_index":504,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:30",{"_index":502,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:31",{"_index":505,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:32",{"_index":506,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:33",{"_index":507,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:5",{"_index":292,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:7",{"_index":294,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:9",{"_index":293,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotationconfig",{"_index":200,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataAnnotation.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["annotationlist",{"_index":272,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["annotations",{"_index":44,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["annotations(value",{"_index":62,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["annotationslist",{"_index":462,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["annots",{"_index":1677,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["any)(schema",{"_index":2603,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["any)[f.name",{"_index":2585,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["any)[name",{"_index":1671,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["any[]).map(v",{"_index":2534,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["api",{"_index":84,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCallable.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["api.findparserfortype(that",{"_index":2167,"title":{},"body":{"classes/ODataResource.html":{}}}],["api.findparserfortype(type",{"_index":2185,"title":{},"body":{"classes/ODataResource.html":{}}}],["api.options",{"_index":2188,"title":{},"body":{"classes/ODataResource.html":{}}}],["apiconfig",{"_index":193,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"modules/ODataModule.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["apinameorentitytype",{"_index":1299,"title":{},"body":{"classes/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{}}}],["apioptions",{"_index":161,"title":{"interfaces/ApiOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["apollo",{"_index":94,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["aports",{"_index":2809,"title":{},"body":{"index.html":{}}}],["app",{"_index":2787,"title":{},"body":{"index.html":{}}}],["app.component.css",{"_index":2792,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":2790,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":2793,"title":{},"body":{"index.html":{}}}],["application/json;${accept.join",{"_index":2118,"title":{},"body":{"classes/ODataRequest.html":{}}}],["application_http",{"_index":776,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["application_json",{"_index":765,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataResponse.html":{}}}],["appliesto",{"_index":286,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["appmodule",{"_index":2783,"title":{},"body":{"index.html":{}}}],["arising",{"_index":2927,"title":{},"body":{"license.html":{}}}],["arr",{"_index":2036,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.find(v",{"_index":2039,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.push(obj",{"_index":2041,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["array",{"_index":2020,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(value",{"_index":1098,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["arraybuffer",{"_index":2072,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["asderived(type",{"_index":1817,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["asked",{"_index":113,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["assertarray",{"_index":2021,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assertobject",{"_index":2644,"title":{},"body":{"classes/OptionHandler.html":{}}}],["assertobject(create",{"_index":2034,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assign",{"_index":1327,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/OptionHandler.html":{}}}],["assign(data",{"_index":1769,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["assign(entity",{"_index":1333,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["assign(model",{"_index":1666,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["assign(values",{"_index":2054,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["associated",{"_index":2881,"title":{},"body":{"license.html":{}}}],["at(index",{"_index":2031,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["attach",{"_index":1295,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{},"classes/ODataSingletonService.html":{}}}],["attach(model",{"_index":1589,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["attach(value",{"_index":1301,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["attach>(value",{"_index":1312,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["attach>>(value",{"_index":1366,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["attr",{"_index":668,"title":{},"body":{"classes/Field.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["attr?.nodevalue",{"_index":671,"title":{},"body":{"classes/Field.html":{}}}],["attribute",{"_index":530,"title":{},"body":{"classes/Field.html":{},"classes/ODataModelProperty.html":{},"miscellaneous/enumerations.html":{}}}],["attribute_abstract",{"_index":614,"title":{},"body":{"classes/Field.html":{}}}],["attribute_action",{"_index":611,"title":{},"body":{"classes/Field.html":{}}}],["attribute_alias",{"_index":581,"title":{},"body":{"classes/Field.html":{}}}],["attribute_applies_to",{"_index":619,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_term",{"_index":618,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_type",{"_index":589,"title":{},"body":{"classes/Field.html":{}}}],["attribute_contains_target",{"_index":603,"title":{},"body":{"classes/Field.html":{}}}],["attribute_default_value",{"_index":598,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set",{"_index":612,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set_path",{"_index":605,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_type",{"_index":607,"title":{},"body":{"classes/Field.html":{}}}],["attribute_extends",{"_index":617,"title":{},"body":{"classes/Field.html":{}}}],["attribute_function",{"_index":610,"title":{},"body":{"classes/Field.html":{}}}],["attribute_has_stream",{"_index":602,"title":{},"body":{"classes/Field.html":{}}}],["attribute_include_in_service_document",{"_index":613,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_bound",{"_index":604,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_composable",{"_index":606,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_flags",{"_index":616,"title":{},"body":{"classes/Field.html":{}}}],["attribute_max_length",{"_index":593,"title":{},"body":{"classes/Field.html":{}}}],["attribute_name",{"_index":587,"title":{},"body":{"classes/Field.html":{}}}],["attribute_namespace",{"_index":582,"title":{},"body":{"classes/Field.html":{}}}],["attribute_nullable",{"_index":592,"title":{},"body":{"classes/Field.html":{}}}],["attribute_open_type",{"_index":590,"title":{},"body":{"classes/Field.html":{}}}],["attribute_partner",{"_index":599,"title":{},"body":{"classes/Field.html":{}}}],["attribute_path",{"_index":608,"title":{},"body":{"classes/Field.html":{}}}],["attribute_precision",{"_index":594,"title":{},"body":{"classes/Field.html":{}}}],["attribute_property",{"_index":600,"title":{},"body":{"classes/Field.html":{}}}],["attribute_qualifier",{"_index":584,"title":{},"body":{"classes/Field.html":{}}}],["attribute_referenced_property",{"_index":601,"title":{},"body":{"classes/Field.html":{}}}],["attribute_scale",{"_index":595,"title":{},"body":{"classes/Field.html":{}}}],["attribute_srid",{"_index":597,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target",{"_index":609,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target_namespace",{"_index":585,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term",{"_index":586,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term_namespace",{"_index":583,"title":{},"body":{"classes/Field.html":{}}}],["attribute_type",{"_index":591,"title":{},"body":{"classes/Field.html":{}}}],["attribute_underlying_type",{"_index":615,"title":{},"body":{"classes/Field.html":{}}}],["attribute_unicode",{"_index":596,"title":{},"body":{"classes/Field.html":{}}}],["attribute_uri",{"_index":580,"title":{},"body":{"classes/Field.html":{}}}],["attribute_value",{"_index":588,"title":{},"body":{"classes/Field.html":{}}}],["attribute_version",{"_index":579,"title":{},"body":{"classes/Field.html":{}}}],["attributes",{"_index":578,"title":{},"body":{"classes/Field.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataModelProperty.html":{}}}],["attributes(data",{"_index":1222,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["attributes(model",{"_index":1663,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["attributes(value",{"_index":63,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["attributes.getnameditem('version",{"_index":670,"title":{},"body":{"classes/Field.html":{}}}],["attrs",{"_index":960,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{}}}],["attrs[field.name",{"_index":2624,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["attrs[name",{"_index":1701,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["attrs[prop.field",{"_index":1833,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["authors",{"_index":2919,"title":{},"body":{"license.html":{}}}],["average",{"_index":2706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backend",{"_index":1491,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["backend.setitem(key",{"_index":1492,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["backward",{"_index":1919,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["base",{"_index":217,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["base64",{"_index":2551,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["basemeta",{"_index":1568,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["baseresource",{"_index":1567,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["baseterm",{"_index":284,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["basetype",{"_index":302,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["basic",{"_index":2850,"title":{},"body":{"index.html":{}}}],["batch",{"_index":770,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["batch.request.method",{"_index":897,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["batch_prefix",{"_index":769,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["batchboundary",{"_index":852,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["binary",{"_index":778,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"miscellaneous/typealiases.html":{}}}],["bind",{"_index":1615,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["bind(model",{"_index":1611,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["binding",{"_index":347,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{}}}],["binding.ts",{"_index":415,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:1",{"_index":418,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:3",{"_index":419,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:4",{"_index":420,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["blob",{"_index":2073,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["body",{"_index":834,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/functions.html":{}}}],["bool",{"_index":11,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["boolean",{"_index":16,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["bound",{"_index":223,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["boundary",{"_index":807,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["boundary.split('=')[1",{"_index":810,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["boundary_prefix_suffix",{"_index":764,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["boundarydelimiter",{"_index":809,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"miscellaneous/functions.html":{}}}],["boundarydelimiter.length",{"_index":812,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["boundaryend",{"_index":813,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["break",{"_index":2322,"title":{},"body":{"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{}}}],["browse",{"_index":2931,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2685,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1682,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["buildaggregate",{"_index":2710,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildaggregate(aggregate",{"_index":2733,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildentry",{"_index":978,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["buildentry(payload",{"_index":989,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["builder",{"_index":1887,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["buildexpand",{"_index":2711,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildexpand(expands",{"_index":2735,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter",{"_index":2712,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter(filters",{"_index":2737,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby",{"_index":2713,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby(groupby",{"_index":2740,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby",{"_index":2714,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby(orderby",{"_index":2742,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildquery",{"_index":1885,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["buildquery(options",{"_index":1988,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["buildtransforms",{"_index":2715,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildtransforms(transforms",{"_index":2743,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl",{"_index":2716,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl(path",{"_index":2745,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builtfilters",{"_index":2753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["c",{"_index":1337,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSchema.html":{},"license.html":{}}}],["c.find(predicate",{"_index":2615,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["c.istypeof(self",{"_index":2169,"title":{},"body":{"classes/ODataResource.html":{}}}],["c.istypeof(type",{"_index":2283,"title":{},"body":{"classes/ODataResponse.html":{}}}],["c.istypeof(type)).deserialize(value",{"_index":2530,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["c.istypeof(type)).serialize(value",{"_index":2533,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["c.name",{"_index":2376,"title":{},"body":{"classes/ODataSchema.html":{}}}],["c.parameters",{"_index":2381,"title":{},"body":{"classes/ODataSchema.html":{}}}],["cache",{"_index":99,"title":{"interfaces/Cache.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cache_control",{"_index":2248,"title":{},"body":{"classes/ODataResponse.html":{}}}],["cacheability",{"_index":177,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["cachecacheability",{"_index":153,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["cachecontrol",{"_index":2278,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["cachecontrol.split(\",\").foreach(directive",{"_index":2328,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["cached",{"_index":124,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["california",{"_index":2824,"title":{},"body":{"index.html":{}}}],["call",{"_index":1812,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["callable",{"_index":1103,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{}}}],["callable.configure(settings",{"_index":2401,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callable_binding_parameter",{"_index":1096,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["callableconfig",{"_index":208,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callableconfigs",{"_index":2372,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.filter(c",{"_index":2377,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.map(config",{"_index":2383,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.reduce((acc",{"_index":2374,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callables",{"_index":207,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["callaction",{"_index":1813,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["callfunction",{"_index":1809,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["case",{"_index":844,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/SegmentHandler.html":{}}}],["cast",{"_index":1819,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["catch",{"_index":658,"title":{},"body":{"classes/Field.html":{}}}],["catcherror",{"_index":1362,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["caught",{"_index":196,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["change",{"_index":1737,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["changes",{"_index":1730,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["changes_only",{"_index":1646,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["changeset",{"_index":895,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["changeset_prefix",{"_index":779,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["changesetboundary",{"_index":893,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["changesetendline",{"_index":921,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["changesetid",{"_index":894,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["changesetresponses",{"_index":919,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["channel",{"_index":842,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["charge",{"_index":2876,"title":{},"body":{"license.html":{}}}],["check",{"_index":664,"title":{},"body":{"classes/Field.html":{},"index.html":{}}}],["checking",{"_index":138,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["checks",{"_index":105,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["checkversion(document",{"_index":663,"title":{},"body":{"classes/Field.html":{}}}],["children",{"_index":676,"title":{},"body":{"classes/Field.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["chunk[0].split",{"_index":925,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["chunks",{"_index":912,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["chunks.join(path_separator",{"_index":1907,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["city",{"_index":2818,"title":{},"body":{"index.html":{}}}],["claim",{"_index":2922,"title":{},"body":{"license.html":{}}}],["class",{"_index":239,"title":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["classes",{"_index":241,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"overview.html":{}}}],["clear",{"_index":1947,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["client",{"_index":104,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["clone",{"_index":858,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["close",{"_index":896,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["code",{"_index":830,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["collection",{"_index":39,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["collection(data",{"_index":1686,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["collectionoperator",{"_index":2748,"title":{},"body":{"miscellaneous/functions.html":{}}}],["collections",{"_index":1654,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["complextype",{"_index":553,"title":{},"body":{"classes/Field.html":{}}}],["complextypes",{"_index":463,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["compodoc",{"_index":2857,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":2688,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":2785,"title":{},"body":{"index.html":{}}}],["composable",{"_index":224,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["compose",{"_index":2460,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["computed",{"_index":2519,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["computed?.bool",{"_index":2524,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["conditions",{"_index":2899,"title":{},"body":{"license.html":{}}}],["config",{"_index":694,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"index.html":{}}}],["config.alias",{"_index":2365,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.annotations",{"_index":1265,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["config.base",{"_index":2576,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["config.bound",{"_index":1062,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.callables",{"_index":2373,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.collection",{"_index":2439,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["config.composable",{"_index":1064,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.configure(settings",{"_index":2399,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.containers",{"_index":2386,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.entities",{"_index":2369,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.entitysetpath",{"_index":1060,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.entitysets",{"_index":1262,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["config.entitytype",{"_index":1321,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["config.enums",{"_index":2367,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.etag",{"_index":734,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.fetchpolicy",{"_index":730,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.flags",{"_index":1429,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["config.headers",{"_index":726,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.ieee754compatible",{"_index":722,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.members",{"_index":1416,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["config.metadata",{"_index":718,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.model",{"_index":2437,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["config.name",{"_index":1058,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["config.name).reduce((acc",{"_index":2378,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.namespace",{"_index":2364,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.params",{"_index":724,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.prefer",{"_index":732,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.return",{"_index":1107,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["config.service",{"_index":1323,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["config.stringasenum",{"_index":720,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.version",{"_index":716,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.withcredentials",{"_index":728,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["configs",{"_index":192,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"modules/ODataModule.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["configurable",{"_index":1628,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["configure",{"_index":1036,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["configure(settings",{"_index":1046,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["connection",{"_index":2929,"title":{},"body":{"license.html":{}}}],["console.log(\"airport",{"_index":2815,"title":{},"body":{"index.html":{}}}],["console.log(\"airports",{"_index":2805,"title":{},"body":{"index.html":{}}}],["console.log(\"all",{"_index":2808,"title":{},"body":{"index.html":{}}}],["console.log(\"people",{"_index":2836,"title":{},"body":{"index.html":{}}}],["console.log(json",{"_index":2826,"title":{},"body":{"index.html":{}}}],["console.log(query",{"_index":2828,"title":{},"body":{"index.html":{}}}],["const",{"_index":183,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["constants",{"_index":529,"title":{},"body":{"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["constructor",{"_index":247,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["constructor(action",{"_index":421,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["constructor(annot",{"_index":682,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["constructor(annotationlist",{"_index":273,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["constructor(api",{"_index":853,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{}}}],["constructor(client",{"_index":1297,"title":{},"body":{"classes/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{}}}],["constructor(config",{"_index":692,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["constructor(data",{"_index":1199,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPropertyMeta.html":{}}}],["constructor(init",{"_index":985,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["constructor(name",{"_index":248,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["constructor(namespace",{"_index":378,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlSchema.html":{}}}],["constructor(o",{"_index":2647,"title":{},"body":{"classes/OptionHandler.html":{}}}],["constructor(options",{"_index":1950,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["constructor(path",{"_index":417,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["constructor(private",{"_index":1928,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["constructor(property",{"_index":447,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["constructor(propertyrefs",{"_index":394,"title":{},"body":{"classes/CsdlKey.html":{}}}],["constructor(props",{"_index":1585,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["constructor(protected",{"_index":1311,"title":{},"body":{"classes/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{}}}],["constructor(public",{"_index":277,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["constructor(request",{"_index":742,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["constructor(segment",{"_index":2667,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["constructor(segments",{"_index":1869,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["constructor(target",{"_index":291,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["constructor(term",{"_index":287,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["constructor(termnamespace",{"_index":389,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["constructor(type",{"_index":451,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["constructor(undefined",{"_index":1527,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["constructor(uri",{"_index":442,"title":{},"body":{"classes/CsdlReference.html":{}}}],["constructor(xml",{"_index":621,"title":{},"body":{"classes/Field.html":{}}}],["constructor({name",{"_index":1558,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["container",{"_index":484,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataSchema.html":{}}}],["container.entitysets",{"_index":2392,"title":{},"body":{"classes/ODataSchema.html":{}}}],["container.ts",{"_index":323,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:10",{"_index":336,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:11",{"_index":334,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:12",{"_index":331,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:18",{"_index":1260,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["container.ts:22",{"_index":1258,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["container.ts:5",{"_index":330,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:7",{"_index":335,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:8",{"_index":333,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:9",{"_index":332,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["containers",{"_index":209,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["containstarget",{"_index":399,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["content",{"_index":749,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content.join(newline",{"_index":846,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["content_id",{"_index":777,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["content_transfer_encoding",{"_index":775,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["content_type",{"_index":767,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataResponse.html":{}}}],["contentid",{"_index":920,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["contents",{"_index":2774,"title":{},"body":{"index.html":{}}}],["contenttype",{"_index":913,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataResponse.html":{},"miscellaneous/functions.html":{}}}],["contenttype.indexof(application_json",{"_index":2268,"title":{},"body":{"classes/ODataResponse.html":{}}}],["contenttype.split",{"_index":805,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["contenttype.split(\",\").find(p",{"_index":2270,"title":{},"body":{"classes/ODataResponse.html":{}}}],["contenttype.split(';')[1].trim",{"_index":808,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["contenttypeparts",{"_index":804,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["contenttypeparts.length",{"_index":806,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["context",{"_index":59,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["context(value",{"_index":69,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["contract",{"_index":2925,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2894,"title":{},"body":{"license.html":{}}}],["copts",{"_index":2196,"title":{},"body":{"classes/ODataResource.html":{}}}],["copts.helper.countparam",{"_index":2199,"title":{},"body":{"classes/ODataResource.html":{}}}],["copts.helper.etag(options.attrs",{"_index":2205,"title":{},"body":{"classes/ODataResource.html":{}}}],["copy",{"_index":2879,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2867,"title":{},"body":{"license.html":{}}}],["count",{"_index":1139,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["count(value",{"_index":82,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["count).type('edm.int32",{"_index":1141,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["countdistinct",{"_index":2707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["countparam",{"_index":83,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["countryregion",{"_index":2819,"title":{},"body":{"index.html":{}}}],["covered",{"_index":973,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["create",{"_index":1328,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["create(entity",{"_index":1340,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["createsettings",{"_index":1858,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["createsettings(configs",{"_index":1851,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":2763,"title":{},"body":{"index.html":{}}}],["creation",{"_index":194,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["csdl",{"_index":314,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdl/csdl",{"_index":523,"title":{},"body":{"classes/Field.html":{}}}],["csdlaction",{"_index":240,"title":{"classes/CsdlAction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlactionimport",{"_index":263,"title":{"classes/CsdlActionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlannotable",{"_index":270,"title":{"classes/CsdlAnnotable.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotable:2",{"_index":296,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotation",{"_index":274,"title":{"classes/CsdlAnnotation.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["csdlannotations",{"_index":278,"title":{"classes/CsdlAnnotations.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdlcomplextype",{"_index":297,"title":{"classes/CsdlComplexType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlentitycontainer",{"_index":322,"title":{"classes/CsdlEntityContainer.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlentityset",{"_index":328,"title":{"classes/CsdlEntitySet.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["csdlentitytype",{"_index":317,"title":{"classes/CsdlEntityType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlenummember",{"_index":351,"title":{"classes/CsdlEnumMember.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["csdlenumtype",{"_index":356,"title":{"classes/CsdlEnumType.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunction",{"_index":258,"title":{"classes/CsdlFunction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunctionimport",{"_index":260,"title":{"classes/CsdlFunctionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlinclude",{"_index":376,"title":{"classes/CsdlInclude.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlincludeannotations",{"_index":386,"title":{"classes/CsdlIncludeAnnotations.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlkey",{"_index":318,"title":{"classes/CsdlKey.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationproperty",{"_index":306,"title":{"classes/CsdlNavigationProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationpropertybinding",{"_index":341,"title":{"classes/CsdlNavigationPropertyBinding.html":{}},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlondelete",{"_index":404,"title":{"classes/CsdlOnDelete.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlparameter",{"_index":250,"title":{"classes/CsdlParameter.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlproperty",{"_index":305,"title":{"classes/CsdlProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlpropertyref",{"_index":321,"title":{"classes/CsdlPropertyRef.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlreference",{"_index":382,"title":{"classes/CsdlReference.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlreferentialconstraint",{"_index":403,"title":{"classes/CsdlReferentialConstraint.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlreturntype",{"_index":249,"title":{"classes/CsdlReturnType.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlschema",{"_index":459,"title":{"classes/CsdlSchema.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlsingleton",{"_index":329,"title":{"classes/CsdlSingleton.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlstructuralproperty",{"_index":398,"title":{"classes/CsdlStructuralProperty.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["csdlstructuralproperty:3",{"_index":410,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:4",{"_index":412,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:5",{"_index":411,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuredtype",{"_index":300,"title":{"classes/CsdlStructuredType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["csdlstructuredtype:10",{"_index":308,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:5",{"_index":310,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:6",{"_index":313,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:7",{"_index":311,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:8",{"_index":309,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:9",{"_index":312,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlterm",{"_index":283,"title":{"classes/CsdlTerm.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdltypedefinition",{"_index":470,"title":{"classes/CsdlTypeDefinition.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["ctor",{"_index":1771,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["ctor(this.toentity",{"_index":1773,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["current",{"_index":866,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataModelProperty.html":{}}}],["current.assign(value",{"_index":1672,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["currentmodel",{"_index":1712,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["currentvalue",{"_index":1723,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["custom",{"_index":1975,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["custom.reduce((acc",{"_index":1995,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["customheaders",{"_index":2103,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[accept",{"_index":2117,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[if_match_header",{"_index":2107,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[if_none_match_header",{"_index":2110,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[prefer",{"_index":2126,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customizations",{"_index":2854,"title":{},"body":{"index.html":{}}}],["damages",{"_index":2923,"title":{},"body":{"license.html":{}}}],["data",{"_index":103,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["data(data",{"_index":1170,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["data[key",{"_index":1668,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["dataservices",{"_index":641,"title":{},"body":{"classes/Field.html":{}}}],["date",{"_index":132,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["date.now",{"_index":793,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["dates",{"_index":1889,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["dates.isostringtodate(json.parse(json.stringify(segment.key",{"_index":1915,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["dates.isostringtodate(json.parse(json.stringify(segment.parameters",{"_index":1917,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["dates.isostringtodate(json.parse(json.stringify(this.options",{"_index":2000,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["deal",{"_index":2883,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2930,"title":{},"body":{"license.html":{}}}],["decimal",{"_index":2937,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deep",{"_index":2853,"title":{},"body":{"index.html":{}}}],["def",{"_index":2046,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["default",{"_index":37,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCallable.html":{},"classes/ODataCountResource.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["default_fetch_policy",{"_index":711,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["default_timeout",{"_index":1010,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["default_version",{"_index":712,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponseOptions.html":{}}}],["defaults",{"_index":1764,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["defaults(model",{"_index":1643,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["defaultvalue",{"_index":285,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["defined",{"_index":235,"title":{},"body":{"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["definition",{"_index":483,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["definition.ts",{"_index":509,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:10",{"_index":518,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:11",{"_index":516,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:3",{"_index":511,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:5",{"_index":513,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:6",{"_index":517,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:7",{"_index":512,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:8",{"_index":514,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:9",{"_index":515,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["delete",{"_index":907,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{}}}],["delete'].indexof(this.method",{"_index":2106,"title":{},"body":{"classes/ODataRequest.html":{}}}],["delete(options",{"_index":951,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["deleting",{"_index":2764,"title":{},"body":{"index.html":{}}}],["delivered",{"_index":841,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["deltalink",{"_index":1160,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["deltalink(value",{"_index":81,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["demo",{"_index":2769,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":2678,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":1859,"title":{},"body":{"modules/ODataModule.html":{}}}],["derived",{"_index":1816,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["deserialize",{"_index":185,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["deserialize(type",{"_index":2229,"title":{},"body":{"classes/ODataResponse.html":{}}}],["deserialize(value",{"_index":181,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["destroy",{"_index":1329,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{}}}],["destroy(entity",{"_index":1342,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["destroy(options",{"_index":1795,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["diego",{"_index":2869,"title":{},"body":{"license.html":{}}}],["directive",{"_index":2335,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["directive.startswith(max_age",{"_index":2329,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["directly",{"_index":108,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["distribute",{"_index":2890,"title":{},"body":{"license.html":{}}}],["document",{"_index":624,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.attributes",{"_index":632,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.getelementsbytagname(odatametadata.tag_data_services)[0",{"_index":643,"title":{},"body":{"classes/Field.html":{}}}],["documentation",{"_index":2777,"title":{},"body":{"index.html":{},"license.html":{}}}],["domparser",{"_index":623,"title":{},"body":{"classes/Field.html":{}}}],["down",{"_index":2028,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["duration",{"_index":2938,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dynamic",{"_index":2686,"title":{},"body":{"dependencies.html":{}}}],["e.istypeof(type",{"_index":2394,"title":{},"body":{"classes/ODataSchema.html":{}}}],["e[0]}${value_separator}${e[1",{"_index":2182,"title":{},"body":{"classes/ODataResource.html":{}}}],["editlink",{"_index":1230,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["editlink(value",{"_index":78,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["edm.binary",{"_index":2549,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.binary\"].indexof(this.type",{"_index":2545,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.boolean\"].indexof(this.type",{"_index":2562,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.byte",{"_index":2556,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.date",{"_index":2541,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.datetimeoffset",{"_index":2543,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.decimal",{"_index":2560,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.double\"].indexof(this.type",{"_index":2561,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.guid",{"_index":2544,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.int16",{"_index":2555,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.int32",{"_index":2554,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.int64",{"_index":2553,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.sbyte\"].indexof(this.type",{"_index":2557,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.string",{"_index":2540,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edm.timeofday",{"_index":2542,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["edmx:dataservices",{"_index":538,"title":{},"body":{"classes/Field.html":{}}}],["edmx:edmx",{"_index":536,"title":{},"body":{"classes/Field.html":{}}}],["edmx:include",{"_index":542,"title":{},"body":{"classes/Field.html":{}}}],["edmx:includeannotations",{"_index":544,"title":{},"body":{"classes/Field.html":{}}}],["edmx:reference",{"_index":540,"title":{},"body":{"classes/Field.html":{}}}],["element",{"_index":642,"title":{},"body":{"classes/Field.html":{}}}],["empty",{"_index":1658,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["endline",{"_index":915,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["endpointurl",{"_index":932,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["endregion",{"_index":228,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entities",{"_index":205,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["entities'].indexof(options.responsetype",{"_index":2201,"title":{},"body":{"classes/ODataResource.html":{}}}],["entities(value",{"_index":60,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entity",{"_index":35,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlSchema.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["entity(\"cyyz",{"_index":2811,"title":{},"body":{"index.html":{}}}],["entity(key",{"_index":1304,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["entity(value",{"_index":57,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitycontainer",{"_index":464,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["entitycontainerconfig",{"_index":210,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityContainer.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entitykey",{"_index":23,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entityset",{"_index":32,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCountResource.html":{},"classes/ODataPathSegments.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["entityset(path",{"_index":2406,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["entitysetconfig",{"_index":212,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitySet.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entitysetpath",{"_index":222,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitysets",{"_index":211,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitysetschema",{"_index":1332,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["entitytype",{"_index":226,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntitySet.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntitySet.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitytypes",{"_index":465,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["entries",{"_index":976,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataModelProperty.html":{}}}],["entries.filter",{"_index":1659,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["entries.map(([k",{"_index":1655,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["entries.reduce((acc",{"_index":1661,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["entry",{"_index":1002,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["entry.lastread",{"_index":1023,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["entry.payload",{"_index":1019,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["enum",{"_index":352,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["enumerations",{"_index":2696,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumhelper",{"_index":1424,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enumhelper.toname(this.members",{"_index":1444,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enumhelper.tonames(this.members",{"_index":1439,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enumhelper.tovalue(this.members",{"_index":1438,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enumhelper.tovalues(this.members",{"_index":1434,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enums",{"_index":203,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["enumtype",{"_index":550,"title":{},"body":{"classes/Field.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["enumtypeconfig",{"_index":204,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["enumtypefield",{"_index":47,"title":{"interfaces/EnumTypeField.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["enumtypes",{"_index":466,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["error",{"_index":143,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataModelProperty.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["error(\"batch",{"_index":871,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["error(\"field",{"_index":2570,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["error(\"need",{"_index":1676,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["error(\"no",{"_index":1602,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["error('odata",{"_index":666,"title":{},"body":{"classes/Field.html":{}}}],["error('unable",{"_index":660,"title":{},"body":{"classes/Field.html":{}}}],["error(`can't",{"_index":1594,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["error(`no",{"_index":1927,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["error.status",{"_index":1389,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["errorhandler",{"_index":195,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["errors",{"_index":1758,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["errors.push(`maxlength",{"_index":2527,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["errors.push(`required",{"_index":2525,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["errors[field.name",{"_index":2627,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["errs",{"_index":2625,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["escapeillegalchars",{"_index":2718,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escapeillegalchars(string",{"_index":2746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etag",{"_index":68,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["etag(value",{"_index":67,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["event",{"_index":2918,"title":{},"body":{"license.html":{}}}],["event.previous",{"_index":1734,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["event.value",{"_index":1733,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["eventemitter",{"_index":1550,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["events",{"_index":874,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataRequest.html":{}}}],["examples",{"_index":2770,"title":{},"body":{"index.html":{}}}],["expand",{"_index":1973,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["expandobject",{"_index":2940,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expandoptions",{"_index":2941,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expands",{"_index":2736,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandtype",{"_index":2942,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expired",{"_index":1020,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["express",{"_index":2909,"title":{},"body":{"license.html":{}}}],["extend",{"_index":325,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["extends",{"_index":159,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponse.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["f",{"_index":1432,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.configure(settings",{"_index":2590,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["f.default",{"_index":2618,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["f.deserialize(value[f.name",{"_index":2583,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["f.iscomplextype",{"_index":2619,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["f.key",{"_index":2611,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["f.name",{"_index":1420,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.navigation",{"_index":2594,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["f.nullable).map(f",{"_index":2606,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["f.resolve(attrs",{"_index":2454,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["f.serialize((value",{"_index":2586,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["f.structured().defaults",{"_index":2621,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["f.tojsonschema(expand",{"_index":2600,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["f.value",{"_index":1421,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["f]{12",{"_index":2548,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["f]{12}$/.test(key",{"_index":1903,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["f]{4",{"_index":1902,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["f]{8",{"_index":1901,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["fa",{"_index":1900,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["factory",{"_index":861,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["factory(api",{"_index":862,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["false",{"_index":697,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["features",{"_index":2269,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["features.split(\";\").foreach(o",{"_index":2318,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["fetch",{"_index":96,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["fetch(entity",{"_index":1348,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["fetch(options",{"_index":1134,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataValueResource.html":{}}}],["fetchall",{"_index":2806,"title":{},"body":{"index.html":{}}}],["fetcharraybuffer",{"_index":2630,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["fetcharraybuffer(options",{"_index":2635,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["fetchblob",{"_index":2631,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["fetchblob(options",{"_index":2637,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["fetchorcreate",{"_index":1330,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["fetchorcreate(entity",{"_index":1350,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["fetchpolicy",{"_index":92,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["field",{"_index":42,"title":{"classes/Field.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["field(odatametadata.attribute_alias",{"_index":648,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_namespace",{"_index":647,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_uri",{"_index":636,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_version",{"_index":630,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_action",{"_index":653,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotation",{"_index":640,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotations",{"_index":657,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_complex_type",{"_index":650,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_container",{"_index":654,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_type",{"_index":651,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_enum_type",{"_index":649,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_function",{"_index":652,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include",{"_index":637,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include_annotations",{"_index":639,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_term",{"_index":656,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_type_definition",{"_index":655,"title":{},"body":{"classes/Field.html":{}}}],["field.annotations",{"_index":1427,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.collection",{"_index":1705,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.default",{"_index":2496,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["field.field",{"_index":2503,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["field.iscomplextype",{"_index":1693,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["field.isnavigation",{"_index":1694,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["field.key",{"_index":2499,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["field.maxlength",{"_index":2498,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["field.name",{"_index":1622,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["field.navigation",{"_index":2444,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.nullable",{"_index":2501,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["field.precision",{"_index":2505,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["field.ref",{"_index":2509,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["field.scale",{"_index":2507,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["field.type",{"_index":1720,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.validate(value",{"_index":2626,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["field.value",{"_index":1426,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["field_mapping",{"_index":1607,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["fieldname",{"_index":1674,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["fieldnames",{"_index":674,"title":{},"body":{"classes/Field.html":{}}}],["fields",{"_index":215,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["fields(opts",{"_index":2424,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["fields.filter(f",{"_index":2605,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["fields.reduce((acc",{"_index":2620,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["fieldtype",{"_index":520,"title":{},"body":{"classes/Field.html":{},"classes/ODataModelProperty.html":{},"miscellaneous/enumerations.html":{}}}],["fieldtype.attribute",{"_index":631,"title":{},"body":{"classes/Field.html":{}}}],["fieldtype.tag",{"_index":638,"title":{},"body":{"classes/Field.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["files",{"_index":2882,"title":{},"body":{"license.html":{}}}],["filter",{"_index":1650,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["filter(f",{"_index":2581,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["filter(k",{"_index":2011,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["filter(key",{"_index":1985,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["filter(p",{"_index":1120,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["filter({location",{"_index":2817,"title":{},"body":{"index.html":{}}}],["filters",{"_index":2739,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filtertype",{"_index":2943,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["finally",{"_index":881,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["find",{"_index":1827,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["find(predicate",{"_index":1876,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["findannotation",{"_index":1255,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["findannotation(predicate",{"_index":1257,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["findcallablefortype",{"_index":2337,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findcallablefortype(type",{"_index":2352,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findentitysetfortype",{"_index":2338,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findentitysetfortype(type",{"_index":2354,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findenumtypefortype",{"_index":2339,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findenumtypefortype(type",{"_index":2356,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findfieldbyname",{"_index":1397,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyname(name",{"_index":1405,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyvalue",{"_index":1398,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyvalue(value",{"_index":1407,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findparser",{"_index":2467,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["findparser(predicate",{"_index":2482,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["findparserfortype",{"_index":1076,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["findproperty(predicate",{"_index":1609,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["findstructuredtypefortype",{"_index":2340,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findstructuredtypefortype(type",{"_index":2358,"title":{},"body":{"classes/ODataSchema.html":{}}}],["first",{"_index":100,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["fitness",{"_index":2914,"title":{},"body":{"license.html":{}}}],["flag",{"_index":2523,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["flags",{"_index":213,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["fluent",{"_index":2761,"title":{},"body":{"index.html":{}}}],["following",{"_index":2898,"title":{},"body":{"license.html":{}}}],["foreach(callable",{"_index":2400,"title":{},"body":{"classes/ODataSchema.html":{}}}],["foreach(config",{"_index":2398,"title":{},"body":{"classes/ODataSchema.html":{}}}],["format",{"_index":1974,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["forroot",{"_index":1841,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(...configs",{"_index":1854,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(configs",{"_index":1842,"title":{},"body":{"modules/ODataModule.html":{}}}],["found",{"_index":127,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataPathSegments.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["free",{"_index":2875,"title":{},"body":{"license.html":{}}}],["friends",{"_index":2833,"title":{},"body":{"index.html":{}}}],["fromhttpresponse",{"_index":2223,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromhttpresponse(req",{"_index":2234,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromjson",{"_index":2224,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromjson(req",{"_index":2236,"title":{},"body":{"classes/ODataResponse.html":{}}}],["full",{"_index":151,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["func",{"_index":947,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["func(this",{"_index":880,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["function",{"_index":243,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["function(name",{"_index":1172,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["function(undefined",{"_index":2756,"title":{},"body":{"miscellaneous/functions.html":{}}}],["functionimport",{"_index":572,"title":{},"body":{"classes/Field.html":{}}}],["functionimports",{"_index":326,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["functionname",{"_index":261,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["functions",{"_index":467,"title":{"miscellaneous/functions.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"miscellaneous/functions.html":{}}}],["functions(value",{"_index":70,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["furnished",{"_index":2897,"title":{},"body":{"license.html":{}}}],["generated",{"_index":2843,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2768,"title":{},"body":{"index.html":{}}}],["get'].indexof(this.method",{"_index":2109,"title":{},"body":{"classes/ODataRequest.html":{}}}],["get(key",{"_index":190,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["get(name",{"_index":1878,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["get(options",{"_index":954,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["get(path",{"_index":2045,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["get({withcount",{"_index":2803,"title":{},"body":{"index.html":{}}}],["getapi",{"_index":1054,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["getbinding",{"_index":1820,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["getboundarydelimiter",{"_index":2719,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getboundarydelimiter(contenttype",{"_index":803,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"miscellaneous/functions.html":{}}}],["getboundaryend",{"_index":2721,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getboundaryend(batchboundary",{"_index":916,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["getboundaryend(boundarydelimiter",{"_index":811,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"miscellaneous/functions.html":{}}}],["getcontext",{"_index":1506,"title":{},"body":{"classes/ODataMeta.html":{}}}],["getcount",{"_index":1182,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getdeltalink",{"_index":1186,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["geteditlink",{"_index":1284,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getentitysets",{"_index":2362,"title":{},"body":{"classes/ODataSchema.html":{}}}],["getentitysetschema",{"_index":1358,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["getetag",{"_index":1277,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getfunctions",{"_index":1194,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{}}}],["getheadervalue",{"_index":2722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getheadervalue(header",{"_index":799,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"miscellaneous/functions.html":{}}}],["gethelper",{"_index":709,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["getid",{"_index":1275,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediacontenttype",{"_index":1290,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediaeditlink",{"_index":1288,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediaetag",{"_index":1279,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediareadlink",{"_index":1286,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmetadataetag",{"_index":1281,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getname",{"_index":2663,"title":{},"body":{"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["getnextlink",{"_index":1184,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getobjects(parentelement",{"_index":673,"title":{},"body":{"classes/Field.html":{}}}],["getodv",{"_index":1504,"title":{},"body":{"classes/ODataMeta.html":{}}}],["getoptions",{"_index":2244,"title":{},"body":{"classes/ODataResponse.html":{}}}],["getpathwithparams",{"_index":2076,"title":{},"body":{"classes/ODataRequest.html":{}}}],["getproperties",{"_index":1508,"title":{},"body":{"classes/ODataMeta.html":{}}}],["getreadlink",{"_index":1180,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{}}}],["getresponse",{"_index":979,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["getresponse(req",{"_index":993,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["getsegment",{"_index":1136,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["getsingletonschema",{"_index":2416,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["getskip",{"_index":1190,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getskiptoken",{"_index":1192,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getstringcollectionclause",{"_index":2723,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getstringcollectionclause(lambdaparameter",{"_index":2747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getstructuredtypeschema",{"_index":1307,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["getting",{"_index":2758,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettop",{"_index":1188,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["gettype",{"_index":1178,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["geturl",{"_index":2078,"title":{},"body":{"classes/ODataRequest.html":{}}}],["geturlwithparams",{"_index":2080,"title":{},"body":{"classes/ODataRequest.html":{}}}],["glast",{"_index":790,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["granted",{"_index":2874,"title":{},"body":{"license.html":{}}}],["groupby",{"_index":2741,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guid",{"_index":1886,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["guid(key",{"_index":1904,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["haaster",{"_index":2871,"title":{},"body":{"license.html":{}}}],["handler",{"_index":2002,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["handlerequest",{"_index":980,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handlerequest(req",{"_index":995,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handleresponse",{"_index":931,"title":{},"body":{"classes/ODataBatchResource.html":{}}}],["handleresponse(response",{"_index":911,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["handlevalue",{"_index":2724,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handlevalue(value",{"_index":2751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["has(name",{"_index":1955,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["has(path",{"_index":2052,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["hashmap",{"_index":2033,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["haskey",{"_index":1935,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["hasparameters",{"_index":1939,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["hasstream",{"_index":319,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["header",{"_index":2084,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"miscellaneous/functions.html":{}}}],["header.split(';')[0].trim",{"_index":801,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["headers",{"_index":89,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["headers.getall(key",{"_index":827,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["headers.keys().map(key",{"_index":826,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["helper",{"_index":160,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["helpers",{"_index":714,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["helpers/odata",{"_index":2316,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["here",{"_index":2859,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":2873,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2920,"title":{},"body":{"license.html":{}}}],["htmlcollection",{"_index":677,"title":{},"body":{"classes/Field.html":{}}}],["http",{"_index":715,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["http.mergehttpheaders((options",{"_index":882,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["http.mergehttpheaders(this.api.options.headers",{"_index":2127,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http.mergehttpparams(params",{"_index":2198,"title":{},"body":{"classes/ODataResource.html":{}}}],["http.mergehttpparams(this.api.options.params",{"_index":2129,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http11",{"_index":766,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["http://docs.oasis",{"_index":164,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["http://json",{"_index":2591,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["httpclientmodule",{"_index":1845,"title":{},"body":{"modules/ODataModule.html":{}}}],["httpentitiesoptions",{"_index":2944,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["httpentityoptions",{"_index":1543,"title":{},"body":{"classes/ODataModelProperty.html":{},"miscellaneous/typealiases.html":{}}}],["httperrorresponse",{"_index":761,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataEntitySetService.html":{}}}],["httpheaders",{"_index":760,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["httpheaders(json.headers",{"_index":2256,"title":{},"body":{"classes/ODataResponse.html":{}}}],["httpoptions",{"_index":784,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"miscellaneous/typealiases.html":{}}}],["httpparams",{"_index":2068,"title":{},"body":{"classes/ODataRequest.html":{}}}],["httppropertyoptions",{"_index":2946,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["httpresponse",{"_index":762,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataResponse.html":{}}}],["https://diegomvh.github.io/angular",{"_index":2860,"title":{},"body":{"index.html":{}}}],["https://github.com/adamhalasz/uniqid",{"_index":788,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["https://github.com/diegomvh/angular",{"_index":2863,"title":{},"body":{"index.html":{}}}],["https://json",{"_index":2538,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["https://medium.com/@galen.corey/understanding",{"_index":95,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["https://services.odata.org/v4/(s(4m0tuxtnhcfctl4gzem3gr10))/trippinservicerw",{"_index":2782,"title":{},"body":{"index.html":{}}}],["id",{"_index":65,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["id(value",{"_index":64,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ieee754",{"_index":2113,"title":{},"body":{"classes/ODataRequest.html":{}}}],["ieee754compatible",{"_index":91,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["if_match_header",{"_index":2082,"title":{},"body":{"classes/ODataRequest.html":{}}}],["if_none_match_header",{"_index":2083,"title":{},"body":{"classes/ODataRequest.html":{}}}],["ifmatch",{"_index":171,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ifnonematch",{"_index":696,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["ifnonematch?:boolean",{"_index":172,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["implements",{"_index":690,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["implied",{"_index":2910,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["imports",{"_index":1853,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["include_etag",{"_index":2428,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["include_navigation",{"_index":1617,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataStructuredType.html":{}}}],["include_parents",{"_index":1618,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataStructuredType.html":{}}}],["includeannotations",{"_index":385,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["included",{"_index":2903,"title":{},"body":{"license.html":{}}}],["includeinservicedocument",{"_index":262,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["includes",{"_index":384,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["including",{"_index":2885,"title":{},"body":{"license.html":{}}}],["incorporates",{"_index":2849,"title":{},"body":{"index.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["inherited",{"_index":295,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{}}}],["init",{"_index":987,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.api",{"_index":2088,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.body",{"_index":2089,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.etag",{"_index":2104,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.fetchpolicy",{"_index":2098,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.headers",{"_index":2128,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.method",{"_index":2086,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.name",{"_index":1486,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["init.observe",{"_index":2095,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.params",{"_index":2130,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.reportprogress",{"_index":2091,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.resource",{"_index":2087,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.resource.pathandparams",{"_index":2102,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.responsetype",{"_index":2093,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.storage",{"_index":1487,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["init.withcredentials",{"_index":2096,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init?.timeout",{"_index":1013,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["inject",{"_index":2784,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":2402,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"injectables/ODataServiceFactory.html":{}}}],["injectables",{"_index":2403,"title":{},"body":{"injectables/ODataServiceFactory.html":{},"overview.html":{}}}],["inmutable",{"_index":2816,"title":{},"body":{"index.html":{}}}],["install",{"_index":2778,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2775,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":825,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["instead",{"_index":1708,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["int",{"_index":12,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["integer",{"_index":2559,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"overview.html":{}}}],["invalid",{"_index":1739,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["isbound",{"_index":245,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["iscacheable",{"_index":981,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["iscacheable(req",{"_index":997,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["iscomplextype",{"_index":2468,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["iscomposable",{"_index":259,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["isedmtype",{"_index":2568,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["isenumtype",{"_index":2567,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["isexpired",{"_index":982,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isexpired(entry",{"_index":999,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isflags",{"_index":358,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["isnamespaceof",{"_index":2341,"title":{},"body":{"classes/ODataSchema.html":{}}}],["isnamespaceof(type",{"_index":2360,"title":{},"body":{"classes/ODataSchema.html":{}}}],["isnavigation",{"_index":2566,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["isstructuredtype",{"_index":2571,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["issubtypeof",{"_index":933,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["issubtypeof(other",{"_index":956,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["istypeof",{"_index":1037,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["istypeof(type",{"_index":1049,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["item",{"_index":1994,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["items",{"_index":2564,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["join",{"_index":828,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["join(param_separator",{"_index":2183,"title":{},"body":{"classes/ODataResource.html":{}}}],["json",{"_index":1445,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["json.body",{"_index":2255,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.key",{"_index":1914,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.parameters",{"_index":1916,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.status",{"_index":2257,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.statustext",{"_index":2258,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.stringify(array.from(responses.entries",{"_index":1493,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["json.type",{"_index":1913,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.url",{"_index":2259,"title":{},"body":{"classes/ODataResponse.html":{}}}],["jsonschemacustom",{"_index":2493,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpand",{"_index":2494,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaoptions",{"_index":2432,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaselect",{"_index":2492,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["k",{"_index":1652,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["k.trim",{"_index":2320,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["keep",{"_index":1948,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["keep(...names",{"_index":2009,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["keep(names",{"_index":1957,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["key",{"_index":33,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["key(model",{"_index":1639,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["key(value",{"_index":1933,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["key)?.field",{"_index":1662,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["key)?.name",{"_index":1669,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["keyof",{"_index":26,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["keys",{"_index":2469,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["key}=${value",{"_index":1999,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["kind",{"_index":2908,"title":{},"body":{"license.html":{}}}],["lambdaparameter",{"_index":2750,"title":{},"body":{"miscellaneous/functions.html":{}}}],["last",{"_index":794,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["lastread",{"_index":991,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["liability",{"_index":2924,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2921,"title":{},"body":{"license.html":{}}}],["library",{"_index":2771,"title":{},"body":{"index.html":{}}}],["license",{"_index":2865,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":2886,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2911,"title":{},"body":{"license.html":{}}}],["lines",{"_index":917,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["literal",{"_index":232,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/typealiases.html":{}}}],["m",{"_index":1302,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["magic",{"_index":1688,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["mainly",{"_index":2848,"title":{},"body":{"index.html":{}}}],["make",{"_index":114,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["makes",{"_index":136,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["map",{"_index":753,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResource.html":{}}}],["map(([key",{"_index":1998,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["map(([name",{"_index":1110,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["map((resp",{"_index":890,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["map(annot",{"_index":1266,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["map(config",{"_index":1263,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{}}}],["map(container",{"_index":2387,"title":{},"body":{"classes/ODataSchema.html":{}}}],["map(e",{"_index":2181,"title":{},"body":{"classes/ODataResource.html":{}}}],["map(f",{"_index":2599,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["map(name",{"_index":2261,"title":{},"body":{"classes/ODataResponse.html":{}}}],["map(pathsegmentsbuilder",{"_index":1906,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["map>(json.parse(storage.getitem(name",{"_index":1489,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["mapfields",{"_index":1399,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapfields(mapper",{"_index":1410,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapper",{"_index":1412,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["match",{"_index":1246,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match(/[&?]{1}\\$skip=(\\d",{"_index":1250,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match(/[&?]{1}\\$skiptoken=([\\d\\w\\s",{"_index":1251,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match(/[&?]{1}\\$top=(\\d",{"_index":1248,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match[1",{"_index":1252,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["matching",{"_index":230,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["max",{"_index":2705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["max_age",{"_index":2249,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["maxage",{"_index":178,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["maxlength",{"_index":38,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["maxpagesize",{"_index":174,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediacontenttype",{"_index":1236,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediacontenttype(value",{"_index":80,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediaeditlink",{"_index":1234,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediaeditlink(value",{"_index":79,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediaetag",{"_index":1225,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediaetag(value",{"_index":72,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediareadlink",{"_index":1232,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediareadlink(value",{"_index":77,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["member",{"_index":216,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["members",{"_index":214,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["merchantability",{"_index":2913,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2371,"title":{},"body":{"classes/ODataSchema.html":{},"license.html":{}}}],["meta",{"_index":1382,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResponse.html":{},"index.html":{}}}],["meta(meta",{"_index":1753,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["meta(model",{"_index":1636,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["meta.annotations",{"_index":1384,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["meta.data(payload",{"_index":2290,"title":{},"body":{"classes/ODataResponse.html":{}}}],["meta.options",{"_index":1565,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["meta.type",{"_index":1633,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["metadata",{"_index":87,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["metadataetag",{"_index":1227,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["metadataetag(value",{"_index":73,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["metadataurl",{"_index":31,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["metafactory",{"_index":1524,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["metafactory(meta",{"_index":1532,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["method",{"_index":884,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["methods",{"_index":233,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["min",{"_index":2704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":150,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":2695,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mismatch",{"_index":1451,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["missing",{"_index":112,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mit",{"_index":2866,"title":{},"body":{"license.html":{}}}],["model",{"_index":219,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataModelProperty.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["model(data",{"_index":1687,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["model.change$.emit",{"_index":1721,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["model.key",{"_index":1703,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["model.resource(property.resourcefactory(resource",{"_index":1603,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["modelcollectionfactory",{"_index":1525,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["modelcollectionfactory(undefined",{"_index":1534,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["modelproperty",{"_index":1556,"title":{},"body":{"classes/ODataModelProperty.html":{},"miscellaneous/typealiases.html":{}}}],["models",{"_index":1365,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{},"classes/ODataSingletonService.html":{}}}],["models/collection",{"_index":1361,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["models/model",{"_index":1310,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["modify",{"_index":2888,"title":{},"body":{"license.html":{}}}],["module",{"_index":1835,"title":{"modules/ODataModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":1837,"title":{"modules.html":{}},"body":{"modules/ODataModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":1844,"title":{},"body":{"modules/ODataModule.html":{}}}],["multipart_mixed",{"_index":772,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["multipart_mixed_boundary",{"_index":771,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["multipart_mixed_boundary}${changesetboundary",{"_index":901,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["mutable",{"_index":2822,"title":{},"body":{"index.html":{}}}],["n",{"_index":787,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["name",{"_index":58,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["namednodemap",{"_index":665,"title":{},"body":{"classes/Field.html":{}}}],["names",{"_index":1112,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["names.foreach(name",{"_index":2007,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["names.indexof(k",{"_index":2012,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["names.indexof(type",{"_index":1115,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["names.join",{"_index":1443,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["names.map(name",{"_index":1441,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["names.push(`${this.alias}.${this.name",{"_index":1114,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["names.push(`${this.schema.alias}.${this.name",{"_index":1324,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["namespace",{"_index":201,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["nav",{"_index":1821,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["nav.fetchcollection(options",{"_index":1824,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["nav.fetchmodel(options",{"_index":1823,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["navigation",{"_index":41,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataModelProperty.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["navigationproperties",{"_index":303,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["navigationproperty",{"_index":560,"title":{},"body":{"classes/Field.html":{},"classes/ODataCountResource.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["navigationpropertybinding",{"_index":340,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["navigationpropertybindings",{"_index":486,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["needs",{"_index":2461,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["nestedexpandoptions",{"_index":2948,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["network",{"_index":115,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["never",{"_index":1541,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["new",{"_index":133,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["new(...params",{"_index":220,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitySet.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["newentity",{"_index":1381,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["newline",{"_index":768,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["newline_regexp",{"_index":780,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["newmodel",{"_index":1696,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["newmodel.meta(meta",{"_index":1718,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["newmodel.resource()?.type",{"_index":1719,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["newmodel.resource(resource",{"_index":1717,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["newmodel?.key",{"_index":1709,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["nextlink",{"_index":1159,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["nextlink(value",{"_index":75,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ngmodule",{"_index":1846,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["none",{"_index":152,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataModelProperty.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["none_parser",{"_index":184,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["noninfringement",{"_index":2917,"title":{},"body":{"license.html":{}}}],["note",{"_index":93,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["notice",{"_index":2901,"title":{},"body":{"license.html":{}}}],["now",{"_index":791,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"miscellaneous/functions.html":{}}}],["now().tostring(36",{"_index":798,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["npm",{"_index":2779,"title":{},"body":{"index.html":{}}}],["null",{"_index":669,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/StoragePayload.html":{}}}],["nullable",{"_index":40,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["number(directive.split(\"=\")[1",{"_index":2330,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["number(match[1",{"_index":1249,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["number(statusparts[1",{"_index":927,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["number.isnan(maxage",{"_index":2331,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["o",{"_index":2014,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["o.split",{"_index":2319,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["obj",{"_index":2038,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object",{"_index":1166,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["object.assign",{"_index":1117,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{}}}],["object.assign(acc",{"_index":1123,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["object.assign(acc.parameters",{"_index":2380,"title":{},"body":{"classes/ODataSchema.html":{}}}],["object.assign(entity",{"_index":1383,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["object.assign(options",{"_index":2218,"title":{},"body":{"classes/ODataResource.html":{}}}],["object.assign(params",{"_index":1996,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{}}}],["object.assign(this",{"_index":687,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["object.assign(this.etag",{"_index":733,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["object.assign({etag",{"_index":1379,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["object.assign({field",{"_index":2531,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["object.assign({options",{"_index":1078,"title":{},"body":{"classes/ODataCallable.html":{}}}],["object.assign({responsetype",{"_index":1151,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["object.defineproperty(model",{"_index":1626,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["object.entries",{"_index":1647,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["object.entries(config.fields",{"_index":1431,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["object.entries(config.parameters",{"_index":1109,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["object.entries(params",{"_index":2180,"title":{},"body":{"classes/ODataResource.html":{}}}],["object.entries(this._relations",{"_index":1649,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["object.entries(this.params",{"_index":1997,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(this.options",{"_index":2010,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(value",{"_index":2448,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["object.values(key",{"_index":2455,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["object.values(this._relations",{"_index":1600,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["objects",{"_index":675,"title":{},"body":{"classes/Field.html":{},"classes/ODataModelProperty.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.get(obj",{"_index":2048,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.has(obj",{"_index":2053,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.merge(obj",{"_index":2055,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.merge(this.defaults",{"_index":1745,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["objects.set(obj",{"_index":2044,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.unset(obj",{"_index":2050,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["obs",{"_index":1777,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["obs$).pipe(tap",{"_index":1800,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["obs$.pipe",{"_index":1779,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["observable",{"_index":20,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["observe",{"_index":876,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["obtaining",{"_index":2878,"title":{},"body":{"license.html":{}}}],["odata",{"_index":1373,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResponseOptions.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["odata.etag(entity",{"_index":1375,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["odata.metadata",{"_index":2321,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata.streaming",{"_index":2323,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/docs",{"_index":2861,"title":{},"body":{"index.html":{}}}],["odata/src/lib/cache/cache.ts",{"_index":975,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["odata/src/lib/cache/cache.ts:14",{"_index":988,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:15",{"_index":986,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:20",{"_index":994,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:21",{"_index":1005,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:23",{"_index":990,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:31",{"_index":1003,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:41",{"_index":992,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:46",{"_index":1006,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:55",{"_index":1001,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:59",{"_index":998,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:63",{"_index":996,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/memory.ts",{"_index":1460,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:12",{"_index":1464,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:3",{"_index":1461,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:8",{"_index":1465,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/storage.ts",{"_index":1480,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odata/src/lib/cache/storage.ts:12",{"_index":1481,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:23",{"_index":1483,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:27",{"_index":1482,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/client.ts",{"_index":2731,"title":{},"body":{"miscellaneous/functions.html":{}}}],["odata/src/lib/models/collection.ts",{"_index":2958,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/models/model.ts",{"_index":1523,"title":{},"body":{"classes/ODataModelProperty.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/models/model.ts:35",{"_index":1530,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odata/src/lib/models/model.ts:36",{"_index":1529,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odata/src/lib/models/model.ts:37",{"_index":1528,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odata/src/lib/models/model.ts:42",{"_index":1538,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odata/src/lib/models/model.ts:51",{"_index":1533,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odata/src/lib/models/model.ts:59",{"_index":1535,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odata/src/lib/module.ts",{"_index":1838,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["odata/src/lib/module.ts:19",{"_index":1843,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata/src/lib/options.ts",{"_index":689,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:10",{"_index":699,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:11",{"_index":705,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:13",{"_index":703,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:14",{"_index":700,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:15",{"_index":708,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:16",{"_index":698,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:20",{"_index":704,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:23",{"_index":693,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:38",{"_index":710,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:6",{"_index":707,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:7",{"_index":702,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:8",{"_index":706,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:9",{"_index":701,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/parsers/callable.ts",{"_index":1081,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:18",{"_index":1866,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:24",{"_index":1865,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:30",{"_index":1084,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:31",{"_index":1085,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:32",{"_index":1083,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:33",{"_index":1088,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:34",{"_index":1087,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:35",{"_index":1082,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:45",{"_index":1093,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:5",{"_index":1862,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:53",{"_index":1091,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:58",{"_index":1095,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:6",{"_index":1864,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:65",{"_index":1090,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:7",{"_index":1863,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:71",{"_index":1089,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:8",{"_index":1861,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:9",{"_index":1860,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/edm.ts",{"_index":2956,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/parsers/enum",{"_index":1423,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["odata/src/lib/parsers/structured",{"_index":2466,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/builder.ts",{"_index":2702,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/path",{"_index":1867,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/query",{"_index":1945,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/request.ts",{"_index":2057,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:10",{"_index":2063,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:11",{"_index":2067,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:12",{"_index":2071,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:13",{"_index":2075,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:14",{"_index":2074,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:15",{"_index":2064,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:16",{"_index":2065,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:17",{"_index":2069,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:18",{"_index":2070,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:19",{"_index":2061,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:8",{"_index":2066,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:84",{"_index":2077,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:9",{"_index":2062,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:92",{"_index":2079,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:96",{"_index":2081,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/resource.ts",{"_index":2135,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:103",{"_index":2151,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:110",{"_index":2139,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:115",{"_index":2149,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:176",{"_index":2143,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:184",{"_index":2147,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:191",{"_index":2148,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:199",{"_index":2145,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:207",{"_index":2141,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:25",{"_index":2137,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:26",{"_index":2138,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:27",{"_index":2136,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:42",{"_index":2153,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:49",{"_index":2154,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:53",{"_index":2144,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:64",{"_index":2146,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:75",{"_index":2142,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:79",{"_index":2152,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:87",{"_index":2140,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:89",{"_index":2150,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/responses/csdl/csdl",{"_index":242,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["odata/src/lib/resources/responses/meta.ts",{"_index":1153,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:102",{"_index":1285,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:106",{"_index":1287,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:11",{"_index":1496,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:110",{"_index":1289,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:114",{"_index":1291,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:118",{"_index":1269,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:119",{"_index":1292,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:126",{"_index":1273,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:132",{"_index":1169,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:136",{"_index":1171,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:139",{"_index":1179,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:143",{"_index":1181,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:147",{"_index":1183,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:151",{"_index":1185,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:155",{"_index":1187,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:159",{"_index":1189,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:164",{"_index":1191,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:169",{"_index":1193,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:174",{"_index":1163,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:175",{"_index":1195,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:181",{"_index":1173,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:26",{"_index":1497,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:27",{"_index":1507,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:34",{"_index":1498,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:35",{"_index":1509,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:42",{"_index":1503,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:47",{"_index":1501,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:48",{"_index":1502,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:52",{"_index":1942,"title":{},"body":{"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:56",{"_index":1943,"title":{},"body":{"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:60",{"_index":1944,"title":{},"body":{"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:66",{"_index":1271,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:7",{"_index":1499,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:70",{"_index":1272,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:74",{"_index":1270,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:78",{"_index":1274,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:8",{"_index":1500,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:82",{"_index":1276,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:86",{"_index":1278,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:9",{"_index":1505,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:90",{"_index":1280,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:94",{"_index":1282,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:98",{"_index":1283,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/metadata.ts",{"_index":519,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:20",{"_index":521,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:21",{"_index":522,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/options.ts",{"_index":2295,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:10",{"_index":2304,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:11",{"_index":2301,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:13",{"_index":2300,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:14",{"_index":2299,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:23",{"_index":2313,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:27",{"_index":2306,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:31",{"_index":2310,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:48",{"_index":2312,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:54",{"_index":2308,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:6",{"_index":2305,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:7",{"_index":2303,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:9",{"_index":2302,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/response.ts",{"_index":2222,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:103",{"_index":2230,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:112",{"_index":2233,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:122",{"_index":2231,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:132",{"_index":2240,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:14",{"_index":2228,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:142",{"_index":2243,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:15",{"_index":2225,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:31",{"_index":2235,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:43",{"_index":2237,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:61",{"_index":2242,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:73",{"_index":2227,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:74",{"_index":2245,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:95",{"_index":2239,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/types.ts",{"_index":2959,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/types/batch.ts",{"_index":737,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"miscellaneous/functions.html":{}}}],["odata/src/lib/resources/types/batch.ts:136",{"_index":748,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:149",{"_index":937,"title":{},"body":{"classes/ODataBatchResource.html":{}}}],["odata/src/lib/resources/types/batch.ts:150",{"_index":936,"title":{},"body":{"classes/ODataBatchResource.html":{}}}],["odata/src/lib/resources/types/batch.ts:158",{"_index":943,"title":{},"body":{"classes/ODataBatchResource.html":{}}}],["odata/src/lib/resources/types/batch.ts:164",{"_index":944,"title":{},"body":{"classes/ODataBatchResource.html":{}}}],["odata/src/lib/resources/types/batch.ts:171",{"_index":946,"title":{},"body":{"classes/ODataBatchResource.html":{}}}],["odata/src/lib/resources/types/batch.ts:212",{"_index":942,"title":{},"body":{"classes/ODataBatchResource.html":{}}}],["odata/src/lib/resources/types/batch.ts:266",{"_index":945,"title":{},"body":{"classes/ODataBatchResource.html":{}}}],["odata/src/lib/resources/types/batch.ts:50",{"_index":744,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:51",{"_index":745,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:56",{"_index":752,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:74",{"_index":751,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/count.ts",{"_index":1130,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:12",{"_index":1133,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:18",{"_index":1137,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:30",{"_index":1132,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:36",{"_index":1135,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts",{"_index":1511,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:11",{"_index":1512,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:16",{"_index":1513,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:21",{"_index":1514,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:29",{"_index":1515,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/options.ts",{"_index":2957,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/types/value.ts",{"_index":2629,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:12",{"_index":2633,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:20",{"_index":2632,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:26",{"_index":2634,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:32",{"_index":2636,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:38",{"_index":2638,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/schema/annotation.ts",{"_index":681,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/annotation.ts:4",{"_index":683,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/callable.ts",{"_index":1035,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:10",{"_index":1041,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:11",{"_index":1039,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:22",{"_index":1051,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:32",{"_index":1053,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:35",{"_index":1050,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:38",{"_index":1055,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:42",{"_index":1047,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:6",{"_index":1045,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:7",{"_index":1043,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:8",{"_index":1042,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:9",{"_index":1040,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/entity",{"_index":1254,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{}}}],["odata/src/lib/schema/enum",{"_index":1396,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["odata/src/lib/schema/schema.ts",{"_index":2336,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:11",{"_index":2344,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:12",{"_index":2349,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:13",{"_index":2343,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:14",{"_index":2348,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:15",{"_index":2347,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:16",{"_index":2345,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:17",{"_index":2346,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:18",{"_index":2342,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:43",{"_index":2361,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:47",{"_index":2363,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:53",{"_index":2351,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:58",{"_index":2357,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:62",{"_index":2359,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:66",{"_index":2353,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:70",{"_index":2355,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:75",{"_index":2350,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/structured",{"_index":2420,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["odata/src/lib/services/entity",{"_index":1326,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["odata/src/lib/services/entity.ts",{"_index":1294,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:10",{"_index":1303,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:13",{"_index":1306,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:18",{"_index":1308,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:6",{"_index":1300,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:9",{"_index":1305,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/factory.ts",{"_index":2404,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:10",{"_index":2407,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:15",{"_index":2409,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:7",{"_index":2405,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/singleton.ts",{"_index":2412,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:11",{"_index":2414,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:15",{"_index":2417,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:6",{"_index":2415,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/types.ts",{"_index":7,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/types.ts:153",{"_index":2665,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:154",{"_index":2666,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:163",{"_index":238,"title":{},"body":{"interfaces/Cache.html":{}}}],["odata/src/lib/types.ts:164",{"_index":236,"title":{},"body":{"interfaces/Cache.html":{}}}],["odata/wiki",{"_index":2864,"title":{},"body":{"index.html":{}}}],["odata_annotation_prefix",{"_index":50,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_configurations",{"_index":1849,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata_context",{"_index":55,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_count",{"_index":53,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_etag",{"_index":54,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["odata_function_prefix",{"_index":51,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_id",{"_index":52,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_media_etag",{"_index":56,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_version",{"_index":773,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["odata_version_headers",{"_index":2247,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata_version_headers.indexof(k",{"_index":2274,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataactionresource",{"_index":1546,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odataannotation",{"_index":680,"title":{"classes/ODataAnnotation.html":{}},"body":{"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odataannotation(annot",{"_index":1267,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odataapi",{"_index":781,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{}}}],["odataapioptions",{"_index":688,"title":{"classes/ODataApiOptions.html":{}},"body":{"classes/ODataApiOptions.html":{}}}],["odatabatchrequest",{"_index":736,"title":{"classes/ODataBatchRequest.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["odatabatchrequest(req",{"_index":878,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["odatabatchresource",{"_index":849,"title":{"classes/ODataBatchResource.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["odatabatchresource(api",{"_index":864,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["odatabatchresource(this.api",{"_index":859,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["odatacache",{"_index":974,"title":{"classes/ODataCache.html":{}},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatacache:14",{"_index":1463,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:15",{"_index":1462,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:20",{"_index":1468,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:21",{"_index":1473,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:23",{"_index":1466,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:31",{"_index":1472,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:41",{"_index":1467,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:46",{"_index":1474,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:55",{"_index":1471,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:59",{"_index":1470,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:63",{"_index":1469,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacacheentry",{"_index":1000,"title":{"interfaces/ODataCacheEntry.html":{}},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatacallable",{"_index":1034,"title":{"classes/ODataCallable.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataSchema.html":{}}}],["odatacallable(config",{"_index":2384,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatacallableparser",{"_index":1044,"title":{"classes/ODataCallableParser.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odatacallableparser(config",{"_index":1066,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odataclient",{"_index":1298,"title":{},"body":{"classes/ODataEntityService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odatacollection",{"_index":1360,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{}}}],["odatacollection(data",{"_index":1689,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odatacollectionresource",{"_index":2949,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odatacontext",{"_index":29,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odatacountresource",{"_index":1129,"title":{"classes/ODataCountResource.html":{}},"body":{"classes/ODataCountResource.html":{}}}],["odatacountresource(api",{"_index":1144,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odatacountresource(this.api",{"_index":1148,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odataentities",{"_index":2232,"title":{},"body":{"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odataentitiesmeta",{"_index":1152,"title":{"classes/ODataEntitiesMeta.html":{}},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponse.html":{}}}],["odataentitiesmeta(annots",{"_index":1679,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odataentitiesmeta(meta.property(this.parser.name",{"_index":1564,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odataentitiesmeta(payload",{"_index":2293,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataentitiesmeta(this.annotations",{"_index":1241,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odataentity",{"_index":1544,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odataentitycontainer",{"_index":1253,"title":{"classes/ODataEntityContainer.html":{}},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{}}}],["odataentitycontainer(container",{"_index":2388,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odataentitymeta",{"_index":1219,"title":{"classes/ODataEntityMeta.html":{}},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponse.html":{}}}],["odataentitymeta(annots",{"_index":1681,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odataentitymeta(meta.property(this.parser.name",{"_index":1566,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odataentitymeta(payload",{"_index":2289,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataentitymeta(this.annotations",{"_index":1220,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odataentityresource",{"_index":1347,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{},"miscellaneous/typealiases.html":{}}}],["odataentityservice",{"_index":1293,"title":{"classes/ODataEntityService.html":{}},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odataentityservice:10",{"_index":1356,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odataentityservice:9",{"_index":1357,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odataentityset",{"_index":1256,"title":{"classes/ODataEntitySet.html":{}},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataSchema.html":{}}}],["odataentityset(config",{"_index":1264,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["odataentitysetresource",{"_index":1345,"title":{},"body":{"classes/ODataEntitySetService.html":{},"miscellaneous/typealiases.html":{}}}],["odataentitysetservice",{"_index":1325,"title":{"classes/ODataEntitySetService.html":{}},"body":{"classes/ODataEntitySetService.html":{},"injectables/ODataServiceFactory.html":{}}}],["odataenumtype",{"_index":1395,"title":{"classes/ODataEnumType.html":{}},"body":{"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{}}}],["odataenumtype(config",{"_index":2368,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odataenumtypefieldparser",{"_index":1403,"title":{"classes/ODataEnumTypeFieldParser.html":{}},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["odataenumtypefieldparser(name",{"_index":1433,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["odataenumtypeparser",{"_index":1401,"title":{"classes/ODataEnumTypeParser.html":{}},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odataenumtypeparser(config",{"_index":1417,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["odatafunctionresource",{"_index":1547,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odatahelper",{"_index":713,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponseOptions.html":{}}}],["odatahelper[default_version",{"_index":1198,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatahelper[this.version",{"_index":735,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["odatainmemorycache",{"_index":1459,"title":{"classes/ODataInMemoryCache.html":{}},"body":{"classes/ODataInMemoryCache.html":{}}}],["odatainstoragecache",{"_index":1479,"title":{"classes/ODataInStorageCache.html":{}},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatameta",{"_index":1154,"title":{"classes/ODataMeta.html":{}},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:26",{"_index":1164,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:34",{"_index":1165,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:42",{"_index":1177,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:47",{"_index":1174,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:48",{"_index":1175,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:7",{"_index":1167,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:8",{"_index":1168,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatametadata",{"_index":532,"title":{},"body":{"classes/Field.html":{},"classes/ODataMetadataResource.html":{}}}],["odatametadata(body",{"_index":1521,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadata.tag_reference",{"_index":635,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_schema",{"_index":646,"title":{},"body":{"classes/Field.html":{}}}],["odatametadataresource",{"_index":1510,"title":{"classes/ODataMetadataResource.html":{}},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadataresource(api",{"_index":1518,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadataresource(this.api",{"_index":1516,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadatatype",{"_index":149,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odatamodel",{"_index":1309,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{},"classes/ODataSingletonService.html":{}}}],["odatamodel(data",{"_index":1690,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odatamodelfield",{"_index":1553,"title":{},"body":{"classes/ODataModelProperty.html":{},"miscellaneous/functions.html":{}}}],["odatamodelfield(undefined",{"_index":2757,"title":{},"body":{"miscellaneous/functions.html":{}}}],["odatamodeloptions",{"_index":1577,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odatamodeloptions(this._properties",{"_index":1741,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odatamodelproperty",{"_index":1522,"title":{"classes/ODataModelProperty.html":{}},"body":{"classes/ODataModelProperty.html":{}}}],["odatamodelproperty(prop",{"_index":1588,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odatamodelproperty({name",{"_index":1623,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["odatamodelrelation",{"_index":1575,"title":{},"body":{"classes/ODataModelProperty.html":{},"miscellaneous/typealiases.html":{}}}],["odatamodelresource",{"_index":1537,"title":{},"body":{"classes/ODataModelProperty.html":{},"miscellaneous/typealiases.html":{}}}],["odatamodule",{"_index":1836,"title":{"modules/ODataModule.html":{}},"body":{"modules/ODataModule.html":{},"index.html":{},"modules.html":{}}}],["odatamodule.forroot",{"_index":2781,"title":{},"body":{"index.html":{}}}],["odatamodule.forroot(trippinconfig",{"_index":2846,"title":{},"body":{"index.html":{}}}],["odatanavigationpropertyresource",{"_index":1539,"title":{},"body":{"classes/ODataModelProperty.html":{},"miscellaneous/typealiases.html":{}}}],["odataparameterparser",{"_index":1086,"title":{"classes/ODataParameterParser.html":{}},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odataparameterparser(name",{"_index":1111,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odatapathsegments",{"_index":755,"title":{"classes/ODataPathSegments.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["odatapathsegments(this.tojson",{"_index":1918,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["odataproperty",{"_index":2241,"title":{},"body":{"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odatapropertymeta",{"_index":1213,"title":{"classes/ODataPropertyMeta.html":{}},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponse.html":{}}}],["odatapropertymeta(payload",{"_index":2294,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odatapropertymeta(this.annotations",{"_index":1214,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatapropertyresource",{"_index":1540,"title":{},"body":{"classes/ODataModelProperty.html":{},"miscellaneous/typealiases.html":{}}}],["odataqueryoptions",{"_index":940,"title":{"classes/ODataQueryOptions.html":{}},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{}}}],["odataqueryoptions(this.tojson",{"_index":2001,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["odatarequest",{"_index":743,"title":{"classes/ODataRequest.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["odataresource",{"_index":758,"title":{"classes/ODataResource.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:103",{"_index":969,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:110",{"_index":949,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:115",{"_index":967,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:176",{"_index":955,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:184",{"_index":963,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:191",{"_index":965,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:199",{"_index":959,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:207",{"_index":952,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:25",{"_index":938,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:26",{"_index":939,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:27",{"_index":941,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:42",{"_index":971,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:49",{"_index":972,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:53",{"_index":957,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:64",{"_index":961,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:75",{"_index":953,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:79",{"_index":970,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:87",{"_index":950,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:89",{"_index":968,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresponse",{"_index":782,"title":{"classes/ODataResponse.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["odataresponse.fromjson(req",{"_index":1495,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odataresponseoptions",{"_index":2226,"title":{"classes/ODataResponseOptions.html":{}},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["odataresponseoptions(this",{"_index":2317,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odataresponseoptions(this.api.options",{"_index":2266,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataschema",{"_index":1038,"title":{"classes/ODataSchema.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odatasegment",{"_index":1870,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["odataservicefactory",{"_index":1840,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odatasettings",{"_index":1847,"title":{},"body":{"modules/ODataModule.html":{}}}],["odatasettings(...configs",{"_index":1852,"title":{},"body":{"modules/ODataModule.html":{}}}],["odatasingletonresource",{"_index":1545,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataSingletonService.html":{},"miscellaneous/typealiases.html":{}}}],["odatasingletonservice",{"_index":2410,"title":{"classes/ODataSingletonService.html":{}},"body":{"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{}}}],["odatastructuredtype",{"_index":1552,"title":{"classes/ODataStructuredType.html":{}},"body":{"classes/ODataModelProperty.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odatastructuredtype(config",{"_index":2370,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatastructuredtypefieldparser",{"_index":1531,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odatastructuredtypefieldparser(name",{"_index":2578,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["odatastructuredtypeparser",{"_index":2160,"title":{"classes/ODataStructuredTypeParser.html":{}},"body":{"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odatastructuredtypeparser(config",{"_index":2440,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["odatausage",{"_index":2780,"title":{},"body":{"index.html":{}}}],["odatavalueresource",{"_index":2628,"title":{"classes/ODataValueResource.html":{}},"body":{"classes/ODataValueResource.html":{}}}],["odatavalueresource(api",{"_index":2642,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odatavalueresource(this.api",{"_index":2643,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odataversion",{"_index":145,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odataversionhelper",{"_index":49,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odv",{"_index":1196,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["of(cached",{"_index":1028,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["ondelete",{"_index":400,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["one",{"_index":2027,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["onerror",{"_index":739,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onerror(content",{"_index":746,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["onload",{"_index":740,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onload(content",{"_index":750,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["open",{"_index":218,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["open.org/odata/odata/v4.0/os/part1",{"_index":165,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["opentype",{"_index":304,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["opt",{"_index":1200,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["opt.headers",{"_index":1205,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["opt.headers.get(\"etag",{"_index":1206,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["opt.options",{"_index":1202,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["option",{"_index":1949,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["option(name",{"_index":1959,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"miscellaneous/functions.html":{}}}],["optionhandler",{"_index":1961,"title":{"classes/OptionHandler.html":{}},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["optionhandler(this.options",{"_index":2004,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["options",{"_index":85,"title":{"interfaces/Options.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["options.apiname",{"_index":2194,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.attrs",{"_index":2202,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.clear",{"_index":2641,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["options.custom",{"_index":2601,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["options.custom[f.name",{"_index":2602,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["options.etag",{"_index":2204,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.expand",{"_index":2595,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["options.fetchpolicy",{"_index":2207,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.headers",{"_index":883,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataResource.html":{}}}],["options.helper.type(value",{"_index":2529,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["options.keep(queryoptionnames.filter",{"_index":1142,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["options.params",{"_index":887,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataResource.html":{}}}],["options.reportprogress",{"_index":2206,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.responsetype",{"_index":2200,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.select",{"_index":2596,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["options.select).indexof(f.name",{"_index":2597,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["options.stringasenum",{"_index":1440,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["options.ts",{"_index":1946,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["options.ts:101",{"_index":1953,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:106",{"_index":2648,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:109",{"_index":2664,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:113",{"_index":2660,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:117",{"_index":2654,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:122",{"_index":2662,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:128",{"_index":2649,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:134",{"_index":2657,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:138",{"_index":2658,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:145",{"_index":2652,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:151",{"_index":2650,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:164",{"_index":2659,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:169",{"_index":2655,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:174",{"_index":2661,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:185",{"_index":2656,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:190",{"_index":2651,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:196",{"_index":2653,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:22",{"_index":1951,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:29",{"_index":1962,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:58",{"_index":1966,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:65",{"_index":1965,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:69",{"_index":1954,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:74",{"_index":1960,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:81",{"_index":1956,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:85",{"_index":1964,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:89",{"_index":1958,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:96",{"_index":1952,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.withcount",{"_index":2197,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.withcredentials",{"_index":888,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataResource.html":{}}}],["optionshelper",{"_index":158,"title":{"interfaces/OptionsHelper.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["opts",{"_index":1519,"title":{},"body":{"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["opts.include_etag",{"_index":2450,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["opts.include_navigation",{"_index":2443,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["opts.include_parents",{"_index":2445,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["orderby",{"_index":1972,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["orderbyobject",{"_index":2951,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["orderbytype",{"_index":2952,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["org.odata.core.v1.computed",{"_index":2522,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["os",{"_index":168,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["other.type",{"_index":2165,"title":{},"body":{"classes/ODataResource.html":{}}}],["otherwise",{"_index":142,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"license.html":{}}}],["out",{"_index":2928,"title":{},"body":{"license.html":{}}}],["overview",{"_index":2932,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":25,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["p.configure(settings",{"_index":1127,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.field",{"_index":1621,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["p.name",{"_index":1119,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{}}}],["p.serialize(params[p.name",{"_index":1124,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.startswith(application_json",{"_index":2271,"title":{},"body":{"classes/ODataResponse.html":{}}}],["package",{"_index":2677,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":162,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["param_separator",{"_index":2156,"title":{},"body":{"classes/ODataResource.html":{}}}],["parameter",{"_index":221,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["parameter.type",{"_index":1097,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parameters",{"_index":225,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["parameters(value",{"_index":1937,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["params",{"_index":88,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCallableParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["params[p.name",{"_index":1121,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parent",{"_index":2441,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parent.children.push(this",{"_index":2588,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["parent.fields.filter(field",{"_index":2442,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["parent.parent",{"_index":2446,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["parentelement.children",{"_index":678,"title":{},"body":{"classes/Field.html":{}}}],["parse",{"_index":661,"title":{},"body":{"classes/Field.html":{},"classes/ODataResponse.html":{}}}],["parse(parser",{"_index":2238,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parsenot",{"_index":2726,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsenot(builtfilters",{"_index":2752,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":180,"title":{"interfaces/Parser.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parser).serialize(e",{"_index":2187,"title":{},"body":{"classes/ODataResource.html":{}}}],["parser.deserialize(value",{"_index":2284,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parser.findparser(c",{"_index":2282,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parser.parsefromstring(xml",{"_index":625,"title":{},"body":{"classes/Field.html":{}}}],["parser.serialize(value",{"_index":2189,"title":{},"body":{"classes/ODataResource.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parsers",{"_index":197,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parsers/structured",{"_index":2246,"title":{},"body":{"classes/ODataResponse.html":{}}}],["parsersettings",{"_index":1077,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataStructuredType.html":{}}}],["part1",{"_index":169,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["partial",{"_index":1334,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataStructuredType.html":{}}}],["particular",{"_index":2915,"title":{},"body":{"license.html":{}}}],["partner",{"_index":401,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["parts",{"_index":2173,"title":{},"body":{"classes/ODataResource.html":{}}}],["parts[0",{"_index":2175,"title":{},"body":{"classes/ODataResource.html":{}}}],["pass",{"_index":129,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["patch",{"_index":822,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{}}}],["patch'].indexof(this.method",{"_index":2121,"title":{},"body":{"classes/ODataRequest.html":{}}}],["patch(attrs",{"_index":958,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["path",{"_index":416,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCallable.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["path(value",{"_index":1931,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["path.indexof(query_separator",{"_index":2172,"title":{},"body":{"classes/ODataResource.html":{}}}],["path.split(query_separator",{"_index":2174,"title":{},"body":{"classes/ODataResource.html":{}}}],["path_separator",{"_index":1890,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathandparams",{"_index":934,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["pathsegmentnames",{"_index":756,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["pathsegmentnames.function",{"_index":1893,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathsegments",{"_index":929,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["pathsegmentsbuilder",{"_index":2727,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pathsegmentsbuilder(segment",{"_index":1891,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["pathwithparams",{"_index":2059,"title":{},"body":{"classes/ODataRequest.html":{}}}],["path}${query_separator}${querystring",{"_index":2184,"title":{},"body":{"classes/ODataResource.html":{}}}],["path}?${this.params",{"_index":2132,"title":{},"body":{"classes/ODataRequest.html":{}}}],["payload",{"_index":188,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["people",{"_index":2830,"title":{},"body":{"index.html":{}}}],["people.expand",{"_index":2832,"title":{},"body":{"index.html":{}}}],["people.get({withcount",{"_index":2840,"title":{},"body":{"index.html":{}}}],["peopleservice",{"_index":2799,"title":{},"body":{"index.html":{}}}],["peopleservice.entities",{"_index":2831,"title":{},"body":{"index.html":{}}}],["permission",{"_index":2872,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":13,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["permit",{"_index":2895,"title":{},"body":{"license.html":{}}}],["person",{"_index":2877,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2896,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2421,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["pick(value",{"_index":2426,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["pipe",{"_index":1799,"title":{},"body":{"classes/ODataModelProperty.html":{},"index.html":{}}}],["pipe(catcherror((error",{"_index":1388,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["pipe(map",{"_index":1793,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["pipe(map(({entity",{"_index":1371,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["plainobject",{"_index":1888,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["please",{"_index":2765,"title":{},"body":{"index.html":{}}}],["policies",{"_index":97,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["policy",{"_index":1025,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["portions",{"_index":2905,"title":{},"body":{"license.html":{}}}],["post",{"_index":821,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["post(attrs",{"_index":962,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["post(entity",{"_index":1372,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["post(func",{"_index":865,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["precision",{"_index":43,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["predicate",{"_index":1259,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["predicate(this",{"_index":2613,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["prefer",{"_index":173,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["prefer.length",{"_index":2125,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.push(`odata.maxpagesize=${this.api.options.prefer?.maxpagesize",{"_index":2124,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.push(`return=${this.api.options.prefer?.return",{"_index":2122,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefix",{"_index":797,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"miscellaneous/functions.html":{}}}],["present",{"_index":106,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["previous",{"_index":1722,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["primitive",{"_index":2018,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["private",{"_index":155,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["project",{"_index":2767,"title":{},"body":{"index.html":{}}}],["projects/.../batch.ts",{"_index":2720,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../builder.ts",{"_index":2701,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../client.ts",{"_index":2709,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../collection.ts",{"_index":2950,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../edm.ts",{"_index":2939,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../metadata.ts",{"_index":2697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../model.ts",{"_index":2725,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../module.ts",{"_index":2717,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../options.ts",{"_index":2945,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../path",{"_index":2698,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../query",{"_index":2699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../structured",{"_index":2947,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../types.ts",{"_index":2936,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["prop",{"_index":1619,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["prop.field",{"_index":1832,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["prop.name",{"_index":1627,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["prop.parser",{"_index":1625,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["prop.parser?.collection",{"_index":1828,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["properties(value",{"_index":71,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["properties.push",{"_index":1557,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["property",{"_index":34,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["property(name",{"_index":1176,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["property(value",{"_index":61,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["property.enum",{"_index":1448,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["property.metafactory(this._meta",{"_index":1716,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["property.modelcollectionfactory",{"_index":1675,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["property.name",{"_index":1692,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["property.name}.${event.attribute",{"_index":1735,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["property.parser",{"_index":1601,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["property.resourcefactory(this._resource",{"_index":1715,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["property.ts",{"_index":397,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["property.ts:1",{"_index":491,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:14",{"_index":434,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:15",{"_index":435,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:16",{"_index":436,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:17",{"_index":438,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:18",{"_index":437,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:19",{"_index":433,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:25",{"_index":405,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:3",{"_index":492,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:30",{"_index":408,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:31",{"_index":406,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:32",{"_index":409,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:33",{"_index":407,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:39",{"_index":448,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:4",{"_index":494,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:41",{"_index":449,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:42",{"_index":450,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:46",{"_index":422,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:48",{"_index":423,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:5",{"_index":493,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:9",{"_index":432,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["propertykey",{"_index":1554,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["propertyref",{"_index":558,"title":{},"body":{"classes/Field.html":{}}}],["propertyrefs",{"_index":320,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["propname",{"_index":2749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propprefix",{"_index":2738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props.map(prop",{"_index":1587,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["protected",{"_index":662,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["protocol.html#_toc372793609",{"_index":170,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["protocol/odata",{"_index":166,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["provide",{"_index":1855,"title":{},"body":{"modules/ODataModule.html":{}}}],["provided",{"_index":2906,"title":{},"body":{"license.html":{}}}],["providers",{"_index":1839,"title":{},"body":{"modules/ODataModule.html":{}}}],["public",{"_index":154,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["publish",{"_index":2889,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2916,"title":{},"body":{"license.html":{}}}],["push",{"_index":2645,"title":{},"body":{"classes/OptionHandler.html":{}}}],["push(value",{"_index":2023,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["put",{"_index":234,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"classes/ODataCountResource.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["put(attrs",{"_index":964,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["put(entity",{"_index":1378,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["put(key",{"_index":187,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["putresponse",{"_index":983,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["putresponse(req",{"_index":1004,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["qualifier",{"_index":280,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["queried",{"_index":141,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["queries",{"_index":2796,"title":{},"body":{"index.html":{}}}],["query",{"_index":102,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCountResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["query_separator",{"_index":2157,"title":{},"body":{"classes/ODataResource.html":{}}}],["querying",{"_index":2762,"title":{},"body":{"index.html":{}}}],["queryoptionnames",{"_index":1138,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["queryoptionnames.expand",{"_index":1983,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.filter",{"_index":1977,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.format",{"_index":1984,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.orderby",{"_index":1979,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.search",{"_index":1143,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.select",{"_index":1976,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skip",{"_index":1981,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skiptoken",{"_index":1982,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.top",{"_index":1980,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.transform",{"_index":1978,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptions",{"_index":930,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"miscellaneous/typealiases.html":{}}}],["querystring",{"_index":2179,"title":{},"body":{"classes/ODataResource.html":{}}}],["r",{"_index":1092,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["range",{"_index":2558,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["raw",{"_index":2953,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["readlink",{"_index":1158,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["readlink(value",{"_index":76,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["reattach",{"_index":1595,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["reduce",{"_index":2391,"title":{},"body":{"classes/ODataSchema.html":{}}}],["reduce((acc",{"_index":1122,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["ref",{"_index":46,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataModelProperty.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ref.set(model.resource",{"_index":1830,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["ref.unset(opts",{"_index":1831,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["reference",{"_index":527,"title":{},"body":{"classes/Field.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["reference.ts",{"_index":377,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["reference.ts:14",{"_index":379,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:16",{"_index":381,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:17",{"_index":380,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:21",{"_index":390,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:23",{"_index":393,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:24",{"_index":391,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:25",{"_index":392,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:3",{"_index":443,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:5",{"_index":446,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:6",{"_index":445,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:7",{"_index":444,"title":{},"body":{"classes/CsdlReference.html":{}}}],["referencedproperty",{"_index":414,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["references",{"_index":620,"title":{},"body":{"classes/Field.html":{}}}],["referentialconstraint",{"_index":562,"title":{},"body":{"classes/Field.html":{}}}],["referentialconstraints",{"_index":402,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["regardless",{"_index":125,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["region",{"_index":191,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["related",{"_index":2766,"title":{},"body":{"index.html":{}}}],["relation",{"_index":1599,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["relation.subscriptions.foreach(sub",{"_index":1710,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["relation?.model",{"_index":1713,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["relations",{"_index":1598,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["relative",{"_index":816,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["remove",{"_index":984,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"index.html":{}}}],["remove(...names",{"_index":2006,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["remove(names",{"_index":1963,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["remove(value",{"_index":2025,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["renderprimitivevalue",{"_index":2728,"title":{},"body":{"miscellaneous/functions.html":{}}}],["renderprimitivevalue(key",{"_index":2754,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replace(/\\;/g",{"_index":2276,"title":{},"body":{"classes/ODataResponse.html":{}}}],["reportprogress",{"_index":2058,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["representation",{"_index":175,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["req",{"_index":868,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{}}}],["req.api",{"_index":869,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataResponse.html":{}}}],["req.fetchpolicy",{"_index":1026,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.method",{"_index":1024,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.observe",{"_index":873,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.onload(chunk.slice(1",{"_index":926,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["req.resource",{"_index":2250,"title":{},"body":{"classes/ODataResponse.html":{}}}],["request",{"_index":116,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["request(method",{"_index":966,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["requested",{"_index":121,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["requests",{"_index":851,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["res",{"_index":800,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["res$.pipe(map((res",{"_index":2209,"title":{},"body":{"classes/ODataResource.html":{}}}],["res$.pipe(startwith(cached",{"_index":1033,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res$.pipe(tap((res",{"_index":1030,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.body",{"_index":2215,"title":{},"body":{"classes/ODataResource.html":{},"classes/ODataResponse.html":{}}}],["res.delete(object.assign({etag",{"_index":1385,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["res.entities",{"_index":2210,"title":{},"body":{"classes/ODataResource.html":{}}}],["res.entity",{"_index":2211,"title":{},"body":{"classes/ODataResource.html":{}}}],["res.headers",{"_index":2251,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.join(newline",{"_index":829,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.length",{"_index":909,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.options.cacheability",{"_index":1031,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.options.maxage",{"_index":1477,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["res.patch(attrs",{"_index":1380,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["res.property",{"_index":2212,"title":{},"body":{"classes/ODataResource.html":{}}}],["res.push(`${batch",{"_index":906,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.push(`${boundary_prefix_suffix}${changesetboundary",{"_index":903,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.push(`${boundary_prefix_suffix}${changesetboundary}${boundary_prefix_suffix",{"_index":898,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.push(`${boundary_prefix_suffix}${this.batchboundary",{"_index":899,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.push(`${boundary_prefix_suffix}${this.batchboundary}${boundary_prefix_suffix",{"_index":910,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.push(`${content_id",{"_index":905,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.push(`${content_transfer_encoding",{"_index":904,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.push(`${content_type",{"_index":823,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.push(`${newline}${json.stringify(batch.request.body",{"_index":908,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.push(newline",{"_index":902,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.segment.entityset().haskey",{"_index":1376,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["res.split(':')[1].trim",{"_index":802,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["res.status",{"_index":2252,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.statustext",{"_index":2253,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.tojson",{"_index":1494,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["res.url",{"_index":2254,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.value",{"_index":2213,"title":{},"body":{"classes/ODataResource.html":{}}}],["reset",{"_index":1569,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resolve(value",{"_index":2510,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["resolvekey",{"_index":2422,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["resolvekey(attrs",{"_index":2429,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["resource",{"_index":759,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["resource(model",{"_index":1604,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource(resource",{"_index":1747,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.action(name",{"_index":1815,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.ascollection(data",{"_index":1573,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.asmodel(data",{"_index":1574,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.call(params",{"_index":1808,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.callcollection(params",{"_index":1807,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.callmodel(params",{"_index":1806,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.callproperty(params",{"_index":1805,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.cast(type).asmodel(this.toentity",{"_index":1818,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.delete(object.assign",{"_index":1797,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.function(name",{"_index":1811,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.get",{"_index":1785,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.get(options",{"_index":1784,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.issubtypeof(this._resource",{"_index":1593,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.key(key",{"_index":1608,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.navigationproperty(path",{"_index":1822,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.navigationproperty(prop.field).reference",{"_index":1829,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.patch(_entity",{"_index":1791,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.post(_entity",{"_index":1790,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.put(_entity",{"_index":1792,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.schema",{"_index":1596,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.segment.entityset().haskey",{"_index":1782,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource.type",{"_index":1591,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource?.navigationproperty(this.parser.name",{"_index":1561,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resource?.property(this.parser.name",{"_index":1562,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resourcefactory",{"_index":1526,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resourcefactory(resource",{"_index":1536,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resourceparams",{"_index":2101,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resourcepath",{"_index":2100,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resources",{"_index":1011,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataSingletonService.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["resources/index",{"_index":1548,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["resp",{"_index":892,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["responds",{"_index":118,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["response",{"_index":845,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["response.body.split(newline_regexp",{"_index":918,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["response.headers.get(content_type",{"_index":914,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["responseoptions",{"_index":176,"title":{"interfaces/ResponseOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["responses",{"_index":783,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"interfaces/StoragePayload.html":{}}}],["responses/index",{"_index":2159,"title":{},"body":{"classes/ODataResource.html":{}}}],["responsetype",{"_index":886,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["responsetypes",{"_index":2214,"title":{},"body":{"classes/ODataResource.html":{}}}],["restriction",{"_index":2884,"title":{},"body":{"license.html":{}}}],["result",{"_index":229,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":231,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":123,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["returned",{"_index":122,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["returns",{"_index":237,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":246,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["rights",{"_index":2887,"title":{},"body":{"license.html":{}}}],["root",{"_index":2788,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":21,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":754,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResource.html":{}}}],["s.name",{"_index":1926,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.type).filter(t",{"_index":1909,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["same",{"_index":872,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["save",{"_index":1331,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{}}}],["save(entity",{"_index":1352,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["scale",{"_index":45,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["schema",{"_index":524,"title":{},"body":{"classes/Field.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema(model",{"_index":1631,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["schema(schema",{"_index":1750,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["schema.alias",{"_index":1068,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["schema.contentencoding",{"_index":2550,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["schema.default",{"_index":2563,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["schema.fields",{"_index":1616,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["schema.format",{"_index":2546,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["schema.maxlength",{"_index":2552,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["schema.namespace",{"_index":1067,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["schema.org",{"_index":2539,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["schema.org/draft",{"_index":2592,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["schema.pattern",{"_index":2547,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["schema.properties",{"_index":2598,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["schema.required",{"_index":2604,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["schema.ts",{"_index":460,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:10",{"_index":480,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:11",{"_index":473,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:12",{"_index":478,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:13",{"_index":475,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:14",{"_index":477,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:15",{"_index":479,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:16",{"_index":472,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:17",{"_index":476,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:18",{"_index":482,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:19",{"_index":481,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:20",{"_index":474,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:8",{"_index":471,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.type",{"_index":1613,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema?.collection",{"_index":1685,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["schema?.model",{"_index":1684,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["schemaconfig",{"_index":199,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["schemas",{"_index":198,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["search",{"_index":1970,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["segment",{"_index":1131,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["segment.key",{"_index":1897,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.name",{"_index":1892,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.parameters",{"_index":1894,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.path",{"_index":1895,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.type",{"_index":1912,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.type(type",{"_index":2640,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["segmenthandler",{"_index":1874,"title":{"classes/SegmentHandler.html":{}},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(segment",{"_index":1924,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(this.segments[this.segments.length",{"_index":1922,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segments",{"_index":757,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["segments.add(pathsegmentnames.batch",{"_index":863,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["segments.add(pathsegmentnames.count",{"_index":1140,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["segments.add(pathsegmentnames.metadata",{"_index":1517,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["segments.add(pathsegmentnames.value",{"_index":2639,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["segments.get(pathsegmentnames.entityset",{"_index":1146,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["segments.get(pathsegmentnames.navigationproperty",{"_index":1147,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["segments.ts",{"_index":1868,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["segments.ts:104",{"_index":1879,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:112",{"_index":2668,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:115",{"_index":2676,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:119",{"_index":2675,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:125",{"_index":2674,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:131",{"_index":2672,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:137",{"_index":2670,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:141",{"_index":2673,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:147",{"_index":2671,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:152",{"_index":2669,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:51",{"_index":1871,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:57",{"_index":1881,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:63",{"_index":1884,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:67",{"_index":1883,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:71",{"_index":1882,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:84",{"_index":1875,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:88",{"_index":1877,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:93",{"_index":1880,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:98",{"_index":1873,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["select",{"_index":1969,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["selector",{"_index":2786,"title":{},"body":{"index.html":{}}}],["selecttype",{"_index":2954,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["self",{"_index":2164,"title":{},"body":{"classes/ODataResource.html":{}}}],["self.change$.emit",{"_index":1732,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["sell",{"_index":2893,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":186,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["serialize(params",{"_index":1094,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["serialize(value",{"_index":182,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["server",{"_index":139,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["service",{"_index":227,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["servicerooturl",{"_index":30,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["services/index",{"_index":1848,"title":{},"body":{"modules/ODataModule.html":{}}}],["sessionstorage",{"_index":1488,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["set",{"_index":337,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataModelProperty.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/OptionHandler.html":{}}}],["set(path",{"_index":2042,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["set.ts",{"_index":339,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{}}}],["set.ts:11",{"_index":1344,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:15",{"_index":1346,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:18",{"_index":1318,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:21",{"_index":1336,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:22",{"_index":1338,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:23",{"_index":1339,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:25",{"_index":1319,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:29",{"_index":1317,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:3",{"_index":342,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:32",{"_index":1359,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:36",{"_index":1349,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:42",{"_index":1341,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:48",{"_index":1355,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:5",{"_index":345,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:59",{"_index":1335,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:6",{"_index":343,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:7",{"_index":346,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:70",{"_index":1343,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:8",{"_index":344,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:80",{"_index":1351,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:9",{"_index":1316,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:90",{"_index":1353,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["setcache",{"_index":2296,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setcache(cachecontrol",{"_index":2307,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setfeatures",{"_index":2297,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setfeatures(features",{"_index":2309,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setreference",{"_index":1825,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["settings",{"_index":1048,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["settings.findparserfortype(this.base",{"_index":2587,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["settings.findparserfortype(this.return.type",{"_index":1125,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["settings.findparserfortype(this.type",{"_index":1102,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["settings.options",{"_index":2537,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["setversion",{"_index":2298,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setversion(version",{"_index":2311,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["shall",{"_index":2902,"title":{},"body":{"license.html":{}}}],["shortcuts",{"_index":1386,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["single",{"_index":2457,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["singleton",{"_index":338,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"injectables/ODataServiceFactory.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["singleton(path",{"_index":2408,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["singleton.ts",{"_index":485,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:3",{"_index":487,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:5",{"_index":488,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:6",{"_index":490,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:7",{"_index":489,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singletons",{"_index":327,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["singletonschema",{"_index":2413,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["skip",{"_index":107,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["skiptoken",{"_index":1162,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["slice(1",{"_index":1896,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["software",{"_index":2880,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["specified",{"_index":667,"title":{},"body":{"classes/Field.html":{}}}],["split",{"_index":1992,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["srid",{"_index":265,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["standardaggregatemethods",{"_index":2700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["started",{"_index":2759,"title":{"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":922,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["startwith",{"_index":1008,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["states",{"_index":2821,"title":{},"body":{"index.html":{}}}],["static",{"_index":534,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{}}}],["status",{"_index":747,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["status.code",{"_index":833,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["status.text",{"_index":836,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["statusparts",{"_index":924,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["statusparts[2",{"_index":928,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["statustext",{"_index":835,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["step",{"_index":109,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["storage",{"_index":1485,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["storagepayload",{"_index":1484,"title":{"interfaces/StoragePayload.html":{}},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["store",{"_index":156,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["store'].indexof(directive",{"_index":2333,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["streaming",{"_index":157,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["stringasenum",{"_index":90,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structural",{"_index":315,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["structured",{"_index":298,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["structuredtypeconfig",{"_index":206,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["structuredtypefield",{"_index":36,"title":{"interfaces/StructuredTypeField.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structuredtypefieldoptions",{"_index":179,"title":{"interfaces/StructuredTypeFieldOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structuredtypeschema",{"_index":1296,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["strucuturedtype",{"_index":2574,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["styleurls",{"_index":2791,"title":{},"body":{"index.html":{}}}],["sub.unsubscribe",{"_index":1711,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["subject",{"_index":738,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"license.html":{}}}],["sublicense",{"_index":2891,"title":{},"body":{"license.html":{}}}],["subs",{"_index":1729,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["subs.push(value.change$.subscribe((event",{"_index":1731,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["subscribe",{"_index":2842,"title":{},"body":{"index.html":{}}}],["subscribe(({entities",{"_index":2804,"title":{},"body":{"index.html":{}}}],["subscribe(({entity",{"_index":2814,"title":{},"body":{"index.html":{}}}],["subscribe(aports",{"_index":2807,"title":{},"body":{"index.html":{}}}],["subscription",{"_index":1542,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["subscriptions",{"_index":1576,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["substantial",{"_index":2904,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":796,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"miscellaneous/functions.html":{}}}],["sum",{"_index":2703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super",{"_index":814,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["super(annotationlist",{"_index":281,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["super(api",{"_index":854,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataMetadataResource.html":{}}}],["super(init",{"_index":1475,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["super(name",{"_index":316,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{}}}],["super.get",{"_index":1150,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataValueResource.html":{}}}],["super.get(opts).pipe(map((body",{"_index":1520,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["support",{"_index":2851,"title":{},"body":{"index.html":{}}}],["supported",{"_index":672,"title":{},"body":{"classes/Field.html":{}}}],["switch",{"_index":1804,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/SegmentHandler.html":{}}}],["switchmap",{"_index":2812,"title":{},"body":{"index.html":{}}}],["sync",{"_index":1738,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["system",{"_index":1968,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["t",{"_index":27,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["t[p",{"_index":28,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["table",{"_index":2773,"title":{},"body":{"index.html":{}}}],["tag",{"_index":531,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["tag_action",{"_index":567,"title":{},"body":{"classes/Field.html":{}}}],["tag_action_import",{"_index":573,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotation",{"_index":547,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotations",{"_index":546,"title":{},"body":{"classes/Field.html":{}}}],["tag_complex_type",{"_index":552,"title":{},"body":{"classes/Field.html":{}}}],["tag_data_services",{"_index":537,"title":{},"body":{"classes/Field.html":{}}}],["tag_edmx",{"_index":535,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_container",{"_index":568,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_set",{"_index":569,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_type",{"_index":554,"title":{},"body":{"classes/Field.html":{}}}],["tag_enum_type",{"_index":549,"title":{},"body":{"classes/Field.html":{}}}],["tag_function",{"_index":564,"title":{},"body":{"classes/Field.html":{}}}],["tag_function_import",{"_index":571,"title":{},"body":{"classes/Field.html":{}}}],["tag_include",{"_index":541,"title":{},"body":{"classes/Field.html":{}}}],["tag_include_annotations",{"_index":543,"title":{},"body":{"classes/Field.html":{}}}],["tag_key",{"_index":556,"title":{},"body":{"classes/Field.html":{}}}],["tag_member",{"_index":551,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property",{"_index":559,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property_binding",{"_index":575,"title":{},"body":{"classes/Field.html":{}}}],["tag_on_delete",{"_index":563,"title":{},"body":{"classes/Field.html":{}}}],["tag_parameter",{"_index":566,"title":{},"body":{"classes/Field.html":{}}}],["tag_property",{"_index":555,"title":{},"body":{"classes/Field.html":{}}}],["tag_property_ref",{"_index":557,"title":{},"body":{"classes/Field.html":{}}}],["tag_reference",{"_index":539,"title":{},"body":{"classes/Field.html":{}}}],["tag_referential_constraint",{"_index":561,"title":{},"body":{"classes/Field.html":{}}}],["tag_return_type",{"_index":565,"title":{},"body":{"classes/Field.html":{}}}],["tag_schema",{"_index":548,"title":{},"body":{"classes/Field.html":{}}}],["tag_singleton",{"_index":570,"title":{},"body":{"classes/Field.html":{}}}],["tag_term",{"_index":545,"title":{},"body":{"classes/Field.html":{}}}],["tag_type_definition",{"_index":576,"title":{},"body":{"classes/Field.html":{}}}],["tags",{"_index":533,"title":{},"body":{"classes/Field.html":{},"index.html":{}}}],["tap",{"_index":1009,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataModelProperty.html":{}}}],["target",{"_index":279,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataModelProperty.html":{}}}],["target._properties",{"_index":1555,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["targetnamespace",{"_index":388,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["templateurl",{"_index":2789,"title":{},"body":{"index.html":{}}}],["term",{"_index":282,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["termnamespace",{"_index":387,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["terms",{"_index":468,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["test",{"_index":1993,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["text",{"_index":831,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["text/plain",{"_index":2119,"title":{},"body":{"classes/ODataRequest.html":{}}}],["text/xml",{"_index":626,"title":{},"body":{"classes/Field.html":{}}}],["thatparser",{"_index":2166,"title":{},"body":{"classes/ODataResource.html":{}}}],["thatparser.findparser(c",{"_index":2168,"title":{},"body":{"classes/ODataResource.html":{}}}],["this._attributes",{"_index":1664,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._attributes[name",{"_index":1725,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._call(params",{"_index":1810,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._changes",{"_index":1665,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._changes[name",{"_index":1727,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._context",{"_index":1208,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this._functions",{"_index":1238,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this._get(model",{"_index":1629,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._meta",{"_index":1586,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._meta.options",{"_index":1680,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._meta.property(fieldname",{"_index":1678,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._meta?.clone",{"_index":1637,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._modelcollectionfactory",{"_index":1714,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._modelcollectionfactory({property",{"_index":1697,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options",{"_index":1740,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataResponse.html":{}}}],["this._options.annotate(this",{"_index":1754,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.assign(this",{"_index":1770,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.attach(this",{"_index":1748,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.attributes(this",{"_index":1768,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.bind(this",{"_index":1751,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.defaults(this",{"_index":1765,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.findproperty(p",{"_index":1826,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.key(this",{"_index":1756,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.meta(this",{"_index":1755,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.query",{"_index":1802,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.resource(this",{"_index":1749,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.schema(this",{"_index":1752,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.setcache(cachecontrol",{"_index":2280,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setfeatures(features",{"_index":2272,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setversion(version",{"_index":2277,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.toentity(this",{"_index":1767,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._options.validate(this",{"_index":1759,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._properties",{"_index":1210,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPropertyMeta.html":{}}}],["this._properties.find(predicate",{"_index":1610,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._properties.push(prop",{"_index":1624,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._relations",{"_index":1695,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._relations[name",{"_index":1698,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._relations[name].model",{"_index":1700,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._request(resource",{"_index":1786,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._resetting",{"_index":1667,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._resource",{"_index":1590,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._resource.query",{"_index":1638,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._resource.type",{"_index":1592,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._resource?.api.findstructuredtypefortype(meta.type",{"_index":1635,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._resource?.clone",{"_index":1605,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._resource?.type",{"_index":1634,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._schema",{"_index":1612,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._schema.type",{"_index":1614,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._schema?.api.findstructuredtypefortype(fieldtype",{"_index":1683,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._set(model",{"_index":1630,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this._subscribe(model",{"_index":1699,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.alias",{"_index":1105,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.annotations",{"_index":1203,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.annotations.find(predicate",{"_index":1268,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.api",{"_index":870,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{}}}],["this.api.findentitysetbyname(this.name",{"_index":1369,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["this.api.findentitysetfortype(this.parser.return.type)?.name",{"_index":1071,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.api.findparserfortype(type",{"_index":2285,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.api.findstructuredtypefortype(this.apinameorentitytype",{"_index":1315,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.api.options",{"_index":1079,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{}}}],["this.api.options.etag.ifmatch",{"_index":2105,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.etag.ifnonematch",{"_index":2108,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.fetchpolicy",{"_index":2099,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.helper",{"_index":1374,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.api.options.helper.etag(attrs",{"_index":2452,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.api.options.helper.etag(value",{"_index":2451,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.api.options.ieee754compatible",{"_index":2114,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.metadata",{"_index":2111,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.prefer?.maxpagesize",{"_index":2123,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.prefer?.return",{"_index":2120,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.withcredentials",{"_index":2097,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.request",{"_index":867,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.api.request(request",{"_index":2208,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.api.request(request).pipe",{"_index":889,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.api.servicerooturl}${this",{"_index":2177,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.api.servicerooturl}${this.path",{"_index":2133,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.servicerooturl}${this.pathwithparams",{"_index":2134,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.apinameorentitytype",{"_index":1314,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["this.assertarray",{"_index":2037,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().filter(v",{"_index":2026,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().push(value",{"_index":2024,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray()[index",{"_index":2032,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertobject(false",{"_index":2047,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertobject(true",{"_index":2043,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assign(attrs",{"_index":1834,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.assign(data",{"_index":1746,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.assign(meta.attributes(entity",{"_index":1780,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.attributes(model",{"_index":1648,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.base",{"_index":2575,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.batchboundary",{"_index":855,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.bind(model",{"_index":1597,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.body",{"_index":885,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.body)[\"d",{"_index":2288,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.bound",{"_index":1061,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.cacheability",{"_index":2334,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.callables",{"_index":2382,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.callables.find(e",{"_index":2396,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.checkversion(document",{"_index":627,"title":{},"body":{"classes/Field.html":{}}}],["this.children",{"_index":2577,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.children.find(c",{"_index":2614,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.client",{"_index":2411,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["this.client.apibyname(options.apiname",{"_index":2195,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.client.apifor(this.apinameorentitytype",{"_index":1313,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.client.entityset(this.name",{"_index":1363,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.client.singleton(this.name",{"_index":2418,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["this.collection",{"_index":2438,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.complete",{"_index":839,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.composable",{"_index":1063,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.constructor",{"_index":1772,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.containers",{"_index":2385,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.context",{"_index":1216,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.context.type",{"_index":1218,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.create(entity",{"_index":1391,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.default",{"_index":2495,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.deserialize(this.default",{"_index":2536,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.deserialize(type",{"_index":2292,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.destroy$.emit",{"_index":1801,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.entities",{"_index":1364,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSchema.html":{}}}],["this.entities.find(e",{"_index":2395,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entity(entity",{"_index":1370,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.entity(entity).segment.entityset().haskey",{"_index":1393,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.entitysetpath",{"_index":1059,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.entitysets",{"_index":1261,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["this.entitysets.find(e",{"_index":2397,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entitytype",{"_index":1320,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["this.entries",{"_index":1014,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.entries.delete(key",{"_index":1022,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.foreach((entry",{"_index":1021,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.get(key",{"_index":1017,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.set(key",{"_index":1015,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.enum().validate(value",{"_index":2518,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.enums",{"_index":2366,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.enums.find(e",{"_index":2393,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.error(new",{"_index":843,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.error(res",{"_index":848,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.errors",{"_index":1761,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.factory.entity(\"airports",{"_index":2798,"title":{},"body":{"index.html":{}}}],["this.factory.entity(\"people",{"_index":2800,"title":{},"body":{"index.html":{}}}],["this.fetch(entity",{"_index":1387,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.fetchpolicy",{"_index":729,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["this.field",{"_index":1559,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.fields",{"_index":1430,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.fields().find(f",{"_index":1419,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.fields().map(mapper",{"_index":1422,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.fields(opts).map(f",{"_index":2447,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.fields.filter(f",{"_index":2610,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.fields.find(f",{"_index":2607,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.fields.foreach(f",{"_index":2589,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.fields.map(f",{"_index":1449,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.find(predicate",{"_index":2616,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.find(s",{"_index":1925,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.findannotation(a",{"_index":2520,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.findproperty(p",{"_index":1620,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.flags",{"_index":1428,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.functions[name",{"_index":1240,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.get(req.urlwithparams",{"_index":1478,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.getfieldvaluebyattribute",{"_index":629,"title":{},"body":{"classes/Field.html":{}}}],["this.getobjects(dataservices",{"_index":645,"title":{},"body":{"classes/Field.html":{}}}],["this.getobjects(document.documentelement",{"_index":634,"title":{},"body":{"classes/Field.html":{}}}],["this.getresponse(req",{"_index":1027,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.handleresponse(resp",{"_index":891,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.headers",{"_index":725,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.headers.get(cache_control",{"_index":2279,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(content_type",{"_index":2267,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(key",{"_index":2275,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.getall(name",{"_index":2262,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.keys",{"_index":2260,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.keys().find(k",{"_index":2273,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.ieee754compatible",{"_index":721,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.invalid$.emit(this.errors",{"_index":1763,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.iscomplextype",{"_index":2516,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.isenumtype",{"_index":2517,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.isexpired(entry",{"_index":1018,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.isnavigation",{"_index":2514,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.isstructuredtype",{"_index":2573,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.key",{"_index":1814,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.key(model",{"_index":1606,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.keys().length",{"_index":2612,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.maxage",{"_index":2332,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.maxlength",{"_index":2497,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.members",{"_index":1415,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.meta",{"_index":1775,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.meta().etag",{"_index":1798,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.meta(meta",{"_index":1744,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.metadata",{"_index":717,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.metafactory(basemeta",{"_index":1571,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.method",{"_index":2085,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.model",{"_index":2436,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.n",{"_index":2015,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.name",{"_index":1057,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.name).split('/').reduce((acc",{"_index":2511,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.namespace",{"_index":1104,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.namespace}.${this.name",{"_index":1113,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.namespace}.${this.name}'${name",{"_index":1442,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.navigation",{"_index":2502,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.next(odataresponse.fromhttpresponse(this.request",{"_index":838,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.nextlink",{"_index":1247,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.nullable",{"_index":2500,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.o[this.n",{"_index":2016,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].filter((v",{"_index":2051,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].length",{"_index":2029,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n][0",{"_index":2030,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.observe",{"_index":2094,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.odata.batch(\"trippin\").post(batch",{"_index":2837,"title":{},"body":{"index.html":{}}}],["this.odata.fromjson(json",{"_index":2827,"title":{},"body":{"index.html":{}}}],["this.odv.annotations(data",{"_index":1204,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.attributes(data",{"_index":1223,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.context(this.annotations",{"_index":1209,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.count(this.annotations",{"_index":1243,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.deltalink(this.annotations",{"_index":1245,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.editlink(this.annotations",{"_index":1231,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.entities(data",{"_index":1242,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.entity(data",{"_index":1221,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.etag(this.annotations",{"_index":1207,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.functions(this.annotations",{"_index":1239,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.id(this.annotations",{"_index":1224,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediacontenttype(this.annotations",{"_index":1237,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediaeditlink(this.annotations",{"_index":1235,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediaetag(this.annotations",{"_index":1226,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediareadlink(this.annotations",{"_index":1233,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.metadataetag(this.annotations",{"_index":1228,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.nextlink(this.annotations",{"_index":1244,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.properties(this.annotations",{"_index":1211,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.property(data",{"_index":1215,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.readlink(this.annotations",{"_index":1229,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.type(this.annotations",{"_index":1217,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.option(name).clear",{"_index":2008,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options",{"_index":1201,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/OptionHandler.html":{}}}],["this.options.helper.type(value",{"_index":2281,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.options.version",{"_index":2287,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.options?.helper",{"_index":1197,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.options[k",{"_index":2013,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[key",{"_index":1987,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[name",{"_index":2003,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[queryoptionnames.custom",{"_index":1990,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.parameters",{"_index":1108,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parameters.filter(p",{"_index":1118,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parameters.find(p",{"_index":1128,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parameters.foreach(p",{"_index":1126,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.params",{"_index":723,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["this.params.keys().length",{"_index":2131,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.parent",{"_index":2579,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.defaults",{"_index":2617,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.deserialize(value",{"_index":2580,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.keys",{"_index":2609,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.serialize(value",{"_index":2584,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.typefor(name",{"_index":2608,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.validate(attrs",{"_index":2623,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.parse(parser",{"_index":2286,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser",{"_index":1065,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser.collection",{"_index":1563,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.parser.configure(parsersettings",{"_index":1080,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataStructuredType.html":{}}}],["this.parser.defaults",{"_index":2463,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.parser.deserialize(value",{"_index":1116,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser.fields",{"_index":1418,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.parser.iscomplextype",{"_index":2572,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.parser.isnavigation",{"_index":1560,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.parser.istypeof(type",{"_index":1074,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.parser.keys",{"_index":2453,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.parser.return",{"_index":1070,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.parser.serialize(v",{"_index":1100,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.serialize(value",{"_index":1101,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser.tojsonschema(options",{"_index":2464,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser.validate(attrs",{"_index":2465,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.parser?.collection",{"_index":1570,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.path",{"_index":1910,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/SegmentHandler.html":{}}}],["this.pathandparams",{"_index":2178,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments",{"_index":1145,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataResource.html":{}}}],["this.pathsegments.clone",{"_index":860,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["this.pathsegments.last()?.type",{"_index":2162,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.path",{"_index":2170,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.tojson",{"_index":2190,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.types",{"_index":2163,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.precision",{"_index":2504,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.prefer",{"_index":731,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["this.properties[name",{"_index":1212,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.put(req.urlwithparams",{"_index":1476,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.putresponse(req",{"_index":1032,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.queries",{"_index":2795,"title":{},"body":{"index.html":{}}}],["this.queryoptions",{"_index":2161,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.queryoptions.alias(name",{"_index":2192,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.queryoptions.clone",{"_index":1149,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataValueResource.html":{}}}],["this.queryoptions.params",{"_index":2171,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.queryoptions.tojson",{"_index":2191,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.ref",{"_index":2508,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.references",{"_index":633,"title":{},"body":{"classes/Field.html":{}}}],["this.remove",{"_index":1016,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.reportprogress",{"_index":2090,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.request$.emit(obs",{"_index":1778,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.request('delete",{"_index":2221,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('get",{"_index":2216,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('patch",{"_index":2220,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('post",{"_index":2217,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('put",{"_index":2219,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request.headers",{"_index":824,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.request.method",{"_index":819,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.request.pathwithparams",{"_index":820,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.request.urlwithparams",{"_index":837,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.requests",{"_index":857,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.requests.push(new",{"_index":877,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.requests[index",{"_index":923,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.requests[this.requests.length",{"_index":879,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["this.resource",{"_index":1774,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.resource(resource",{"_index":1742,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.resource.type",{"_index":2291,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.resourcefactory(baseresource",{"_index":1572,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.responsetype",{"_index":2092,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.return",{"_index":1106,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.scale",{"_index":2506,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.schema",{"_index":1056,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema(model)?.defaults",{"_index":1644,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.schema(model)?.resolvekey(model.toentity({field_mapping",{"_index":1640,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.schema(model)?.validate(model.toentity({field_mapping",{"_index":1642,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.schema(schema",{"_index":1743,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.schema.alias",{"_index":1073,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.api",{"_index":1075,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.namespace}.${this.name",{"_index":1069,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schemas",{"_index":644,"title":{},"body":{"classes/Field.html":{}}}],["this.segment.key",{"_index":1934,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.name",{"_index":1929,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.parameters",{"_index":1938,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.path",{"_index":1932,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.type",{"_index":1930,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments",{"_index":1905,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.length",{"_index":1921,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.map(s",{"_index":1908,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.map(segment",{"_index":1911,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.push(segment",{"_index":1923,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments].reverse().find(predicate",{"_index":1920,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.serialize(options.attrs",{"_index":2203,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.service",{"_index":1322,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["this.status",{"_index":2263,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.statustext",{"_index":2264,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.streaming",{"_index":2324,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.stringasenum",{"_index":719,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.structured().validate(value",{"_index":2515,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.sync$.emit",{"_index":1781,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.timeout",{"_index":1012,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.toentity",{"_index":1789,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.toentity({field_mapping",{"_index":1796,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.tojson(parser",{"_index":2535,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.type",{"_index":685,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.type.startswith(\"edm",{"_index":2569,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.update(entity",{"_index":1394,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.url",{"_index":2265,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.valid({create",{"_index":1787,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.validate(v",{"_index":2513,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["this.validate({create",{"_index":1762,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["this.value",{"_index":1425,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.version",{"_index":628,"title":{},"body":{"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.withcredentials",{"_index":727,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["throw",{"_index":659,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["throwerror",{"_index":1007,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{}}}],["throwerror(\"can't",{"_index":1783,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["throwerror(\"no",{"_index":1029,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["throwerror(\"resource",{"_index":1377,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{}}}],["throwerror(error",{"_index":1392,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["throwerror(this.errors",{"_index":1794,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["thrown",{"_index":144,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["time",{"_index":792,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["timeout",{"_index":977,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["title",{"_index":1447,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeParser.html":{},"index.html":{}}}],["todo",{"_index":815,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["toentity",{"_index":1766,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["toentity(model",{"_index":1645,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["tojson",{"_index":935,"title":{},"body":{"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["tojson(parser",{"_index":2532,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["tojsonschema",{"_index":1446,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["tojsonschema(options",{"_index":2431,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["tokens",{"_index":1850,"title":{},"body":{"modules/ODataModule.html":{}}}],["tools",{"_index":2005,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["top",{"_index":1161,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["tort",{"_index":2926,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":741,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["transform",{"_index":1971,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transforms",{"_index":2744,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trim",{"_index":2326,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["trippin",{"_index":2794,"title":{},"body":{"index.html":{}}}],["trippinconfig",{"_index":2844,"title":{},"body":{"index.html":{}}}],["trippinmodule",{"_index":2845,"title":{},"body":{"index.html":{}}}],["trips",{"_index":2835,"title":{},"body":{"index.html":{}}}],["true",{"_index":695,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"index.html":{}}}],["true}).subscribe(console.log",{"_index":2841,"title":{},"body":{"index.html":{}}}],["try",{"_index":622,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["tslib",{"_index":2691,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":128,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type(undefined",{"_index":1052,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type(value",{"_index":74,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataPathSegments.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["type({alias",{"_index":1072,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.startswith(this.alias",{"_index":2390,"title":{},"body":{"classes/ODataSchema.html":{}}}],["type.startswith(this.namespace",{"_index":2389,"title":{},"body":{"classes/ODataSchema.html":{}}}],["type.ts",{"_index":299,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts:1",{"_index":359,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:10",{"_index":353,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:11",{"_index":1400,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:12",{"_index":354,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:13",{"_index":355,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:14",{"_index":307,"title":{},"body":{"classes/CsdlComplexType.html":{}}}],["type.ts:18",{"_index":1456,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:19",{"_index":1413,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:20",{"_index":1454,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:207",{"_index":2475,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:208",{"_index":2476,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:209",{"_index":2472,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:21",{"_index":1455,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:210",{"_index":2473,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:211",{"_index":2477,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:212",{"_index":2474,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:213",{"_index":2471,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:22",{"_index":1409,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:225",{"_index":2485,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:23",{"_index":1453,"title":{},"body":{"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:233",{"_index":2480,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:243",{"_index":2487,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:25",{"_index":1414,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:252",{"_index":2478,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:265",{"_index":2488,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:27",{"_index":348,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:287",{"_index":2490,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:29",{"_index":1404,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:294",{"_index":2486,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:299",{"_index":2484,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:3",{"_index":362,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:30",{"_index":350,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:303",{"_index":2481,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:309",{"_index":2483,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:313",{"_index":2479,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:324",{"_index":2491,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:33",{"_index":1402,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:36",{"_index":349,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:37",{"_index":1406,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:39",{"_index":2425,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:4",{"_index":361,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:41",{"_index":1408,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:42",{"_index":395,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:44",{"_index":396,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:45",{"_index":1411,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:48",{"_index":439,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:5",{"_index":363,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumTypeFieldParser.html":{}}}],["type.ts:50",{"_index":441,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:51",{"_index":440,"title":{},"body":{"classes/CsdlPropertyRef.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:56",{"_index":2427,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:6",{"_index":360,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumTypeFieldParser.html":{}}}],["type.ts:67",{"_index":1457,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:7",{"_index":496,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{}}}],["type.ts:71",{"_index":2430,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:75",{"_index":1458,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:8",{"_index":495,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:84",{"_index":2423,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:88",{"_index":2433,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:9",{"_index":497,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:91",{"_index":2435,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["typealiases",{"_index":2935,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedefinition",{"_index":577,"title":{},"body":{"classes/Field.html":{}}}],["typedefinitions",{"_index":469,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["typefor",{"_index":2470,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["typefor(name",{"_index":2489,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["typeof",{"_index":1898,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["types",{"_index":525,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["types.isarray(custom",{"_index":1991,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isarray(this.o[this.n",{"_index":2022,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(errors",{"_index":2528,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["types.isempty(key",{"_index":2462,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["types.isempty(this.o[this.n",{"_index":2017,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(this.options[key",{"_index":1986,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(this.segment.key",{"_index":1936,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isempty(this.segment.parameters",{"_index":1940,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isempty(v",{"_index":1660,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(value",{"_index":2622,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["types.isequal(currentvalue",{"_index":1724,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["types.isequal(value",{"_index":1726,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["types.isobject(this.o[this.n",{"_index":2035,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isobject(v",{"_index":2040,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isobject(value",{"_index":1670,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["undefined",{"_index":66,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["underlayingtype",{"_index":510,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["underlyingtype",{"_index":357,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["unicode",{"_index":413,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["uniqid",{"_index":2729,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniqid(batch_prefix",{"_index":856,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["uniqid(changeset_prefix",{"_index":900,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["uniqid(prefix",{"_index":795,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"miscellaneous/functions.html":{}}}],["united",{"_index":2820,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":847,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["unnamed",{"_index":2730,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unpacked",{"_index":2955,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unsaved",{"_index":1704,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["unset",{"_index":2646,"title":{},"body":{"classes/OptionHandler.html":{}}}],["unset(path",{"_index":2049,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["unsuccessful",{"_index":840,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["up",{"_index":131,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["update",{"_index":120,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitySetService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["update(entity",{"_index":1354,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["updated",{"_index":135,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["updating",{"_index":140,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["uri",{"_index":383,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["url",{"_index":818,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["urls",{"_index":1967,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{}}}],["urls.parsequerystring(parts[1",{"_index":2176,"title":{},"body":{"classes/ODataResource.html":{}}}],["urls.parsequerystring(query.substr(1",{"_index":1989,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["urlwithparams",{"_index":2060,"title":{},"body":{"classes/ODataRequest.html":{}}}],["usage",{"_index":2776,"title":{},"body":{"index.html":{}}}],["use",{"_index":1706,"title":{},"body":{"classes/ODataModelProperty.html":{},"index.html":{},"license.html":{}}}],["usefactory",{"_index":1857,"title":{},"body":{"modules/ODataModule.html":{}}}],["uses",{"_index":119,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["usevalue",{"_index":1856,"title":{},"body":{"modules/ODataModule.html":{}}}],["using",{"_index":2856,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1549,"title":{},"body":{"classes/ODataModelProperty.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["utils/http",{"_index":785,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["utils/index",{"_index":2158,"title":{},"body":{"classes/ODataResource.html":{}}}],["utils/types",{"_index":526,"title":{},"body":{"classes/Field.html":{},"classes/ODataModelProperty.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{}}}],["v",{"_index":1436,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{}}}],["v.model",{"_index":1653,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["v.property.parser?.isnavigation",{"_index":1651,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["v.toentities",{"_index":1657,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["v.toentity",{"_index":1656,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["v4",{"_index":2855,"title":{},"body":{"index.html":{}}}],["v4.0",{"_index":167,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["val",{"_index":2755,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":1760,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["validate",{"_index":1452,"title":{},"body":{"classes/ODataEnumTypeParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["validate(attrs",{"_index":2434,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["validate(member",{"_index":1450,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["validate(model",{"_index":1641,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["validation",{"_index":1757,"title":{},"body":{"classes/ODataModelProperty.html":{}}}],["value",{"_index":48,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["value(v",{"_index":2019,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["value).reduce((acc",{"_index":1435,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["value.length",{"_index":2526,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["value.map(e",{"_index":2186,"title":{},"body":{"classes/ODataResource.html":{}}}],["value.map(v",{"_index":1099,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["value.resource(this.entities",{"_index":1368,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["value.resource(this.entities().entity",{"_index":1367,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["value.resource(this.entity",{"_index":2419,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["value[f.name",{"_index":2582,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["value[k",{"_index":2449,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["value_separator",{"_index":2155,"title":{},"body":{"classes/ODataResource.html":{}}}],["values",{"_index":2056,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["values.length",{"_index":2456,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["values.some(v",{"_index":2459,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["values[0",{"_index":2458,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["van",{"_index":2870,"title":{},"body":{"license.html":{}}}],["var",{"_index":789,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["variables",{"_index":850,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataResource.html":{}}}],["version",{"_index":86,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["version.replace(/\\;/g",{"_index":2325,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_2_0",{"_index":2314,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_3_0",{"_index":2315,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_4_0",{"_index":528,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataResponseOptions.html":{}}}],["version_4_0].indexof(value",{"_index":2327,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["versions",{"_index":2852,"title":{},"body":{"index.html":{}}}],["viewed",{"_index":2858,"title":{},"body":{"index.html":{}}}],["void",{"_index":189,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataModelProperty.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["warranties",{"_index":2912,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2907,"title":{},"body":{"license.html":{}}}],["whether",{"_index":126,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"license.html":{}}}],["wiki",{"_index":2862,"title":{},"body":{"index.html":{}}}],["window.addeventlistener(\"beforeunload",{"_index":1490,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["withcount",{"_index":2193,"title":{},"body":{"classes/ODataResource.html":{}}}],["withcredentials",{"_index":163,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["without",{"_index":137,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataModelProperty.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"license.html":{}}}],["works",{"_index":2847,"title":{},"body":{"index.html":{}}}],["xssi_prefix",{"_index":786,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataBatchResource.html":{}}}],["yes",{"_index":252,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataBatchResource.html":{},"classes/ODataCache.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":2693,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Annotation.html":{"url":"interfaces/Annotation.html","title":"interface - Annotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Annotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bool\n                                \n                                \n                                            Optional\n                                        int\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        properties\n                                \n                                \n                                            Optional\n                                        string\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bool\n                                    \n                                \n                                \n                                    \n                                        bool:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        int\n                                    \n                                \n                                \n                                    \n                                        int:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        string\n                                    \n                                \n                                \n                                    \n                                        string:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  serviceRootUrl?: string;\n  metadataUrl?: string;\n  entitySet?: string;\n  key?: string;\n  type?: string;\n  property?: string;\n  //entity?: boolean;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  //http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793609\n  etag?: {\n    ifMatch?: boolean,\n    ifNoneMatch?:boolean\n  };\n  prefer?: {\n    maxPageSize?: number,\n    return?: 'representation' | 'minimal'\n  };\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: {type: string, collection?: boolean};\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiOptions.html":{"url":"interfaces/ApiOptions.html","title":"interface - ApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        etag\n                                \n                                \n                                            Optional\n                                        fetchPolicy\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                            Optional\n                                        prefer\n                                \n                                \n                                            Optional\n                                        withCredentials\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchPolicy\n                                    \n                                \n                                \n                                    \n                                        fetchPolicy:         FetchPolicy\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchPolicy\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefer\n                                    \n                                \n                                \n                                    \n                                        prefer:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  serviceRootUrl?: string;\n  metadataUrl?: string;\n  entitySet?: string;\n  key?: string;\n  type?: string;\n  property?: string;\n  //entity?: boolean;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  //http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793609\n  etag?: {\n    ifMatch?: boolean,\n    ifNoneMatch?:boolean\n  };\n  prefer?: {\n    maxPageSize?: number,\n    return?: 'representation' | 'minimal'\n  };\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: {type: string, collection?: boolean};\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cache.html":{"url":"interfaces/Cache.html","title":"interface - Cache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    get\n                                \n                                \n                                    put\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  serviceRootUrl?: string;\n  metadataUrl?: string;\n  entitySet?: string;\n  key?: string;\n  type?: string;\n  property?: string;\n  //entity?: boolean;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  //http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793609\n  etag?: {\n    ifMatch?: boolean,\n    ifNoneMatch?:boolean\n  };\n  prefer?: {\n    maxPageSize?: number,\n    return?: 'representation' | 'minimal'\n  };\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: {type: string, collection?: boolean};\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAction.html":{"url":"classes/CsdlAction.html","title":"class - CsdlAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                    Optional\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType?: CsdlReturnType, isBound?: boolean, entitySetPath?: string, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlActionImport.html":{"url":"classes/CsdlActionImport.html","title":"class - CsdlActionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlActionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, action: string, entitySet?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotable.html":{"url":"classes/CsdlAnnotable.html","title":"class - CsdlAnnotable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotation.html":{"url":"classes/CsdlAnnotation.html","title":"class - CsdlAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                term\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(term: string, qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            term\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotations.html":{"url":"classes/CsdlAnnotations.html","title":"class - CsdlAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                target\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(target: string, annotationList: CsdlAnnotation[], qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlComplexType.html":{"url":"classes/CsdlComplexType.html","title":"class - CsdlComplexType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlComplexType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityContainer.html":{"url":"classes/CsdlEntityContainer.html","title":"class - CsdlEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actionImports\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySets\n                            \n                            \n                                    Public\n                                    Optional\n                                extend\n                            \n                            \n                                    Public\n                                    Optional\n                                functionImports\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                singletons\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, extend?: string, entitySets?: CsdlEntitySet[], singletons?: CsdlSingleton[], functionImports?: CsdlFunctionImport[], actionImports?: CsdlActionImport[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extend\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySets\n                                                  \n                                                        \n                                                                        CsdlEntitySet[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        singletons\n                                                  \n                                                        \n                                                                        CsdlSingleton[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionImports\n                                                  \n                                                        \n                                                                    CsdlFunctionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionImports\n                                                  \n                                                        \n                                                                    CsdlActionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlActionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntitySet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            extend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlFunctionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            singletons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlSingleton[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlEntitySet } from './csdl-entity-set';\nimport { CsdlSingleton } from './csdl-singleton';\nimport { CsdlFunctionImport, CsdlActionImport } from './csdl-function-action';\n\nexport class CsdlEntityContainer {\n    constructor(\n        public name: string,\n        public extend?: string,\n        public entitySets?: CsdlEntitySet[],\n        public singletons?: CsdlSingleton[],\n        public functionImports?: CsdlFunctionImport[],\n        public actionImports?: CsdlActionImport[]\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntitySet.html":{"url":"classes/CsdlEntitySet.html","title":"class - CsdlEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entityType\n                            \n                            \n                                    Public\n                                    Optional\n                                includeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBinding\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, entityType: string, navigationPropertyBinding?: CsdlNavigationPropertyBinding[], includeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBinding\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBinding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlEntitySet {\n    constructor(\n        public name: string,\n        public entityType: string,\n        public navigationPropertyBinding?: CsdlNavigationPropertyBinding[],\n        public includeInServiceDocument?: boolean\n    ) {\n\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityType.html":{"url":"classes/CsdlEntityType.html","title":"class - CsdlEntityType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                hasStream\n                            \n                            \n                                    Public\n                                    Optional\n                                key\n                            \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, key?: CsdlKey, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean, hasStream?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        CsdlKey\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        hasStream\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            hasStream\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlKey\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumMember.html":{"url":"classes/CsdlEnumMember.html","title":"class - CsdlEnumMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value?: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumType.html":{"url":"classes/CsdlEnumType.html","title":"class - CsdlEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                isFlags\n                            \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                underlyingType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, members: CsdlEnumMember[], underlyingType?: string, isFlags?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        members\n                                                  \n                                                        \n                                                                        CsdlEnumMember[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlyingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isFlags\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isFlags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumMember[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            underlyingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunction.html":{"url":"classes/CsdlFunction.html","title":"class - CsdlFunction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                    Optional\n                                isComposable\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType: CsdlReturnType, isBound?: boolean, entitySetPath?: string, isComposable?: boolean, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isComposable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isComposable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunctionImport.html":{"url":"classes/CsdlFunctionImport.html","title":"class - CsdlFunctionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunctionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                functionName\n                            \n                            \n                                    Public\n                                    Optional\n                                IncludeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, functionName: string, entitySet?: string, IncludeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        IncludeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            functionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            IncludeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlInclude.html":{"url":"classes/CsdlInclude.html","title":"class - CsdlInclude","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlInclude\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                namespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlIncludeAnnotations.html":{"url":"classes/CsdlIncludeAnnotations.html","title":"class - CsdlIncludeAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlIncludeAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                    Optional\n                                targetNamespace\n                            \n                            \n                                    Public\n                                termNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(termNamespace: string, qualifier?: string, targetNamespace?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        termNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            targetNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            termNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlKey.html":{"url":"classes/CsdlKey.html","title":"class - CsdlKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                propertyRefs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(propertyRefs: CsdlPropertyRef[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyRefs\n                                                  \n                                                        \n                                                                    CsdlPropertyRef[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propertyRefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlPropertyRef[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationProperty.html":{"url":"classes/CsdlNavigationProperty.html","title":"class - CsdlNavigationProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                containsTarget\n                            \n                            \n                                    Public\n                                    Optional\n                                onDelete\n                            \n                            \n                                    Public\n                                    Optional\n                                partner\n                            \n                            \n                                    Public\n                                    Optional\n                                referentialConstraints\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, partner?: string, containsTarget?: boolean, referentialConstraints?: CsdlReferentialConstraint[], onDelete?: CsdlOnDelete)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        partner\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        containsTarget\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        referentialConstraints\n                                                  \n                                                        \n                                                                        CsdlReferentialConstraint[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        onDelete\n                                                  \n                                                        \n                                                                        CsdlOnDelete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            containsTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDelete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlOnDelete\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            partner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            referentialConstraints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReferentialConstraint[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationPropertyBinding.html":{"url":"classes/CsdlNavigationPropertyBinding.html","title":"class - CsdlNavigationPropertyBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationPropertyBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(path: string, target: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlNavigationPropertyBinding {\n    constructor(\n        public path: string,\n        public target: string,\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlOnDelete.html":{"url":"classes/CsdlOnDelete.html","title":"class - CsdlOnDelete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlOnDelete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlParameter.html":{"url":"classes/CsdlParameter.html","title":"class - CsdlParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlProperty.html":{"url":"classes/CsdlProperty.html","title":"class - CsdlProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, defaultValue?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlPropertyRef.html":{"url":"classes/CsdlPropertyRef.html","title":"class - CsdlPropertyRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlPropertyRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReference.html":{"url":"classes/CsdlReference.html","title":"class - CsdlReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                includeAnnotations\n                            \n                            \n                                    Public\n                                    Optional\n                                includes\n                            \n                            \n                                    Public\n                                uri\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uri: string, includes?: CsdlInclude[], includeAnnotations?: CsdlIncludeAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        includes\n                                                  \n                                                        \n                                                                        CsdlInclude[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeAnnotations\n                                                  \n                                                        \n                                                                        CsdlIncludeAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeAnnotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlIncludeAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlInclude[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReferentialConstraint.html":{"url":"classes/CsdlReferentialConstraint.html","title":"class - CsdlReferentialConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReferentialConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                property\n                            \n                            \n                                    Public\n                                referencedProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, referencedProperty: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referencedProperty\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            property\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referencedProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReturnType.html":{"url":"classes/CsdlReturnType.html","title":"class - CsdlReturnType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReturnType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSchema.html":{"url":"classes/CsdlSchema.html","title":"class - CsdlSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actions\n                            \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationsList\n                            \n                            \n                                    Public\n                                    Optional\n                                complexTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                entityContainer\n                            \n                            \n                                    Public\n                                    Optional\n                                entityTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                enumTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                functions\n                            \n                            \n                                    Public\n                                namespace\n                            \n                            \n                                    Public\n                                    Optional\n                                terms\n                            \n                            \n                                    Public\n                                    Optional\n                                typeDefinitions\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string, enumTypes?: CsdlEnumType[], complexTypes?: CsdlComplexType[], entityTypes?: CsdlEntityType[], functions?: CsdlFunction[], actions?: CsdlAction[], entityContainer?: CsdlEntityContainer, typeDefinitions?: CsdlTypeDefinition[], terms?: CsdlTerm[], annotationsList?: CsdlAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        enumTypes\n                                                  \n                                                        \n                                                                        CsdlEnumType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        complexTypes\n                                                  \n                                                        \n                                                                        CsdlComplexType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityTypes\n                                                  \n                                                        \n                                                                        CsdlEntityType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functions\n                                                  \n                                                        \n                                                                        CsdlFunction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                        CsdlAction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityContainer\n                                                  \n                                                        \n                                                                        CsdlEntityContainer\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeDefinitions\n                                                  \n                                                        \n                                                                        CsdlTypeDefinition[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        terms\n                                                  \n                                                        \n                                                                        CsdlTerm[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationsList\n                                                  \n                                                        \n                                                                        CsdlAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            complexTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlComplexType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            enumTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlFunction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            terms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTerm[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            typeDefinitions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTypeDefinition[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotation, CsdlAnnotable, CsdlTerm, CsdlAnnotations } from './csdl-annotation';\nimport { CsdlTypeDefinition } from './csdl-type-definition';\nimport { CsdlEnumType } from './csdl-enum-type';\nimport { CsdlEntityType, CsdlComplexType } from './csdl-structured-type';\nimport { CsdlFunction, CsdlAction } from './csdl-function-action';\nimport { CsdlEntityContainer } from './csdl-entity-container';\n\nexport class CsdlSchema extends CsdlAnnotable {\n    constructor(\n        public namespace: string,\n        public alias?: string,\n        public enumTypes?: CsdlEnumType[],\n        public complexTypes?: CsdlComplexType[],\n        public entityTypes?: CsdlEntityType[],\n        public functions?: CsdlFunction[],\n        public actions?: CsdlAction[],\n        public entityContainer?: CsdlEntityContainer,\n        public typeDefinitions?: CsdlTypeDefinition[],\n        public terms?: CsdlTerm[],\n        public annotationsList?: CsdlAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSingleton.html":{"url":"classes/CsdlSingleton.html","title":"class - CsdlSingleton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSingleton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBindings\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, navigationPropertyBindings?: CsdlNavigationPropertyBinding[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBindings\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBindings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlSingleton {\n    constructor(\n        public name: string,\n        public type: string,\n        public navigationPropertyBindings?: CsdlNavigationPropertyBinding[]\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuralProperty.html":{"url":"classes/CsdlStructuralProperty.html","title":"class - CsdlStructuralProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuralProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuredType.html":{"url":"classes/CsdlStructuredType.html","title":"class - CsdlStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTerm.html":{"url":"classes/CsdlTerm.html","title":"class - CsdlTerm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTerm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appliesTo\n                            \n                            \n                                    Public\n                                    Optional\n                                baseTerm\n                            \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, baseTerm?: string, defaultValue?: string, appliesTo?: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseTerm\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        appliesTo\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appliesTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseTerm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTypeDefinition.html":{"url":"classes/CsdlTypeDefinition.html","title":"class - CsdlTypeDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTypeDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                underlayingType\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, underlayingType: string, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlayingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            underlayingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlTypeDefinition extends CsdlAnnotable {\n    constructor(\n        public name: string,\n        public underlayingType: string,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        annotationList?: CsdlAnnotation[]) {\n        super(annotationList);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnumTypeField.html":{"url":"interfaces/EnumTypeField.html","title":"interface - EnumTypeField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EnumTypeField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        annotations\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        annotations\n                                    \n                                \n                                \n                                    \n                                        annotations:         Annotation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Annotation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  serviceRootUrl?: string;\n  metadataUrl?: string;\n  entitySet?: string;\n  key?: string;\n  type?: string;\n  property?: string;\n  //entity?: boolean;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  //http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793609\n  etag?: {\n    ifMatch?: boolean,\n    ifNoneMatch?:boolean\n  };\n  prefer?: {\n    maxPageSize?: number,\n    return?: 'representation' | 'minimal'\n  };\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: {type: string, collection?: boolean};\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/metadata.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldType\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, fieldType: FieldType)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fieldType\n                                                  \n                                                        \n                                                                        FieldType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlTypeDefinition } from './csdl/csdl-type-definition';\nimport { CsdlSchema } from './csdl/csdl-schema';\nimport { Types } from '../../utils/types';\nimport { CsdlEnumType, CsdlEnumMember } from './csdl/csdl-enum-type';\nimport { CsdlEntityType, CsdlPropertyRef, CsdlKey, CsdlComplexType } from './csdl/csdl-structured-type';\nimport { CsdlFunction, CsdlParameter, CsdlFunctionImport, CsdlActionImport, CsdlReturnType, CsdlAction } from './csdl/csdl-function-action';\nimport { CsdlProperty, CsdlNavigationProperty, CsdlReferentialConstraint, CsdlOnDelete } from './csdl/csdl-structural-property';\nimport { CsdlEntitySet } from './csdl/csdl-entity-set';\nimport { CsdlSingleton } from './csdl/csdl-singleton';\nimport { CsdlEntityContainer } from './csdl/csdl-entity-container';\nimport { CsdlReference, CsdlInclude, CsdlIncludeAnnotations } from './csdl/csdl-reference';\nimport { CsdlAnnotation, CsdlTerm, CsdlAnnotations } from './csdl/csdl-annotation';\nimport { CsdlNavigationPropertyBinding } from './csdl/csdl-navigation-property-binding';\nimport { VERSION_4_0 } from '../../constants';\n\nenum FieldType {\n    ATTRIBUTE, TAG\n}\n\nclass Field {\n    constructor(public name: string, public fieldType: FieldType) { }\n}\n\nexport class ODataMetadata {\n    // TAGS\n    private static readonly TAG_EDMX = 'edmx:Edmx';\n    private static readonly TAG_DATA_SERVICES = 'edmx:DataServices';\n    private static readonly TAG_REFERENCE = 'edmx:Reference';\n    private static readonly TAG_INCLUDE = 'edmx:Include';\n    private static readonly TAG_INCLUDE_ANNOTATIONS = 'edmx:IncludeAnnotations';\n    private static readonly TAG_TERM = 'Term';\n    private static readonly TAG_ANNOTATIONS = 'Annotations';\n    private static readonly TAG_ANNOTATION = 'Annotation';\n    private static readonly TAG_SCHEMA = 'Schema';\n    private static readonly TAG_ENUM_TYPE = 'EnumType';\n    private static readonly TAG_MEMBER = 'Member';\n    private static readonly TAG_COMPLEX_TYPE = 'ComplexType';\n    private static readonly TAG_ENTITY_TYPE = 'EntityType';\n    private static readonly TAG_PROPERTY = 'Property';\n    private static readonly TAG_KEY = 'Key';\n    private static readonly TAG_PROPERTY_REF = 'PropertyRef';\n    private static readonly TAG_NAVIGATION_PROPERTY = 'NavigationProperty';\n    private static readonly TAG_REFERENTIAL_CONSTRAINT = 'ReferentialConstraint';\n    private static readonly TAG_ON_DELETE = 'OnDelete';\n    private static readonly TAG_FUNCTION = 'Function';\n    private static readonly TAG_RETURN_TYPE = 'ReturnType';\n    private static readonly TAG_PARAMETER = 'Parameter';\n    private static readonly TAG_ACTION = 'Action';\n    private static readonly TAG_ENTITY_CONTAINER = 'EntityContainer';\n    private static readonly TAG_ENTITY_SET = 'EntitySet';\n    private static readonly TAG_SINGLETON = 'Singleton';\n    private static readonly TAG_FUNCTION_IMPORT = 'FunctionImport';\n    private static readonly TAG_ACTION_IMPORT = 'ActionImport';\n    private static readonly TAG_NAVIGATION_PROPERTY_BINDING = 'NavigationPropertyBinding';\n    private static readonly TAG_TYPE_DEFINITION = 'TypeDefinition';\n\n    // ATTRIBUTES\n    private static readonly ATTRIBUTE_VERSION = 'Version';\n    private static readonly ATTRIBUTE_URI = 'Uri';\n    private static readonly ATTRIBUTE_ALIAS = 'Alias';\n    private static readonly ATTRIBUTE_NAMESPACE = 'Namespace';\n    private static readonly ATTRIBUTE_TERM_NAMESPACE = 'TermNamespace';\n    private static readonly ATTRIBUTE_QUALIFIER = 'Qualifier';\n    private static readonly ATTRIBUTE_TARGET_NAMESPACE = 'TargetNamespace';\n    private static readonly ATTRIBUTE_TERM = 'Term';\n    private static readonly ATTRIBUTE_NAME = 'Name';\n    private static readonly ATTRIBUTE_VALUE = 'Value';\n    private static readonly ATTRIBUTE_BASE_TYPE = 'BaseType';\n    private static readonly ATTRIBUTE_OPEN_TYPE = 'OpenType';\n    private static readonly ATTRIBUTE_TYPE = 'Type';\n    private static readonly ATTRIBUTE_NULLABLE = 'Nullable';\n    private static readonly ATTRIBUTE_MAX_LENGTH = 'MaxLength';\n    private static readonly ATTRIBUTE_PRECISION = 'Precision';\n    private static readonly ATTRIBUTE_SCALE = 'Scale';\n    private static readonly ATTRIBUTE_UNICODE = 'Unicode';\n    private static readonly ATTRIBUTE_SRID = 'SRID';\n    private static readonly ATTRIBUTE_DEFAULT_VALUE = 'DefaultValue';\n    private static readonly ATTRIBUTE_PARTNER = 'Partner';\n    private static readonly ATTRIBUTE_PROPERTY = 'Property';\n    private static readonly ATTRIBUTE_REFERENCED_PROPERTY = 'ReferencedProperty';\n    private static readonly ATTRIBUTE_HAS_STREAM = 'HasStream';\n    private static readonly ATTRIBUTE_CONTAINS_TARGET = 'ContainsTarget';\n    private static readonly ATTRIBUTE_IS_BOUND = 'IsBound';\n    private static readonly ATTRIBUTE_ENTITY_SET_PATH = 'EntitySetPath';\n    private static readonly ATTRIBUTE_IS_COMPOSABLE = 'IsComposable';\n    private static readonly ATTRIBUTE_ENTITY_TYPE = 'EntityType';\n    private static readonly ATTRIBUTE_PATH = 'Path';\n    private static readonly ATTRIBUTE_TARGET = 'Target';\n    private static readonly ATTRIBUTE_FUNCTION = 'Function';\n    private static readonly ATTRIBUTE_ACTION = 'Action';\n    private static readonly ATTRIBUTE_ENTITY_SET = 'EntitySet';\n    private static readonly ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT = 'IncludeInServiceDocument';\n    private static readonly ATTRIBUTE_ABSTRACT = 'Abstract';\n    private static readonly ATTRIBUTE_UNDERLYING_TYPE = 'UnderlyingType';\n    private static readonly ATTRIBUTE_IS_FLAGS = 'IsFlags';\n    private static readonly ATTRIBUTE_EXTENDS = 'Extends';\n    private static readonly ATTRIBUTE_BASE_TERM = 'BaseTerm';\n    private static readonly ATTRIBUTE_APPLIES_TO = 'AppliesTo';\n\n    public readonly version: string;\n    public readonly references: CsdlReference[];\n    public readonly schemas: CsdlSchema[];\n\n    constructor(xml: string) {\n        try {\n            const parser: DOMParser = new DOMParser();\n            const document: Document = parser.parseFromString(xml, 'text/xml');\n\n            this.checkVersion(document);\n\n            this.version = this.getFieldValueByAttribute(\n                new Field(ODataMetadata.ATTRIBUTE_VERSION, FieldType.ATTRIBUTE),\n                document.documentElement.attributes);\n\n            this.references = this.getObjects(document.documentElement, ODataMetadata.TAG_REFERENCE, [\n                new Field(ODataMetadata.ATTRIBUTE_URI, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.TAG_INCLUDE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_INCLUDE_ANNOTATIONS, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n\n            const dataServices: Element = document.documentElement.getElementsByTagName(ODataMetadata.TAG_DATA_SERVICES)[0];\n            this.schemas = this.getObjects(dataServices, ODataMetadata.TAG_SCHEMA, [\n                new Field(ODataMetadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.TAG_ENUM_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_COMPLEX_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ENTITY_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_FUNCTION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ACTION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ENTITY_CONTAINER, FieldType.TAG),\n                new Field(ODataMetadata.TAG_TYPE_DEFINITION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_TERM, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATIONS, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n        } catch (error) {\n            throw new Error('Unable to parse metadata, ' + error);\n        }\n    }\n\n    protected checkVersion(document: Document) {\n        // check version\n        const attributes: NamedNodeMap = document.documentElement.attributes;\n        if (!attributes) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const attr: Attr | null = attributes.getNamedItem('Version');\n        if (attr === null) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const odataVersion = attr?.nodeValue;\n        if (odataVersion !== VERSION_4_0) {\n            throw new Error('OData version \"' + odataVersion + '\" is not supported');\n        }\n    }\n\n    protected getObjects(parentElement: Element, tag: string, fieldNames: Field[]): any[] {\n        let objects: any[] = [];\n\n        const children: HTMLCollection = parentElement.children;\n        for (let index = 0; index \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataAnnotation.html":{"url":"classes/ODataAnnotation.html","title":"class - ODataAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annot: AnnotationConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/annotation.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annot\n                                                  \n                                                        \n                                                                        AnnotationConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/annotation.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AnnotationConfig } from '../types';\n\nexport class ODataAnnotation {\n  type: string;\n  constructor(annot: AnnotationConfig) {\n    this.type = annot.type;\n    Object.assign(this, annot);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataApiOptions.html":{"url":"classes/ODataApiOptions.html","title":"class - ODataApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataApiOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/options.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ApiOptions\n                            OptionsHelper\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                etag\n                            \n                            \n                                fetchPolicy\n                            \n                            \n                                headers\n                            \n                            \n                                    Optional\n                                ieee754Compatible\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                params\n                            \n                            \n                                    Optional\n                                prefer\n                            \n                            \n                                    Optional\n                                streaming\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                version\n                            \n                            \n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/options.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            etag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {ifMatch: true, ifNoneMatch: false}\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FetchPolicy\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ieee754Compatible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            metadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataMetadataType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            prefer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            streaming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataVersion\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/options.ts:38\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DEFAULT_FETCH_POLICY, DEFAULT_VERSION } from './constants';\nimport { ODataHelper } from './helpers';\nimport { ApiOptions, FetchPolicy, ODataMetadataType, ODataVersion, OptionsHelper } from './types';\n\nexport class ODataApiOptions implements ApiOptions, OptionsHelper {\n  version: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  fetchPolicy: FetchPolicy;\n  streaming?: boolean;\n  // Http\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  etag: {\n    ifMatch: boolean;\n    ifNoneMatch: boolean;\n  } = {ifMatch: true, ifNoneMatch: false};\n  prefer?: {\n    maxPageSize?: number;\n    return?: 'representation' | 'minimal';\n  };\n\n  constructor(config: ApiOptions) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.metadata = config.metadata;\n    this.stringAsEnum = config.stringAsEnum;\n    this.ieee754Compatible = config.ieee754Compatible;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.withCredentials = config.withCredentials;\n    this.fetchPolicy = config.fetchPolicy || DEFAULT_FETCH_POLICY;\n    this.prefer = config.prefer;\n    Object.assign(this.etag, config.etag || {});\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBatchRequest.html":{"url":"classes/ODataBatchRequest.html","title":"class - ODataBatchRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBatchRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/batch.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onError\n                            \n                            \n                                onLoad\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: ODataRequest)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/types/batch.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                        ODataRequest\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataRequest\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:51\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(content: string[], status: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoad\n                        \n                        \n                    \n                \n            \n            \n                \nonLoad(content: string[], status: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataResource } from '../resource';\nimport { HttpHeaders, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { BOUNDARY_PREFIX_SUFFIX, APPLICATION_JSON, HTTP11, CONTENT_TYPE, NEWLINE, BATCH_PREFIX, $BATCH, MULTIPART_MIXED_BOUNDARY, VERSION_4_0, MULTIPART_MIXED, ODATA_VERSION, ACCEPT, CONTENT_TRANSFER_ENCODING, APPLICATION_HTTP, CONTENT_ID, BINARY, CHANGESET_PREFIX, NEWLINE_REGEXP } from '../../constants';\nimport { ODataRequest } from '../request';\nimport { ODataApi } from '../../api';\nimport { ODataResponse } from '../responses';\nimport { HttpOptions } from './options';\nimport { Http } from '../../utils/http';\n\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n\n// From https://github.com/adamhalasz/uniqid\nvar glast: number;\nfunction now() {\n  let time = Date.now();\n  let last = glast || time;\n  return glast = time > last ? time : last + 1;\n}\nfunction uniqid(prefix?: string, suffix?: string): string { return (prefix ? prefix : '') + now().toString(36) + (suffix ? suffix : ''); }\n\nfunction getHeaderValue(header: string): string {\n  let res: string = header.split(';')[0].trim();\n  res = res.split(':')[1].trim();\n  return res;\n}\n\nfunction getBoundaryDelimiter(contentType: string): string {\n  const contentTypeParts: string[] = contentType.split(';');\n  if (contentTypeParts.length === 2) {\n    const boundary: string = contentType.split(';')[1].trim();\n    const boundaryDelimiter: string = BOUNDARY_PREFIX_SUFFIX + boundary.split('=')[1];\n    return boundaryDelimiter;\n  } else {\n    return '';\n  }\n}\n\nfunction getBoundaryEnd(boundaryDelimiter: string): string {\n  if (!boundaryDelimiter.length) {\n    return '';\n  }\n  const boundaryEnd: string = boundaryDelimiter + BOUNDARY_PREFIX_SUFFIX;\n  return boundaryEnd;\n}\n\nexport class ODataBatchRequest extends Subject> {\n  constructor(public request: ODataRequest)\n   {\n    super();\n  }\n\n  toString() {\n    //TODO: Relative or Absolute url ?\n    let res = [`${this.request.method} ${this.request.pathWithParams} ${HTTP11}`];\n    if (this.request.method === 'POST' || this.request.method === 'PATCH' || this.request.method === 'PUT') {\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_JSON}`);\n    }\n\n    if (this.request.headers instanceof HttpHeaders) {\n      let headers = this.request.headers;\n      res = [\n        ...res,\n        ...headers.keys().map(key => `${key}: ${(headers.getAll(key) || []).join(',')}`)\n      ];\n    }\n\n    return res.join(NEWLINE);\n  }\n\n  onLoad(content: string[], status: { code: number, text: string }) {\n    let headers: HttpHeaders = new HttpHeaders();\n    var index = 1;\n    for (; index = 200 && status.code ({\n        body,\n        headers,\n        status: status.code,\n        statusText: status.text,\n        url: this.request.urlWithParams\n      });\n      this.next(ODataResponse.fromHttpResponse(this.request, res));\n      this.complete();\n    } else {\n      // An unsuccessful request is delivered on the error channel.\n      this.error(new HttpErrorResponse({\n        // The error in this case is the response body (error from the server).\n        error: body,\n        headers,\n        status: status.code,\n        statusText: status.text,\n        url: this.request.urlWithParams\n      }));\n    }\n  }\n\n  onError(content: string[], status: { code: number, text: string }) {\n    const res = new HttpErrorResponse({\n      error: content.join(NEWLINE),\n      status: status.code || 0,\n      statusText: status.text || 'Unknown Error',\n      url: this.request.urlWithParams || undefined,\n    });\n    this.error(res);\n  }\n}\n\nexport class ODataBatchResource extends ODataResource {\n  // VARIABLES\n  private requests: ODataBatchRequest[];\n  batchBoundary: string;\n\n  constructor(api: ODataApi, segments?: ODataPathSegments) {\n    super(api, segments);\n    this.batchBoundary = uniqid(BATCH_PREFIX);\n    this.requests = [];\n  }\n\n  clone() {\n    //TODO: Clone\n    return new ODataBatchResource(this.api, this.pathSegments.clone());\n  }\n\n  //#region Factory\n  static factory(api: ODataApi) {\n    let segments = new ODataPathSegments();\n    segments.add(PathSegmentNames.batch, $BATCH);\n    return new ODataBatchResource(api, segments);\n  }\n  //#endregion\n\n  post(func: (batch: ODataBatchResource) => void, options?: HttpOptions): Observable> {\n    const current = this.api.request;\n    this.api.request = (req: ODataRequest): Observable => {\n      if (req.api !== this.api)\n        throw new Error(\"Batch Request are for the same api.\");\n      if (req.observe === 'events')\n        throw new Error(\"Batch Request does not allows observe == 'events'.\");\n      this.requests.push(new ODataBatchRequest(req));\n      return this.requests[this.requests.length - 1];\n    }\n    try {\n      func(this);\n    } finally {\n      this.api.request = current;\n    }\n\n    const headers = Http.mergeHttpHeaders((options && options.headers) || {}, {\n      [ODATA_VERSION]: VERSION_4_0,\n      [CONTENT_TYPE]: MULTIPART_MIXED_BOUNDARY + this.batchBoundary,\n      [ACCEPT]: MULTIPART_MIXED\n    });\n    const request = new ODataRequest({\n      method: \"POST\",\n      body: this.body(),\n      api: this.api,\n      resource: this,\n      observe: 'response',\n      responseType: 'text',\n      headers: headers,\n      params: options ? options.params : undefined,\n      withCredentials: options ? options.withCredentials : undefined\n    });\n\n    return this.api.request(request).pipe(\n      map((resp: ODataResponse) => {\n        this.handleResponse(resp);\n        return resp;\n      })\n    );\n  }\n\n  body(): string {\n    let res = [];\n    let changesetBoundary: string | null = null;\n    let changesetId = 1;\n\n    for (const batch of this.requests) {\n      // if method is GET and there is a changeset boundary open then close it\n      if (batch.request.method === 'GET' && changesetBoundary !== null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n        changesetBoundary = null;\n      }\n\n      // if there is no changeset boundary open then open a batch boundary\n      if (changesetBoundary === null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${this.batchBoundary}`);\n      }\n\n      // if method is not GET and there is no changeset boundary open then open a changeset boundary\n      if (batch.request.method !== 'GET') {\n        if (changesetBoundary === null) {\n          changesetBoundary = uniqid(CHANGESET_PREFIX);\n          res.push(`${CONTENT_TYPE}: ${MULTIPART_MIXED_BOUNDARY}${changesetBoundary}`);\n          res.push(NEWLINE);\n        }\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}`);\n      }\n\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_HTTP}`);\n      res.push(`${CONTENT_TRANSFER_ENCODING}: ${BINARY}`);\n\n      if (batch.request.method !== 'GET') {\n        res.push(`${CONTENT_ID}: ${changesetId++}`);\n      }\n\n      res.push(NEWLINE);\n      res.push(`${batch}`);\n\n      if (batch.request.method === 'GET' || batch.request.method === 'DELETE') {\n        res.push(NEWLINE);\n      } else {\n        res.push(`${NEWLINE}${JSON.stringify(batch.request.body)}`);\n      }\n    }\n\n    if (res.length) {\n      if (changesetBoundary !== null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n        changesetBoundary = null;\n      }\n      res.push(`${BOUNDARY_PREFIX_SUFFIX}${this.batchBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n    }\n    return res.join(NEWLINE);\n  }\n\n  handleResponse(response: ODataResponse) {\n    let chunks: string[][] = [];\n    const contentType: string = response.headers.get(CONTENT_TYPE) || \"\";\n    const batchBoundary: string = getBoundaryDelimiter(contentType);\n    const endLine: string = getBoundaryEnd(batchBoundary);\n\n    const lines: string[] = response.body.split(NEWLINE_REGEXP);\n\n    let changesetResponses: string[][] | null = null;\n    let contentId: number | null = null;\n    let changesetBoundary: string | null = null;\n    let changesetEndLine: string | null = null;\n    let startIndex: number | null = null;\n    for (let index = 0; index  {\n      const req = this.requests[index];\n      const statusParts = chunk[0].split(' ');\n      req.onLoad(chunk.slice(1), {\n        code: Number(statusParts[1]),\n        text: statusParts[2]\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBatchResource.html":{"url":"classes/ODataBatchResource.html","title":"class - ODataBatchResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBatchResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/batch.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batchBoundary\n                            \n                            \n                                    Private\n                                requests\n                            \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                handleResponse\n                            \n                            \n                                post\n                            \n                            \n                                alias\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                isSubtypeOf\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ODataApi, segments?: ODataPathSegments)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/types/batch.ts:150\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataPathSegments\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchBoundary\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:150\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataBatchRequest[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:149\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:27\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            body\n                        \n                        \n                    \n                \n            \n            \n                \nbody()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataBatchResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(api: ODataApi)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api\n                                    \n                                                ODataApi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataBatchResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResponse\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResponse(response: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            post\n                        \n                        \n                    \n                \n            \n            \n                \npost(func: (batch: ODataBatchResource) => void, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:110\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:207\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endpointUrl\n                        \n                        \n                    \n                \n            \n            \n                \nendpointUrl()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:176\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSubtypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisSubtypeOf(other: ODataResource)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:64\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:184\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:191\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:115\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:42\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:49\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataResource } from '../resource';\nimport { HttpHeaders, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { BOUNDARY_PREFIX_SUFFIX, APPLICATION_JSON, HTTP11, CONTENT_TYPE, NEWLINE, BATCH_PREFIX, $BATCH, MULTIPART_MIXED_BOUNDARY, VERSION_4_0, MULTIPART_MIXED, ODATA_VERSION, ACCEPT, CONTENT_TRANSFER_ENCODING, APPLICATION_HTTP, CONTENT_ID, BINARY, CHANGESET_PREFIX, NEWLINE_REGEXP } from '../../constants';\nimport { ODataRequest } from '../request';\nimport { ODataApi } from '../../api';\nimport { ODataResponse } from '../responses';\nimport { HttpOptions } from './options';\nimport { Http } from '../../utils/http';\n\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n\n// From https://github.com/adamhalasz/uniqid\nvar glast: number;\nfunction now() {\n  let time = Date.now();\n  let last = glast || time;\n  return glast = time > last ? time : last + 1;\n}\nfunction uniqid(prefix?: string, suffix?: string): string { return (prefix ? prefix : '') + now().toString(36) + (suffix ? suffix : ''); }\n\nfunction getHeaderValue(header: string): string {\n  let res: string = header.split(';')[0].trim();\n  res = res.split(':')[1].trim();\n  return res;\n}\n\nfunction getBoundaryDelimiter(contentType: string): string {\n  const contentTypeParts: string[] = contentType.split(';');\n  if (contentTypeParts.length === 2) {\n    const boundary: string = contentType.split(';')[1].trim();\n    const boundaryDelimiter: string = BOUNDARY_PREFIX_SUFFIX + boundary.split('=')[1];\n    return boundaryDelimiter;\n  } else {\n    return '';\n  }\n}\n\nfunction getBoundaryEnd(boundaryDelimiter: string): string {\n  if (!boundaryDelimiter.length) {\n    return '';\n  }\n  const boundaryEnd: string = boundaryDelimiter + BOUNDARY_PREFIX_SUFFIX;\n  return boundaryEnd;\n}\n\nexport class ODataBatchRequest extends Subject> {\n  constructor(public request: ODataRequest)\n   {\n    super();\n  }\n\n  toString() {\n    //TODO: Relative or Absolute url ?\n    let res = [`${this.request.method} ${this.request.pathWithParams} ${HTTP11}`];\n    if (this.request.method === 'POST' || this.request.method === 'PATCH' || this.request.method === 'PUT') {\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_JSON}`);\n    }\n\n    if (this.request.headers instanceof HttpHeaders) {\n      let headers = this.request.headers;\n      res = [\n        ...res,\n        ...headers.keys().map(key => `${key}: ${(headers.getAll(key) || []).join(',')}`)\n      ];\n    }\n\n    return res.join(NEWLINE);\n  }\n\n  onLoad(content: string[], status: { code: number, text: string }) {\n    let headers: HttpHeaders = new HttpHeaders();\n    var index = 1;\n    for (; index = 200 && status.code ({\n        body,\n        headers,\n        status: status.code,\n        statusText: status.text,\n        url: this.request.urlWithParams\n      });\n      this.next(ODataResponse.fromHttpResponse(this.request, res));\n      this.complete();\n    } else {\n      // An unsuccessful request is delivered on the error channel.\n      this.error(new HttpErrorResponse({\n        // The error in this case is the response body (error from the server).\n        error: body,\n        headers,\n        status: status.code,\n        statusText: status.text,\n        url: this.request.urlWithParams\n      }));\n    }\n  }\n\n  onError(content: string[], status: { code: number, text: string }) {\n    const res = new HttpErrorResponse({\n      error: content.join(NEWLINE),\n      status: status.code || 0,\n      statusText: status.text || 'Unknown Error',\n      url: this.request.urlWithParams || undefined,\n    });\n    this.error(res);\n  }\n}\n\nexport class ODataBatchResource extends ODataResource {\n  // VARIABLES\n  private requests: ODataBatchRequest[];\n  batchBoundary: string;\n\n  constructor(api: ODataApi, segments?: ODataPathSegments) {\n    super(api, segments);\n    this.batchBoundary = uniqid(BATCH_PREFIX);\n    this.requests = [];\n  }\n\n  clone() {\n    //TODO: Clone\n    return new ODataBatchResource(this.api, this.pathSegments.clone());\n  }\n\n  //#region Factory\n  static factory(api: ODataApi) {\n    let segments = new ODataPathSegments();\n    segments.add(PathSegmentNames.batch, $BATCH);\n    return new ODataBatchResource(api, segments);\n  }\n  //#endregion\n\n  post(func: (batch: ODataBatchResource) => void, options?: HttpOptions): Observable> {\n    const current = this.api.request;\n    this.api.request = (req: ODataRequest): Observable => {\n      if (req.api !== this.api)\n        throw new Error(\"Batch Request are for the same api.\");\n      if (req.observe === 'events')\n        throw new Error(\"Batch Request does not allows observe == 'events'.\");\n      this.requests.push(new ODataBatchRequest(req));\n      return this.requests[this.requests.length - 1];\n    }\n    try {\n      func(this);\n    } finally {\n      this.api.request = current;\n    }\n\n    const headers = Http.mergeHttpHeaders((options && options.headers) || {}, {\n      [ODATA_VERSION]: VERSION_4_0,\n      [CONTENT_TYPE]: MULTIPART_MIXED_BOUNDARY + this.batchBoundary,\n      [ACCEPT]: MULTIPART_MIXED\n    });\n    const request = new ODataRequest({\n      method: \"POST\",\n      body: this.body(),\n      api: this.api,\n      resource: this,\n      observe: 'response',\n      responseType: 'text',\n      headers: headers,\n      params: options ? options.params : undefined,\n      withCredentials: options ? options.withCredentials : undefined\n    });\n\n    return this.api.request(request).pipe(\n      map((resp: ODataResponse) => {\n        this.handleResponse(resp);\n        return resp;\n      })\n    );\n  }\n\n  body(): string {\n    let res = [];\n    let changesetBoundary: string | null = null;\n    let changesetId = 1;\n\n    for (const batch of this.requests) {\n      // if method is GET and there is a changeset boundary open then close it\n      if (batch.request.method === 'GET' && changesetBoundary !== null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n        changesetBoundary = null;\n      }\n\n      // if there is no changeset boundary open then open a batch boundary\n      if (changesetBoundary === null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${this.batchBoundary}`);\n      }\n\n      // if method is not GET and there is no changeset boundary open then open a changeset boundary\n      if (batch.request.method !== 'GET') {\n        if (changesetBoundary === null) {\n          changesetBoundary = uniqid(CHANGESET_PREFIX);\n          res.push(`${CONTENT_TYPE}: ${MULTIPART_MIXED_BOUNDARY}${changesetBoundary}`);\n          res.push(NEWLINE);\n        }\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}`);\n      }\n\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_HTTP}`);\n      res.push(`${CONTENT_TRANSFER_ENCODING}: ${BINARY}`);\n\n      if (batch.request.method !== 'GET') {\n        res.push(`${CONTENT_ID}: ${changesetId++}`);\n      }\n\n      res.push(NEWLINE);\n      res.push(`${batch}`);\n\n      if (batch.request.method === 'GET' || batch.request.method === 'DELETE') {\n        res.push(NEWLINE);\n      } else {\n        res.push(`${NEWLINE}${JSON.stringify(batch.request.body)}`);\n      }\n    }\n\n    if (res.length) {\n      if (changesetBoundary !== null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n        changesetBoundary = null;\n      }\n      res.push(`${BOUNDARY_PREFIX_SUFFIX}${this.batchBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n    }\n    return res.join(NEWLINE);\n  }\n\n  handleResponse(response: ODataResponse) {\n    let chunks: string[][] = [];\n    const contentType: string = response.headers.get(CONTENT_TYPE) || \"\";\n    const batchBoundary: string = getBoundaryDelimiter(contentType);\n    const endLine: string = getBoundaryEnd(batchBoundary);\n\n    const lines: string[] = response.body.split(NEWLINE_REGEXP);\n\n    let changesetResponses: string[][] | null = null;\n    let contentId: number | null = null;\n    let changesetBoundary: string | null = null;\n    let changesetEndLine: string | null = null;\n    let startIndex: number | null = null;\n    for (let index = 0; index  {\n      const req = this.requests[index];\n      const statusParts = chunk[0].split(' ');\n      req.onLoad(chunk.slice(1), {\n        code: Number(statusParts[1]),\n        text: statusParts[2]\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCache.html":{"url":"classes/ODataCache.html","title":"class - ODataCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/cache.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Cache\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEntry\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init?: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/cache.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/cache/cache.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/cache/cache.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: T; lastRead: any; timeout: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\nimport { DEFAULT_TIMEOUT } from '../constants';\nimport { Cache } from '../types';\nimport { ODataRequest, ODataResponse } from '../resources';\n\nexport interface ODataCacheEntry {\n  payload: T;\n  lastRead: number;\n  timeout?: number;\n}\n\nexport abstract class ODataCache implements Cache {\n  timeout: number;\n  entries: Map>;\n  constructor(init?: {timeout?: number}) {\n    this.timeout = init?.timeout || DEFAULT_TIMEOUT;\n    this.entries = new Map>();\n  }\n  abstract getResponse(req: ODataRequest): ODataResponse | undefined;\n  abstract putResponse(req: ODataRequest, res: ODataResponse): void;\n\n  buildEntry(payload: T, timeout?: number) {\n    return {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    };\n  }\n\n  put(key: string, payload: T, timeout?: number) {\n    const entry = {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    } as ODataCacheEntry;\n    this.entries.set(key, entry);\n    this.remove();\n  }\n\n  get(key: string) {\n    const entry = this.entries.get(key);\n    return entry !== undefined && !this.isExpired(entry) ? entry.payload : undefined;\n  }\n\n  private remove() {\n    // remove expired cache entries\n    this.entries.forEach((entry, key) => {\n      if (this.isExpired(entry)) {\n        this.entries.delete(key);\n      }\n    });\n  }\n\n  isExpired(entry: ODataCacheEntry) {\n    return entry.lastRead ) {\n    return req.observe === 'response' && req.method === 'GET';\n  }\n\n  handleRequest(req: ODataRequest, res$: Observable>): Observable> {\n    const policy = req.fetchPolicy;\n    const cached = this.getResponse(req);\n    if (policy === 'no-cache') {\n      return res$;\n    }\n    if (policy === 'cache-only') {\n      if (cached) {\n        return of(cached);\n      } else {\n        return throwError(\"No Cached\");\n      }\n    }\n    if (policy === 'cache-first' || policy === 'cache-and-network' || policy === 'network-only') {\n      res$ = res$.pipe(tap((res: ODataResponse) => {\n        if (res.options.cacheability !== 'no-store')\n          this.putResponse(req, res);\n      }));\n    }\n    return (cached !== undefined && policy !== 'network-only') ?\n      (policy === 'cache-and-network' ? res$.pipe(startWith(cached)) : of(cached)) :\n      res$;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ODataCacheEntry.html":{"url":"interfaces/ODataCacheEntry.html","title":"interface - ODataCacheEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ODataCacheEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/cache.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastRead\n                                \n                                \n                                        payload\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastRead\n                                    \n                                \n                                \n                                    \n                                        lastRead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\nimport { DEFAULT_TIMEOUT } from '../constants';\nimport { Cache } from '../types';\nimport { ODataRequest, ODataResponse } from '../resources';\n\nexport interface ODataCacheEntry {\n  payload: T;\n  lastRead: number;\n  timeout?: number;\n}\n\nexport abstract class ODataCache implements Cache {\n  timeout: number;\n  entries: Map>;\n  constructor(init?: {timeout?: number}) {\n    this.timeout = init?.timeout || DEFAULT_TIMEOUT;\n    this.entries = new Map>();\n  }\n  abstract getResponse(req: ODataRequest): ODataResponse | undefined;\n  abstract putResponse(req: ODataRequest, res: ODataResponse): void;\n\n  buildEntry(payload: T, timeout?: number) {\n    return {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    };\n  }\n\n  put(key: string, payload: T, timeout?: number) {\n    const entry = {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    } as ODataCacheEntry;\n    this.entries.set(key, entry);\n    this.remove();\n  }\n\n  get(key: string) {\n    const entry = this.entries.get(key);\n    return entry !== undefined && !this.isExpired(entry) ? entry.payload : undefined;\n  }\n\n  private remove() {\n    // remove expired cache entries\n    this.entries.forEach((entry, key) => {\n      if (this.isExpired(entry)) {\n        this.entries.delete(key);\n      }\n    });\n  }\n\n  isExpired(entry: ODataCacheEntry) {\n    return entry.lastRead ) {\n    return req.observe === 'response' && req.method === 'GET';\n  }\n\n  handleRequest(req: ODataRequest, res$: Observable>): Observable> {\n    const policy = req.fetchPolicy;\n    const cached = this.getResponse(req);\n    if (policy === 'no-cache') {\n      return res$;\n    }\n    if (policy === 'cache-only') {\n      if (cached) {\n        return of(cached);\n      } else {\n        return throwError(\"No Cached\");\n      }\n    }\n    if (policy === 'cache-first' || policy === 'cache-and-network' || policy === 'network-only') {\n      res$ = res$.pipe(tap((res: ODataResponse) => {\n        if (res.options.cacheability !== 'no-store')\n          this.putResponse(req, res);\n      }));\n    }\n    return (cached !== undefined && policy !== 'network-only') ?\n      (policy === 'cache-and-network' ? res$.pipe(startWith(cached)) : of(cached)) :\n      res$;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCallable.html":{"url":"classes/ODataCallable.html","title":"class - ODataCallable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCallable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/callable.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bound\n                            \n                            \n                                    Optional\n                                composable\n                            \n                            \n                                    Optional\n                                entitySetPath\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                path\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: CallableConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/callable.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CallableConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            composable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataCallableParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            path\n                        \n                        \n                    \n                \n            \n            \n                \npath()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:38\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Parser, CallableConfig } from '../types';\nimport { ODataSchema } from './schema';\nimport { ODataCallableParser } from '../parsers';\n\nexport class ODataCallable {\n  schema: ODataSchema;\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parser: ODataCallableParser;\n\n  constructor(config: CallableConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.entitySetPath = config.entitySetPath;\n    this.bound = config.bound;\n    this.composable = config.composable;\n    this.parser = new ODataCallableParser(config, schema.namespace, schema.alias);\n  }\n\n  path() {\n    let path: string;\n    if (this.entitySetPath)\n      path = this.entitySetPath;\n    else if (this.bound)\n      path = `${this.schema.namespace}.${this.name}`;\n    else\n      path = this.parser.return ? this.api.findEntitySetForType(this.parser.return.type)?.name || this.name : this.name;\n    return path;\n  }\n  type({alias = false}: {alias?: boolean} = {}) {\n    return `${alias ? this.schema.alias : this.schema.namespace}.${this.name}`;\n  }\n  isTypeOf(type: string) {\n    return this.parser.isTypeOf(type);\n  }\n  get api() {\n    return this.schema.api;\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser }) {\n    const parserSettings = Object.assign({options: this.api.options}, settings);\n    this.parser.configure(parserSettings);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCallableParser.html":{"url":"classes/ODataCallableParser.html","title":"class - ODataCallableParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCallableParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/callable.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                            \n                                parameters\n                            \n                            \n                                parser\n                            \n                            \n                                    Optional\n                                return\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                binding\n                            \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: CallableConfig, namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/callable.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CallableConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataParameterParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            return\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:33\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            binding\n                        \n                        \n                    \n                \n            \n            \n                \nbinding()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     R\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(params: any, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CALLABLE_BINDING_PARAMETER } from '../constants';\nimport { Parser, Parameter, CallableConfig, StructuredTypeFieldOptions, NONE_PARSER } from '../types';\n\nexport class ODataParameterParser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  collection?: boolean;\n  nullable?: boolean;\n\n  constructor(name: string, parameter: Parameter) {\n    this.name = name;\n    this.type = parameter.type;\n    this.parser = NONE_PARSER;\n    Object.assign(this, parameter);\n  }\n\n  serialize(value: T, options: StructuredTypeFieldOptions): any {\n    return Array.isArray(value) ?\n      value.map(v => this.parser.serialize(v, options)) :\n      this.parser.serialize(value, options);\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser }) {\n    this.parser = settings.findParserForType(this.type);\n  }\n}\n\nexport class ODataCallableParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  return?: { type: string, callable?: boolean};\n  parser: Parser;\n  parameters: ODataParameterParser[];\n  constructor(config: CallableConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.return = config.return;\n    this.parser = NONE_PARSER;\n    this.parameters = Object.entries(config.parameters || [])\n      .map(([name, p]) => new ODataParameterParser(name, p as Parameter));\n  }\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias)\n      names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options: StructuredTypeFieldOptions): R {\n    return this.parser.deserialize(value, options);\n  }\n\n  // Serialize\n  serialize(params: any, options: StructuredTypeFieldOptions): any {\n    return Object.assign({}, this.parameters.filter(p => p.name !== CALLABLE_BINDING_PARAMETER)\n      .filter(p => p.name in params && params[p.name] !== undefined)\n      .reduce((acc, p) => Object.assign(acc, { [p.name]: p.serialize(params[p.name], options) }), {})\n    );\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser }) {\n    if (this.return)\n      this.parser = settings.findParserForType(this.return.type) || NONE_PARSER;\n    this.parameters.forEach(p => p.configure(settings));\n  }\n\n  binding() {\n    return this.parameters.find(p => p.name === CALLABLE_BINDING_PARAMETER);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCountResource.html":{"url":"classes/ODataCountResource.html","title":"class - ODataCountResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCountResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/count.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                fetch\n                            \n                            \n                                alias\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                isSubtypeOf\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    segment\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:27\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataCountResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(api: ODataApi, segments: ODataPathSegments, options: ODataQueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api\n                                    \n                                                ODataApi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                                ODataPathSegments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataCountResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(options: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:110\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:207\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endpointUrl\n                        \n                        \n                    \n                \n            \n            \n                \nendpointUrl()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:176\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSubtypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisSubtypeOf(other: ODataResource)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:64\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:184\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:191\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:115\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:42\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:49\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        segment\n                    \n                \n\n                \n                    \n                        getsegment()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataQueryOptions, QueryOptionNames } from '../query-options';\nimport { ODataResource } from '../resource';\nimport { HttpOptions } from './options';\nimport { $COUNT } from '../../constants';\nimport { ODataApi } from '../../api';\n\nexport class ODataCountResource extends ODataResource {\n  //#region Factory\n  static factory(api: ODataApi, segments: ODataPathSegments, options: ODataQueryOptions) {\n    segments.add(PathSegmentNames.count, $COUNT).type('Edm.Int32');\n    options.keep(QueryOptionNames.filter, QueryOptionNames.search);\n    return new ODataCountResource(api, segments, options);\n  }\n\n  get segment() {\n    const segments = this.pathSegments;\n    return {\n      entitySet() {\n        return segments.get(PathSegmentNames.entitySet);\n      },\n      navigationProperty() {\n        return segments.get(PathSegmentNames.navigationProperty);\n      }\n    }\n  }\n\n  clone() {\n    return new ODataCountResource(this.api, this.pathSegments.clone(), this.queryOptions.clone());\n  }\n  //#endregion\n\n  //#region Requests\n  fetch(options: HttpOptions = {}): Observable {\n    return super.get(\n      Object.assign({responseType: 'value'}, options)\n    );\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitiesMeta.html":{"url":"classes/ODataEntitiesMeta.html","title":"class - ODataEntitiesMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitiesMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataMeta\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _functions\n                            \n                            \n                                    Private\n                                    Optional\n                                _context\n                            \n                            \n                                    Private\n                                    Optional\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                function\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                                \n                                    readLink\n                                \n                                \n                                    count\n                                \n                                \n                                    nextLink\n                                \n                                \n                                    deltaLink\n                                \n                                \n                                    top\n                                \n                                \n                                    skip\n                                \n                                \n                                    skiptoken\n                                \n                                \n                                    functions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:174\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataContext\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:8\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitiesMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:139\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:143\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        count\n                    \n                \n\n                \n                    \n                        getcount()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:147\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextLink\n                    \n                \n\n                \n                    \n                        getnextLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:151\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deltaLink\n                    \n                \n\n                \n                    \n                        getdeltaLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:155\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n\n                \n                    \n                        gettop()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:159\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:164\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skiptoken\n                    \n                \n\n                \n                    \n                        getskiptoken()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:169\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:175\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { DEFAULT_VERSION } from '../../constants';\nimport { ODataHelper } from '../../helpers';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    return this.options?.helper || ODataHelper[DEFAULT_VERSION];\n  }\n  constructor(data: any = {}, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    this.options = opt.options;\n    this.annotations = this.options ? this.odv.annotations(data) : data;\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context?: ODataContext;\n  get context(): ODataContext {\n    if (this._context === undefined) {\n      this._context = this.odv.context(this.annotations);\n    }\n    return this._context;\n  }\n\n  private _properties?: { [name: string]: any };\n  get properties() {\n    if (this._properties === undefined) {\n      this._properties = this.odv.properties(this.annotations);\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone(): ODataMeta;\n  abstract data(data: Object): Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, { options: this.options });\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type() {\n    return this.odv.type(this.annotations) || this.context.type;\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, { options: this.options });\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type() {\n    return this.odv.type(this.annotations) || this.context.type;\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag() {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink() {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink() {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink() {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType() {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, { options: this.options });\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n  get type() {\n    return this.context.type;\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityContainer.html":{"url":"classes/ODataEntityContainer.html","title":"class - ODataEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/entity-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                entitySets\n                            \n                            \n                                name\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntityContainerConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/entity-container.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntityContainerConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entitySets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntitySet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { Annotation, EntityContainerConfig } from '../types';\nimport { ODataEntitySet } from './entity-set';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataEntityContainer {\n  schema: ODataSchema;\n  name: string;\n  annotations: ODataAnnotation[];\n  entitySets: ODataEntitySet[];\n  constructor(config: EntityContainerConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.entitySets = (config.entitySets || []).map(config => new ODataEntitySet(config, schema));\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  get api() {\n    return this.schema.api;\n  }\n\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityMeta.html":{"url":"classes/ODataEntityMeta.html","title":"class - ODataEntityMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataMeta\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _functions\n                            \n                            \n                                    Private\n                                    Optional\n                                _context\n                            \n                            \n                                    Private\n                                    Optional\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attributes\n                            \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                function\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                                \n                                    id\n                                \n                                \n                                    etag\n                                \n                                \n                                    mediaEtag\n                                \n                                \n                                    metadataEtag\n                                \n                                \n                                    readLink\n                                \n                                \n                                    editLink\n                                \n                                \n                                    mediaReadLink\n                                \n                                \n                                    mediaEditLink\n                                \n                                \n                                    mediaContentType\n                                \n                                \n                                    functions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataContext\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:8\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attributes\n                        \n                        \n                    \n                \n            \n            \n                \nattributes(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:74\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntityMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:78\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        etag\n                    \n                \n\n                \n                    \n                        getetag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEtag\n                    \n                \n\n                \n                    \n                        getmediaEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        metadataEtag\n                    \n                \n\n                \n                    \n                        getmetadataEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        editLink\n                    \n                \n\n                \n                    \n                        geteditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaReadLink\n                    \n                \n\n                \n                    \n                        getmediaReadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:106\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEditLink\n                    \n                \n\n                \n                    \n                        getmediaEditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:110\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaContentType\n                    \n                \n\n                \n                    \n                        getmediaContentType()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:114\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:119\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { DEFAULT_VERSION } from '../../constants';\nimport { ODataHelper } from '../../helpers';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    return this.options?.helper || ODataHelper[DEFAULT_VERSION];\n  }\n  constructor(data: any = {}, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    this.options = opt.options;\n    this.annotations = this.options ? this.odv.annotations(data) : data;\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context?: ODataContext;\n  get context(): ODataContext {\n    if (this._context === undefined) {\n      this._context = this.odv.context(this.annotations);\n    }\n    return this._context;\n  }\n\n  private _properties?: { [name: string]: any };\n  get properties() {\n    if (this._properties === undefined) {\n      this._properties = this.odv.properties(this.annotations);\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone(): ODataMeta;\n  abstract data(data: Object): Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, { options: this.options });\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type() {\n    return this.odv.type(this.annotations) || this.context.type;\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, { options: this.options });\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type() {\n    return this.odv.type(this.annotations) || this.context.type;\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag() {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink() {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink() {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink() {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType() {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, { options: this.options });\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n  get type() {\n    return this.context.type;\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityService.html":{"url":"classes/ODataEntityService.html","title":"class - ODataEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                attach\n                            \n                            \n                                    Public\n                                    Abstract\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                                \n                                    structuredTypeSchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient, name: string, apiNameOrEntityType?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiNameOrEntityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:10\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        structuredTypeSchema\n                    \n                \n\n                \n                    \n                        getstructuredTypeSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataResource } from '../resources';\nimport { ODataClient } from \"../client\";\nimport { EntityKey } from '../types';\nimport { ODataModel } from '../models/model';\n\nexport abstract class ODataEntityService {\n  constructor(protected client: ODataClient, protected name: string, protected apiNameOrEntityType?: string) { }\n\n  public abstract entity(key?: EntityKey): ODataResource;\n  public abstract attach>(value: M): void;\n\n  // Api Config\n  get api() {\n    return this.client.apiFor(this.apiNameOrEntityType);\n  }\n\n  // Entity Config\n  get structuredTypeSchema() {\n    return this.apiNameOrEntityType !== undefined ?\n      this.api.findStructuredTypeForType(this.apiNameOrEntityType) :\n      undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitySet.html":{"url":"classes/ODataEntitySet.html","title":"class - ODataEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/entity-set.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                entityType\n                            \n                            \n                                name\n                            \n                            \n                                schema\n                            \n                            \n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAnnotation\n                            \n                            \n                                isTypeOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntitySetConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/entity-set.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntitySetConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { Annotation, EntitySetConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\nexport class ODataEntitySet {\n  schema: ODataSchema\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations: ODataAnnotation[];\n  constructor(config: EntitySetConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.entityType = config.entityType;\n    this.service = config.service;\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get api() {\n    return this.schema.api;\n  }\n\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitySetService.html":{"url":"classes/ODataEntitySetService.html","title":"class - ODataEntitySetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitySetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/entity-set.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assign\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Public\n                                fetch\n                            \n                            \n                                    Public\n                                fetchOrCreate\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Public\n                                    Abstract\n                                attach\n                            \n                            \n                                    Public\n                                    Abstract\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    entitySetSchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assign(entity: Partial, attrs: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:21\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:22\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitySetResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetch(entity: EntityKey, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchOrCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchOrCreate(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataEntityService\n\n                \n            \n            \n                \n                        Defined in         ODataEntityService:10\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataEntityService\n\n                \n            \n            \n                \n                        Defined in         ODataEntityService:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        entitySetSchema\n                    \n                \n\n                \n                    \n                        getentitySetSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:32\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataEntitySetResource, ODataEntityResource, HttpOptions } from '../resources';\nimport { EntityKey } from '../types';\nimport { ODataCollection } from '../models/collection';\nimport { ODataModel } from '../models/model';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { ODataEntityService } from './entity';\n\nexport class ODataEntitySetService extends ODataEntityService {\n  public entities(): ODataEntitySetResource {\n    return this.client.entitySet(this.name, this.apiNameOrEntityType);\n  }\n\n  public entity(key?: EntityKey): ODataEntityResource {\n    return this.entities()\n      .entity(key);\n  }\n\n  // Models\n  public attach>(value: M): void;\n  public attach>>(value: C): void;\n  public attach(value: any): void {\n    if (value instanceof ODataModel) {\n      value.resource(this.entities().entity());\n    } else if (value instanceof ODataCollection) {\n      value.resource(this.entities());\n    }\n  }\n\n  // Service Config\n  get entitySetSchema() {\n    return this.api.findEntitySetByName(this.name);\n  }\n\n  public fetch(entity: EntityKey, options?: HttpOptions & {etag?: string}): Observable {\n    return this.entity(entity)\n      .get(options)\n      .pipe(map(({entity}) => entity));\n  }\n\n  public create(entity: Partial, options?: HttpOptions): Observable {\n    return this.entities()\n      .post(entity, options)\n      .pipe(map(({entity}) => entity));\n  }\n\n  public update(entity: Partial, options?: HttpOptions): Observable {\n    const odata = this.api.options.helper;\n    const etag = odata.etag(entity);\n    const res = this.entity(entity);\n    if (!res.segment.entitySet().hasKey())\n      return throwError(\"Resource without key\");\n    return this.entity(entity as EntityKey)\n      .put(entity, Object.assign({etag}, options || {}))\n      .pipe(map(({entity}) => entity));\n  }\n\n  public assign(entity: Partial, attrs: Partial, options?: HttpOptions): Observable {\n    const odata = this.api.options.helper;\n    const etag = odata.etag(entity);\n    const res = this.entity(entity);\n    if (!res.segment.entitySet().hasKey())\n      return throwError(\"Resource without key\");\n    return res.patch(attrs, Object.assign({etag}, options || {}))\n      .pipe(map(({entity: newentity, meta}) => newentity ? newentity :\n        Object.assign(entity, attrs, meta.annotations) as T));\n  }\n\n  public destroy(entity: Partial, options?: HttpOptions) {\n    const odata = this.api.options.helper;\n    const etag = odata.etag(entity);\n    const res = this.entity(entity);\n    if (!res.segment.entitySet().hasKey())\n      return throwError(\"Resource without key\");\n    return res.delete(Object.assign({etag}, options || {}));\n  }\n\n  // Shortcuts\n  public fetchOrCreate(entity: Partial, options?: HttpOptions): Observable {\n    return this.fetch(entity, options)\n      .pipe(catchError((error: HttpErrorResponse) => {\n        if (error.status === 404)\n          return this.create(entity, options);\n        else\n          return throwError(error);\n      }));\n  }\n\n  public save(entity: Partial, options?: HttpOptions) {\n    return this.entity(entity).segment.entitySet().hasKey() ?\n      this.update(entity, options) :\n      this.create(entity, options);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumType.html":{"url":"classes/ODataEnumType.html","title":"class - ODataEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                findAnnotation\n                            \n                            \n                                findFieldByName\n                            \n                            \n                                findFieldByValue\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                mapFields\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumTypeConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/enum-type.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumTypeParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fields\n                        \n                        \n                    \n                \n            \n            \n                \nfields()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ODataEnumTypeFieldParser[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findFieldByName\n                        \n                        \n                    \n                \n            \n            \n                \nfindFieldByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findFieldByValue\n                        \n                        \n                    \n                \n            \n            \n                \nfindFieldByValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapFields\n                        \n                        \n                    \n                \n            \n            \n                \nmapFields(mapper: (field: ODataEnumTypeFieldParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:45\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapper\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { ODataEnumTypeFieldParser, ODataEnumTypeParser } from '../parsers';\nimport { Annotation, EnumTypeConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataEnumType {\n  schema: ODataSchema;\n  name: string;\n  parser: ODataEnumTypeParser;\n  members: { [name: string]: number } | { [value: number]: string };\n  annotations: ODataAnnotation[];\n  constructor(config: EnumTypeConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.members = config.members;\n    this.parser = new ODataEnumTypeParser(config, schema.namespace, schema.alias);\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n  type({alias = false}: {alias?: boolean} = {}) {\n    return `${alias ? this.schema.alias : this.schema.namespace}.${this.name}`;\n  }\n  isTypeOf(type: string) {\n    return this.parser.isTypeOf(type);\n  }\n  get api() {\n    return this.schema.api;\n  }\n\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  fields(): ODataEnumTypeFieldParser[] {\n    return this.parser.fields;\n  }\n\n  findFieldByName(name: string) {\n    return this.fields().find(f => f.name === name);\n  }\n\n  findFieldByValue(value: number) {\n    return this.fields().find(f => f.value === value);\n  }\n\n  mapFields(mapper: (field: ODataEnumTypeFieldParser) => T) {\n    return this.fields().map(mapper);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumTypeFieldParser.html":{"url":"classes/ODataEnumTypeFieldParser.html","title":"class - ODataEnumTypeFieldParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumTypeFieldParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/enum-type.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            EnumTypeField\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, field: EnumTypeField)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        EnumTypeField\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Annotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EnumHelper } from '../helpers';\nimport { EnumTypeConfig, Parser, OptionsHelper, EnumTypeField, Annotation } from '../types';\n\nexport class ODataEnumTypeFieldParser implements EnumTypeField {\n  name: string;\n  value: number;\n  annotations: Annotation[];\n  constructor(name: string, field: EnumTypeField) {\n    this.name = name;\n    this.value = field.value;\n    this.annotations = field.annotations || [];\n  }\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n}\nexport class ODataEnumTypeParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  flags?: boolean;\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: ODataEnumTypeFieldParser[];\n  constructor(config: EnumTypeConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.flags = config.flags;\n    this.members = config.members;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataEnumTypeFieldParser(name, f as EnumTypeField));\n  }\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias)\n      names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: string, options: OptionsHelper): T {\n    // string -> Type\n    if (this.flags) {\n      return EnumHelper.toValues(this.members, value).reduce((acc, v) => acc | v, 0) as any;\n    } else {\n      return EnumHelper.toValue(this.members, value) as any;\n    }\n  }\n\n  // Serialize\n  serialize(value: T, options: OptionsHelper): string {\n    // Type -> string\n    if (this.flags) {\n      let names = EnumHelper.toNames(this.members, value);\n      if (!options.stringAsEnum)\n        names = names.map(name => `${this.namespace}.${this.name}'${name}'`)\n      return names.join(\", \");\n    } else {\n      let name = EnumHelper.toName(this.members, (value) as number);\n      if (!options.stringAsEnum)\n        name = `${this.namespace}.${this.name}'${name}'`;\n      return name;\n    }\n  }\n\n  // Json Schema\n  toJsonSchema() {\n    let property = {\n      title: this.name,\n      type: \"string\"\n    };\n    property.enum = this.fields.map(f => f.name);\n    return property;\n  }\n  validate(member: string | number, {create = false, patch = false}: {create?: boolean, patch?: boolean} = {}): string[] | undefined {\n    return (!(member in this.members)) ? ['mismatch'] : undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumTypeParser.html":{"url":"classes/ODataEnumTypeParser.html","title":"class - ODataEnumTypeParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumTypeParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/enum-type.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                fields\n                            \n                            \n                                    Optional\n                                flags\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                serialize\n                            \n                            \n                                toJsonSchema\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumTypeConfig, namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ODataEnumTypeFieldParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            flags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: string, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(member: string | number, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    member\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [] | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EnumHelper } from '../helpers';\nimport { EnumTypeConfig, Parser, OptionsHelper, EnumTypeField, Annotation } from '../types';\n\nexport class ODataEnumTypeFieldParser implements EnumTypeField {\n  name: string;\n  value: number;\n  annotations: Annotation[];\n  constructor(name: string, field: EnumTypeField) {\n    this.name = name;\n    this.value = field.value;\n    this.annotations = field.annotations || [];\n  }\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n}\nexport class ODataEnumTypeParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  flags?: boolean;\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: ODataEnumTypeFieldParser[];\n  constructor(config: EnumTypeConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.flags = config.flags;\n    this.members = config.members;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataEnumTypeFieldParser(name, f as EnumTypeField));\n  }\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias)\n      names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: string, options: OptionsHelper): T {\n    // string -> Type\n    if (this.flags) {\n      return EnumHelper.toValues(this.members, value).reduce((acc, v) => acc | v, 0) as any;\n    } else {\n      return EnumHelper.toValue(this.members, value) as any;\n    }\n  }\n\n  // Serialize\n  serialize(value: T, options: OptionsHelper): string {\n    // Type -> string\n    if (this.flags) {\n      let names = EnumHelper.toNames(this.members, value);\n      if (!options.stringAsEnum)\n        names = names.map(name => `${this.namespace}.${this.name}'${name}'`)\n      return names.join(\", \");\n    } else {\n      let name = EnumHelper.toName(this.members, (value) as number);\n      if (!options.stringAsEnum)\n        name = `${this.namespace}.${this.name}'${name}'`;\n      return name;\n    }\n  }\n\n  // Json Schema\n  toJsonSchema() {\n    let property = {\n      title: this.name,\n      type: \"string\"\n    };\n    property.enum = this.fields.map(f => f.name);\n    return property;\n  }\n  validate(member: string | number, {create = false, patch = false}: {create?: boolean, patch?: boolean} = {}): string[] | undefined {\n    return (!(member in this.members)) ? ['mismatch'] : undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataInMemoryCache.html":{"url":"classes/ODataInMemoryCache.html","title":"class - ODataInMemoryCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataInMemoryCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/memory.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                            \n                                putResponse\n                            \n                            \n                                buildEntry\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init?: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/memory.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:14\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/memory.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \nputResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/memory.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: T; lastRead: any; timeout: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache } from './cache';\nexport class ODataInMemoryCache extends ODataCache> {\n  constructor(init?: {timeout?: number}) {\n    super(init);\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.urlWithParams, res, res.options.maxAge);\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    return this.get(req.urlWithParams);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataInStorageCache.html":{"url":"classes/ODataInStorageCache.html","title":"class - ODataInStorageCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataInStorageCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/storage.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                            \n                                putResponse\n                            \n                            \n                                buildEntry\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/storage.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:14\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/storage.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \nputResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/storage.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: T; lastRead: any; timeout: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache, ODataCacheEntry } from './cache';\n\ninterface StoragePayload {\n    body: any | null;\n    headers: {[name: string]: string | string[]};\n    status: number;\n    statusText: string;\n    url: string | null;\n}\n\nexport class ODataInStorageCache extends ODataCache {\n  constructor(init: {timeout?: number, name: string, storage?: Storage}) {\n    super(init);\n    const name = init.name;\n    const storage = init.storage || sessionStorage;\n    this.entries = new Map>(JSON.parse(storage.getItem(name) || \"[]\"));\n    window.addEventListener(\"beforeunload\", ((backend, key, responses) => function() {\n      backend.setItem(key, JSON.stringify(Array.from(responses.entries())))\n    })(storage, name, this.entries));\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.urlWithParams, res.toJSON(), res.options.maxAge);\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    const data = this.get(req.urlWithParams);\n\n    return data !== undefined ? ODataResponse.fromJSON(req, data) : undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataMeta.html":{"url":"classes/ODataMeta.html","title":"class - ODataMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _context\n                            \n                            \n                                    Private\n                                    Optional\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    odv\n                                \n                                \n                                    context\n                                \n                                \n                                    properties\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, opt: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opt\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataContext\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odv\n                    \n                \n\n                \n                    \n                        getodv()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:9\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n\n                \n                    \n                        getcontext()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        properties\n                    \n                \n\n                \n                    \n                        getproperties()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { DEFAULT_VERSION } from '../../constants';\nimport { ODataHelper } from '../../helpers';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    return this.options?.helper || ODataHelper[DEFAULT_VERSION];\n  }\n  constructor(data: any = {}, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    this.options = opt.options;\n    this.annotations = this.options ? this.odv.annotations(data) : data;\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context?: ODataContext;\n  get context(): ODataContext {\n    if (this._context === undefined) {\n      this._context = this.odv.context(this.annotations);\n    }\n    return this._context;\n  }\n\n  private _properties?: { [name: string]: any };\n  get properties() {\n    if (this._properties === undefined) {\n      this._properties = this.odv.properties(this.annotations);\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone(): ODataMeta;\n  abstract data(data: Object): Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, { options: this.options });\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type() {\n    return this.odv.type(this.annotations) || this.context.type;\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, { options: this.options });\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type() {\n    return this.odv.type(this.annotations) || this.context.type;\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag() {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink() {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink() {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink() {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType() {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, { options: this.options });\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n  get type() {\n    return this.context.type;\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataMetadataResource.html":{"url":"classes/ODataMetadataResource.html","title":"class - ODataMetadataResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataMetadataResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/metadata.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                fetch\n                            \n                            \n                                alias\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                isSubtypeOf\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ODataApi, segments?: ODataPathSegments)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataPathSegments\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:27\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMetadataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(api: ODataApi)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api\n                                    \n                                                ODataApi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataMetadataResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:110\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:207\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endpointUrl\n                        \n                        \n                    \n                \n            \n            \n                \nendpointUrl()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:176\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSubtypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisSubtypeOf(other: ODataResource)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:64\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:184\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:191\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:115\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:42\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:49\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { ODataResource } from '../resource';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { map } from 'rxjs/operators';\nimport { HttpOptions } from './options';\nimport { ODataMetadata } from '../responses';\nimport { $METADATA } from '../../constants';\nimport { ODataApi } from '../../api';\n\nexport class ODataMetadataResource extends ODataResource {\n  constructor(api: ODataApi, segments?: ODataPathSegments) {\n    super(api, segments);\n  }\n\n  clone() {\n    return new ODataMetadataResource(this.api, this.pathSegments.clone());\n  }\n\n  //#region Factory\n  static factory(api: ODataApi) {\n    let segments = new ODataPathSegments();\n    segments.add(PathSegmentNames.metadata, $METADATA);\n    return new ODataMetadataResource(api, segments);\n  }\n  //#endregion\n\n  //#region Requests\n  fetch(options?: HttpOptions): Observable {\n    let opts = Object.assign({ responseType: 'text' }, options || {});\n    return super.get(opts).pipe(map((body: any) => new ODataMetadata(body)));\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataModelProperty.html":{"url":"classes/ODataModelProperty.html","title":"class - ODataModelProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataModelProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                parser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                metaFactory\n                            \n                            \n                                modelCollectionFactory\n                            \n                            \n                                resourceFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/model.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ODataStructuredTypeFieldParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:37\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            metaFactory\n                        \n                        \n                    \n                \n            \n            \n                \nmetaFactory(meta: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ODataEntityMeta | ODataEntitiesMeta | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modelCollectionFactory\n                        \n                        \n                    \n                \n            \n            \n                \nmodelCollectionFactory(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:59\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ODataModel | ODataCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resourceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nresourceFactory(resource: ODataModelResource)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataModelResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataNavigationPropertyResource | ODataPropertyResource | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NEVER, Observable, Subscription, throwError } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport {\n  ODataEntityResource,\n  ODataPropertyResource,\n  ODataNavigationPropertyResource,\n  HttpOptions,\n  HttpEntityOptions,\n  ODataEntityMeta,\n  ODataEntitiesMeta,\n  ODataEntity,\n  ODataSingletonResource,\n  ODataActionResource,\n  ODataFunctionResource\n} from '../resources/index';\n\nimport { ODataCollection } from './collection';\nimport { Types } from '../utils/types';\nimport { Objects } from '../utils';\nimport { EventEmitter } from '@angular/core';\nimport { ODataStructuredType } from '../schema';\nimport { ODataStructuredTypeFieldParser } from '../parsers';\nexport type ODataModelResource = ODataEntityResource | ODataSingletonResource | ODataNavigationPropertyResource | ODataPropertyResource;\n\nexport function ODataModelField({ name }: { name?: string } = {}) {\n  return (target: any, propertyKey: string): void => {\n    const properties = target._properties = (target._properties || []) as ModelProperty[];\n    properties.push({ name: propertyKey, field: name || propertyKey });\n  }\n}\n\ntype ModelProperty = { name: string, field: string };\nclass ODataModelProperty {\n  name: string;\n  field: string;\n  parser?: ODataStructuredTypeFieldParser;\n  constructor({name, field}: {name: string, field: string}) {\n    this.name = name;\n    this.field = field;\n  }\n  resourceFactory(resource: ODataModelResource): ODataNavigationPropertyResource | ODataPropertyResource | undefined {\n    return (\n      this.parser !== undefined &&\n      (resource instanceof ODataEntityResource || resource instanceof ODataNavigationPropertyResource || resource instanceof ODataPropertyResource)\n    ) ?\n      this.parser.isNavigation() ? resource?.navigationProperty(this.parser.name) : resource?.property(this.parser.name) :\n      undefined;\n  }\n\n  metaFactory(meta: ODataEntityMeta): ODataEntityMeta | ODataEntitiesMeta | undefined {\n    return (this.parser !== undefined) ?\n      this.parser.collection ?\n        new ODataEntitiesMeta(meta.property(this.parser.name) || {}, { options: meta.options }) :\n        new ODataEntityMeta(meta.property(this.parser.name) || {}, { options: meta.options }) :\n        undefined;\n  }\n\n  modelCollectionFactory(\n    { value, baseResource, baseMeta, reset}: {\n    value?: any,\n    baseResource: ODataModelResource,\n    baseMeta: ODataEntityMeta,\n    reset?: boolean\n  }): ODataModel | ODataCollection> {\n\n    // Data\n    const data = this.parser?.collection ?\n      (value || []) as F[] :\n      (value || {}) as F;\n\n    const meta = this.metaFactory(baseMeta);\n    const resource = this.resourceFactory(baseResource) as ODataNavigationPropertyResource | ODataPropertyResource;\n\n    return (\n      this.parser !== undefined &&\n      this.parser.collection) ?\n        resource.asCollection(data as F[], { meta: meta as ODataEntitiesMeta, reset }) :\n        resource.asModel(data as F, { meta: meta as ODataEntityMeta, reset });\n  }\n}\ntype ODataModelRelation = {\n  model: ODataModel | ODataCollection> | null,\n  property: ODataModelProperty,\n  subscriptions: Subscription[]\n};\nexport class ODataModelOptions {\n  private _attributes: {[name: string]: any} = {};\n  private _changes: {[name: string]: any} = {};\n  private _properties: ODataModelProperty[] = [];\n  private _relations: { [name: string]: ODataModelRelation } = {};\n  private _resource?: ODataModelResource;\n  private _schema?: ODataStructuredType;\n  private _meta: ODataEntityMeta;\n  private _resetting: boolean = false;\n\n  constructor(props: ModelProperty[]) {\n    this._meta = new ODataEntityMeta();\n    this._properties = props.map(prop => new ODataModelProperty(prop));\n  }\n\n  attach(model: ODataModel, resource: ODataModelResource) {\n    if (this._resource !== undefined && resource.type() !== this._resource.type() && !resource.isSubtypeOf(this._resource))\n      throw new Error(`Can't reattach ${resource.type()} to ${this._resource.type()}`);\n\n    const schema = resource.schema;\n    if (schema !== undefined)\n      this.bind(model, schema);\n\n    // Attach relations\n    for (var relation of Object.values(this._relations)) {\n      const { property, model } = relation;\n      const field = property.parser;\n      if (field === undefined) {\n        throw new Error(\"No Field\");\n      }\n      if (model !== null)\n        model.resource(property.resourceFactory(resource));\n    }\n    this._resource = resource;\n  }\n\n  resource(model: ODataModel) {\n    let resource = this._resource?.clone();\n    const key = this.key(model, {field_mapping: true});\n    if (key !== undefined && (resource instanceof ODataEntityResource || resource instanceof ODataNavigationPropertyResource)) {\n      resource = resource.key(key);\n    }\n    return resource;\n  }\n\n  findProperty(predicate: (p: ODataModelProperty) => boolean) {\n    return this._properties.find(predicate);\n  }\n\n  bind(model: ODataModel, schema: ODataStructuredType) {\n    if (this._schema === undefined || schema.type() !== this._schema.type()) {\n      // Bind Properties\n      const fields = schema.fields({ include_navigation: true, include_parents: true });\n      for (var field of fields) {\n        let prop = this.findProperty(p => p.field === field.name);\n        if (prop === undefined) {\n          prop = new ODataModelProperty({name: field.name, field: field.name});\n          this._properties.push(prop);\n        }\n        prop.parser = field;\n        Object.defineProperty(model, prop.name, {\n          configurable: true,\n          get: () => this._get(model, prop as ODataModelProperty),\n          set: (value: any) => this._set(model, prop as ODataModelProperty, value)\n        });\n      }\n      this._schema = schema;\n    }\n  }\n\n  schema(model: ODataModel): ODataStructuredType | undefined {\n    return this._schema;\n  }\n\n  annotate(model: ODataModel, meta: ODataEntityMeta) {\n    if (meta.type !== undefined && meta.type !== this._resource?.type()) {\n      const schema = this._resource?.api.findStructuredTypeForType(meta.type);\n      if (schema !== undefined) this.bind(model, schema);\n    }\n    this._meta = meta;\n  }\n\n  meta(model: ODataModel) {\n    return this._meta?.clone();\n  }\n\n  get query() {\n    if (this._resource === undefined)\n      throw new Error(`Can't query without ODataResource`);\n    return this._resource.query;\n  }\n\n  key(model: ODataModel, {field_mapping = false}: {field_mapping?: boolean} = {}) {\n    //TODO: field_mapping\n    return this.schema(model)?.resolveKey(model.toEntity({field_mapping}));\n  }\n\n  validate(model: ODataModel, { create = false, patch = false }: { create?: boolean, patch?: boolean } = {}) {\n    //TODO: field_mapping\n    return this.schema(model)?.validate(model.toEntity({field_mapping: true}) as T, { create, patch });\n  }\n\n  defaults(model: ODataModel) {\n    return this.schema(model)?.defaults() || {};\n  }\n\n  toEntity(model: ODataModel, {\n    include_navigation = false,\n    changes_only = false,\n    field_mapping = false\n  }: { include_navigation?: boolean, changes_only?: boolean, field_mapping?: boolean } = {}): T | {[name: string]: any} {\n    let entries = Object.entries(\n      Object.assign({},\n        this.attributes(model, { changes_only: changes_only }),\n        Object.entries(this._relations)\n          .filter(([, v]) => include_navigation || !v.property.parser?.isNavigation())\n          .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v.model }), {})\n      )\n    );\n    // Map models and collections\n    entries = entries.map(([k, v]) => [k,\n      (v instanceof ODataModel) ? v.toEntity({ changes_only, include_navigation, field_mapping }) :\n        (v instanceof ODataCollection) ? v.toEntities({ changes_only, include_navigation, field_mapping }) :\n          v]);\n    // Filter empty\n    if (changes_only)\n      entries = entries.filter(([, v]) => !Types.isEmpty(v));\n    // Create entity\n    return entries.reduce((acc, [key, value]) => {\n      const name = field_mapping ? this.findProperty(p => p.name === key)?.field || key : key;\n      return Object.assign(acc, { [name]: value });\n    }, {}) as T\n  }\n\n  attributes(model: ODataModel, { changes_only = false }: { changes_only?: boolean } = {}): {[name: string]: any} {\n    return Object.assign({},\n      changes_only ? {} : this._attributes,\n      this._changes);\n  }\n\n  assign(model: ODataModel, data: {[name: string]: any} = {}, { reset = false }: { reset?: boolean } = {}) {\n    this._resetting = reset;\n    if (this._resetting) {\n      this._changes = {} as T;\n    }\n    for (let key in data) {\n      const value = data[key];\n      const name = this._resetting ? this.findProperty(p => p.field === key)?.name || key : key;\n      if (value !== null && Types.isObject(value)) {\n        const current = (model as any)[name];\n        if (\n          (!(value instanceof ODataModel) && current instanceof ODataModel) ||\n          (!(value instanceof ODataCollection) && current instanceof ODataCollection)) {\n          current.assign(value, {reset});\n        } else {\n          (model as any)[name] = value;\n        }\n      } else {\n        const current = (model as any)[name];\n        if (current !== value)\n          (model as any)[name] = value;\n      }\n    }\n    this._resetting = false;\n  }\n  private _modelCollectionFactory(\n    { value, property, fieldType, fieldName, collection, resource, meta, reset}: {\n    value?: any,\n    property?: ODataModelProperty,\n    fieldType?: string,\n    fieldName?: string,\n    collection?: boolean,\n    resource?: ODataPropertyResource | ODataNavigationPropertyResource,\n    meta?: ODataEntityMeta | ODataEntitiesMeta,\n    reset?: boolean\n  } = {}): ODataModel | ODataCollection> {\n\n    if (property !== undefined && this._resource !== undefined) {\n      return property.modelCollectionFactory({\n        value, reset,\n        baseResource: this._resource,\n        baseMeta: this._meta});\n    }\n\n    // Data\n    const data = collection ?\n      (value || []) as T[] :\n      (value || {}) as T;\n\n    // Meta\n    if (meta === undefined) {\n      if (fieldName === undefined)\n        throw new Error(\"Need Name\");\n      const annots = this._meta.property(fieldName) || {};\n      meta = collection ?\n        new ODataEntitiesMeta(annots, { options: this._meta.options }) :\n        new ODataEntityMeta(annots, { options: this._meta.options });\n    }\n\n    if (fieldType !== undefined) {\n      // Build by Schema\n      const schema = this._schema?.api.findStructuredTypeForType(fieldType);\n      const Model = schema?.model || ODataModel;\n      const Collection = schema?.collection || ODataCollection;\n      return collection ?\n        new Collection(data, { resource, schema, meta, reset }) :\n        new Model(data, { resource, schema, meta, reset });\n    } else {\n      // Build by magic\n      return collection ?\n        new ODataCollection(data, { resource, meta: meta as ODataEntitiesMeta, reset }) :\n        new ODataModel(data, { resource, meta: meta as ODataEntityMeta, reset });\n    }\n  }\n  private _get(model: ODataModel, property: ODataModelProperty): F | ODataModel | ODataCollection> | null | undefined {\n    const name = property.name;\n    const field = property.parser;\n    if (field === undefined)\n      throw new Error(\"No Field\");\n    if (field.isComplexType() || field.isNavigation()) {\n      if (this._resetting && !(name in this._relations)) {\n        const newModel = this._modelCollectionFactory({property});\n        this._relations[name] = { property, model: newModel, subscriptions: this._subscribe(model, property, newModel) };\n      }\n      return (name in this._relations) ? this._relations[name].model : undefined;\n    }\n    const attrs = this.attributes(model);\n    return attrs[name];\n  }\n\n  private _set(model: ODataModel, property: ODataModelProperty, value: F | ODataModel | ODataCollection> | null) {\n    const name = property.name;\n    const field = property.parser;\n    if (field === undefined)\n      throw new Error(\"No Field\");\n\n    if (field.isComplexType() || field.isNavigation()) {\n      let newModel = value as ODataModel | ODataCollection> | null;\n      if (field.isNavigation()) {\n        if (model.key() === undefined)\n          throw new Error(`Can't set ${name} from unsaved model`);\n        if (field.collection)\n          throw new Error(`Can't set ${name} to navigation collection, use add instead`);\n        newModel = value as ODataModel | null;\n        if (newModel?.key() === undefined)\n          throw new Error(`Can't set ${name}`);\n      }\n      const relation = this._relations[name];\n      if (relation !== undefined) {\n        relation.subscriptions.forEach(sub => sub.unsubscribe());\n      }\n      const currentModel = relation?.model as ODataModel | ODataCollection> | null;\n      if (newModel !== null && this._resource !== undefined) {\n        if (!(newModel instanceof ODataModel)) {\n          newModel = this._modelCollectionFactory({ value, property });\n        } else {\n          const resource = property.resourceFactory(this._resource);\n          const meta = property.metaFactory(this._meta);\n          newModel.resource(resource);\n          newModel.meta(meta as ODataEntityMeta);\n        }\n        const type = newModel.resource()?.type();\n        if (type !== field.type)\n          throw new Error(`Can't set ${type} to ${field.type}`);\n      }\n      this._relations[name] = { model: newModel, property, subscriptions: newModel !== null ? this._subscribe(model, property, newModel) : [] };\n      model.change$.emit({ value: newModel, attribute: name, previous: currentModel });\n    } else {\n      const attrs = this.attributes(model);\n      const currentValue = attrs[name];\n      if (!Types.isEqual(currentValue, value)) {\n        if (this._resetting)\n          this._attributes[name] = value;\n        else if (Types.isEqual(value, this._attributes[name]))\n          delete this._changes[name];\n        else\n          this._changes[name] = value;\n        model.change$.emit({ value, attribute: name, previous: currentValue });\n      }\n    }\n  }\n  private _subscribe(self: ODataModel, property: ODataModelProperty, value: ODataModel | ODataCollection>) {\n    const subs = [];\n    if (value instanceof ODataModel) {\n      //Changes\n      subs.push(value.change$.subscribe((event: any) => self.change$.emit({\n        value: event.value,\n        previous: event.previous,\n        attribute: `${property.name}.${event.attribute}`\n      })\n      ));\n    }\n    return subs;\n  }\n}\n\nexport class ODataModel {\n  //Events\n  private _properties!: ModelProperty[];\n  private _options: ODataModelOptions;\n  change$ = new EventEmitter();\n  request$ = new EventEmitter>>();\n  sync$ = new EventEmitter();\n  destroy$ = new EventEmitter();\n  invalid$ = new EventEmitter();\n  constructor(data?: any, { resource, schema, meta, reset = false }: {\n    resource?: ODataModelResource,\n    schema?: ODataStructuredType,\n    meta?: ODataEntityMeta,\n    reset?: boolean\n  } = {}) {\n    this._options = new ODataModelOptions(this._properties);\n    this.resource(resource);\n    this.schema(schema);\n    this.meta(meta);\n    data = Objects.merge(this.defaults(), data || {});\n    this.assign(data, { reset });\n  }\n\n  resource(resource?: ODataModelResource) {\n    if (resource !== undefined)\n      this._options.attach(this, resource);\n    return this._options.resource(this);\n  }\n\n  schema(schema?: ODataStructuredType) {\n    if (schema !== undefined)\n      this._options.bind(this, schema);\n    return this._options.schema(this);\n  }\n\n  meta(meta?: ODataEntityMeta) {\n    if (meta !== undefined)\n      this._options.annotate(this, meta);\n    return this._options.meta(this);\n  }\n\n  key() {\n    return this._options.key(this);\n  }\n\n  // Validation\n  errors?: { [key: string]: any };\n  protected validate({ create = false, patch = false }: { create?: boolean, patch?: boolean } = {}) {\n    return this._options.validate(this, {create, patch});\n  }\n\n  valid({ create = false, patch = false }: { create?: boolean, patch?: boolean } = {}): boolean {\n    this.errors = this.validate({create, patch});\n    if (this.errors !== undefined)\n      this.invalid$.emit(this.errors);\n    return this.errors === undefined;\n  }\n  protected defaults() {\n    return this._options.defaults(this);\n  }\n  toEntity({ include_navigation = false, changes_only = false, field_mapping = false}: { include_navigation?: boolean, changes_only?: boolean, field_mapping?: boolean } = {}): T | {[name: string]: any} {\n    return this._options.toEntity(this, { include_navigation, changes_only, field_mapping });\n  }\n  attributes({ changes_only = false }: { changes_only?: boolean } = {}): {[name: string]: any} {\n    return this._options.attributes(this, { changes_only });\n  }\n  assign(data: any = {}, { reset = false }: { reset?: boolean } = {}) {\n    this._options.assign(this, data, { reset });\n  }\n  clone() {\n    let Ctor = this.constructor;\n    return new Ctor(this.toEntity({ include_navigation: true }), { resource: this.resource(), meta: this.meta() });\n  }\n  private _request(resource: ODataModelResource, obs$: Observable>): Observable {\n    this.request$.emit(obs$);\n    return obs$.pipe(\n      map(({ entity, meta }) => {\n        this.resource(resource);\n        this.meta(meta);\n        this.assign(meta.attributes(entity || {}), { reset: true });\n        this.sync$.emit();\n        return this;\n      }));\n  }\n  fetch(options?: HttpOptions): Observable {\n    let resource = this.resource();\n    if (resource !== undefined) {\n      let obs$: Observable> = NEVER;\n      if (resource instanceof ODataEntityResource) {\n        if (!resource.segment.entitySet().hasKey())\n          return throwError(\"Can't fetch model without key\");\n        obs$ = resource.get(options);\n      } else if (resource instanceof ODataNavigationPropertyResource) {\n        obs$ = resource.get(\n          Object.assign({ responseType: 'entity' }, options || {}));\n      } else if (resource instanceof ODataPropertyResource) {\n        obs$ = resource.get(\n          Object.assign({ responseType: 'entity' }, options || {}));\n      }\n      return this._request(resource, obs$);\n    }\n    return throwError(\"Resource is undefined\");\n  }\n\n  save(\n    { patch = false, validate = true, ...options }: HttpOptions & { patch?: boolean, validate?: boolean } = {}\n  ): Observable {\n    let resource = this.resource();\n    if (resource !== undefined) {\n      let obs$: Observable> = NEVER;\n      if (resource instanceof ODataEntityResource) {\n        if (!validate || this.valid({create: !resource.segment.entitySet().hasKey(), patch})) {\n          const _entity = this.toEntity({ changes_only: patch, field_mapping: true }) as T;\n          obs$ = (!resource.segment.entitySet().hasKey() ?\n            resource.post(_entity, options) :\n            patch ?\n              resource.patch(_entity, options) :\n              resource.put(_entity, options)\n          ).pipe(map(({ entity, meta }) => ({ entity: entity || _entity, meta })));\n        } else {\n          obs$ = throwError(this.errors);\n        }\n      }\n      return this._request(resource, obs$);\n    }\n    return throwError(\"Resource Error\");\n  }\n\n  destroy(options?: HttpOptions): Observable {\n    let resource = this.resource();\n    if (resource !== undefined) {\n      let obs$: Observable> = NEVER;\n      if (resource instanceof ODataEntityResource) {\n        if (!resource.segment.entitySet().hasKey())\n          return throwError(\"Can't destroy model without key\");\n        const _entity = this.toEntity({field_mapping: true}) as T;\n        obs$ = resource.delete(Object.assign({ etag: this.meta().etag }, options || {})).pipe(\n          map(({ entity, meta }) => ({ entity: entity || _entity, meta })));\n      }\n      return this._request(resource, obs$).pipe(tap(() => this.destroy$.emit()));\n    }\n    return throwError(\"Resource Error\");\n  }\n  get query() {\n    return this._options.query;\n  }\n  private _call(\n    params: P | null,\n    resource: ODataFunctionResource | ODataActionResource,\n    responseType: 'property' | 'model' | 'collection' | 'none',\n    options?: HttpOptions\n  ) {\n    switch (responseType) {\n      case 'property':\n        return resource.callProperty(params, options);\n      case 'model':\n        return resource.callModel(params, options);\n      case 'collection':\n        return resource.callCollection(params, options);\n      default:\n        return resource.call(params, options);\n    }\n  }\n\n  protected callFunction(\n    name: string,\n    params: P | null,\n    responseType: 'property' | 'model' | 'collection' | 'none',\n    options?: HttpOptions\n  ): Observable | ODataCollection> | null> {\n    let resource = this.resource();\n    if (resource instanceof ODataEntityResource && resource.segment.entitySet().hasKey()) {\n      return this._call(params, resource.function(name), responseType, options);\n    }\n    return throwError(\"Can't call function without ODataEntityResource with key\");\n  }\n\n  protected callAction(\n    name: string,\n    params: P | null,\n    responseType: 'property' | 'model' | 'collection' | 'none',\n    options?: HttpOptions\n  ): Observable | ODataCollection> | null> {\n    let resource = this.resource();\n    const key = this.key();\n    if (resource instanceof ODataEntityResource && resource.segment.entitySet().hasKey()) {\n      return this._call(params, resource.action(name), responseType, options);\n    }\n    return throwError(\"Can't call action without ODataEntityResource with key\");\n  }\n\n  // As Derived\n  protected asDerived(type: string): ODataModel {\n    const resource = this.resource();\n    if (resource instanceof ODataEntityResource) {\n      return resource.cast(type).asModel(this.toEntity({ include_navigation: true }), {meta: this.meta()});\n    }\n    throw new Error(`Can't cast to derived model without ODataEntityResource`);\n  }\n\n  protected getBinding(\n    path: string,\n    responseType: 'model' | 'collection',\n    options?: HttpOptions\n  ): Observable | ODataCollection> | null> {\n    let resource = this.resource();\n    if (resource instanceof ODataEntityResource && resource.segment.entitySet().hasKey()) {\n      const nav = resource.navigationProperty(path);\n      switch (responseType) {\n        case 'model':\n          return nav.fetchModel(options);\n        case 'collection':\n          return nav.fetchCollection(options);\n      }\n    }\n    return throwError(\"Can't binding without ODataEntityResource with key\");\n  }\n\n  // Set Reference\n  protected setReference(\n    name: string,\n    model: ODataModel | null,\n    options?: HttpOptions\n  ): Observable {\n    const prop = this._options.findProperty(p => p.name === name);\n    if (prop === undefined)\n      throw new Error(`Can't find property ${name}`);\n    if (prop.parser?.collection)\n      throw new Error(`Can't set ${prop.name} to collection, use add`);\n\n    const resource = this.resource();\n    if (resource instanceof ODataEntityResource && resource.segment.entitySet().hasKey()) {\n      let ref = resource.navigationProperty(prop.field).reference();\n      const etag = this.meta().etag;\n      const opts = Object.assign({ etag }, options || {});\n      const obs$ = (model instanceof ODataModel) ?\n        ref.set(model.resource() as ODataEntityResource, opts) :\n        ref.unset(opts);\n      this.request$.emit(obs$);\n      return obs$.pipe(\n        map(() => {\n          let attrs: any = { [name]: model };\n          if (prop.field !== undefined) {\n            attrs[prop.field] = (model instanceof ODataModel) ? model.key() : model;\n          }\n          this.assign(attrs, { reset: true });\n          this.sync$.emit();\n          return this;\n        }\n        ));\n      }\n    return throwError(\"Can't binding without ODataEntityResource with key\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ODataModule.html":{"url":"modules/ODataModule.html","title":"module - ODataModule","body":"\n                   \n\n\n\n\n    Modules\n    ODataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-odata/src/lib/module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ODataClient\n                        \n                        \n                            ODataServiceFactory\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(configs: ApiConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                ApiConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ODataSettings } from './settings';\nimport { ODataClient } from './client';\nimport { ODataServiceFactory } from './services/index';\nimport { ApiConfig } from './types';\nimport { ODATA_CONFIGURATIONS } from './tokens';\n\nexport function createSettings(configs: ApiConfig[]) {\n  return new ODataSettings(...configs);\n}\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [ODataClient, ODataServiceFactory]\n})\nexport class ODataModule {\n  public static forRoot(...configs: ApiConfig[]): ModuleWithProviders {\n    return {\n      ngModule: ODataModule,\n      providers: [\n        { provide: ODATA_CONFIGURATIONS, useValue: configs },\n        {\n          provide: ODataSettings,\n          useFactory: createSettings,\n          deps: [ODATA_CONFIGURATIONS]\n        },\n        ODataClient,\n        ODataServiceFactory\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataParameterParser.html":{"url":"classes/ODataParameterParser.html","title":"class - ODataParameterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataParameterParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/callable.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                nullable\n                            \n                            \n                                    Private\n                                parser\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, parameter: Parameter)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/callable.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameter\n                                                  \n                                                        \n                                                                        Parameter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CALLABLE_BINDING_PARAMETER } from '../constants';\nimport { Parser, Parameter, CallableConfig, StructuredTypeFieldOptions, NONE_PARSER } from '../types';\n\nexport class ODataParameterParser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  collection?: boolean;\n  nullable?: boolean;\n\n  constructor(name: string, parameter: Parameter) {\n    this.name = name;\n    this.type = parameter.type;\n    this.parser = NONE_PARSER;\n    Object.assign(this, parameter);\n  }\n\n  serialize(value: T, options: StructuredTypeFieldOptions): any {\n    return Array.isArray(value) ?\n      value.map(v => this.parser.serialize(v, options)) :\n      this.parser.serialize(value, options);\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser }) {\n    this.parser = settings.findParserForType(this.type);\n  }\n}\n\nexport class ODataCallableParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  return?: { type: string, callable?: boolean};\n  parser: Parser;\n  parameters: ODataParameterParser[];\n  constructor(config: CallableConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.return = config.return;\n    this.parser = NONE_PARSER;\n    this.parameters = Object.entries(config.parameters || [])\n      .map(([name, p]) => new ODataParameterParser(name, p as Parameter));\n  }\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias)\n      names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options: StructuredTypeFieldOptions): R {\n    return this.parser.deserialize(value, options);\n  }\n\n  // Serialize\n  serialize(params: any, options: StructuredTypeFieldOptions): any {\n    return Object.assign({}, this.parameters.filter(p => p.name !== CALLABLE_BINDING_PARAMETER)\n      .filter(p => p.name in params && params[p.name] !== undefined)\n      .reduce((acc, p) => Object.assign(acc, { [p.name]: p.serialize(params[p.name], options) }), {})\n    );\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser }) {\n    if (this.return)\n      this.parser = settings.findParserForType(this.return.type) || NONE_PARSER;\n    this.parameters.forEach(p => p.configure(settings));\n  }\n\n  binding() {\n    return this.parameters.find(p => p.name === CALLABLE_BINDING_PARAMETER);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPathSegments.html":{"url":"classes/ODataPathSegments.html","title":"class - ODataPathSegments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPathSegments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clone\n                            \n                            \n                                find\n                            \n                            \n                                get\n                            \n                            \n                                last\n                            \n                            \n                                path\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segments?: ODataSegment[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataSegment[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            segments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSegment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:51\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(name: string, path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SegmentHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPathSegments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(predicate: (segment: ODataSegment) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SegmentHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            last\n                        \n                        \n                    \n                \n            \n            \n                \nlast()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SegmentHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            path\n                        \n                        \n                    \n                \n            \n            \n                \npath()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import buildQuery, { guid, Alias, alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { Types, Dates } from '../utils';\n\nimport { PATH_SEPARATOR } from '../constants';\nimport { EntityKey } from '../types';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action'\n}\n\nexport type ODataSegment = {\n  name: string;\n  path: string;\n  type?: string;\n  key?: any;\n  parameters?: any;\n}\n\nfunction pathSegmentsBuilder(segment: ODataSegment): string {\n  switch (segment.name) {\n    case PathSegmentNames.function:\n      const parameters = segment.parameters;\n      return (parameters ?\n        buildQuery({ func: { [segment.path]: parameters }}) :\n        buildQuery({ func: segment.path})\n      ).slice(1);\n    default:\n      let key = segment.key;\n      if (typeof (key) === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(key)) {\n        key = guid(key);\n      }\n      return segment.path + (key ? buildQuery({ key }) : \"\");\n  }\n}\n\nexport class ODataPathSegments {\n  protected segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this.segments = segments || [];\n  }\n\n  path(): string {\n    let chunks = this.segments\n      .map(pathSegmentsBuilder);\n    return chunks.join(PATH_SEPARATOR);\n  }\n\n  types(): string[] {\n    return this.segments.map(s => s.type).filter(t => t !== undefined) as string[];\n  }\n\n  toString(): string {\n    return this.path();\n  }\n\n  toJSON() {\n    return this.segments.map(segment => {\n      let json = { name: segment.name, path: segment.path };\n      if (segment.type !== undefined)\n        json.type = segment.type;\n      if (segment.key !== undefined)\n        json.key = Dates.isoStringToDate(JSON.parse(JSON.stringify(segment.key)));\n      if (segment.parameters !== undefined)\n        json.parameters = Dates.isoStringToDate(JSON.parse(JSON.stringify(segment.parameters)));\n      return json;\n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(predicate: (segment: ODataSegment) => boolean) {\n    //Backward Find\n    return [...this.segments].reverse().find(predicate);\n  }\n\n  last() {\n    return (this.segments.length > 0) ?\n       new SegmentHandler(this.segments[this.segments.length - 1]) : undefined;\n  }\n\n  add(name: string, path: string) {\n    const segment = { name, path } as ODataSegment;\n    this.segments.push(segment);\n    return new SegmentHandler(segment);\n  }\n\n  get(name: string) {\n    let segment = this.find(s => s.name === name);\n    if (segment === undefined)\n      throw Error(`No Segment for name ${name} was found`);\n    return new SegmentHandler(segment);\n  }\n}\n\nexport class SegmentHandler {\n  constructor(private segment: ODataSegment) {}\n\n  get name() {\n    return this.segment.name;\n  }\n\n  type(value?: string) {\n    if (value !== undefined)\n      this.segment.type = value;\n    return this.segment.type;\n  }\n\n  path(value?: string) {\n    if (value !== undefined)\n      this.segment.path = value;\n    return this.segment.path;\n  }\n\n  key(value?: EntityKey) {\n    if (value !== undefined)\n      this.segment.key = value;\n    return this.segment.key as EntityKey;\n  }\n\n  hasKey() {\n    return !Types.isEmpty(this.segment.key);\n  }\n\n  parameters(value?: T) {\n    if (value !== undefined)\n      this.segment.parameters = value;\n    return this.segment.parameters as T;\n  }\n\n  hasParameters() {\n    return !Types.isEmpty(this.segment.parameters);\n  }\n\n  // Aliases\n  alias(name: string, value?: any): Alias {\n    return alias(name, value);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPropertyMeta.html":{"url":"classes/ODataPropertyMeta.html","title":"class - ODataPropertyMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPropertyMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataMeta\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _context\n                            \n                            \n                                    Private\n                                    Optional\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataContext\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:8\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPropertyMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:60\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { DEFAULT_VERSION } from '../../constants';\nimport { ODataHelper } from '../../helpers';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    return this.options?.helper || ODataHelper[DEFAULT_VERSION];\n  }\n  constructor(data: any = {}, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    this.options = opt.options;\n    this.annotations = this.options ? this.odv.annotations(data) : data;\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context?: ODataContext;\n  get context(): ODataContext {\n    if (this._context === undefined) {\n      this._context = this.odv.context(this.annotations);\n    }\n    return this._context;\n  }\n\n  private _properties?: { [name: string]: any };\n  get properties() {\n    if (this._properties === undefined) {\n      this._properties = this.odv.properties(this.annotations);\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone(): ODataMeta;\n  abstract data(data: Object): Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, { options: this.options });\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type() {\n    return this.odv.type(this.annotations) || this.context.type;\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, { options: this.options });\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type() {\n    return this.odv.type(this.annotations) || this.context.type;\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag() {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink() {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink() {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink() {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType() {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, { options: this.options });\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n  get type() {\n    return this.context.type;\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions?: { [name: string]: any };\n  get functions() {\n    if (this._functions === undefined) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataQueryOptions.html":{"url":"classes/ODataQueryOptions.html","title":"class - ODataQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataQueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                clear\n                            \n                            \n                                clone\n                            \n                            \n                                has\n                            \n                            \n                                keep\n                            \n                            \n                                option\n                            \n                            \n                                params\n                            \n                            \n                                remove\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alias\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataQueryOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: QueryOptionNames)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keep\n                        \n                        \n                    \n                \n            \n            \n                \nkeep(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            option\n                        \n                        \n                    \n                \n            \n            \n                \noption(name: QueryOptionNames, opts?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:74\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OptionHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            params\n                        \n                        \n                    \n                \n            \n            \n                \nparams()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import buildQuery, { alias, Alias } from './builder';\n\nimport { Dates, Types, Urls, Objects } from '../utils';\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  expand = 'expand',\n  format = 'format',\n  // Custom options\n  custom = 'custom'\n}\n\nexport class ODataQueryOptions {\n  options: {[name: string]: any};\n\n  constructor(options?: {[name: string]: any}) {\n    this.options = options || {};\n  }\n\n  // Params\n  params(): {[name: string]: any} {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format]\n        .filter(key => !Types.isEmpty(this.options[key]))\n        .reduce((acc, key) => Object.assign(acc, {[key]: this.options[key]}), {});\n\n    let query = buildQuery(options);\n    let params = (query) ? Urls.parseQueryString(query.substr(1)) : {};\n\n    // Custom\n    let custom = this.options[QueryOptionNames.custom] || {};\n    if (Types.isArray(custom)) {\n      //TODO: split test for item type\n      custom = custom.reduce((acc: {[name: string]: any}, item: {[name: string]: any}) => Object.assign(acc, item), {});\n    }\n    Object.assign(params, custom);\n\n    return params;\n  }\n\n  toString(): string {\n    return Object.entries(this.params())\n      .filter(([, value]) => value)\n      .map(([key, value]) => `${key}=${value}`)\n      .join(\"&\");\n  }\n\n  toJSON() {\n    return Dates.isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (opts !== undefined)\n      this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return this.options[name] !== undefined;\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach(name => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter(k => names.indexOf(k as QueryOptionNames) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Aliases\n  alias(name: string, value: any): Alias {\n    return alias(name, value);\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(private o: {[name: string]: any}, private n: QueryOptionNames) { }\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  empty() {\n    return Types.isEmpty(this.o[this.n]);\n  }\n\n  //#region Primitive Value\n  value(v?: any) {\n    return v !== undefined && (this.o[this.n] = v) || this.o[this.n];\n  }\n  //#endregion\n\n  //#region Array Value\n  private assertArray(): any[] {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = this.o[this.n] !== undefined ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter(v => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1)\n      this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n  //#endregion\n\n  //#region HashMap Value\n  private assertObject(create: boolean): {[name: string]: any} {\n    if (!Types.isArray(this.o[this.n]) && Types.isObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find(v => Types.isObject(v));\n    if (!obj && create) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(path: string, value: any) {\n    let obj = this.assertObject(true);\n    Objects.set(obj, path, value);\n  }\n\n  get(path: string, def?: any): any {\n    let obj = this.assertObject(false) || {};\n    return Objects.get(obj, path, def);\n  }\n\n  unset(path: string) {\n    let obj = this.assertObject(true);\n    Objects.unset(obj, path);\n\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter((v: any) => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1)\n        this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(path: string) {\n    let obj = this.assertObject(false) || {};\n    return Objects.has(obj, path);\n  }\n\n  assign(values: {[attr: string]: any}) {\n    let obj = this.assertObject(true);\n    return Objects.merge(obj, values);\n  }\n  //#endregion\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataRequest.html":{"url":"classes/ODataRequest.html","title":"class - ODataRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/request.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                body\n                            \n                            \n                                    Readonly\n                                fetchPolicy\n                            \n                            \n                                    Readonly\n                                headers\n                            \n                            \n                                    Readonly\n                                method\n                            \n                            \n                                    Readonly\n                                observe\n                            \n                            \n                                    Readonly\n                                params\n                            \n                            \n                                    Readonly\n                                path\n                            \n                            \n                                    Readonly\n                                    Optional\n                                reportProgress\n                            \n                            \n                                    Readonly\n                                resource\n                            \n                            \n                                    Readonly\n                                    Optional\n                                responseType\n                            \n                            \n                                    Readonly\n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pathWithParams\n                                \n                                \n                                    url\n                                \n                                \n                                    urlWithParams\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fetchPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"cache-first\" | \"cache-and-network\" | \"network-only\" | \"no-cache\" | \"cache-only\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            observe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"events\" | \"response\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpParams\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            reportProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            responseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pathWithParams\n                    \n                \n\n                \n                    \n                        getpathWithParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:84\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:92\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        urlWithParams\n                    \n                \n\n                \n                    \n                        geturlWithParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:96\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ODataApi } from '../api';\nimport { ACCEPT, IF_MATCH_HEADER, IF_NONE_MATCH_HEADER, PREFER } from '../constants';\nimport { Http } from '../utils';\nimport { ODataResource } from './resource';\n\nexport class ODataRequest {\n  readonly method: string;\n  readonly api: ODataApi;\n  readonly body: T | null;\n  readonly observe: 'events' | 'response'\n  readonly reportProgress?: boolean;\n  readonly withCredentials?: boolean;\n  readonly responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  readonly fetchPolicy: 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\n  readonly headers: HttpHeaders;\n  readonly params: HttpParams;\n  readonly path: string;\n  readonly resource: ODataResource;\n\n  constructor(init: {\n    method: string,\n    api: ODataApi,\n    resource: ODataResource,\n    body: T | null,\n    observe: 'events' | 'response',\n    etag?: string,\n    headers?: HttpHeaders | { [header: string]: string | string[] },\n    reportProgress?: boolean,\n    params?: HttpParams | { [param: string]: string | string[] },\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text',\n    fetchPolicy?: 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only',\n    withCredentials?: boolean\n  }) {\n    this.method = init.method;\n    this.resource = init.resource;\n\n    this.api = init.api;\n    this.body = init.body;\n    this.reportProgress = init.reportProgress;\n    this.responseType = init.responseType;\n    this.observe = init.observe;\n\n    this.withCredentials = (init.withCredentials === undefined) ? this.api.options.withCredentials : init.withCredentials;\n    this.fetchPolicy = init.fetchPolicy || this.api.options.fetchPolicy;\n\n    // The Path and Params from resource\n    const [resourcePath, resourceParams] = init.resource.pathAndParams();\n    this.path = resourcePath;\n\n    // Headers\n    const customHeaders: {[name: string]: string | string[]} = {};\n    if (typeof init.etag === 'string') {\n      if (this.api.options.etag.ifMatch && ['PUT', 'PATCH', 'DELETE'].indexOf(this.method) !== -1)\n        customHeaders[IF_MATCH_HEADER] = init.etag;\n      else if (this.api.options.etag.ifNoneMatch && ['GET'].indexOf(this.method) !== -1)\n        customHeaders[IF_NONE_MATCH_HEADER] = init.etag;\n    }\n\n    const accept = [];\n    // Metadata ?\n    if (this.api.options.metadata !== undefined)\n      accept.push(`odata.metadata=${this.api.options.metadata}`);\n    // IEEE754\n    if (this.api.options.ieee754Compatible !== undefined)\n      accept.push(`IEEE754Compatible=${this.api.options.ieee754Compatible}`);\n    if (accept.length > 0)\n      customHeaders[ACCEPT] = [`application/json;${accept.join(';')}`, \"text/plain\", \"*/*\"];\n    const prefer = [];\n    // Return ?\n    if (this.api.options.prefer?.return !== undefined && ['POST', 'PUT', 'PATCH'].indexOf(this.method) !== -1)\n      prefer.push(`return=${this.api.options.prefer?.return}`);\n    // MaxPageSize\n    if (this.api.options.prefer?.maxPageSize !== undefined)\n      prefer.push(`odata.maxpagesize=${this.api.options.prefer?.maxPageSize}`);\n    if (prefer.length > 0)\n      customHeaders[PREFER] = prefer;\n    this.headers = Http.mergeHttpHeaders(this.api.options.headers, customHeaders, init.headers || {});\n\n    // Params\n    this.params = Http.mergeHttpParams(this.api.options.params, resourceParams, init.params || {});\n  }\n\n  get pathWithParams() {\n    let path = this.path;\n    if (this.params.keys().length > 0) {\n      path = `${path}?${this.params}`;\n    }\n    return path;\n  }\n\n  get url() {\n    return `${this.api.serviceRootUrl}${this.path}`;\n  }\n\n  get urlWithParams() {\n    return `${this.api.serviceRootUrl}${this.pathWithParams}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResource.html":{"url":"classes/ODataResource.html","title":"class - ODataResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/resource.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                isSubtypeOf\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ODataApi, segments?: ODataPathSegments, options?: ODataQueryOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/resource.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataPathSegments\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ODataQueryOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endpointUrl\n                        \n                        \n                    \n                \n            \n            \n                \nendpointUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSubtypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisSubtypeOf(other: ODataResource)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:64\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  VALUE_SEPARATOR,\n  PARAM_SEPARATOR,\n  QUERY_SEPARATOR\n} from '../constants';\nimport { Http, Urls } from '../utils/index';\n\nimport { PlainObject } from './builder';\nimport { ODataPathSegments } from './path-segments';\nimport {\n  ODataQueryOptions\n} from './query-options';\nimport { HttpOptions } from './types';\nimport { ODataResponse } from './responses/index';\nimport { ODataApi } from '../api';\nimport { Parser } from '../types';\nimport { ODataRequest } from './request';\nimport { ODataStructuredTypeParser } from '../parsers';\n\nexport abstract class ODataResource {\n  // VARIABLES\n  public api: ODataApi;\n  protected pathSegments: ODataPathSegments;\n  protected queryOptions: ODataQueryOptions;\n\n  constructor(\n    api: ODataApi,\n    segments?: ODataPathSegments,\n    options?: ODataQueryOptions\n  ) {\n    this.api = api;\n    this.pathSegments = segments || new ODataPathSegments();\n    this.queryOptions = options || new ODataQueryOptions();\n  }\n\n  /**\n   * @returns string The type of the resource\n   */\n  type() {\n    return this.pathSegments.last()?.type();\n  }\n\n  /**\n   * @returns string All covered types of the resource\n   */\n  types(): string[] {\n    return this.pathSegments.types();\n  }\n\n  isSubtypeOf(other: ODataResource) {\n    const api = this.api;\n    const self = this.type();\n    const that = other.type();\n    if (self !== undefined && that !== undefined) {\n      const thatParser = api.findParserForType(that) as ODataStructuredTypeParser;\n      return thatParser.findParser(c => c.isTypeOf(self)) !== undefined;\n    }\n    return false;\n  }\n\n  pathAndParams(): [string, PlainObject] {\n    let path = this.pathSegments.path();\n    let params = this.queryOptions.params();\n    if (path.indexOf(QUERY_SEPARATOR) !== -1) {\n      let parts = path.split(QUERY_SEPARATOR);\n      path = parts[0];\n      Object.assign(params, Urls.parseQueryString(parts[1]));\n    }\n    return [path, params];\n  }\n\n  endpointUrl() {\n    return `${this.api.serviceRootUrl}${this}`;\n  }\n\n  toString(): string {\n    let [path, params] = this.pathAndParams();\n    let queryString = Object.entries(params)\n      .map(e => `${e[0]}${VALUE_SEPARATOR}${e[1]}`)\n      .join(PARAM_SEPARATOR);\n    return queryString ? `${path}${QUERY_SEPARATOR}${queryString}` : path;\n  }\n\n  abstract clone(): ODataResource;\n\n  serialize(value: any): any {\n    let api = this.api;\n    let type = this.type();\n    if (type !== undefined) {\n      let parser = api.findParserForType(type);\n      if (parser !== undefined && 'serialize' in parser) {\n        return Array.isArray(value) ?\n          value.map(e => (parser as Parser).serialize(e, api.options)) :\n          parser.serialize(value, api.options);\n      }\n    }\n    return value;\n  }\n\n  toJSON() {\n    return {\n      segments: this.pathSegments.toJSON(),\n      options: this.queryOptions.toJSON()\n    };\n  }\n\n  alias(name: string, value?: any) {\n    return this.queryOptions.alias(name, value);\n  }\n\n  // Base Requests\n  protected request(\n    method: string,\n    options: HttpOptions & {\n      attrs?: any,\n      etag?: string,\n      responseType?: 'arraybuffer' | 'blob' | 'json' | 'text' | 'value' | 'property' | 'entity' | 'entities',\n      withCount?: boolean\n    }): Observable {\n\n    //let api = options.apiName ? this.client.apiByName(options.apiName) : this.api;\n    const copts = this.api.options;\n    let params = options.params || {};\n    if (options.withCount) {\n      params = Http.mergeHttpParams(params, copts.helper.countParam());\n    }\n\n    let responseType: 'arraybuffer' | 'blob' | 'json' | 'text' =\n      (options.responseType && ['property', 'entity', 'entities'].indexOf(options.responseType) !== -1) ?\n        'json' :\n      (options.responseType === 'value') ?\n        'text' :\n        options.responseType;\n\n    let body = options.attrs !== undefined ? this.serialize(options.attrs) : null;\n\n    let etag = options.etag;\n    if (etag === undefined && options.attrs != null) {\n      etag = copts.helper.etag(options.attrs);\n    }\n\n    const request = new ODataRequest({\n      method,\n      body,\n      etag,\n      api: this.api,\n      resource: this,\n      observe: 'response',\n      headers: options.headers,\n      reportProgress: options.reportProgress,\n      params: params,\n      responseType: responseType,\n      fetchPolicy: options.fetchPolicy,\n      withCredentials: options.withCredentials\n    });\n\n    const res$ = this.api.request(request);\n    switch (options.responseType) {\n      case 'entities':\n        return res$.pipe(map((res: ODataResponse) => res.entities()));\n      case 'entity':\n        return res$.pipe(map((res: ODataResponse) => res.entity()));\n      case 'property':\n        return res$.pipe(map((res: ODataResponse) => res.property()));\n      case 'value':\n        return res$.pipe(map((res: ODataResponse) => res.value() as T));\n      default:\n        // Other responseTypes (arraybuffer, blob, json, text) return body\n        return res$.pipe(map((res: ODataResponse) => res.body));\n    }\n  }\n\n  protected get(options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('GET', options);\n  }\n\n  protected post(attrs: any, options: HttpOptions & {\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('POST', Object.assign(options, { attrs }));\n  }\n\n  protected put(attrs: any, options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('PUT', Object.assign(options, { attrs }));\n  }\n\n  protected patch(attrs: any, options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('PATCH', Object.assign(options, { attrs }));\n  }\n\n  protected delete(options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('DELETE', options);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponse.html":{"url":"classes/ODataResponse.html","title":"class - ODataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/response.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HttpResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _options\n                            \n                            \n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deserialize\n                            \n                            \n                                entities\n                            \n                            \n                                entity\n                            \n                            \n                                    Static\n                                fromHttpResponse\n                            \n                            \n                                    Static\n                                fromJSON\n                            \n                            \n                                    Private\n                                parse\n                            \n                            \n                                property\n                            \n                            \n                                toJSON\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/response.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ODataResponseOptions | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deserialize(type: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \nentities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \nentity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromHttpResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromHttpResponse(req: ODataRequest, res: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:31\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSON(req: ODataRequest, json: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    json\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(parser: Parser, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parser\n                                    \n                                                Parser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataProperty\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { body: any; headers: any; status: any; statusText: any; url: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T | null\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:74\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ODataEntityMeta, ODataEntitiesMeta, ODataPropertyMeta } from './meta';\nimport { Parser } from '../../types';\nimport { Types } from '../../utils/types';\nimport { ODataResource } from '../resource';\nimport { ODataStructuredTypeParser } from '../../parsers/structured-type';\nimport { ODataEntities, ODataEntity, ODataProperty } from './types';\nimport { APPLICATION_JSON, ODATA_VERSION_HEADERS, CONTENT_TYPE, CACHE_CONTROL, MAX_AGE } from '../../constants';\nimport { ODataApi } from '../../api';\nimport { ODataRequest } from '../request';\nimport { ODataResponseOptions } from './options';\n\nexport class ODataResponse extends HttpResponse {\n  readonly api: ODataApi;\n  readonly resource: ODataResource;\n\n  constructor(init: {\n      api: ODataApi,\n      resource: ODataResource,\n      body: T | null;\n      headers: HttpHeaders;\n      status: number;\n      statusText: string;\n      url?: string;\n  }) {\n    super(init);\n    this.api = init.api;\n    this.resource = init.resource;\n  }\n\n  static fromHttpResponse(req: ODataRequest, res: HttpResponse) {\n    return new ODataResponse({\n      api: req.api,\n      resource: req.resource,\n      body: res.body,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n      url: res.url || undefined,\n    });\n  }\n\n  static fromJSON(req: ODataRequest, json: {\n      body: T | null;\n      headers: {[name: string]: string | string[]};\n      status: number;\n      statusText: string;\n      url: string | null;\n  }) {\n    return new ODataResponse({\n      api: req.api,\n      resource: req.resource,\n      body: json.body,\n      headers: new HttpHeaders(json.headers),\n      status: json.status,\n      statusText: json.statusText,\n      url: json.url || undefined,\n    });\n  }\n\n  toJSON() {\n    return {\n      body: this.body,\n      headers: this.headers.keys()\n        .map(name => ({[name]: this.headers.getAll(name) || []}))\n        .reduce((acc, header) => Object.assign(acc, header), {}),\n      status: this.status,\n      statusText: this.statusText,\n      url: this.url\n    }\n  }\n\n  private _options: ODataResponseOptions | null = null;\n  get options(): ODataResponseOptions {\n    if (this._options === null) {\n      this._options = new ODataResponseOptions(this.api.options);\n      const contentType = this.headers.get(CONTENT_TYPE);\n      if (contentType && contentType.indexOf(APPLICATION_JSON) !== -1) {\n        const features = contentType.split(\",\").find(p => p.startsWith(APPLICATION_JSON)) as string;\n        this._options.setFeatures(features);\n      }\n      const key = this.headers.keys().find(k => ODATA_VERSION_HEADERS.indexOf(k) !== -1);\n      if (key) {\n        const version = (this.headers.get(key) || \"\").replace(/\\;/g, \"\") as '2.0' | '3.0' | '4.0';\n        this._options.setVersion(version);\n      }\n      const cacheControl = this.headers.get(CACHE_CONTROL);\n      if (cacheControl) {\n        this._options.setCache(cacheControl);\n      }\n    }\n    return this._options;\n  }\n\n  private parse(parser: Parser, value: any): any {\n    const type = Types.isObject(value) ? this.options.helper.type(value) : undefined;\n    if (type !== undefined && parser instanceof ODataStructuredTypeParser) {\n      parser = parser.findParser(c => c.isTypeOf(type));\n    }\n    return parser.deserialize(value, this.options);\n  }\n\n  private deserialize(type: string, value: any): any {\n    const parser = this.api.findParserForType(type);\n    if (parser !== undefined)\n      return Array.isArray(value) ?\n        value.map(v => this.parse(parser, v)) :\n        this.parse(parser, value);\n    return value;\n  }\n\n  entity(): ODataEntity {\n    const payload = this.body && this.options.version === \"2.0\" ? (this.body)[\"d\"] : this.body;\n    const meta = new ODataEntityMeta(payload || {}, {options: this.options, headers: this.headers});\n    let entity = payload ? meta.data(payload) as T : null;\n    const type = this.resource.type();\n    if (entity !== null && type !== undefined)\n      entity = this.deserialize(type, entity) as T;\n    return { entity, meta };\n  }\n\n  entities(): ODataEntities {\n    const payload = this.options.version === \"2.0\" ? (this.body)[\"d\"] : this.body;\n    const meta = new ODataEntitiesMeta(payload || {}, {options: this.options, headers: this.headers});\n    let entities = payload ? meta.data(payload) as T[] : null;\n    const type = this.resource.type();\n    if (entities !== null && type !== undefined)\n      entities = this.deserialize(type, entities) as T[];\n    return { entities, meta };\n  }\n\n  property(): ODataProperty {\n    const payload = this.options.version === \"2.0\" ? (this.body)[\"d\"] : this.body;\n    const meta = new ODataPropertyMeta(payload || {}, {options: this.options, headers: this.headers});\n    let property = payload ? meta.data(payload) as T : null;\n    const type = this.resource.type();\n    if (property !== null && type !== undefined)\n      property = this.deserialize(type, property) as T;\n    return { property, meta };\n  }\n\n  value(): T | null {\n    const payload = this.body && this.options.version === \"2.0\" ? this.body : this.body;\n    const type = this.resource.type();\n    return payload ?\n      (type !== undefined ? this.deserialize(type, payload) : payload) as T:\n      null;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponseOptions.html":{"url":"classes/ODataResponseOptions.html","title":"class - ODataResponseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/options.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ResponseOptions\n                            OptionsHelper\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cacheability\n                            \n                            \n                                    Optional\n                                ieee754Compatible\n                            \n                            \n                                    Optional\n                                maxAge\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                    Optional\n                                streaming\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                setCache\n                            \n                            \n                                setFeatures\n                            \n                            \n                                setVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Options)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cacheability\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"public\" | \"private\" | \"no-cache\" | \"no-store\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ieee754Compatible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            metadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataMetadataType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            streaming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataVersion\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResponseOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCache\n                        \n                        \n                    \n                \n            \n            \n                \nsetCache(cacheControl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cacheControl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFeatures\n                        \n                        \n                    \n                \n            \n            \n                \nsetFeatures(features: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    features\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVersion\n                        \n                        \n                    \n                \n            \n            \n                \nsetVersion(version: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DEFAULT_VERSION, MAX_AGE, VERSION_2_0, VERSION_3_0, VERSION_4_0 } from '../../constants';\nimport { ODataHelper } from '../../helpers/odata';\nimport { CacheCacheability, ODataMetadataType, ODataVersion, Options, OptionsHelper, ResponseOptions } from '../../types';\n\nexport class ODataResponseOptions implements ResponseOptions, OptionsHelper {\n  version: ODataVersion;\n  streaming?: boolean;\n  // OData\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  // Cache\n  cacheability?: 'public' | 'private' | 'no-cache' | 'no-store';\n  maxAge?: number;\n\n  constructor(config: Options) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.metadata = config.metadata;\n    this.stringAsEnum = config.stringAsEnum;\n    this.ieee754Compatible = config.ieee754Compatible;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n\n  clone() {\n    return new ODataResponseOptions(this);\n  }\n\n  setFeatures(features: string) {\n    features.split(\";\").forEach(o => {\n      let [k, v] = o.split(\"=\");\n      switch (k.trim()) {\n        case 'odata.metadata':\n          this.metadata = v as ODataMetadataType;\n          break;\n        case 'odata.streaming':\n          this.streaming = v == \"true\";\n          break;\n        case 'IEEE754Compatible':\n          this.ieee754Compatible = v == \"true\";\n          break;\n      }\n    });\n  }\n\n  setVersion(version: string) {\n    const value = version.replace(/\\;/g, \"\").trim();\n    if ([VERSION_2_0, VERSION_3_0, VERSION_4_0].indexOf(value) !== -1)\n      this.version = value as ODataVersion;\n  }\n\n  setCache(cacheControl: string) {\n    cacheControl.split(\",\").forEach(directive => {\n      if (directive.startsWith(MAX_AGE)) {\n        let maxAge = Number(directive.split(\"=\")[1]);\n        if (!Number.isNaN(maxAge))\n          this.maxAge = maxAge;\n      }\n      if (['public', 'private', 'no-cache', 'no-store'].indexOf(directive) !== -1) {\n        this.cacheability = directive as CacheCacheability;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSchema.html":{"url":"classes/ODataSchema.html","title":"class - ODataSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                annotations\n                            \n                            \n                                api\n                            \n                            \n                                callables\n                            \n                            \n                                containers\n                            \n                            \n                                entities\n                            \n                            \n                                enums\n                            \n                            \n                                namespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                findAnnotation\n                            \n                            \n                                    Public\n                                findCallableForType\n                            \n                            \n                                    Public\n                                findEntitySetForType\n                            \n                            \n                                    Public\n                                findEnumTypeForType\n                            \n                            \n                                    Public\n                                findStructuredTypeForType\n                            \n                            \n                                isNamespaceOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    entitySets\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: SchemaConfig, api: ODataApi)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SchemaConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataCallable[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enums\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCallableForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCallableForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:66\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEntitySetForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEntitySetForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEnumTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEnumTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:58\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findStructuredTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findStructuredTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNamespaceOf\n                        \n                        \n                    \n                \n            \n            \n                \nisNamespaceOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        entitySets\n                    \n                \n\n                \n                    \n                        getentitySets()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:47\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataStructuredType } from './structured-type';\nimport { ODataCallable } from './callable';\nimport { ODataEntityContainer } from './entity-container';\nimport { ODataEnumType } from './enum-type';\nimport { ODataApi } from '../api';\nimport { SchemaConfig, Parser, CallableConfig, Annotation } from '../types';\nimport { ODataEntitySet } from './entity-set';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataSchema {\n  api: ODataApi;\n  namespace: string;\n  alias?: string;\n  enums: ODataEnumType[];\n  entities: ODataStructuredType[];\n  callables: ODataCallable[];\n  containers: ODataEntityContainer[];\n  annotations: ODataAnnotation[];\n\n  constructor(config: SchemaConfig, api: ODataApi) {\n    this.api = api;\n    this.namespace = config.namespace;\n    this.alias = config.alias;\n    this.enums = (config.enums || []).map(config => new ODataEnumType(config, this));\n    this.entities = (config.entities || []).map(config => new ODataStructuredType(config, this));\n    // Merge callables\n    let callableConfigs = (config.callables || []);\n    callableConfigs = callableConfigs.reduce((acc: CallableConfig[], config) => {\n      if (acc.every(c => c.name !== config.name)) {\n        config = callableConfigs.filter(c => c.name === config.name).reduce((acc, c) => {\n          acc.parameters = Object.assign(acc.parameters || {}, c.parameters || {});\n          return acc;\n        }, config);\n        return [...acc, config];\n      }\n      return acc;\n    }, [] as CallableConfig[]);\n    this.callables = callableConfigs.map(config => new ODataCallable(config, this));\n    this.containers = (config.containers || []).map(container => new ODataEntityContainer(container, this));\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isNamespaceOf(type: string) {\n    return type.startsWith(this.namespace) || (this.alias && type.startsWith(this.alias));\n  }\n\n  get entitySets() {\n    return this.containers\n      .reduce(\n        (acc, container) => [...acc, ...container.entitySets], [] as ODataEntitySet[]);\n  }\n\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  //#region Find for Type\n  public findEnumTypeForType(type: string) {\n    return this.enums.find(e => e.isTypeOf(type)) as ODataEnumType | undefined;\n  }\n\n  public findStructuredTypeForType(type: string) {\n    return this.entities.find(e => e.isTypeOf(type)) as ODataStructuredType | undefined;\n  }\n\n  public findCallableForType(type: string) {\n    return this.callables.find(e => e.isTypeOf(type)) as ODataCallable | undefined;\n  }\n\n  public findEntitySetForType(type: string) {\n      return this.entitySets.find(e => e.isTypeOf(type));\n  }\n  //#endregion\n\n  configure(settings: { findParserForType: (type: string) => Parser }) {\n    // Configure Entities\n    this.entities\n      .forEach(config => config.configure(settings));\n    // Configure callables\n    this.callables\n      .forEach(callable => callable.configure(settings));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ODataServiceFactory.html":{"url":"injectables/ODataServiceFactory.html","title":"injectable - ODataServiceFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ODataServiceFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/factory.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entitySet\n                            \n                            \n                                singleton\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/factory.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entitySet\n                        \n                        \n                    \n                \n            \n            \n                \nentitySet(path: string, apiNameOrEntityType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:10\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiNameOrEntityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntitySetService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            singleton\n                        \n                        \n                    \n                \n            \n            \n                \nsingleton(path: string, apiNameOrEntityType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:15\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiNameOrEntityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataSingletonService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ODataClient } from \"../client\";\nimport { ODataEntitySetService } from './entity-set';\nimport { ODataSingletonService } from './singleton';\n\n@Injectable()\nexport class ODataServiceFactory {\n  constructor(protected client: ODataClient) { }\n\n  entitySet(path: string, apiNameOrEntityType?: string): ODataEntitySetService {\n    return new class extends ODataEntitySetService {\n    }(this.client, path, apiNameOrEntityType);\n  }\n\n  singleton(path: string, apiNameOrEntityType?: string): ODataSingletonService {\n    return new class extends ODataSingletonService {\n    }(this.client, path, apiNameOrEntityType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSingletonService.html":{"url":"classes/ODataSingletonService.html","title":"class - ODataSingletonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSingletonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/singleton.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Public\n                                    Abstract\n                                attach\n                            \n                            \n                                    Public\n                                    Abstract\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    singletonSchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/singleton.ts:11\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/singleton.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataSingletonResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataEntityService\n\n                \n            \n            \n                \n                        Defined in         ODataEntityService:10\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataEntityService\n\n                \n            \n            \n                \n                        Defined in         ODataEntityService:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        singletonSchema\n                    \n                \n\n                \n                    \n                        getsingletonSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/singleton.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataModel } from '../models/model';\nimport { ODataSingletonResource } from '../resources';\nimport { ODataEntityService } from \"./entity\";\n\nexport class ODataSingletonService extends ODataEntityService {\n  public entity(): ODataSingletonResource {\n    return this.client.singleton(this.name, this.apiNameOrEntityType);\n  }\n\n  // Models\n  public attach>(value: M) {\n    value.resource(this.entity());\n  }\n  // Service Config\n  get singletonSchema() {\n    return this.api.findEntitySetByName(this.name);\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataStructuredType.html":{"url":"classes/ODataStructuredType.html","title":"class - ODataStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                    Optional\n                                model\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                defaults\n                            \n                            \n                                fields\n                            \n                            \n                                findAnnotation\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                pick\n                            \n                            \n                                resolveKey\n                            \n                            \n                                toJsonSchema\n                            \n                            \n                                type\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: StructuredTypeConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/structured-type.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StructuredTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredTypeParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaults\n                        \n                        \n                    \n                \n            \n            \n                \ndefaults()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fields\n                        \n                        \n                    \n                \n            \n            \n                \nfields(opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { include_navigation: false, include_parents: true }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ODataStructuredTypeFieldParser[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pick\n                        \n                        \n                    \n                \n            \n            \n                \npick(value: literal type, opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { include_navigation: false, include_parents: true, include_etag: true }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Partial\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveKey\n                        \n                        \n                    \n                \n            \n            \n                \nresolveKey(attrs: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntityKey | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                JsonSchemaOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(attrs: Partial, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:33\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { JsonSchemaOptions, ODataStructuredTypeFieldParser, ODataStructuredTypeParser } from '../parsers';\nimport { Annotation, EntityKey, Parser, StructuredTypeConfig } from '../types';\nimport { Types } from '../utils/types';\nimport { ODataAnnotation } from './annotation';\nimport { ODataSchema } from './schema';\n\nexport class ODataStructuredType {\n  schema: ODataSchema;\n  name: string;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  parser: ODataStructuredTypeParser;\n  annotations: ODataAnnotation[];\n\n  constructor(config: StructuredTypeConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataStructuredTypeParser(config, schema.namespace, schema.alias);\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n  configure(settings: { findParserForType: (type: string) => Parser }) {\n    const parserSettings = Object.assign({ options: this.api.options }, settings);\n    this.parser.configure(parserSettings);\n  }\n  type({alias = false}: {alias?: boolean} = {}) {\n    return `${alias ? this.schema.alias : this.schema.namespace}.${this.name}`;\n  }\n  isTypeOf(type: string) {\n    return this.parser.isTypeOf(type);\n  }\n  get api() {\n    return this.schema.api;\n  }\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = { include_navigation: false, include_parents: true }): ODataStructuredTypeFieldParser[] {\n    let parent = this.parser as ODataStructuredTypeParser | undefined;\n    let fields = []>[];\n    while (parent !== undefined) {\n      fields = [\n        ...parent.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parent = parent.parent;\n    }\n    return fields;\n  }\n  pick(value: { [name: string]: any }, opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean,\n    include_etag?: boolean\n  } = { include_navigation: false, include_parents: true, include_etag: true }): Partial {\n    const names = this.fields(opts).map(f => f.name);\n    let attrs = Object.keys(value)\n      .filter(k => names.indexOf(k) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: value[k] }), {});\n    if (opts.include_etag) {\n      const etag = this.api.options.helper.etag(value);\n      this.api.options.helper.etag(attrs, etag);\n    }\n    return attrs;\n  }\n  resolveKey(attrs: any): EntityKey | undefined {\n    let key = this.parser.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {}) as any;\n    const values = Object.values(key);\n    if (values.length === 1) {\n      // Single primitive key value\n      key = values[0];\n    } else if (values.some(v => v === undefined)) {\n      // Compose key, needs all values\n      key = null;\n    }\n    return !Types.isEmpty(key) ? key : undefined;\n  }\n  defaults() {\n    return this.parser.defaults();\n  }\n\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    return this.parser.toJsonSchema(options);\n  }\n  validate(attrs: Partial, {create = false, patch = false}: {create?: boolean, patch?: boolean} = {}) {\n    return this.parser.validate(attrs, {create, patch});\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataStructuredTypeParser.html":{"url":"classes/ODataStructuredTypeParser.html","title":"class - ODataStructuredTypeParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataStructuredTypeParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/structured-type.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                    Optional\n                                base\n                            \n                            \n                                children\n                            \n                            \n                                fields\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                            \n                                    Optional\n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                defaults\n                            \n                            \n                                deserialize\n                            \n                            \n                                find\n                            \n                            \n                                findParser\n                            \n                            \n                                isComplexType\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                keys\n                            \n                            \n                                serialize\n                            \n                            \n                                toJsonSchema\n                            \n                            \n                                typeFor\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: StructuredTypeConfig, namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:213\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StructuredTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:209\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:210\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredTypeParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:212\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ODataStructuredTypeFieldParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:213\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:207\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:208\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredTypeParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:211\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaults\n                        \n                        \n                    \n                \n            \n            \n                \ndefaults()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:313\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(predicate: (p: ODataStructuredTypeParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:303\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataStructuredTypeParser | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findParser\n                        \n                        \n                    \n                \n            \n            \n                \nfindParser(predicate: (p: ODataStructuredTypeParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:309\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Parser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplexType\n                        \n                        \n                    \n                \n            \n            \n                \nisComplexType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:299\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:225\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keys\n                        \n                        \n                    \n                \n            \n            \n                \nkeys()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                JsonSchemaOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeFor\n                        \n                        \n                    \n                \n            \n            \n                \ntypeFor(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:287\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(attrs: any, undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:324\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types } from '../utils';\nimport { Parser, StructuredTypeField, StructuredTypeConfig, Annotation, OptionsHelper, NONE_PARSER, EntityKey } from '../types';\nimport { ODataEnumTypeParser } from './enum-type';\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaCustom = {[P in keyof T]?: (schema: any, field: ODataStructuredTypeFieldParser) => any };\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaOptions };\nexport type JsonSchemaOptions = {\n  select?: JsonSchemaSelect;\n  custom?: JsonSchemaCustom;\n  expand?: JsonSchemaExpand;\n}\n\nexport class ODataStructuredTypeFieldParser implements StructuredTypeField, Parser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  default?: any;\n  maxLength?: number;\n  key: boolean;\n  collection: boolean;\n  nullable: boolean;\n  navigation: boolean;\n  field?: string;\n  precision?: number;\n  scale?: number;\n  ref?: string;\n  annotations: Annotation[];\n\n  constructor(name: string, field: StructuredTypeField) {\n    this.name = name;\n    this.type = field.type;\n    this.parser = NONE_PARSER;\n    this.annotations = field.annotations || [];\n    this.default = field.default;\n    this.maxLength = field.maxLength;\n    this.key = field.key !== undefined ? field.key : false;\n    this.collection = field.collection !== undefined ? field.collection : false;\n    this.nullable = field.nullable !== undefined ? field.nullable : true;\n    this.navigation = field.navigation !== undefined ? field.navigation : false;\n    this.field = field.field;\n    this.precision = field.precision;\n    this.scale = field.scale;\n    this.ref = field.ref;\n  }\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  resolve(value: any) {\n    return (this.ref || this.name).split('/').reduce((acc, name) => acc[name], value);\n  }\n  validate(\n    value: any,\n    {create = false, patch = false}: {create?: boolean, patch?: boolean} = {}\n  ): {[key: string]: any} | {[key: string]: any}[] | string[] | undefined {\n    let errors;\n    if (this.collection && Array.isArray(value)) {\n      errors = value.map(v => this.validate(v, {create, patch})) as {[key: string]: any[]}[];\n    } else if (this.isNavigation() && value !== undefined) {\n      errors = this.structured().validate(value, {create, patch}) || {} as {[key: string]: any[]};\n    } else if (this.isComplexType() && typeof value === 'object' && value !== null) {\n      errors = this.structured().validate(value, {create, patch}) || {} as {[key: string]: any[]};\n    }\n    else if (this.isEnumType() && (typeof value === 'string' || typeof value === 'number')) {\n      errors = this.enum().validate(value, {create, patch});\n    }\n    else {\n      const computed = this.findAnnotation(a => a.type === \"Org.OData.Core.V1.Computed\");\n      errors = [];\n      if (\n        !this.nullable &&\n        (value === null || (value === undefined && !patch)) && // Is null or undefined without patch flag?\n        !(computed?.bool && create) // Not (Is Computed field and create) ?\n      ) {\n        errors.push(`required`);\n      }\n      if (this.maxLength !== undefined && typeof value === 'string' && value.length > this.maxLength) {\n        errors.push(`maxlength`);\n      }\n    }\n    return !Types.isEmpty(errors) ? errors : undefined;\n  }\n\n  //#region Deserialize\n  private parse(parser: ODataStructuredTypeParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).deserialize(value, options);\n    }\n    return parser.deserialize(value, options);\n  }\n\n  deserialize(value: any, options: OptionsHelper): T {\n    if (this.parser instanceof ODataStructuredTypeParser) {\n      const parser = this.parser as ODataStructuredTypeParser;\n      return Array.isArray(value) ?\n        value.map(v => this.parse(parser, v, options)) :\n        this.parse(parser, value, options);\n    }\n    return this.parser.deserialize(value, Object.assign({field: this}, options));\n  }\n  //#endregion\n\n  //#region Serialize\n  private toJson(parser: ODataStructuredTypeParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).serialize(value, options);\n    }\n    return parser.serialize(value, options);\n  }\n\n  serialize(value: T, options: OptionsHelper): any {\n    if (this.parser instanceof ODataStructuredTypeParser) {\n      const parser = this.parser as ODataStructuredTypeParser;\n      return Array.isArray(value) ?\n        (value as any[]).map(v => this.toJson(parser, v, options)) :\n        this.toJson(parser, value, options);\n    }\n    return this.parser.serialize(value, Object.assign({field: this}, options));\n  }\n  //#endregion\n\n  configure(settings: {\n    findParserForType: (type: string) => Parser,\n    options: OptionsHelper\n  }) {\n    this.parser = settings.findParserForType(this.type);\n    if (this.default !== undefined)\n      this.default = this.deserialize(this.default, settings.options);\n  }\n\n  //#region Json Schema\n  // https://json-schema.org/\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema: any = (this.parser instanceof ODataStructuredTypeFieldParser ||\n      this.parser instanceof ODataStructuredTypeParser ||\n      this.parser instanceof ODataEnumTypeParser) ?\n    this.parser.toJsonSchema(options) : {title: this.name, type: \"object\"} as any;\n\n    if ([\"Edm.String\", \"Edm.Date\", \"Edm.TimeOfDay\", \"Edm.DateTimeOffset\", \"Edm.Guid\", \"Edm.Binary\"].indexOf(this.type) !== -1) {\n      schema.type = \"string\";\n      if (this.type === \"Edm.Date\")\n        schema.format = \"date\";\n      else if (this.type === \"Edm.TimeOfDay\")\n        schema.format = \"time\";\n      else if (this.type === \"Edm.DateTimeOffset\")\n        schema.format = \"date-time\";\n      else if (this.type === \"Edm.Guid\")\n        schema.pattern = \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$\";\n      else if (this.type === \"Edm.Binary\")\n        schema.contentEncoding = \"base64\";\n      else if (this.type === \"Edm.String\" && this.maxLength)\n        schema.maxLength = this.maxLength;\n    } else if ([\"Edm.Int64\", \"Edm.Int32\", \"Edm.Int16\", \"Edm.Byte\", \"Edm.SByte\"].indexOf(this.type) !== -1) {\n      //TODO: Range\n      schema.type = \"integer\";\n    } else if ([\"Edm.Decimal\", \"Edm.Double\"].indexOf(this.type) !== -1) {\n      schema.type = \"number\";\n    } else if ([\"Edm.Boolean\"].indexOf(this.type) !== -1) {\n      schema.type = \"boolean\";\n    }\n    if (this.default)\n      schema.default = this.default;\n    if (this.nullable)\n      schema.type = [schema.type, 'null'];\n    if (this.collection)\n      schema = {\n        type: \"array\",\n        items: schema,\n        additionalItems: false\n      };\n    return schema;\n  }\n  //#endregion\n\n  isNavigation() {\n    return this.navigation;\n  }\n  isEnumType() {\n    return this.parser instanceof ODataEnumTypeParser;\n  }\n  isEdmType() {\n    return this.type.startsWith(\"Edm.\");\n  }\n  enum() {\n    if (!this.isEnumType())\n      throw new Error(\"Field are not EnumType\")\n    return this.parser as ODataEnumTypeParser;\n  }\n  isStructuredType() {\n    return this.parser instanceof ODataStructuredTypeParser;\n  }\n  isComplexType() {\n    return this.parser instanceof ODataStructuredTypeParser && this.parser.isComplexType();\n  }\n  structured() {\n    if (!this.isStructuredType())\n      throw new Error(\"Field are not StrucuturedType\")\n    return this.parser as ODataStructuredTypeParser;\n  }\n}\n\nexport class ODataStructuredTypeParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  base?: string;\n  parent?: ODataStructuredTypeParser;\n  children: ODataStructuredTypeParser[];\n  fields: ODataStructuredTypeFieldParser[];\n\n  constructor(config: StructuredTypeConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.children = [];\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataStructuredTypeFieldParser(name, f as StructuredTypeField));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias)\n      names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options: OptionsHelper): T {\n    if (this.parent)\n      value = this.parent.deserialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && value[f.name] !== undefined && value[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.deserialize(value[f.name], options) }), {})\n    );\n  }\n\n  // Serialize\n  serialize(value: T, options: OptionsHelper): any {\n    if (this.parent)\n      value = this.parent.serialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && (value as any)[f.name] !== undefined && (value as any)[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.serialize((value as any)[f.name], options) }), {})\n    );\n  }\n\n  configure(settings: {\n    findParserForType: (type: string) => Parser,\n    options: OptionsHelper\n  }) {\n    if (this.base) {\n      const parent = settings.findParserForType(this.base) as ODataStructuredTypeParser;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema = {\n      $schema: \"http://json-schema.org/draft-07/schema#\",\n      $id: `${this.namespace}.${this.name}`,\n      title: this.name,\n      type: \"object\"\n    } as any;\n    const fields = this.fields\n      .filter(f => (!f.navigation || (options.expand && f.name in options.expand)) && (!options.select || (options.select).indexOf(f.name) !== -1));\n    schema.properties = fields\n      .map(f => {\n        let expand = options.expand && f.name in options.expand ? (options.expand as any)[f.name] : undefined;\n        let schema = f.toJsonSchema(expand);\n        if (options.custom && f.name in options.custom)\n          schema = (options.custom[f.name as keyof T] as (schema: any, field: ODataStructuredTypeFieldParser) => any)(schema, f);\n        return { [f.name]: schema };\n      })\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    schema.required = fields.filter(f => !f.nullable).map(f => f.name);\n    return schema;\n  }\n\n  typeFor(name: string): string | undefined {\n    const field = this.fields.find(f => f.name === name);\n    if (field === undefined && this.parent !== undefined)\n      return this.parent.typeFor(name);\n    return field !== undefined ? field.type : undefined;\n  }\n\n  keys() {\n    const keys: ODataStructuredTypeFieldParser[] = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  isComplexType() {\n    return this.keys().length === 0;\n  }\n\n  find(predicate: (p: ODataStructuredTypeParser) => boolean): ODataStructuredTypeParser | undefined {\n    if (predicate(this))\n      return this;\n    return this.children.find(c => c.find(predicate));\n  }\n\n  findParser(predicate: (p: ODataStructuredTypeParser) => boolean): Parser {\n    return this.find(predicate) || NONE_PARSER;\n  }\n\n  defaults(): {[name: string]: any} {\n    let value = (this.parent) ? this.parent.defaults() : {};\n    let fields = this.fields.filter(f => f.default !== undefined || f.isComplexType());\n    return Object.assign({}, value, fields.reduce((acc, f) => {\n      let value = f.isComplexType() ? f.structured().defaults() : f.default;\n      if (!Types.isEmpty(value))\n        Object.assign(acc, {[f.name]: value });\n      return acc;\n    }, {}));\n  }\n\n  validate(\n    attrs: any,\n    {create = false, patch = false}: {create?: boolean, patch?: boolean} = {}\n  ): {[key: string]: any} | undefined {\n    const errors = (this.parent && this.parent.validate(attrs, {create}) || {}) as {[key: string]: any };\n    for (var field of this.fields) {\n      const value = attrs[field.name as keyof T];\n      const errs = field.validate(value, {create, patch});\n      if (errs !== undefined) {\n        errors[field.name] = errs;\n      }\n    }\n    return !Types.isEmpty(errors) ? errors : undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataValueResource.html":{"url":"classes/ODataValueResource.html","title":"class - ODataValueResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataValueResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/value.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                fetch\n                            \n                            \n                                fetchArraybuffer\n                            \n                            \n                                fetchBlob\n                            \n                            \n                                alias\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                isSubtypeOf\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:27\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataValueResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(api: ODataApi, type: string | undefined, segments: ODataPathSegments, options: ODataQueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        V\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api\n                                    \n                                                ODataApi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                                ODataPathSegments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataValueResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(options: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchArraybuffer\n                        \n                        \n                    \n                \n            \n            \n                \nfetchArraybuffer(options: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchBlob\n                        \n                        \n                    \n                \n            \n            \n                \nfetchBlob(options: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:110\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:207\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endpointUrl\n                        \n                        \n                    \n                \n            \n            \n                \nendpointUrl()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:176\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSubtypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisSubtypeOf(other: ODataResource)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:64\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:184\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:191\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:115\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:42\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:49\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { ODataResource } from '../resource';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataQueryOptions } from '../query-options';\nimport { HttpOptions } from './options';\nimport { $VALUE } from '../../constants';\nimport { ODataApi } from '../../api';\n\nexport class ODataValueResource extends ODataResource {\n  //#region Factory\n  static factory(api: ODataApi, type: string | undefined, segments: ODataPathSegments, options: ODataQueryOptions) {\n    const segment = segments.add(PathSegmentNames.value, $VALUE);\n    if (type)\n      segment.type(type);\n    options.clear();\n    return new ODataValueResource(api, segments, options);\n  }\n\n  clone() {\n    return new ODataValueResource(this.api, this.pathSegments.clone(), this.queryOptions.clone());\n  }\n  //#endregion\n\n  //#region Requests\n  fetch(options: HttpOptions = {}): Observable {\n    return super.get(\n      Object.assign({ responseType: 'value' }, options)\n    );\n  }\n\n  fetchArraybuffer(options: HttpOptions = {}): Observable {\n    return super.get(\n      Object.assign({ responseType: 'arraybuffer' }, options)\n    );\n  }\n\n  fetchBlob(options: HttpOptions = {}): Observable {\n    return super.get(\n      Object.assign({ responseType: 'blob' }, options)\n    );\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionHandler.html":{"url":"classes/OptionHandler.html","title":"class - OptionHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assertArray\n                            \n                            \n                                    Private\n                                assertObject\n                            \n                            \n                                assign\n                            \n                            \n                                at\n                            \n                            \n                                clear\n                            \n                            \n                                empty\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                push\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                toJSON\n                            \n                            \n                                unset\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: literal type, n: QueryOptionNames)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        n\n                                                  \n                                                        \n                                                                        QueryOptionNames\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertArray()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertObject(create: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \nassign(values: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            at\n                        \n                        \n                    \n                \n            \n            \n                \nat(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            empty\n                        \n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(path: string, def?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            push\n                        \n                        \n                    \n                \n            \n            \n                \npush(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(path: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unset\n                        \n                        \n                    \n                \n            \n            \n                \nunset(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue(v?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:109\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import buildQuery, { alias, Alias } from './builder';\n\nimport { Dates, Types, Urls, Objects } from '../utils';\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  expand = 'expand',\n  format = 'format',\n  // Custom options\n  custom = 'custom'\n}\n\nexport class ODataQueryOptions {\n  options: {[name: string]: any};\n\n  constructor(options?: {[name: string]: any}) {\n    this.options = options || {};\n  }\n\n  // Params\n  params(): {[name: string]: any} {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format]\n        .filter(key => !Types.isEmpty(this.options[key]))\n        .reduce((acc, key) => Object.assign(acc, {[key]: this.options[key]}), {});\n\n    let query = buildQuery(options);\n    let params = (query) ? Urls.parseQueryString(query.substr(1)) : {};\n\n    // Custom\n    let custom = this.options[QueryOptionNames.custom] || {};\n    if (Types.isArray(custom)) {\n      //TODO: split test for item type\n      custom = custom.reduce((acc: {[name: string]: any}, item: {[name: string]: any}) => Object.assign(acc, item), {});\n    }\n    Object.assign(params, custom);\n\n    return params;\n  }\n\n  toString(): string {\n    return Object.entries(this.params())\n      .filter(([, value]) => value)\n      .map(([key, value]) => `${key}=${value}`)\n      .join(\"&\");\n  }\n\n  toJSON() {\n    return Dates.isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (opts !== undefined)\n      this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return this.options[name] !== undefined;\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach(name => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter(k => names.indexOf(k as QueryOptionNames) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Aliases\n  alias(name: string, value: any): Alias {\n    return alias(name, value);\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(private o: {[name: string]: any}, private n: QueryOptionNames) { }\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  empty() {\n    return Types.isEmpty(this.o[this.n]);\n  }\n\n  //#region Primitive Value\n  value(v?: any) {\n    return v !== undefined && (this.o[this.n] = v) || this.o[this.n];\n  }\n  //#endregion\n\n  //#region Array Value\n  private assertArray(): any[] {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = this.o[this.n] !== undefined ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter(v => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1)\n      this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n  //#endregion\n\n  //#region HashMap Value\n  private assertObject(create: boolean): {[name: string]: any} {\n    if (!Types.isArray(this.o[this.n]) && Types.isObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find(v => Types.isObject(v));\n    if (!obj && create) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(path: string, value: any) {\n    let obj = this.assertObject(true);\n    Objects.set(obj, path, value);\n  }\n\n  get(path: string, def?: any): any {\n    let obj = this.assertObject(false) || {};\n    return Objects.get(obj, path, def);\n  }\n\n  unset(path: string) {\n    let obj = this.assertObject(true);\n    Objects.unset(obj, path);\n\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter((v: any) => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1)\n        this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(path: string) {\n    let obj = this.assertObject(false) || {};\n    return Objects.has(obj, path);\n  }\n\n  assign(values: {[attr: string]: any}) {\n    let obj = this.assertObject(true);\n    return Objects.merge(obj, values);\n  }\n  //#endregion\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        ieee754Compatible\n                                \n                                \n                                            Optional\n                                        metadata\n                                \n                                \n                                            Optional\n                                        streaming\n                                \n                                \n                                            Optional\n                                        stringAsEnum\n                                \n                                \n                                            Optional\n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ieee754Compatible\n                                    \n                                \n                                \n                                    \n                                        ieee754Compatible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:         ODataMetadataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataMetadataType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streaming\n                                    \n                                \n                                \n                                    \n                                        streaming:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stringAsEnum\n                                    \n                                \n                                \n                                    \n                                        stringAsEnum:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         ODataVersion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataVersion\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  serviceRootUrl?: string;\n  metadataUrl?: string;\n  entitySet?: string;\n  key?: string;\n  type?: string;\n  property?: string;\n  //entity?: boolean;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  //http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793609\n  etag?: {\n    ifMatch?: boolean,\n    ifNoneMatch?:boolean\n  };\n  prefer?: {\n    maxPageSize?: number,\n    return?: 'representation' | 'minimal'\n  };\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: {type: string, collection?: boolean};\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionsHelper.html":{"url":"interfaces/OptionsHelper.html","title":"interface - OptionsHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OptionsHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        helper\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        helper\n                                    \n                                \n                                \n                                    \n                                        helper:         ODataVersionHelper\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataVersionHelper\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  serviceRootUrl?: string;\n  metadataUrl?: string;\n  entitySet?: string;\n  key?: string;\n  type?: string;\n  property?: string;\n  //entity?: boolean;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  //http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793609\n  etag?: {\n    ifMatch?: boolean,\n    ifNoneMatch?:boolean\n  };\n  prefer?: {\n    maxPageSize?: number,\n    return?: 'representation' | 'minimal'\n  };\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: {type: string, collection?: boolean};\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Parser.html":{"url":"interfaces/Parser.html","title":"interface - Parser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Parser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    deserialize\n                                \n                                \n                                    serialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  serviceRootUrl?: string;\n  metadataUrl?: string;\n  entitySet?: string;\n  key?: string;\n  type?: string;\n  property?: string;\n  //entity?: boolean;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  //http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793609\n  etag?: {\n    ifMatch?: boolean,\n    ifNoneMatch?:boolean\n  };\n  prefer?: {\n    maxPageSize?: number,\n    return?: 'representation' | 'minimal'\n  };\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: {type: string, collection?: boolean};\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseOptions.html":{"url":"interfaces/ResponseOptions.html","title":"interface - ResponseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cacheability\n                                \n                                \n                                            Optional\n                                        maxAge\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cacheability\n                                    \n                                \n                                \n                                    \n                                        cacheability:         CacheCacheability\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CacheCacheability\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  serviceRootUrl?: string;\n  metadataUrl?: string;\n  entitySet?: string;\n  key?: string;\n  type?: string;\n  property?: string;\n  //entity?: boolean;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  //http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793609\n  etag?: {\n    ifMatch?: boolean,\n    ifNoneMatch?:boolean\n  };\n  prefer?: {\n    maxPageSize?: number,\n    return?: 'representation' | 'minimal'\n  };\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: {type: string, collection?: boolean};\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SegmentHandler.html":{"url":"classes/SegmentHandler.html","title":"class - SegmentHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SegmentHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                hasKey\n                            \n                            \n                                hasParameters\n                            \n                            \n                                key\n                            \n                            \n                                parameters\n                            \n                            \n                                path\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segment: ODataSegment)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:112\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segment\n                                                  \n                                                        \n                                                                        ODataSegment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alias\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasKey\n                        \n                        \n                    \n                \n            \n            \n                \nhasKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasParameters\n                        \n                        \n                    \n                \n            \n            \n                \nhasParameters()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            key\n                        \n                        \n                    \n                \n            \n            \n                \nkey(value?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:131\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parameters\n                        \n                        \n                    \n                \n            \n            \n                \nparameters(value?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:141\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            path\n                        \n                        \n                    \n                \n            \n            \n                \npath(value?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype(value?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:115\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import buildQuery, { guid, Alias, alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { Types, Dates } from '../utils';\n\nimport { PATH_SEPARATOR } from '../constants';\nimport { EntityKey } from '../types';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action'\n}\n\nexport type ODataSegment = {\n  name: string;\n  path: string;\n  type?: string;\n  key?: any;\n  parameters?: any;\n}\n\nfunction pathSegmentsBuilder(segment: ODataSegment): string {\n  switch (segment.name) {\n    case PathSegmentNames.function:\n      const parameters = segment.parameters;\n      return (parameters ?\n        buildQuery({ func: { [segment.path]: parameters }}) :\n        buildQuery({ func: segment.path})\n      ).slice(1);\n    default:\n      let key = segment.key;\n      if (typeof (key) === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(key)) {\n        key = guid(key);\n      }\n      return segment.path + (key ? buildQuery({ key }) : \"\");\n  }\n}\n\nexport class ODataPathSegments {\n  protected segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this.segments = segments || [];\n  }\n\n  path(): string {\n    let chunks = this.segments\n      .map(pathSegmentsBuilder);\n    return chunks.join(PATH_SEPARATOR);\n  }\n\n  types(): string[] {\n    return this.segments.map(s => s.type).filter(t => t !== undefined) as string[];\n  }\n\n  toString(): string {\n    return this.path();\n  }\n\n  toJSON() {\n    return this.segments.map(segment => {\n      let json = { name: segment.name, path: segment.path };\n      if (segment.type !== undefined)\n        json.type = segment.type;\n      if (segment.key !== undefined)\n        json.key = Dates.isoStringToDate(JSON.parse(JSON.stringify(segment.key)));\n      if (segment.parameters !== undefined)\n        json.parameters = Dates.isoStringToDate(JSON.parse(JSON.stringify(segment.parameters)));\n      return json;\n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(predicate: (segment: ODataSegment) => boolean) {\n    //Backward Find\n    return [...this.segments].reverse().find(predicate);\n  }\n\n  last() {\n    return (this.segments.length > 0) ?\n       new SegmentHandler(this.segments[this.segments.length - 1]) : undefined;\n  }\n\n  add(name: string, path: string) {\n    const segment = { name, path } as ODataSegment;\n    this.segments.push(segment);\n    return new SegmentHandler(segment);\n  }\n\n  get(name: string) {\n    let segment = this.find(s => s.name === name);\n    if (segment === undefined)\n      throw Error(`No Segment for name ${name} was found`);\n    return new SegmentHandler(segment);\n  }\n}\n\nexport class SegmentHandler {\n  constructor(private segment: ODataSegment) {}\n\n  get name() {\n    return this.segment.name;\n  }\n\n  type(value?: string) {\n    if (value !== undefined)\n      this.segment.type = value;\n    return this.segment.type;\n  }\n\n  path(value?: string) {\n    if (value !== undefined)\n      this.segment.path = value;\n    return this.segment.path;\n  }\n\n  key(value?: EntityKey) {\n    if (value !== undefined)\n      this.segment.key = value;\n    return this.segment.key as EntityKey;\n  }\n\n  hasKey() {\n    return !Types.isEmpty(this.segment.key);\n  }\n\n  parameters(value?: T) {\n    if (value !== undefined)\n      this.segment.parameters = value;\n    return this.segment.parameters as T;\n  }\n\n  hasParameters() {\n    return !Types.isEmpty(this.segment.parameters);\n  }\n\n  // Aliases\n  alias(name: string, value?: any): Alias {\n    return alias(name, value);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoragePayload.html":{"url":"interfaces/StoragePayload.html","title":"interface - StoragePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StoragePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/storage.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        headers\n                                \n                                \n                                        status\n                                \n                                \n                                        statusText\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusText\n                                    \n                                \n                                \n                                    \n                                        statusText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache, ODataCacheEntry } from './cache';\n\ninterface StoragePayload {\n    body: any | null;\n    headers: {[name: string]: string | string[]};\n    status: number;\n    statusText: string;\n    url: string | null;\n}\n\nexport class ODataInStorageCache extends ODataCache {\n  constructor(init: {timeout?: number, name: string, storage?: Storage}) {\n    super(init);\n    const name = init.name;\n    const storage = init.storage || sessionStorage;\n    this.entries = new Map>(JSON.parse(storage.getItem(name) || \"[]\"));\n    window.addEventListener(\"beforeunload\", ((backend, key, responses) => function() {\n      backend.setItem(key, JSON.stringify(Array.from(responses.entries())))\n    })(storage, name, this.entries));\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.urlWithParams, res.toJSON(), res.options.maxAge);\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    const data = this.get(req.urlWithParams);\n\n    return data !== undefined ? ODataResponse.fromJSON(req, data) : undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StructuredTypeField.html":{"url":"interfaces/StructuredTypeField.html","title":"interface - StructuredTypeField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StructuredTypeField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        annotations\n                                \n                                \n                                            Optional\n                                        collection\n                                \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                            Optional\n                                        field\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        maxLength\n                                \n                                \n                                            Optional\n                                        navigation\n                                \n                                \n                                            Optional\n                                        nullable\n                                \n                                \n                                            Optional\n                                        precision\n                                \n                                \n                                            Optional\n                                        ref\n                                \n                                \n                                            Optional\n                                        scale\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        annotations\n                                    \n                                \n                                \n                                    \n                                        annotations:         Annotation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Annotation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                    \n                                \n                                \n                                    \n                                        collection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxLength\n                                    \n                                \n                                \n                                    \n                                        maxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        navigation\n                                    \n                                \n                                \n                                    \n                                        navigation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullable\n                                    \n                                \n                                \n                                    \n                                        nullable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precision\n                                    \n                                \n                                \n                                    \n                                        precision:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  serviceRootUrl?: string;\n  metadataUrl?: string;\n  entitySet?: string;\n  key?: string;\n  type?: string;\n  property?: string;\n  //entity?: boolean;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  //http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793609\n  etag?: {\n    ifMatch?: boolean,\n    ifNoneMatch?:boolean\n  };\n  prefer?: {\n    maxPageSize?: number,\n    return?: 'representation' | 'minimal'\n  };\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: {type: string, collection?: boolean};\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StructuredTypeFieldOptions.html":{"url":"interfaces/StructuredTypeFieldOptions.html","title":"interface - StructuredTypeFieldOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StructuredTypeFieldOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        OptionsHelper\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         StructuredTypeField\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StructuredTypeField\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  serviceRootUrl?: string;\n  metadataUrl?: string;\n  entitySet?: string;\n  key?: string;\n  type?: string;\n  property?: string;\n  //entity?: boolean;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  //Headers\n  //http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793609\n  etag?: {\n    ifMatch?: boolean,\n    ifNoneMatch?:boolean\n  };\n  prefer?: {\n    maxPageSize?: number,\n    return?: 'representation' | 'minimal'\n  };\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport const NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value,\n} as Parser;\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  entitySetPath?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: {type: string, collection?: boolean};\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.1.0\n        \n            @angular/common : ~11.1.0\n        \n            @angular/compiler : ~11.1.0\n        \n            @angular/core : ~11.1.0\n        \n            @angular/forms : ~11.1.0\n        \n            @angular/platform-browser : ~11.1.0\n        \n            @angular/platform-browser-dynamic : ~11.1.0\n        \n            @angular/router : ~11.1.0\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FieldType   (projects/.../metadata.ts)\n                        \n                        \n                            PathSegmentNames   (projects/.../path-segments.ts)\n                        \n                        \n                            QueryOptionNames   (projects/.../query-options.ts)\n                        \n                        \n                            StandardAggregateMethods   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/responses/metadata.ts\n    \n        \n            \n                \n                    \n                        \n                        FieldType\n                    \n                \n                        \n                            \n                                 ATTRIBUTE\n                            \n                        \n                        \n                            \n                                 TAG\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n        \n            \n                \n                    \n                        \n                        PathSegmentNames\n                    \n                \n                        \n                            \n                                 batch\n                            \n                        \n                        \n                            \n                                Value : batch\n                            \n                        \n                        \n                            \n                                 metadata\n                            \n                        \n                        \n                            \n                                Value : metadata\n                            \n                        \n                        \n                            \n                                 entitySet\n                            \n                        \n                        \n                            \n                                Value : entitySet\n                            \n                        \n                        \n                            \n                                 singleton\n                            \n                        \n                        \n                            \n                                Value : singleton\n                            \n                        \n                        \n                            \n                                 type\n                            \n                        \n                        \n                            \n                                Value : type\n                            \n                        \n                        \n                            \n                                 property\n                            \n                        \n                        \n                            \n                                Value : property\n                            \n                        \n                        \n                            \n                                 navigationProperty\n                            \n                        \n                        \n                            \n                                Value : navigationProperty\n                            \n                        \n                        \n                            \n                                 reference\n                            \n                        \n                        \n                            \n                                Value : reference\n                            \n                        \n                        \n                            \n                                 value\n                            \n                        \n                        \n                            \n                                Value : value\n                            \n                        \n                        \n                            \n                                 count\n                            \n                        \n                        \n                            \n                                Value : count\n                            \n                        \n                        \n                            \n                                 function\n                            \n                        \n                        \n                            \n                                Value : function\n                            \n                        \n                        \n                            \n                                 action\n                            \n                        \n                        \n                            \n                                Value : action\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/query-options.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryOptionNames\n                    \n                \n                        \n                            \n                                 select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 filter\n                            \n                        \n                        \n                            \n                                Value : filter\n                            \n                        \n                        \n                            \n                                 search\n                            \n                        \n                        \n                            \n                                Value : search\n                            \n                        \n                        \n                            \n                                 transform\n                            \n                        \n                        \n                            \n                                Value : transform\n                            \n                        \n                        \n                            \n                                 orderBy\n                            \n                        \n                        \n                            \n                                Value : orderBy\n                            \n                        \n                        \n                            \n                                 top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 skip\n                            \n                        \n                        \n                            \n                                Value : skip\n                            \n                        \n                        \n                            \n                                 skiptoken\n                            \n                        \n                        \n                            \n                                Value : skiptoken\n                            \n                        \n                        \n                            \n                                 expand\n                            \n                        \n                        \n                            \n                                Value : expand\n                            \n                        \n                        \n                            \n                                 format\n                            \n                        \n                        \n                            \n                                Value : format\n                            \n                        \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n            \n                \n                    \n                        \n                        StandardAggregateMethods\n                    \n                \n                        \n                            \n                                 sum\n                            \n                        \n                        \n                            \n                                Value : sum\n                            \n                        \n                        \n                            \n                                 min\n                            \n                        \n                        \n                            \n                                Value : min\n                            \n                        \n                        \n                            \n                                 max\n                            \n                        \n                        \n                            \n                                Value : max\n                            \n                        \n                        \n                            \n                                 average\n                            \n                        \n                        \n                            \n                                Value : average\n                            \n                        \n                        \n                            \n                                 countdistinct\n                            \n                        \n                        \n                            \n                                Value : countdistinct\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addBody   (projects/.../client.ts)\n                        \n                        \n                            buildAggregate   (projects/.../builder.ts)\n                        \n                        \n                            buildExpand   (projects/.../builder.ts)\n                        \n                        \n                            buildFilter   (projects/.../builder.ts)\n                        \n                        \n                            buildGroupBy   (projects/.../builder.ts)\n                        \n                        \n                            buildOrderBy   (projects/.../builder.ts)\n                        \n                        \n                            buildTransforms   (projects/.../builder.ts)\n                        \n                        \n                            buildUrl   (projects/.../builder.ts)\n                        \n                        \n                            createSettings   (projects/.../module.ts)\n                        \n                        \n                            escapeIllegalChars   (projects/.../builder.ts)\n                        \n                        \n                            getBoundaryDelimiter   (projects/.../batch.ts)\n                        \n                        \n                            getBoundaryEnd   (projects/.../batch.ts)\n                        \n                        \n                            getHeaderValue   (projects/.../batch.ts)\n                        \n                        \n                            getStringCollectionClause   (projects/.../builder.ts)\n                        \n                        \n                            handleValue   (projects/.../builder.ts)\n                        \n                        \n                            now   (projects/.../batch.ts)\n                        \n                        \n                            ODataModelField   (projects/.../model.ts)\n                        \n                        \n                            parseNot   (projects/.../builder.ts)\n                        \n                        \n                            pathSegmentsBuilder   (projects/.../path-segments.ts)\n                        \n                        \n                            renderPrimitiveValue   (projects/.../builder.ts)\n                        \n                        \n                            uniqid   (projects/.../batch.ts)\n                        \n                        \n                            Unnamed function   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/client.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addBody\n                        \n                        \n                    \n                \n            \n            \n                \naddBody(options, body)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            buildAggregate\n                        \n                        \n                    \n                \n            \n            \n                \nbuildAggregate(aggregate)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aggregate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildExpand\n                        \n                        \n                    \n                \n            \n            \n                \nbuildExpand(expands)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expands\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildFilter\n                        \n                        \n                    \n                \n            \n            \n                \nbuildFilter(filters, aliases, propPrefix: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propPrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildGroupBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildGroupBy(groupBy)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildOrderBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildOrderBy(orderBy, prefix)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prefix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildTransforms\n                        \n                        \n                    \n                \n            \n            \n                \nbuildTransforms(transforms)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transforms\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildUrl\n                        \n                        \n                    \n                \n            \n            \n                \nbuildUrl(path, params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            escapeIllegalChars\n                        \n                        \n                    \n                \n            \n            \n                \nescapeIllegalChars(string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStringCollectionClause\n                        \n                        \n                    \n                \n            \n            \n                \ngetStringCollectionClause(lambdaParameter, value: any, collectionOperator, propName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lambdaParameter\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionOperator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propName\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleValue\n                        \n                        \n                    \n                \n            \n            \n                \nhandleValue(value, aliases?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseNot\n                        \n                        \n                    \n                \n            \n            \n                \nparseNot(builtFilters)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builtFilters\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renderPrimitiveValue\n                        \n                        \n                    \n                \n            \n            \n                \nrenderPrimitiveValue(key, val: any, aliases)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Unnamed function\n                        \n                        \n                    \n                \n            \n            \n                \nUnnamed function(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createSettings\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSettings(configs)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/types/batch.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getBoundaryDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \ngetBoundaryDelimiter(contentType)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBoundaryEnd\n                        \n                        \n                    \n                \n            \n            \n                \ngetBoundaryEnd(boundaryDelimiter)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    boundaryDelimiter\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHeaderValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetHeaderValue(header)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            now\n                        \n                        \n                    \n                \n            \n            \n                \nnow()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uniqid\n                        \n                        \n                    \n                \n            \n            \n                \nuniqid(prefix?, suffix?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prefix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    suffix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/models/model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ODataModelField\n                        \n                        \n                    \n                \n            \n            \n                \nODataModelField(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            pathSegmentsBuilder\n                        \n                        \n                    \n                \n            \n            \n                \npathSegmentsBuilder(segment)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    segment\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular OData\n\n\nA fluent API for querying, creating, updating and deleting OData resources in Angular.\nOData service for Angular.\nPlease check also my other related project, OData Angular Generator\nDemo:\nFull examples of the library:\n\nAngularODataEntity\n\nTable of contents\n\nInstallation\nUsage\nGenerator\nOData Version\nQuery Builder\nDocumentation\n\nInstallation\nInstall from npm:\nnpm i angular-odataUsage\n1) Add module to your project\nimport { NgModule } from '@angular/core';\nimport { ODataModule } from 'angular-odata';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot({\n      serviceRootUrl: 'https://services.odata.org/V4/(S(4m0tuxtnhcfctl4gzem3gr10))/TripPinServiceRW/'\n    })\n    ...\n  ]\n})\nexport class AppModule {}2) Inject and use the ODataServiceFactory\nimport { Component } from '@angular/core';\nimport { ODataClient, ODATA_ETAG } from 'angular-odata';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TripPin';\n  constructor(private factory: ODataServiceFactory) {\n    this.queries();\n  }\n\n  queries() {\n    // Use OData Service Factory\n    let airportsService = this.factory.entity(\"Airports\");\n    let peopleService = this.factory.entity(\"People\");\n\n    let airports = airportsService.entities();\n\n    // Fetch airports with count\n    airports\n    .get({withCount: true})\n    .subscribe(({entities, meta}) => console.log(\"Airports: \", entities, \"Annotations: \", meta));\n\n    // Fetch all airports\n    airports\n    .fetchAll()\n    .subscribe(aports => console.log(\"All: \", aports));\n\n    // Fetch airport with key\n    airports\n    .entity(\"CYYZ\")\n    .get()\n    .pipe(\n      switchMap(() => airports.entity(\"CYYZ\").get({fetchPolicy: 'cache-first'}))) // From Cache!\n    .subscribe(({entity, meta}) => console.log(\"Airport: \", entity, \"Annotations: \", meta));\n\n    // Filter airports (inmutable resource)\n    airports\n    .filter({Location: {City: {CountryRegion: \"United States\"}}})\n    .get()\n    .subscribe(({entities, meta}) => console.log(\"Airports of United States: \", entities, \"Annotations: \", meta));\n\n    // Add filter (mutable resource)\n    airports.query.filter().push({Location: {City: {Region: \"California\"}}});\n    airports\n    .get()\n    .subscribe(({entities, meta}) => console.log(\"Airports in California: \", entities, \"Annotations: \", meta));\n\n    // Resource to JSON\n    const json = airports.toJSON();\n    console.log(json);\n    // JSON to Resource\n    const query = this.odata.fromJSON(json);\n    console.log(query);\n\n    // Remove filter (mutable resource)\n    airports.query.filter().clear();\n    airports\n    .get()\n    .subscribe(({entities, meta}) => console.log(\"Airports: \", entities, \"Annotations: \", meta));\n\n    let people = peopleService.entities();\n\n    // Expand (inmutable resource)\n    people.expand({\n      Friends: {\n        expand: { Friends: { select: ['AddressInfo']}}\n      },\n      Trips: { select: ['Name', 'Tags'] },\n    })\n    .get({withCount: true})\n    .subscribe(({entities, meta}) => console.log(\"People with Friends and Trips: \", entities, \"Annotations: \", meta));\n\n    this.odata.batch(\"TripPin\").post(batch => {\n      airports.get().subscribe(console.log);\n      airport.get().subscribe(console.log);\n      people.get({withCount: true}).subscribe(console.log);\n    }).subscribe();\n  }\n}Generator\nIf you use OData Angular Generator, import the config and the module from generated source.\nimport { NgModule } from '@angular/core';\n\nimport { ODataModule } from 'angular-odata';\nimport { TripPinConfig, TripPinModule } from './trippin';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot(TripPinConfig),\n    TripPinModule\n  ]\n  ...\n})\nexport class AppModule {}OData Version\nThe library works mainly with OData Version 4, however, it incorporates basic support for versions 3 and 2.\nQuery Builder\nFor a deep query customizations the library use odata-query as a builder.\n\nOData v4 query builder\n\nDocumentation\nThe api documentation is generated using compodoc and can be viewed here: https://diegomvh.github.io/angular-odata/docs/\nLibrary documentation can be viewed on the wiki here: https://github.com/diegomvh/angular-odata/wiki\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Diego van Haaster\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ODataModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    84 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Aggregate   (projects/.../builder.ts)\n                        \n                        \n                            Alias   (projects/.../builder.ts)\n                        \n                        \n                            AnnotationConfig   (projects/.../types.ts)\n                        \n                        \n                            ApiConfig   (projects/.../types.ts)\n                        \n                        \n                            Binary   (projects/.../builder.ts)\n                        \n                        \n                            CacheCacheability   (projects/.../types.ts)\n                        \n                        \n                            CallableConfig   (projects/.../types.ts)\n                        \n                        \n                            Decimal   (projects/.../builder.ts)\n                        \n                        \n                            Duration   (projects/.../builder.ts)\n                        \n                        \n                            Duration   (projects/.../edm.ts)\n                        \n                        \n                            EntityContainerConfig   (projects/.../types.ts)\n                        \n                        \n                            EntityKey   (projects/.../types.ts)\n                        \n                        \n                            EntitySetConfig   (projects/.../types.ts)\n                        \n                        \n                            EnumTypeConfig   (projects/.../types.ts)\n                        \n                        \n                            Expand   (projects/.../builder.ts)\n                        \n                        \n                            ExpandObject   (projects/.../builder.ts)\n                        \n                        \n                            ExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ExpandType   (projects/.../builder.ts)\n                        \n                        \n                            FetchPolicy   (projects/.../types.ts)\n                        \n                        \n                            Filter   (projects/.../builder.ts)\n                        \n                        \n                            FilterType   (projects/.../builder.ts)\n                        \n                        \n                            GroupBy   (projects/.../builder.ts)\n                        \n                        \n                            Guid   (projects/.../builder.ts)\n                        \n                        \n                            HttpEntitiesOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpEntityOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpPropertyOptions   (projects/.../options.ts)\n                        \n                        \n                            Json   (projects/.../builder.ts)\n                        \n                        \n                            JsonSchemaCustom   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaExpand   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaOptions   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaSelect   (projects/.../structured-type.ts)\n                        \n                        \n                            ModelProperty   (projects/.../model.ts)\n                        \n                        \n                            NestedExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ODataCollectionResource   (projects/.../collection.ts)\n                        \n                        \n                            ODataContext   (projects/.../types.ts)\n                        \n                        \n                            ODataEntities   (projects/.../types.ts)\n                        \n                        \n                            ODataEntity   (projects/.../types.ts)\n                        \n                        \n                            ODataMetadataType   (projects/.../types.ts)\n                        \n                        \n                            ODataModelRelation   (projects/.../model.ts)\n                        \n                        \n                            ODataModelResource   (projects/.../model.ts)\n                        \n                        \n                            ODataProperty   (projects/.../types.ts)\n                        \n                        \n                            ODataSegment   (projects/.../path-segments.ts)\n                        \n                        \n                            ODataVersion   (projects/.../types.ts)\n                        \n                        \n                            OrderBy   (projects/.../builder.ts)\n                        \n                        \n                            OrderByObject   (projects/.../builder.ts)\n                        \n                        \n                            OrderByType   (projects/.../builder.ts)\n                        \n                        \n                            Parameter   (projects/.../types.ts)\n                        \n                        \n                            PlainObject   (projects/.../builder.ts)\n                        \n                        \n                            QueryOptions   (projects/.../builder.ts)\n                        \n                        \n                            Raw   (projects/.../builder.ts)\n                        \n                        \n                            SchemaConfig   (projects/.../types.ts)\n                        \n                        \n                            Select   (projects/.../builder.ts)\n                        \n                        \n                            SelectType   (projects/.../builder.ts)\n                        \n                        \n                            StructuredTypeConfig   (projects/.../types.ts)\n                        \n                        \n                            Transform   (projects/.../builder.ts)\n                        \n                        \n                            Unpacked   (projects/.../builder.ts)\n                        \n                        \n                            Value   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n    \n        \n            \n                \n                    \n                    Aggregate\n                \n            \n            \n                \n                        string | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Alias\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Binary\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Decimal\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Duration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Expand\n                \n            \n            \n                \n                        ExpandType | ExpandType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandObject\n                \n            \n            \n                \n                             | NestedExpandOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandType\n                \n            \n            \n                \n                        string | ExpandObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                        FilterType | FilterType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterType\n                \n            \n            \n                \n                            string | PlainObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GroupBy\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Guid\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Json\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NestedExpandOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderBy\n                \n            \n            \n                \n                        OrderByType | OrderByType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByObject\n                \n            \n            \n                \n                         |  | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByType\n                \n            \n            \n                \n                        string | OrderByObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PlainObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Raw\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Select\n                \n            \n            \n                \n                        SelectType | SelectType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectType\n                \n            \n            \n                \n                        string | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Transform\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Unpacked\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Value\n                \n            \n            \n                \n                        string | Date | number | boolean | Raw | Guid | Duration | Binary | Json | Alias | Decimal\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    AnnotationConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ApiConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CacheCacheability\n                \n            \n            \n                \n                        \"public\" | \"private\" | \"no-cache\" | \"no-store\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CallableConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityContainerConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityKey\n                \n            \n            \n                \n                         | string | number\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntitySetConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EnumTypeConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FetchPolicy\n                \n            \n            \n                \n                        \"cache-first\" | \"cache-and-network\" | \"network-only\" | \"no-cache\" | \"cache-only\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataContext\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataMetadataType\n                \n            \n            \n                \n                        \"minimal\" | \"full\" | \"none\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataVersion\n                \n            \n            \n                \n                        \"2.0\" | \"3.0\" | \"4.0\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Parameter\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SchemaConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StructuredTypeConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/parsers/edm.ts\n    \n    \n        \n            \n                \n                    \n                    Duration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/types/options.ts\n    \n    \n        \n            \n                \n                    \n                    HttpEntitiesOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpEntityOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpPropertyOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/parsers/structured-type.ts\n    \n    \n        \n            \n                \n                    \n                    JsonSchemaCustom\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaSelect\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/models/model.ts\n    \n    \n        \n            \n                \n                    \n                    ModelProperty\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataModelRelation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataModelResource\n                \n            \n            \n                \n                        ODataEntityResource | ODataSingletonResource | ODataNavigationPropertyResource | ODataPropertyResource\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/models/collection.ts\n    \n    \n        \n            \n                \n                    \n                    ODataCollectionResource\n                \n            \n            \n                \n                        ODataEntitySetResource | ODataNavigationPropertyResource | ODataPropertyResource\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/responses/types.ts\n    \n    \n        \n            \n                \n                    \n                    ODataEntities\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataEntity\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataProperty\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n    \n        \n            \n                \n                    \n                    ODataSegment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
