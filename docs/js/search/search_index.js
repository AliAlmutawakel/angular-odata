var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Annotation.html",[0,1.261,1,1.261]],["body/interfaces/Annotation.html",[0,2.303,1,1.802,2,1.372,3,0.069,4,0.061,5,0.069,6,0.044,7,1.487,8,0.044,9,0.313,10,0.221,11,3.374,12,3.374,13,3.374,14,0.235,15,0.127,16,0.767,17,0.012,18,1.349,19,0.232,20,1.89,21,1.074,22,0.173,23,1.321,24,1.372,25,1.855,26,2.154,27,1.804,28,1.552,29,2.768,30,2.085,31,1.229,32,1.007,33,0.681,34,0.863,35,2.495,36,1.385,37,0.813,38,0.701,39,2.234,40,1.192,41,1.229,42,1.791,43,0.813,44,2.177,45,0.813,46,1.372,47,2.071,48,1.133,49,2.342,50,1.552,51,1.552,52,1.552,53,1.552,54,1.487,55,1.552,56,1.552,57,1.552,58,0.176,59,2.402,60,1.552,61,1.552,62,1.552,63,1.552,64,1.552,65,1.229,66,1.719,67,1.552,68,1.147,69,1.552,70,1.552,71,1.552,72,1.552,73,1.552,74,1.427,75,1.552,76,1.552,77,1.552,78,1.552,79,1.552,80,1.552,81,1.552,82,1.552,83,1.552,84,2.454,85,1.477,86,2.315,87,1.674,88,1.569,89,2.154,90,2.154,91,2.676,92,1.552,93,2.342,94,1.552,95,1.427,96,1.552,97,1.552,98,3.05,99,1.922,100,1.822,101,2.017,102,3.323,103,3.135,104,2.822,105,2.342,106,1.147,107,1.552,108,2.342,109,2.703,110,2.983,111,1.552,112,1.552,113,1.552,114,3.135,115,2.158,116,2.703,117,2.822,118,1.552,119,2.154,120,1.552,121,3.143,122,0.78,123,1.427,124,1.552,125,1.487,126,1.427,127,1.552,128,1.552,129,1.552,130,1.552,131,2.071,132,0.503,133,1.552,134,2.342,135,2.342,136,2.495,137,2.342,138,2.244,139,1.487,140,1.552,141,1.487,142,2.154,143,1.552,144,2.402,145,1.427,146,1.427,147,1.427,148,2.071,149,2.154,150,1.427,151,1.487,152,2.154,153,0.361,154,0.789,155,1.321,156,1.427,157,2.105,158,1.02,159,1.229,160,2.154,161,2.154,162,1.321,163,1.487,164,1.487,165,1.487,166,1.427,167,1.487,168,1.487,169,1.372,170,1.428,171,1.229,172,1.074,173,1.321,174,1.273,175,0.789,176,1.321,177,1.147,178,1.427,179,1.427,180,1.487,181,1.552,182,1.552,183,1.552,184,1.321,185,1.487,186,2.154,187,3.262,188,1.007,189,0.744,190,1.487,191,1.994,192,1.109,193,1.994,194,1.487,195,1.922,196,1.487,197,2.154,198,1.372,199,2.154,200,1.427,201,1.273,202,1.855,203,1.487,204,1.372,205,1.487,206,1.372,207,2.595,208,1.994,209,0.89,210,1.487,211,1.487,212,0.078,213,1.372,214,1.321,215,1.187,216,0.004,217,0.006,218,0.004]],["title/interfaces/ApiOptions.html",[0,1.261,160,2.022]],["body/interfaces/ApiOptions.html",[0,2.299,1,1.61,2,1.36,3,0.069,4,0.06,5,0.069,6,0.044,7,1.474,8,0.044,9,0.266,10,0.227,11,2.327,12,2.327,13,2.327,14,0.235,15,0.127,16,0.766,17,0.012,18,1.347,19,0.23,20,1.88,21,1.064,22,0.173,23,1.31,24,1.36,25,1.842,26,2.14,27,1.798,28,1.538,29,2.758,30,2.074,31,1.218,32,0.998,33,0.675,34,0.856,35,2.482,36,1.376,37,0.806,38,0.695,39,2.222,40,1.184,41,1.218,42,1.779,43,0.806,44,2.171,45,0.806,46,1.36,47,2.058,48,1.127,49,2.327,50,1.538,51,1.538,52,1.538,53,1.538,54,1.474,55,1.538,56,1.538,57,1.538,58,0.176,59,2.389,60,1.538,61,1.538,62,1.538,63,1.538,64,1.538,65,1.218,66,1.716,67,1.538,68,1.137,69,1.538,70,1.538,71,1.538,72,1.538,73,1.538,74,1.415,75,1.538,76,1.538,77,1.538,78,1.538,79,1.538,80,1.538,81,1.538,82,1.538,83,1.538,84,2.446,85,1.508,86,2.303,87,2.402,88,2.251,89,2.14,90,2.14,91,3.295,92,1.538,93,2.327,94,1.538,95,1.415,96,1.538,97,1.538,98,3.047,99,1.91,100,1.815,101,2.006,102,3.319,103,3.125,104,2.807,105,2.327,106,1.137,107,1.538,108,2.327,109,2.689,110,2.972,111,1.538,112,1.538,113,1.538,114,3.125,115,2.146,116,2.689,117,2.807,118,1.538,119,2.14,120,1.538,121,3.129,122,0.776,123,1.415,124,1.538,125,1.474,126,1.415,127,1.538,128,1.538,129,1.538,130,1.538,131,2.058,132,0.499,133,1.538,134,2.327,135,2.327,136,2.482,137,2.327,138,2.23,139,1.474,140,1.538,141,1.474,142,2.14,143,1.538,144,2.389,145,1.415,146,1.415,147,1.415,148,2.058,149,2.878,150,1.415,151,1.474,152,2.14,153,0.358,154,0.783,155,1.31,156,1.415,157,2.096,158,1.09,159,1.218,160,2.581,161,2.14,162,2.664,163,2.998,164,2.998,165,2.689,166,1.415,167,1.474,168,1.474,169,1.36,170,1.419,171,1.218,172,1.064,173,1.31,174,1.262,175,0.783,176,1.31,177,1.137,178,1.415,179,1.415,180,1.474,181,1.538,182,1.538,183,1.538,184,1.31,185,1.474,186,2.14,187,3.251,188,0.998,189,0.738,190,1.474,191,1.981,192,1.1,193,1.981,194,1.474,195,1.91,196,1.474,197,2.14,198,1.36,199,2.14,200,1.415,201,1.262,202,1.842,203,1.474,204,1.36,205,1.474,206,1.36,207,2.581,208,1.981,209,0.882,210,1.474,211,1.474,212,0.077,213,1.36,214,1.31,215,1.176,216,0.004,217,0.006,218,0.004,219,1.908]],["title/interfaces/Cache.html",[0,1.261,98,1.521]],["body/interfaces/Cache.html",[0,2.309,1,1.628,2,1.386,3,0.07,4,0.061,5,0.07,6,0.081,7,1.502,8,0.045,9,0.201,10,0.132,11,2.361,12,2.361,13,2.361,14,0.235,15,0.124,16,0.759,17,0.012,18,1.323,19,0.234,20,1.902,21,1.085,22,0.173,23,1.335,24,1.386,25,1.869,26,2.171,27,1.979,28,1.568,29,2.781,30,2.098,31,1.241,32,1.017,33,0.688,34,0.872,35,2.51,36,1.396,37,0.822,38,1.283,39,2.248,40,1.201,41,1.241,42,1.805,43,0.822,44,2.185,45,0.822,46,1.386,47,2.087,48,1.14,49,2.361,50,1.568,51,1.568,52,1.568,53,1.568,54,1.502,55,1.568,56,1.568,57,1.568,58,0.177,59,2.417,60,1.568,61,1.568,62,1.568,63,1.568,64,1.568,65,1.241,66,1.737,67,1.568,68,1.159,69,1.568,70,1.568,71,1.568,72,1.568,73,1.568,74,1.442,75,1.568,76,1.568,77,1.568,78,1.568,79,1.568,80,1.568,81,1.568,82,1.568,83,1.568,84,2.463,85,1.481,86,2.33,87,1.687,88,1.581,89,2.171,90,2.171,91,2.69,92,1.568,93,2.361,94,1.568,95,1.442,96,1.568,97,1.568,98,3.062,99,1.937,100,1.83,101,2.029,102,3.327,103,3.146,104,2.839,105,2.361,106,1.159,107,1.568,108,2.361,109,2.72,110,2.996,111,1.568,112,1.568,113,1.568,114,3.146,115,2.171,116,2.72,117,2.839,118,1.568,119,2.171,120,1.568,121,3.159,122,0.785,123,1.442,124,1.568,125,1.502,126,1.442,127,1.568,128,1.568,129,1.568,130,1.568,131,2.087,132,0.509,133,1.568,134,2.361,135,2.361,136,2.51,137,2.361,138,2.262,139,1.502,140,1.568,141,1.502,142,2.171,143,1.568,144,2.417,145,1.442,146,1.442,147,1.442,148,2.087,149,2.171,150,1.442,151,1.502,152,2.171,153,0.365,154,0.798,155,1.335,156,1.442,157,2.116,158,1.025,159,1.241,160,2.171,161,2.171,162,1.335,163,1.502,164,1.502,165,1.502,166,1.442,167,1.502,168,1.502,169,1.386,170,1.439,171,1.241,172,1.085,173,2.01,174,2.33,175,1.201,176,2.01,177,1.159,178,1.442,179,1.442,180,1.502,181,1.568,182,1.568,183,1.568,184,1.335,185,1.502,186,2.171,187,3.275,188,1.017,189,0.752,190,1.502,191,2.01,192,1.121,193,2.01,194,1.502,195,1.937,196,1.502,197,2.171,198,1.386,199,2.171,200,1.442,201,1.287,202,1.869,203,1.502,204,1.386,205,1.502,206,1.386,207,2.611,208,2.01,209,0.899,210,1.502,211,1.502,212,0.143,213,1.386,214,1.335,215,1.199,216,0.004,217,0.006,218,0.004,220,0.948,221,2.361,222,0.244,223,2.974,224,0.92,225,2.974]],["title/classes/CsdlAction.html",[226,0.311,227,2.301]],["body/classes/CsdlAction.html",[3,0.112,4,0.098,5,0.112,6,0.12,8,0.071,9,0.28,10,0.242,14,0.23,15,0.122,16,0.773,17,0.012,18,1.347,22,0.163,32,2.135,37,1.725,40,1.674,43,1.725,45,1.725,58,0.17,153,1.088,212,0.212,216,0.006,217,0.008,218,0.006,222,0.429,226,0.586,227,3.443,228,0.308,229,2.089,230,2.284,231,3.065,232,4.794,233,4.794,234,4.794,235,0.723,236,1.44,237,4.555,238,4.555,239,4.761,240,1.264,241,4.761,242,4.761,243,4.761,244,4.761,245,4.761,246,2.626,247,2.9,248,2.626,249,3.065,250,2.755,251,2.626,252,1.794,253,2.516]],["title/classes/CsdlActionImport.html",[226,0.311,251,2.301]],["body/classes/CsdlActionImport.html",[3,0.118,4,0.103,5,0.118,6,0.117,8,0.075,9,0.289,10,0.21,14,0.232,15,0.119,16,0.749,17,0.012,18,1.365,22,0.165,32,2.73,37,1.781,40,1.729,43,1.781,45,1.781,58,0.172,153,1.088,212,0.189,216,0.007,217,0.009,218,0.007,222,0.411,226,0.594,227,2.76,228,0.324,229,2.029,230,2.219,231,3.221,232,3.926,233,3.926,234,3.926,235,0.731,236,1.513,237,4.126,238,4.126,240,0.856,246,2.76,247,3.047,248,2.76,249,3.221,250,2.895,251,3.555,252,2.937,253,2.599,254,5.004,255,5.004,256,5.004,257,5.004]],["title/classes/CsdlAnnotable.html",[226,0.311,258,2.199]],["body/classes/CsdlAnnotable.html",[3,0.134,4,0.118,5,0.134,6,0.113,8,0.085,9,0.313,10,0.223,14,0.226,15,0.113,16,0.535,17,0.012,18,1.294,22,0.163,37,1.574,40,1.528,43,1.574,45,1.574,58,0.144,153,1.072,158,0.974,212,0.151,216,0.008,217,0.009,218,0.008,222,0.381,226,0.588,228,0.368,229,1.971,235,0.711,240,0.974,253,2.297,258,3.99,259,4.176,260,4.468,261,5.696,262,4.165,263,5.696,264,5.696,265,3.667,266,3.469,267,3.667,268,4.047,269,3.142,270,3.898,271,3.469,272,3.898,273,3.004,274,3.898]],["title/classes/CsdlAnnotation.html",[226,0.311,262,2.107]],["body/classes/CsdlAnnotation.html",[3,0.131,4,0.115,5,0.131,6,0.117,8,0.084,9,0.309,10,0.221,14,0.231,15,0.117,16,0.524,17,0.012,18,1.282,22,0.162,37,1.541,40,1.496,43,1.541,45,1.541,58,0.143,153,1.075,158,0.954,212,0.148,216,0.007,217,0.009,218,0.007,222,0.409,226,0.584,228,0.361,229,2.04,235,0.706,240,0.954,253,2.249,258,3.64,259,4.089,260,3.808,262,3.958,265,3.591,266,3.397,267,3.591,268,4.747,269,3.077,270,5.362,271,3.397,272,3.817,273,2.941,274,3.817,275,5.578,276,5.578,277,5.578,278,5.578]],["title/classes/CsdlAnnotations.html",[226,0.311,266,2.54]],["body/classes/CsdlAnnotations.html",[3,0.128,4,0.112,5,0.128,6,0.116,8,0.081,9,0.304,10,0.235,14,0.23,15,0.12,16,0.511,17,0.012,18,1.268,22,0.16,37,1.502,40,1.458,43,1.502,45,1.502,58,0.14,153,1.076,158,1.162,212,0.144,216,0.007,217,0.009,218,0.007,222,0.423,226,0.578,228,0.351,229,2.021,235,0.699,240,0.93,253,2.191,258,4.093,259,3.985,260,4.496,262,4.118,265,3.499,266,4.137,267,4.998,268,4.716,269,2.998,270,3.72,271,3.31,272,3.72,273,2.866,274,3.72,279,5.435,280,5.435,281,5.435,282,5.435,283,2.118,284,3.985]],["title/classes/CsdlComplexType.html",[226,0.311,285,2.413]],["body/classes/CsdlComplexType.html",[3,0.113,4,0.099,5,0.113,6,0.094,8,0.072,9,0.376,10,0.247,14,0.225,15,0.12,16,0.796,17,0.012,19,0.378,22,0.159,33,1.109,38,1.143,58,0.168,153,1.071,158,1.195,189,1.212,212,0.127,216,0.006,217,0.008,218,0.006,222,0.438,226,0.573,228,0.31,229,1.633,235,0.71,236,1.45,240,1.315,283,3.074,285,3.628,286,3.306,287,2.152,288,5.354,289,2.492,290,5.306,291,5.641,292,5.306,293,3.897,294,3.897,295,4.795,296,4.2,297,4.2,298,4.2,299,4.2,300,4.2,301,4.2,302,2.236,303,2.422,304,3.306,305,2.775,306,3.819,307,3.087,308,3.282,309,3.819]],["title/classes/CsdlEntityContainer.html",[226,0.311,310,3.058]],["body/classes/CsdlEntityContainer.html",[3,0.124,4,0.109,5,0.124,6,0.124,8,0.079,9,0.298,10,0.25,14,0.22,15,0.123,17,0.012,19,0.576,22,0.109,31,2.195,34,2.459,58,0.163,153,1.069,198,3.689,212,0.139,216,0.007,217,0.009,218,0.007,222,0.448,226,0.392,228,0.34,229,2.163,230,1.497,235,0.599,236,1.59,240,1.353,248,4.365,251,4.365,252,1.982,302,3.403,310,4.877,311,4.606,312,7.913,313,7.913,314,7.913,315,7.913,316,5.801,317,5.801,318,5.258,319,5.258,320,4.606,321,4.606,322,5.258,323,4.606,324,4.606,325,3.385]],["title/classes/CsdlEntitySet.html",[226,0.311,316,3.058]],["body/classes/CsdlEntitySet.html",[3,0.134,4,0.118,5,0.134,6,0.124,8,0.085,9,0.314,10,0.239,14,0.223,15,0.121,16,0.742,17,0.012,19,0.45,22,0.118,33,1.32,34,2.42,41,2.381,58,0.167,153,1.06,212,0.151,213,3.778,216,0.008,217,0.009,218,0.008,222,0.442,226,0.425,228,0.369,229,2.148,235,0.63,236,1.725,240,1.197,250,4.689,302,2.66,316,5.132,326,4.53,327,7.098,328,5.546,329,5.704,330,4.997,331,4.997,332,4.997,333,4.997,334,4.53]],["title/classes/CsdlEntityType.html",[226,0.311,305,2.413]],["body/classes/CsdlEntityType.html",[3,0.108,4,0.095,5,0.108,6,0.109,8,0.069,9,0.373,10,0.25,14,0.224,15,0.122,16,0.802,17,0.012,19,0.362,22,0.157,33,1.061,38,1.806,58,0.167,153,1.073,158,1.169,189,1.16,212,0.121,216,0.006,217,0.008,218,0.006,222,0.446,226,0.565,228,0.297,229,1.896,235,0.702,236,1.387,240,1.36,283,3.036,285,2.655,286,3.84,287,2.059,288,5.313,289,2.471,290,5.261,291,5.592,292,5.261,293,3.855,294,3.855,296,4.019,297,4.019,298,4.019,299,4.019,300,4.019,301,4.019,302,2.139,303,2.318,304,3.211,305,3.524,306,4.616,307,4.88,308,3.14,309,3.709,335,3.644,336,4.019,337,3.644]],["title/classes/CsdlEnumMember.html",[226,0.311,338,3.058]],["body/classes/CsdlEnumMember.html",[3,0.14,4,0.123,5,0.14,6,0.12,8,0.089,9,0.322,10,0.227,14,0.22,15,0.115,16,0.558,17,0.012,18,1.369,22,0.148,48,1.734,58,0.172,153,1.056,201,2.57,212,0.157,216,0.008,217,0.009,218,0.008,222,0.42,226,0.534,228,0.384,229,2.085,235,0.694,236,1.796,240,1.016,287,2.666,338,5.651,339,4.044,340,4.354,341,5.203,342,5.203,343,4.065,344,4.717,345,4.717]],["title/classes/CsdlEnumType.html",[226,0.311,343,2.854]],["body/classes/CsdlEnumType.html",[3,0.133,4,0.117,5,0.133,6,0.123,8,0.085,9,0.312,10,0.238,14,0.225,15,0.121,16,0.739,17,0.012,18,0.966,22,0.144,48,1.195,58,0.17,153,1.066,201,3.496,212,0.15,216,0.007,217,0.009,218,0.007,222,0.441,226,0.518,228,0.365,229,2.143,235,0.679,236,1.708,240,1.19,287,2.535,338,5.924,339,4.157,343,4.761,344,6.418,345,6.418,346,5.649,347,4.486,348,5.649,349,4.948,350,4.486]],["title/classes/CsdlFunction.html",[226,0.311,246,2.301]],["body/classes/CsdlFunction.html",[3,0.11,4,0.097,5,0.11,6,0.121,8,0.07,9,0.276,10,0.241,14,0.23,15,0.123,16,0.789,17,0.012,18,1.34,22,0.162,32,2.109,37,1.703,40,1.654,43,1.703,45,1.703,58,0.169,153,1.088,212,0.211,216,0.006,217,0.008,218,0.006,222,0.436,226,0.583,227,2.578,228,0.302,229,2.111,230,2.308,231,3.008,232,4.77,233,4.77,234,4.77,235,0.719,236,1.413,237,4.531,238,4.531,240,1.255,246,3.4,247,4.644,248,2.578,249,3.008,250,2.704,251,2.578,252,1.761,253,2.485,351,4.673,352,4.673,353,4.673,354,4.673,355,4.673,356,4.673,357,4.673]],["title/classes/CsdlFunctionImport.html",[226,0.311,248,2.301]],["body/classes/CsdlFunctionImport.html",[3,0.115,4,0.101,5,0.115,6,0.119,8,0.073,9,0.285,10,0.228,14,0.232,15,0.121,16,0.777,17,0.012,18,1.356,22,0.164,32,2.713,37,1.754,40,1.703,43,1.754,45,1.754,58,0.171,153,1.088,212,0.187,216,0.006,217,0.008,218,0.006,222,0.422,226,0.591,227,2.696,228,0.316,229,2.065,230,2.257,231,3.147,232,3.867,233,3.867,234,3.867,235,0.727,236,1.478,237,4.08,238,4.08,240,1.086,246,2.696,247,2.977,248,3.502,249,4.981,250,4.476,251,2.696,252,1.842,253,2.56,358,4.888,359,4.888,360,4.888,361,4.888,362,4.888]],["title/classes/CsdlInclude.html",[226,0.311,363,2.854]],["body/classes/CsdlInclude.html",[1,1.737,3,0.135,4,0.119,5,0.135,6,0.119,8,0.086,9,0.315,10,0.224,14,0.229,15,0.114,17,0.012,19,0.453,22,0.157,58,0.119,153,1.061,158,0.983,188,2.708,189,2.053,212,0.152,216,0.008,217,0.009,218,0.008,222,0.414,226,0.566,228,0.371,229,2.061,235,0.713,240,0.983,258,3.707,260,3.169,262,3.551,268,3.324,269,3.169,302,2.678,363,5.199,364,4.563,365,5.032,366,5.745,367,5.745,368,5.745,369,3.932,370,4.212,371,4.563,372,4.563,373,4.811,374,4.212,375,4.212]],["title/classes/CsdlIncludeAnnotations.html",[226,0.311,373,2.854]],["body/classes/CsdlIncludeAnnotations.html",[1,1.694,3,0.132,4,0.116,5,0.132,6,0.121,8,0.084,9,0.31,10,0.237,14,0.23,15,0.118,17,0.012,19,0.442,22,0.155,58,0.116,153,1.065,158,0.958,188,1.916,189,1.416,212,0.148,216,0.007,217,0.009,218,0.007,222,0.428,226,0.56,228,0.362,229,2.099,235,0.707,240,1.184,258,3.65,260,3.09,262,3.497,268,4.664,269,3.09,302,2.611,363,4.737,364,4.448,369,3.833,370,4.106,371,4.448,372,4.448,373,5.141,374,5.752,375,5.91,376,5.601,377,5.601,378,5.601,379,5.601,380,5.601]],["title/classes/CsdlKey.html",[226,0.311,306,2.54]],["body/classes/CsdlKey.html",[3,0.127,4,0.111,5,0.127,6,0.11,8,0.081,9,0.37,10,0.158,14,0.221,15,0.101,16,0.775,17,0.012,19,0.424,22,0.165,33,1.244,38,1.281,58,0.165,153,1.056,158,1.154,189,1.359,212,0.142,216,0.007,217,0.009,218,0.007,222,0.368,226,0.593,228,0.348,229,1.92,235,0.732,285,3.111,286,3.888,287,2.414,288,4.747,289,2.409,290,5.128,291,5.452,292,5.128,293,3.75,294,3.75,302,2.507,303,2.716,304,3.558,305,3.111,306,4.491,307,3.462,308,5.292,309,4.851,381,5.377,382,4.71,383,5.377]],["title/classes/CsdlNavigationProperty.html",[226,0.311,294,2.022]],["body/classes/CsdlNavigationProperty.html",[3,0.112,4,0.098,5,0.112,6,0.118,8,0.071,9,0.279,10,0.246,14,0.23,15,0.129,16,0.786,17,0.012,18,1.189,22,0.158,33,1.098,37,1.311,40,2.206,43,1.311,45,1.311,58,0.166,153,1.079,158,1.189,212,0.126,216,0.006,217,0.008,218,0.006,222,0.444,226,0.571,228,0.307,229,2.048,235,0.708,236,1.435,240,1.311,252,1.788,253,1.913,273,2.502,283,2.708,289,1.435,293,2.301,294,3.019,303,3.973,304,3.283,384,3.247,385,5.16,386,4.933,387,4.933,388,4.933,389,5.244,390,4.667,391,4.667,392,4.744,393,4.744,394,4.744,395,4.744,396,4.744,397,4.156,398,4.156,399,4.156,400,2.889,401,3.054]],["title/classes/CsdlNavigationPropertyBinding.html",[226,0.311,328,2.854]],["body/classes/CsdlNavigationPropertyBinding.html",[3,0.144,4,0.126,5,0.144,6,0.121,8,0.092,9,0.327,10,0.18,14,0.226,15,0.117,17,0.011,22,0.126,33,1.871,41,3.376,58,0.126,153,1.03,209,2.445,212,0.162,216,0.008,217,0.01,218,0.008,222,0.426,226,0.456,228,0.396,229,2.105,235,0.658,267,5.32,328,4.999,402,6.12,403,6.12,404,6.12,405,6.12,406,6.12]],["title/classes/CsdlOnDelete.html",[226,0.311,391,2.54]],["body/classes/CsdlOnDelete.html",[3,0.128,4,0.113,5,0.128,6,0.111,8,0.082,9,0.305,10,0.16,14,0.23,15,0.124,16,0.751,17,0.012,18,1.269,22,0.165,33,1.261,37,1.506,40,2.145,43,1.506,45,1.506,58,0.161,153,1.072,158,1.164,212,0.144,216,0.007,217,0.009,218,0.007,222,0.371,226,0.596,228,0.352,229,1.932,235,0.735,252,2.929,253,2.197,273,2.874,289,1.648,293,2.643,294,2.643,303,3.748,304,3.588,384,3.73,385,4.777,386,3.509,387,3.509,388,3.509,389,3.73,390,4.144,391,4.519,400,3.319,401,3.509,407,5.45,408,5.45,409,5.45]],["title/classes/CsdlParameter.html",[226,0.311,238,2.413]],["body/classes/CsdlParameter.html",[3,0.108,4,0.094,5,0.108,6,0.122,8,0.068,9,0.272,10,0.245,14,0.23,15,0.127,16,0.767,17,0.012,18,1.454,22,0.161,32,2.079,37,2.151,40,2.088,43,2.151,45,2.151,58,0.169,153,1.088,212,0.181,216,0.006,217,0.008,218,0.006,222,0.44,226,0.58,227,2.522,228,0.296,229,2.126,230,2.325,231,2.944,232,3.701,233,3.701,234,3.701,235,0.715,236,1.383,237,3.949,238,4.208,240,1.295,246,2.522,247,2.785,248,2.522,249,2.944,250,2.646,251,2.522,252,1.723,253,3.138,410,4.572,411,4.572,412,4.572,413,4.572,414,4.572,415,4.572,416,4.572,417,4.572]],["title/classes/CsdlProperty.html",[226,0.311,293,2.022]],["body/classes/CsdlProperty.html",[3,0.107,4,0.094,5,0.107,6,0.121,8,0.068,9,0.271,10,0.25,14,0.23,15,0.129,16,0.78,17,0.012,18,1.43,22,0.156,33,1.051,37,2.087,40,2.187,43,2.087,45,2.087,58,0.164,153,1.08,158,1.163,212,0.12,216,0.006,217,0.008,218,0.006,222,0.449,226,0.563,228,0.294,229,2.097,235,0.7,236,1.373,240,1.356,252,1.712,253,3.046,273,3.983,283,2.651,289,1.373,293,2.933,294,2.202,303,4.069,304,3.19,384,3.108,385,5.105,386,2.924,387,2.924,388,2.924,389,3.108,390,3.684,391,3.684,397,3.978,398,3.978,399,3.978,400,4.6,401,2.924,418,4.541,419,4.541,420,4.541,421,4.541,422,4.541,423,4.541,424,4.541]],["title/classes/CsdlPropertyRef.html",[226,0.311,309,2.54]],["body/classes/CsdlPropertyRef.html",[3,0.124,4,0.108,5,0.124,6,0.115,8,0.079,9,0.368,10,0.215,14,0.228,15,0.109,16,0.771,17,0.012,19,0.414,22,0.163,33,1.213,38,1.25,58,0.172,153,1.061,158,1.136,189,1.999,212,0.139,216,0.007,217,0.009,218,0.007,222,0.398,226,0.589,228,0.339,229,1.995,235,0.728,236,1.586,240,0.897,285,3.034,286,4.041,287,2.354,288,4.693,289,2.391,290,5.09,291,5.411,292,5.09,293,3.716,294,3.716,302,2.445,303,2.649,304,3.502,305,3.034,306,4.045,307,3.376,308,3.589,309,4.44,425,5.244,426,5.244,427,5.244]],["title/classes/CsdlReference.html",[226,0.311,369,2.854]],["body/classes/CsdlReference.html",[1,1.648,3,0.128,4,0.113,5,0.128,6,0.12,8,0.082,9,0.305,10,0.244,14,0.223,15,0.12,17,0.012,19,0.43,22,0.153,58,0.113,153,1.068,158,1.164,188,1.865,189,1.378,212,0.144,216,0.007,217,0.009,218,0.007,222,0.436,226,0.553,228,0.352,229,2.082,235,0.7,240,1.269,258,4.097,260,4.411,262,4.04,268,3.153,269,3.006,283,2.124,284,3.995,302,2.541,363,5.473,364,4.328,369,4.657,370,5.697,371,6.351,372,6.351,373,5.473,374,3.995,375,3.995,428,5.45,429,5.45,430,5.45,431,5.45,432,5.45]],["title/classes/CsdlReferentialConstraint.html",[226,0.311,390,2.54]],["body/classes/CsdlReferentialConstraint.html",[3,0.126,4,0.11,5,0.126,6,0.115,8,0.08,9,0.301,10,0.157,14,0.231,15,0.125,16,0.746,17,0.012,18,1.257,22,0.164,33,1.784,37,1.474,40,2.132,43,1.474,45,1.474,58,0.159,153,1.074,158,1.148,212,0.141,216,0.007,217,0.009,218,0.007,222,0.401,226,0.592,228,0.345,229,2.008,235,0.731,252,2.011,253,2.151,273,2.813,289,1.613,293,2.587,294,2.587,303,3.895,304,3.54,384,3.651,385,4.73,386,3.434,387,3.434,388,3.434,389,3.651,390,4.475,391,4.089,400,3.249,401,5.116,433,5.335,434,5.335,435,5.335,436,5.335]],["title/classes/CsdlReturnType.html",[226,0.311,237,2.413]],["body/classes/CsdlReturnType.html",[3,0.11,4,0.096,5,0.11,6,0.121,8,0.07,9,0.276,10,0.246,14,0.229,15,0.126,16,0.77,17,0.012,18,1.457,22,0.162,32,2.104,37,2.162,40,2.099,43,2.162,45,2.162,58,0.162,153,1.088,212,0.182,216,0.006,217,0.008,218,0.006,222,0.435,226,0.583,227,2.569,228,0.301,229,2.109,230,2.306,231,2.998,232,3.746,233,3.746,234,3.746,235,0.719,237,4.239,238,3.985,240,1.303,246,2.569,247,2.836,248,2.569,249,2.998,250,2.694,251,2.569,252,1.755,253,3.154,437,4.657,438,4.657,439,4.657,440,4.657,441,4.657,442,4.657,443,4.657,444,4.657]],["title/classes/CsdlSchema.html",[226,0.311,445,3.312]],["body/classes/CsdlSchema.html",[1,1.334,3,0.104,4,0.091,5,0.104,6,0.125,8,0.066,9,0.266,10,0.255,14,0.212,15,0.127,17,0.012,19,0.608,22,0.091,34,1.294,58,0.091,153,1.079,158,1.015,188,2.453,189,1.891,212,0.117,216,0.006,217,0.008,218,0.006,222,0.457,226,0.329,227,4.126,228,0.285,229,2.181,230,1.256,235,0.534,240,1.414,246,4.126,252,1.663,258,3.78,260,4.126,262,3.779,266,4.556,269,2.434,271,4.556,283,1.719,284,3.235,285,4.329,286,2.326,302,3.592,305,4.329,310,5.484,339,2.229,343,5.12,365,3.865,445,4.712,446,4.412,447,7.481,448,7.481,449,7.481,450,6.553,451,7.481,452,7.481,453,4.556,454,7.481,455,7.481,456,5.484,457,4.412,458,4.412,459,4.412,460,4.412,461,4.412,462,4.412,463,4.412,464,4.412,465,4.412,466,4.412,467,4.412,468,4.412,469,3.865,470,3.504]],["title/classes/CsdlSingleton.html",[226,0.311,317,3.058]],["body/classes/CsdlSingleton.html",[3,0.14,4,0.123,5,0.14,6,0.123,8,0.089,9,0.321,10,0.227,14,0.225,15,0.128,17,0.012,19,0.468,22,0.123,33,1.372,41,2.476,58,0.169,153,1.05,212,0.157,216,0.008,217,0.009,218,0.008,222,0.436,226,0.442,228,0.384,229,2.133,235,0.646,236,1.793,240,1.014,302,2.765,317,5.255,328,5.607,334,4.71,471,5.931,472,8.193,473,5.931,474,5.931,475,5.931,476,5.931]],["title/classes/CsdlStructuralProperty.html",[226,0.311,385,2.685]],["body/classes/CsdlStructuralProperty.html",[3,0.123,4,0.108,5,0.123,6,0.118,8,0.078,9,0.296,10,0.214,14,0.23,15,0.128,16,0.779,17,0.012,18,1.242,22,0.163,33,1.204,37,1.438,40,2.244,43,1.438,45,1.438,58,0.169,153,1.076,158,1.131,212,0.138,216,0.007,217,0.009,218,0.007,222,0.417,226,0.588,228,0.336,229,2.054,235,0.726,236,1.573,240,0.89,252,1.961,253,2.098,273,2.744,289,1.573,293,2.523,294,2.523,303,3.985,304,3.485,384,3.561,385,4.92,386,3.35,387,3.35,388,3.35,389,3.561,390,4.025,391,4.025,400,3.169,401,3.35,477,5.204,478,5.204,479,5.204,480,5.204]],["title/classes/CsdlStructuredType.html",[226,0.311,288,2.685]],["body/classes/CsdlStructuredType.html",[3,0.112,4,0.099,5,0.112,6,0.122,8,0.071,9,0.375,10,0.246,14,0.225,15,0.12,16,0.796,17,0.012,19,0.376,22,0.159,33,1.104,38,1.137,58,0.168,153,1.07,158,1.069,189,1.206,212,0.126,216,0.006,217,0.008,218,0.006,222,0.438,226,0.572,228,0.309,229,2.12,235,0.71,236,1.443,240,1.313,285,2.761,286,4.293,287,2.142,288,4.762,289,2.49,290,5.301,291,5.636,292,5.301,293,3.892,294,3.892,302,2.225,303,2.411,304,3.296,305,2.761,306,3.807,307,3.072,308,3.266,309,3.807,340,3.499,347,3.79,349,4.18,350,3.79,481,3.79,482,3.499,483,3.79]],["title/classes/CsdlTerm.html",[226,0.311,271,2.54]],["body/classes/CsdlTerm.html",[3,0.11,4,0.096,5,0.11,6,0.126,8,0.07,9,0.276,10,0.253,14,0.232,15,0.128,16,0.689,17,0.012,18,1.436,22,0.151,37,2.106,40,2.044,43,2.106,45,2.106,58,0.157,153,1.082,158,0.798,212,0.124,216,0.006,217,0.008,218,0.006,222,0.455,226,0.546,228,0.302,229,2.187,235,0.66,236,1.411,240,1.386,253,3.073,258,3.248,259,3.422,260,3.398,262,3.483,265,3.005,266,2.843,267,3.005,268,3.564,269,2.575,270,3.194,271,3.752,272,5.217,273,4.019,274,5.217,484,4.668,485,4.668,486,4.668,487,4.668,488,4.668,489,4.668,490,4.668,491,4.668,492,4.668,493,4.668,494,4.668]],["title/classes/CsdlTypeDefinition.html",[226,0.311,456,3.058]],["body/classes/CsdlTypeDefinition.html",[1,1.532,3,0.119,4,0.105,5,0.119,6,0.125,8,0.076,9,0.291,10,0.251,14,0.225,15,0.13,16,0.711,17,0.011,18,1.454,19,0.4,22,0.105,37,2.162,43,2.162,45,2.162,58,0.162,153,1.075,158,1.111,212,0.134,216,0.007,217,0.009,218,0.007,222,0.454,226,0.377,228,0.328,229,2.168,235,0.585,236,1.532,240,1.369,253,3.154,258,3.99,260,4.315,262,3.952,269,2.795,283,1.974,284,3.714,302,2.362,400,4.765,456,4.763,495,5.066,496,7.824,497,5.066,498,5.066,499,5.066,500,5.066,501,5.066,502,5.066,503,5.066,504,5.066]],["title/interfaces/EnumTypeField.html",[0,1.261,47,1.944]],["body/interfaces/EnumTypeField.html",[0,2.318,1,1.957,2,1.409,3,0.071,4,0.062,5,0.071,6,0.045,7,1.527,8,0.045,9,0.271,10,0.133,11,2.39,12,2.39,13,2.39,14,0.235,15,0.124,16,0.761,17,0.012,18,1.356,19,0.238,20,1.921,21,1.103,22,0.174,23,1.357,24,1.409,25,1.892,26,2.198,27,1.823,28,1.594,29,2.8,30,2.119,31,1.262,32,1.034,33,0.699,34,0.887,35,2.535,36,1.413,37,0.835,38,0.72,39,2.27,40,1.216,41,1.262,42,1.827,43,0.835,44,2.353,45,0.835,46,1.409,47,2.535,48,1.438,49,2.39,50,1.594,51,1.594,52,1.594,53,1.594,54,1.527,55,1.594,56,1.594,57,1.594,58,0.177,59,2.441,60,1.594,61,1.594,62,1.594,63,1.594,64,1.594,65,1.262,66,1.728,67,1.594,68,1.178,69,1.594,70,1.594,71,1.594,72,1.594,73,1.594,74,1.466,75,1.594,76,1.594,77,1.594,78,1.594,79,1.594,80,1.594,81,1.594,82,1.594,83,1.594,84,2.479,85,1.489,86,2.353,87,1.708,88,1.601,89,2.198,90,2.198,91,2.712,92,1.594,93,2.39,94,1.594,95,1.466,96,1.594,97,1.594,98,3.059,99,1.961,100,1.843,101,2.049,102,3.334,103,3.163,104,2.867,105,2.39,106,1.178,107,1.594,108,2.39,109,2.747,110,3.017,111,1.594,112,1.594,113,1.594,114,3.163,115,2.192,116,2.747,117,2.867,118,1.594,119,2.198,120,1.594,121,3.185,122,0.792,123,1.466,124,1.594,125,1.527,126,1.466,127,1.594,128,1.594,129,1.594,130,1.594,131,2.113,132,0.517,133,1.594,134,2.39,135,2.39,136,2.535,137,2.39,138,2.29,139,1.527,140,1.594,141,1.527,142,2.198,143,1.594,144,2.441,145,1.466,146,1.466,147,1.466,148,2.113,149,2.198,150,1.466,151,1.527,152,2.198,153,0.371,154,0.811,155,1.357,156,1.466,157,2.134,158,1.033,159,1.262,160,2.198,161,2.198,162,1.357,163,1.527,164,1.527,165,1.527,166,1.466,167,1.527,168,1.527,169,1.409,170,1.457,171,1.262,172,1.103,173,1.357,174,1.308,175,0.811,176,1.357,177,1.178,178,1.466,179,1.466,180,1.527,181,1.594,182,1.594,183,1.594,184,1.357,185,1.527,186,2.198,187,3.295,188,1.034,189,0.764,190,1.527,191,2.034,192,1.139,193,2.034,194,1.527,195,1.961,196,1.527,197,2.198,198,1.409,199,2.198,200,1.466,201,1.308,202,1.892,203,1.527,204,1.409,205,1.527,206,1.409,207,2.637,208,2.034,209,0.914,210,1.527,211,1.527,212,0.08,213,1.409,214,1.357,215,1.219,216,0.004,217,0.006,218,0.004]],["title/classes/Field.html",[42,1.682,226,0.311]],["body/classes/Field.html",[1,1.332,3,0.069,4,0.06,5,0.069,6,0.089,8,0.08,9,0.197,10,0.086,14,0.184,15,0.104,17,0.012,19,0.62,22,0.06,24,4.105,30,2.071,31,1.838,32,1.507,33,1.371,34,1.292,37,0.804,38,0.693,40,0.78,41,1.215,42,2.142,43,0.804,44,0.907,45,0.804,48,0.616,58,0.138,86,2.898,132,1.413,142,2.135,144,2.385,153,0.88,154,2.359,158,0.498,170,0.935,185,1.47,188,0.995,189,0.735,203,1.47,208,1.306,209,0.88,212,0.077,213,2.053,216,0.004,217,0.006,218,0.004,222,0.29,226,0.328,227,1.605,228,0.188,230,1.513,232,1.772,233,1.772,234,1.772,235,0.262,236,0.88,237,1.683,238,1.683,246,1.605,247,1.772,248,1.605,250,1.683,251,1.605,252,2.003,253,1.173,262,1.47,265,1.873,266,1.772,267,1.873,268,1.683,270,3.014,271,1.772,272,1.991,273,1.534,274,1.991,285,1.683,286,1.534,289,0.88,290,1.873,292,1.873,293,1.411,294,1.411,303,1.47,305,1.683,306,1.772,307,1.873,309,1.772,310,2.133,316,2.133,317,2.133,325,1.873,327,2.548,328,1.991,334,2.31,338,2.133,339,2.225,343,1.991,344,2.31,345,2.31,363,1.991,369,3.014,370,2.133,373,1.991,374,2.133,375,2.133,386,1.873,387,1.873,388,1.873,390,1.772,391,1.772,400,1.772,401,1.873,445,3.497,450,2.548,456,2.133,469,2.548,470,2.31,505,2.548,506,6.549,507,2.909,508,4.404,509,7.7,510,2.322,511,0.693,512,2.548,513,2.133,514,3.497,515,1.306,516,2.548,517,3.857,518,2.548,519,2.548,520,5.356,521,2.909,522,2.909,523,2.909,524,2.909,525,2.909,526,2.909,527,2.909,528,2.909,529,2.909,530,2.909,531,2.909,532,2.909,533,2.909,534,2.909,535,2.909,536,2.31,537,2.909,538,2.909,539,2.909,540,2.909,541,2.909,542,2.909,543,2.909,544,2.909,545,2.909,546,1.873,547,2.909,548,2.909,549,2.909,550,2.909,551,2.909,552,2.909,553,2.909,554,2.909,555,2.909,556,2.909,557,2.909,558,2.909,559,2.909,560,2.909,561,2.909,562,2.909,563,2.909,564,4.654,565,2.909,566,2.909,567,2.909,568,2.909,569,2.909,570,2.909,571,2.909,572,2.909,573,2.909,574,2.909,575,2.909,576,2.909,577,2.909,578,2.909,579,2.909,580,2.909,581,2.909,582,2.909,583,2.909,584,2.909,585,2.909,586,2.909,587,2.909,588,2.909,589,2.909,590,2.909,591,2.909,592,2.909,593,2.909,594,2.909,595,2.909,596,2.909,597,2.909,598,2.909,599,2.909,600,2.909,601,2.909,602,2.909,603,2.909,604,2.909,605,2.909,606,2.909,607,2.909,608,2.548,609,2.041,610,4.404,611,5.314,612,2.909,613,2.909,614,2.909,615,2.31,616,2.909,617,2.909,618,5.926,619,4.404,620,2.909,621,2.909,622,2.909,623,2.909,624,2.909,625,7.79,626,2.909,627,4.404,628,2.909,629,4.404,630,2.909,631,2.909,632,2.909,633,2.909,634,2.909,635,2.909,636,2.909,637,2.909,638,2.909,639,2.909,640,2.909,641,2.909,642,2.909,643,2.909,644,2.909,645,2.909,646,2.994,647,2.909,648,2.133,649,2.053,650,2.909,651,2.548,652,2.909,653,5.314,654,4.404,655,4.22,656,1.838,657,2.909,658,2.909,659,2.909,660,2.909,661,2.909,662,2.31,663,2.31,664,2.909,665,2.909,666,1.534]],["title/classes/ODataAnnotation.html",[226,0.311,667,2.54]],["body/classes/ODataAnnotation.html",[3,0.149,4,0.131,5,0.149,6,0.119,8,0.095,9,0.334,10,0.186,14,0.197,15,0.125,17,0.012,19,0.499,22,0.131,58,0.131,187,3.965,212,0.168,216,0.008,217,0.01,218,0.008,222,0.406,226,0.472,228,0.409,235,0.57,511,1.509,667,4.539,668,6.332,669,7.453,670,7.453,671,3.93,672,3.663,673,6.332,674,5.028]],["title/classes/ODataApiOptions.html",[226,0.311,675,3.653]],["body/classes/ODataApiOptions.html",[3,0.113,4,0.099,5,0.113,6,0.128,8,0.072,9,0.282,10,0.252,14,0.209,15,0.128,16,0.766,17,0.012,18,1.075,19,0.552,22,0.099,30,2.727,58,0.099,86,3.028,87,2.638,88,2.472,89,3.394,90,3.394,91,3.544,122,0.701,144,3.141,148,3.263,149,3.048,156,3.394,157,2.472,159,2.922,160,3.829,161,3.048,162,3.141,163,3.536,164,3.536,165,3.175,212,0.127,216,0.006,217,0.008,218,0.006,219,2.02,222,0.463,226,0.359,228,0.311,235,0.433,511,1.147,515,2.16,615,3.822,675,5.505,676,4.812,677,3.175,678,2.22,679,2.821,680,6.285,681,2.009,682,4.812,683,4.812,684,4.812,685,4.812,686,4.812,687,4.812,688,4.812,689,4.812,690,4.812,691,4.812,692,4.215,693,4.812,694,6.285,695,5.505,696,4.215,697,3.822,698,3.528,699,4.215,700,4.215,701,4.215,702,4.215,703,4.215,704,4.215,705,4.215,706,4.215,707,4.812,708,3.822,709,4.812,710,4.215,711,4.812,712,4.215,713,4.812,714,4.812,715,4.812,716,4.812,717,4.812,718,4.215]],["title/classes/ODataBatchRequest.html",[226,0.311,719,3.653]],["body/classes/ODataBatchRequest.html",[3,0.067,4,0.059,5,0.067,6,0.1,8,0.095,9,0.195,10,0.155,14,0.225,15,0.107,17,0.012,18,1.08,19,0.605,20,1.855,21,1.041,22,0.09,38,0.68,58,0.108,66,1.145,84,1.915,85,1.205,87,1.076,88,2.44,100,1.67,103,1.281,110,1.33,115,2.941,122,1.142,132,1.218,138,1.442,142,3.224,153,0.533,154,0.765,158,0.898,162,1.281,175,1.409,177,1.112,205,3.189,209,0.863,212,0.139,215,1.151,216,0.004,217,0.006,218,0.004,219,1.886,220,0.918,221,1.505,222,0.344,224,1.079,226,0.323,228,0.185,230,1.797,235,0.257,265,1.837,514,3.447,515,1.281,520,1.738,608,2.5,609,2.339,646,2.192,656,3.373,666,2.288,698,2.092,719,4.6,720,2.5,721,4.6,722,4.34,723,4.34,724,3.237,725,2.854,726,3.644,727,2.854,728,2.854,729,4.34,730,5.348,731,2.854,732,4.34,733,4.34,734,2.854,735,2.854,736,1.574,737,1.738,738,1.953,739,3.039,740,1.738,741,3.844,742,2.104,743,2.394,744,3.574,745,4.6,746,2.5,747,1.574,748,5.251,749,3.801,750,4.34,751,3.801,752,2.854,753,2.854,754,4.628,755,4.34,756,4.34,757,4.34,758,3.801,759,2.854,760,4.34,761,2.854,762,3.801,763,2.854,764,2.854,765,3.039,766,2.897,767,2.092,768,2.511,769,2.854,770,2.854,771,2.266,772,2.854,773,2.643,774,5.251,775,2.5,776,4.66,777,2.266,778,4.171,779,2.5,780,4.6,781,3.801,782,2.854,783,2.5,784,4.023,785,2.854,786,2.854,787,3.801,788,2.854,789,2.854,790,2.854,791,6.648,792,2.854,793,4.6,794,2.854,795,2.5,796,2.854,797,4.34,798,2.854,799,2.288,800,2.854,801,2.854,802,4.016,803,5.868,804,2.854,805,2.794,806,1.953,807,5.251,808,4.34,809,1.837,810,2.854,811,2.854,812,2.266,813,4.34,814,5.251,815,4.302,816,2.854,817,5.868,818,3.844,819,3.85,820,5.251,821,5.251,822,2.854,823,2.854,824,2.854,825,2.854,826,2.854,827,2.854,828,1.953,829,2.97,830,2.854,831,2.854,832,2.854,833,4.34,834,2.5,835,1.837,836,4.34,837,2.266,838,2.5,839,4.34,840,2.854,841,4.34,842,1.878,843,2.854,844,2.092,845,1.953,846,2.092,847,2.854,848,2.854,849,2.854,850,4.34,851,5.251,852,2.97,853,2.5,854,2.97,855,4.34,856,2.854,857,2.266,858,3.447,859,2.854,860,3.447,861,2.854,862,2.854,863,2.854,864,2.854,865,2.854,866,2.854,867,2.5,868,2.769,869,2.266,870,1.837,871,2.5,872,2.5,873,2.854,874,2.854,875,2.854,876,2.854,877,7.294,878,4.34,879,5.868,880,2.854,881,6.312,882,4.34,883,2.854,884,2.854,885,2.854,886,5.251,887,2.854,888,2.854,889,2.854,890,2.854,891,1.738,892,2.854,893,2.854,894,2.854,895,2.854,896,2.266,897,2.266,898,2.854,899,2.854,900,2.854,901,2.854,902,2.854,903,2.854,904,2.854,905,2.854,906,2.854,907,2.854,908,2.854,909,2.854,910,2.854,911,2.854,912,2.854]],["title/classes/ODataCache.html",[226,0.311,913,2.685]],["body/classes/ODataCache.html",[0,1.155,3,0.09,4,0.079,5,0.09,6,0.123,8,0.057,9,0.241,10,0.231,14,0.195,15,0.123,16,0.505,17,0.012,18,1.39,19,0.56,20,2.603,21,1.393,22,0.111,27,2.073,38,1.481,58,0.162,66,1.549,98,2.866,99,1.652,114,3.027,122,1.126,123,3.27,132,0.653,154,1.667,155,1.714,173,2.411,174,3.345,175,1.809,176,2.411,212,0.208,216,0.005,217,0.007,218,0.005,219,1.727,220,1.137,221,2.833,222,0.443,224,1.614,226,0.284,228,0.247,235,0.344,240,1.063,289,2.29,511,0.91,515,1.714,609,1.978,677,2.714,726,4.285,736,3.428,737,2.326,766,4.177,777,4.266,784,4.393,829,2.613,852,4.615,857,3.033,913,3.458,914,3.345,915,4.944,916,5.708,917,4.266,918,4.266,919,4.266,920,4.266,921,4.266,922,4.266,923,4.112,924,3.272,925,5.372,926,2.613,927,3.819,928,3.938,929,3.819,930,4.944,931,3.819,932,3.676,933,3.819,934,3.938,935,3.819,936,3.033,937,3.819,938,3.938,939,4.575,940,3.819,941,5.21,942,3.819,943,3.676,944,3.819,945,3.819,946,3.033,947,3.345,948,3.033,949,4.705,950,2.106,951,3.345,952,3.345,953,2.8,954,3.345,955,3.345,956,3.345,957,4.705,958,3.345,959,3.345,960,3.345,961,3.345,962,3.345,963,3.345,964,6.771,965,3.345,966,3.345,967,4.705,968,3.345,969,3.345,970,3.345,971,3.345,972,3.345]],["title/interfaces/ODataCacheEntry.html",[0,1.261,939,2.685]],["body/interfaces/ODataCacheEntry.html",[0,1.41,2,2.174,3,0.11,4,0.096,5,0.11,6,0.07,8,0.07,9,0.276,10,0.181,14,0.163,15,0.103,17,0.012,18,1.416,19,0.601,20,2.434,21,1.7,22,0.127,27,2.044,38,1.111,66,1.598,98,2.955,99,2.017,114,3.29,122,1.181,123,3.554,132,0.797,154,1.25,155,2.093,173,2.093,174,3.453,175,1.25,176,2.093,216,0.006,217,0.008,218,0.006,226,0.347,289,2.084,511,1.111,515,2.093,609,2.15,677,2.355,726,3.864,736,3.395,737,2.839,766,4.043,777,4.888,784,4.317,829,3.191,857,3.703,913,3.001,914,4.084,915,4.513,916,5.746,923,3.562,924,2.839,928,3.418,930,5.738,932,3.191,934,3.418,938,3.418,939,4.718,941,5.373,943,3.191,946,3.703,947,4.084,948,3.703,949,5.392,950,2.572,951,4.084,952,4.084,953,3.418,954,4.084,955,4.084,956,4.084,957,5.392,958,4.084,959,4.084,960,4.084,961,4.084,962,4.084,963,4.084,964,7.096,965,4.084,966,4.084,967,5.392,968,4.084,969,4.084,970,4.084,971,4.084,972,4.084]],["title/classes/ODataCallable.html",[226,0.311,973,3.312]],["body/classes/ODataCallable.html",[3,0.117,4,0.102,5,0.117,6,0.126,8,0.074,9,0.287,10,0.238,14,0.217,15,0.128,16,0.73,17,0.012,19,0.56,22,0.102,58,0.164,66,1.081,85,1.459,100,1.412,122,0.934,132,0.848,170,2.498,175,1.33,184,2.227,195,3.248,209,2.147,210,3.587,211,3.587,212,0.188,216,0.007,217,0.008,218,0.007,219,2.06,220,1.357,222,0.456,224,1.317,226,0.37,228,0.321,235,0.447,510,4.328,511,1.182,609,1.455,678,2.264,679,2.877,681,2.071,773,3.021,973,5.09,974,4.96,975,3.904,976,4.387,977,4.848,978,6.41,979,4.96,980,4.96,981,4.96,982,5.206,983,4.96,984,4.96,985,3.904,986,4.96,987,3.709,988,4.127,989,4.96,990,3.021,991,4.96,992,3.395,993,2.506,994,3.108,995,3.637,996,4.96,997,6.41,998,4.96,999,4.96,1000,4.96,1001,4.96,1002,3.021,1003,4.96,1004,3.939,1005,2.736,1006,3.637,1007,3.637,1008,3.637,1009,3.193,1010,3.395,1011,3.021,1012,4.345,1013,4.345,1014,2.736,1015,4.345]],["title/classes/ODataCallableParser.html",[226,0.311,982,3.058]],["body/classes/ODataCallableParser.html",[3,0.105,4,0.092,5,0.105,6,0.123,8,0.067,9,0.267,10,0.227,14,0.223,15,0.128,16,0.56,17,0.012,19,0.35,22,0.123,25,2.808,39,1.854,40,1.191,48,1.261,58,0.168,66,1.466,85,1.732,87,2.246,122,1.149,132,0.76,154,1.191,169,3.737,170,2.695,171,2.488,172,2.174,175,1.191,188,2.301,195,3.11,208,3.365,212,0.209,216,0.006,217,0.008,218,0.006,219,1.916,220,1.261,222,0.443,224,1.382,226,0.444,228,0.287,235,0.4,236,1.343,511,1.058,609,1.303,672,3.448,674,3.527,677,3.011,679,2.675,681,1.854,975,3.63,982,4.369,985,4.096,987,2.57,993,3.011,994,2.154,1002,4.378,1011,3.63,1016,3.89,1017,3.892,1018,3.398,1019,5.96,1020,4.441,1021,5.342,1022,4.441,1023,4.441,1024,4.441,1025,4.441,1026,4.441,1027,4.733,1028,5.22,1029,4.441,1030,5.497,1031,3.89,1032,2.859,1033,3.039,1034,3.89,1035,3.89,1036,3.256,1037,3.256,1038,5.22,1039,3.89,1040,5.22,1041,3.89,1042,2.859,1043,3.89,1044,3.89,1045,2.705,1046,3.89,1047,5.22,1048,3.89,1049,2.57,1050,2.57,1051,3.89,1052,3.89,1053,3.89,1054,3.89]],["title/classes/ODataCollection.html",[226,0.311,1055,3.058]],["body/classes/ODataCollection.html",[3,0.059,4,0.052,5,0.059,6,0.126,8,0.059,9,0.177,10,0.222,14,0.167,15,0.12,16,0.237,17,0.012,19,0.47,20,2.752,21,0.919,22,0.052,25,1.646,27,1.886,36,1.971,46,1.838,48,1.398,58,0.156,66,0.549,85,1.551,95,1.912,100,0.717,101,0.95,102,2.215,106,0.982,115,1.958,119,2.355,122,1.211,132,1.379,136,2.78,153,0.596,154,2.071,192,2.071,206,2.561,209,1.192,212,0.204,216,0.003,217,0.005,218,0.003,219,1.267,220,0.834,222,0.457,224,1.601,226,0.188,228,0.163,230,0.717,235,0.227,240,0.94,252,0.95,546,2.538,609,1.425,646,3.194,648,3.561,649,3.278,656,2.759,666,1.329,677,1.992,678,1.393,681,1.052,736,1.39,737,1.535,742,3.744,743,3.966,768,4.161,799,1.329,809,4.718,835,1.622,842,2.377,858,2.001,870,2.538,923,3.658,948,2.001,1027,3.131,1045,2.958,1055,3.561,1056,2.52,1057,4.857,1058,4.857,1059,4.857,1060,4.857,1061,5.021,1062,4.857,1063,4.857,1064,3.943,1065,3.943,1066,3.943,1067,3.943,1068,2.891,1069,3.144,1070,2.891,1071,5.494,1072,5.494,1073,4.028,1074,4.857,1075,4.857,1076,4.857,1077,4.857,1078,4.857,1079,2.698,1080,3.943,1081,3.194,1082,2.52,1083,4.421,1084,2.52,1085,2.52,1086,7.55,1087,2.52,1088,2.52,1089,2.52,1090,2.52,1091,2.52,1092,3.943,1093,2.52,1094,2.81,1095,3.943,1096,2.52,1097,7.328,1098,3.943,1099,2.52,1100,3.943,1101,2.52,1102,3.943,1103,2.52,1104,3.943,1105,2.52,1106,3.943,1107,2.52,1108,2.52,1109,2.52,1110,3.943,1111,2.52,1112,3.943,1113,2.52,1114,3.943,1115,2.52,1116,3.943,1117,2.52,1118,3.943,1119,2.52,1120,2.52,1121,2.52,1122,2.52,1123,2.52,1124,2.52,1125,2.52,1126,2.52,1127,2.52,1128,2.52,1129,2.52,1130,2.52,1131,2.52,1132,2.52,1133,2.52,1134,2.52,1135,4.363,1136,4.857,1137,4.812,1138,4.812,1139,6.323,1140,3.943,1141,2.207,1142,2.001,1143,2.52,1144,1.725,1145,1.725,1146,5.963,1147,1.458,1148,2.52,1149,2.52,1150,1.458,1151,2.52,1152,2.52,1153,2.52,1154,3.823,1155,8.173,1156,3.943,1157,2.52,1158,4.857,1159,3.943,1160,2.52,1161,2.52,1162,2.52,1163,2.52,1164,2.52,1165,3.943,1166,3.943,1167,2.52,1168,6.323,1169,2.52,1170,4.857,1171,2.52,1172,2.52,1173,2.52,1174,2.52,1175,2.52,1176,2.52,1177,2.52,1178,2.52,1179,2.52,1180,2.52,1181,2.52,1182,2.52,1183,2.52,1184,2.52,1185,3.943,1186,2.52,1187,2.52,1188,2.52,1189,2.52,1190,2.52,1191,2.52,1192,2.52,1193,2.52,1194,2.52,1195,4.857,1196,4.254,1197,3.127,1198,3.943,1199,2.52,1200,2.52,1201,3.943,1202,2.52,1203,2.52,1204,2.52,1205,2.52,1206,2.52,1207,2.52,1208,3.943,1209,2.52,1210,3.943,1211,2.52,1212,2.52,1213,2.52,1214,2.52,1215,2.52,1216,2.52,1217,2.52,1218,2.52,1219,2.52,1220,2.52,1221,3.943,1222,2.52,1223,2.52,1224,2.52,1225,2.52,1226,2.52,1227,2.52,1228,2.52,1229,2.52]],["title/classes/ODataCountResource.html",[226,0.311,1230,3.653]],["body/classes/ODataCountResource.html",[3,0.085,4,0.075,5,0.085,6,0.104,8,0.054,9,0.232,10,0.239,14,0.205,15,0.126,16,0.339,17,0.012,19,0.588,20,2.74,21,1.318,22,0.075,32,1.236,34,1.06,36,2.169,48,1.642,58,0.169,84,2.399,85,1.723,101,1.362,115,2.083,122,1.055,132,0.884,153,0.634,158,0.884,172,1.318,177,2.013,189,1.306,192,1.362,209,1.093,212,0.218,215,2.083,216,0.005,217,0.007,218,0.005,220,1.093,221,2.724,222,0.466,224,1.73,226,0.269,228,0.234,240,1.125,283,3.293,289,1.562,511,1.568,515,1.622,520,3.672,546,2.326,609,1.06,649,3.859,678,1.824,724,3.325,739,4.027,740,2.201,741,4.539,742,4.159,743,3.325,765,4.027,768,3.806,805,3.325,806,3.535,835,2.326,842,3.224,844,2.649,845,4.126,846,3.787,868,1.905,891,3.146,1018,2.61,1069,1.905,1081,2.61,1083,2.989,1094,3.488,1154,3.806,1230,5.762,1231,3.613,1232,3.787,1233,3.535,1234,3.787,1235,3.787,1236,4.42,1237,3.787,1238,4.42,1239,3.179,1240,4.126,1241,2.87,1242,2.87,1243,4.238,1244,2.87,1245,3.613,1246,3.613,1247,4.42,1248,3.613,1249,2.091,1250,2.87,1251,2.649,1252,4.235,1253,2.87,1254,3.146,1255,2.649,1256,2.724,1257,2.87,1258,2.87,1259,2.649,1260,2.87,1261,2.87,1262,2.87,1263,2.649,1264,2.87,1265,2.649,1266,2.87,1267,2.87,1268,2.649,1269,2.87,1270,2.649,1271,2.87,1272,2.649,1273,2.87,1274,2.87,1275,2.87,1276,2.87,1277,2.87,1278,2.87,1279,2.649,1280,3.613,1281,3.613,1282,2.649,1283,3.613,1284,3.613,1285,3.613,1286,2.87,1287,3.613,1288,3.165,1289,3.613,1290,3.613,1291,3.613,1292,3.165,1293,3.165,1294,3.613]],["title/classes/ODataEntitiesMeta.html",[226,0.311,1081,2.107]],["body/classes/ODataEntitiesMeta.html",[3,0.081,4,0.071,5,0.081,6,0.121,8,0.051,9,0.263,10,0.216,14,0.194,15,0.119,17,0.012,19,0.393,22,0.133,27,1.337,29,2.156,33,1.153,34,1.462,36,1.072,44,1.827,58,0.152,59,2.237,65,1.435,66,1.278,68,2.505,85,1.574,88,1.214,102,3.032,106,2.284,122,1.259,132,1.1,154,2.088,157,2.271,158,1.1,159,1.435,212,0.181,216,0.005,217,0.007,218,0.005,220,1.055,222,0.457,224,1.508,226,0.479,228,0.222,230,1.419,283,2.861,289,2.22,453,3.915,511,0.819,609,1.009,646,1.737,649,1.603,656,2.447,678,1.76,744,3.035,747,1.896,799,1.813,842,3.368,868,1.813,1014,4.05,1069,3.091,1079,2.353,1081,3.248,1147,3.392,1150,3.392,1256,3.091,1295,2.52,1296,5.55,1297,4.713,1298,4.298,1299,4.298,1300,4.713,1301,4.298,1302,4.298,1303,3.438,1304,2.73,1305,2.73,1306,5.319,1307,2.73,1308,2.73,1309,3.438,1310,5.218,1311,3.438,1312,3.654,1313,3.438,1314,4.298,1315,3.438,1316,2.73,1317,2.73,1318,3.654,1319,2.73,1320,3.011,1321,3.438,1322,3.438,1323,3.438,1324,3.438,1325,3.438,1326,3.438,1327,3.438,1328,3.438,1329,3.438,1330,3.438,1331,3.438,1332,3.438,1333,3.438,1334,3.011,1335,3.438,1336,2.52,1337,2.52,1338,2.52,1339,2.52,1340,2.52,1341,1.603,1342,2.52,1343,2.52,1344,2.52,1345,3.654,1346,4.298,1347,2.52,1348,4.298,1349,2.52,1350,2.52,1351,3.208,1352,2.52,1353,2.52,1354,4.298,1355,3.654,1356,2.52,1357,2.52,1358,2.52,1359,2.52,1360,2.52,1361,2.52,1362,2.52,1363,2.52,1364,2.52,1365,3.654,1366,2.52,1367,2.52,1368,2.52,1369,2.52,1370,2.52,1371,2.52,1372,2.52,1373,2.52,1374,5.218,1375,3.654,1376,3.654,1377,2.52,1378,2.52,1379,2.52,1380,2.52,1381,2.52,1382,2.52,1383,5.218,1384,4.298,1385,2.52,1386,3.654,1387,2.52,1388,2.52,1389,2.52]],["title/classes/ODataEntityContainer.html",[226,0.311,1390,3.312]],["body/classes/ODataEntityContainer.html",[1,2.328,3,0.125,4,0.11,5,0.125,6,0.125,8,0.08,9,0.3,10,0.197,14,0.177,15,0.121,16,0.499,17,0.012,19,0.607,22,0.11,34,1.559,44,2.286,58,0.164,85,1.506,122,0.976,132,1.146,175,1.425,197,3.734,198,3.419,212,0.177,216,0.007,217,0.009,218,0.007,220,1.417,222,0.449,224,1.091,226,0.396,228,0.344,230,1.513,235,0.479,311,4.654,320,4.654,321,4.654,323,4.654,324,5.866,325,3.421,510,4.428,511,1.266,667,4.467,671,3.531,678,2.365,679,3.006,681,2.218,977,4.936,990,3.236,992,3.636,993,2.684,994,2.577,1010,3.636,1341,2.477,1390,5.319,1391,7.29,1392,4.079,1393,5.377,1394,3.694,1395,5.313,1396,2.931,1397,5.313,1398,5.313,1399,5.313,1400,4.654,1401,5.313,1402,3.636,1403,3.636,1404,3.636,1405,2.931]],["title/classes/ODataEntityMeta.html",[226,0.311,1256,2.199]],["body/classes/ODataEntityMeta.html",[3,0.079,4,0.07,5,0.079,6,0.123,8,0.051,9,0.26,10,0.215,14,0.193,15,0.122,17,0.012,19,0.388,22,0.132,27,1.709,29,2.127,33,1.137,36,1.052,44,1.808,58,0.151,59,2.207,65,2.422,66,1.265,68,2.756,85,1.567,88,1.192,102,3.016,106,1.315,122,1.257,132,1.09,154,2.079,157,2.251,158,1.09,159,1.409,212,0.187,216,0.004,217,0.007,218,0.004,220,1.041,222,0.46,224,1.499,226,0.475,228,0.218,230,1.4,283,2.845,289,2.207,453,3.881,511,0.804,564,4.307,609,0.99,646,1.705,649,1.573,656,2.422,678,1.736,744,2.994,747,1.861,799,1.779,842,3.353,868,1.779,1014,4.027,1069,1.779,1079,2.309,1081,2.484,1147,1.952,1150,1.952,1256,3.36,1295,2.474,1296,5.532,1297,4.672,1298,4.252,1299,4.252,1300,4.672,1301,2.474,1302,2.474,1304,2.68,1305,2.68,1306,5.305,1307,2.68,1308,2.68,1310,5.184,1312,2.474,1314,4.252,1316,2.68,1317,2.68,1318,3.605,1319,2.68,1320,2.956,1334,2.956,1336,2.474,1337,2.474,1338,2.474,1339,2.474,1340,2.474,1341,1.573,1342,2.474,1343,2.474,1344,2.474,1345,3.605,1346,4.252,1347,2.474,1348,4.252,1349,2.474,1350,2.474,1351,3.165,1352,2.474,1353,2.474,1354,4.252,1355,3.605,1356,2.474,1357,2.474,1358,3.605,1359,2.474,1360,2.474,1361,4.252,1362,2.474,1363,4.252,1364,2.474,1365,3.605,1366,4.252,1367,2.474,1368,4.252,1369,2.474,1370,4.252,1371,2.474,1372,4.252,1373,2.474,1374,5.184,1375,3.605,1376,3.605,1377,2.474,1378,2.474,1379,2.474,1380,2.474,1381,2.474,1382,2.474,1383,5.184,1384,4.252,1385,2.474,1386,3.605,1387,2.474,1388,2.474,1389,2.474,1406,3.374,1407,3.374,1408,3.374,1409,3.374,1410,3.374,1411,2.956,1412,3.374,1413,3.374,1414,3.374,1415,3.374,1416,3.374,1417,3.374,1418,3.374,1419,3.374,1420,3.374,1421,3.374,1422,3.374,1423,3.374,1424,3.374,1425,3.374,1426,3.374,1427,3.374,1428,3.374,1429,3.374,1430,3.374]],["title/classes/ODataEntityService.html",[226,0.311,1431,3.058]],["body/classes/ODataEntityService.html",[3,0.126,4,0.111,5,0.126,6,0.122,8,0.08,10,0.217,14,0.215,15,0.116,17,0.012,19,0.61,22,0.111,23,3.469,34,2.162,38,1.28,48,1.136,58,0.168,66,1.171,84,2.819,103,3.308,122,1.126,153,0.998,212,0.205,216,0.007,217,0.009,218,0.007,220,1.427,222,0.434,224,1.385,226,0.4,228,0.347,235,0.484,240,1.153,289,2.337,511,1.28,649,3.143,656,2.815,678,2.381,681,2.815,738,5.29,742,3.574,950,2.962,1068,4.943,1073,3.937,1083,4.702,1144,3.675,1431,4.943,1432,5.37,1433,7.37,1434,4.704,1435,6.455,1436,5.37,1437,4.265,1438,5.37,1439,5.354,1440,5.37,1441,5.37,1442,5.37,1443,5.37,1444,5.37,1445,4.265,1446,4.704,1447,4.265,1448,4.704,1449,5.37,1450,4.265,1451,5.37]],["title/classes/ODataEntitySet.html",[226,0.311,1393,3.058]],["body/classes/ODataEntitySet.html",[1,2.288,3,0.119,4,0.105,5,0.119,6,0.126,8,0.076,9,0.291,10,0.211,14,0.216,15,0.126,16,0.61,17,0.012,19,0.566,22,0.105,44,2.236,58,0.165,85,1.473,100,1.442,122,1.045,132,0.867,175,1.359,199,3.669,207,2.457,212,0.19,213,3.344,214,3.22,216,0.007,217,0.009,218,0.007,219,1.629,220,1.375,222,0.454,224,1.335,226,0.377,228,0.328,230,1.442,235,0.456,326,4.024,330,4.438,331,4.438,332,4.438,333,4.438,510,4.347,511,1.207,667,4.369,671,3.426,678,2.295,679,2.917,681,2.115,773,3.086,976,4.447,977,4.875,988,4.183,990,3.086,992,3.467,993,2.559,994,2.457,1005,2.795,1006,3.714,1007,3.714,1008,3.714,1009,3.262,1010,3.467,1341,2.362,1391,7.353,1392,3.957,1393,4.763,1394,3.584,1396,2.795,1402,3.467,1403,3.467,1404,3.467,1405,2.795,1452,6.498,1453,5.066,1454,5.066,1455,5.066,1456,5.066,1457,5.066,1458,5.066,1459,5.066]],["title/classes/ODataEntitySetService.html",[226,0.311,1460,3.312]],["body/classes/ODataEntitySetService.html",[3,0.081,4,0.071,5,0.081,6,0.12,8,0.051,10,0.235,15,0.122,17,0.012,19,0.593,20,2.706,21,1.252,22,0.071,23,3.294,27,0.92,34,2.359,38,1.625,48,1.505,58,0.165,68,2.282,85,1.746,119,2.414,122,1.197,136,2.73,153,1.065,158,0.851,192,2.421,212,0.216,214,1.54,216,0.005,217,0.007,218,0.005,220,1.053,222,0.442,224,1.652,226,0.256,228,0.222,240,1.286,283,1.94,289,1.505,326,2.725,511,0.818,609,2.247,656,1.433,678,1.758,681,1.433,736,1.893,737,2.09,742,1.664,745,4.36,747,1.893,768,4.824,784,3.23,809,3.204,946,2.725,950,1.893,1055,3.649,1068,5.51,1070,3.649,1073,2.516,1083,4.502,1094,3.717,1137,5.13,1138,5.13,1144,3.406,1154,1.986,1252,5.408,1254,4.332,1431,5,1437,5.417,1439,5.102,1445,2.725,1447,2.725,1450,2.725,1460,3.953,1461,8.042,1462,4.36,1463,4.977,1464,4.977,1465,4.977,1466,5.857,1467,4.977,1468,3.432,1469,3.432,1470,3.432,1471,3.432,1472,4.977,1473,3.432,1474,4.977,1475,3.432,1476,3.432,1477,3.432,1478,4.977,1479,3.432,1480,4.977,1481,3.432,1482,4.977,1483,3.432,1484,3.006,1485,3.006,1486,3.432,1487,3.432,1488,3.432,1489,3.432,1490,3.432,1491,4.36,1492,3.432,1493,3.432,1494,3.432,1495,3.006,1496,3.432,1497,5.857,1498,4.008,1499,5.857,1500,5.857,1501,6.424,1502,5.857,1503,5.857,1504,3.432,1505,4.977,1506,3.432,1507,5.857,1508,3.432,1509,3.432,1510,3.432,1511,3.432,1512,3.432,1513,3.432,1514,3.432,1515,3.432,1516,4.977,1517,3.432,1518,3.432,1519,3.432]],["title/classes/ODataEnumType.html",[226,0.311,1520,3.312]],["body/classes/ODataEnumType.html",[1,2.164,3,0.103,4,0.091,5,0.103,6,0.126,8,0.066,9,0.265,10,0.227,14,0.217,15,0.127,16,0.556,17,0.012,18,1.278,19,0.564,22,0.091,27,1.587,42,2.385,44,2.085,48,1.416,58,0.172,85,1.374,100,1.251,122,1.146,132,1.012,170,2.15,175,1.587,184,1.972,191,3.212,201,2.894,202,2.988,212,0.208,216,0.006,217,0.008,218,0.006,219,1.902,220,1.252,222,0.457,224,1.58,226,0.327,228,0.284,230,1.684,235,0.396,287,1.972,335,3.489,340,3.22,382,3.848,481,3.489,482,3.22,483,3.489,510,4.216,511,1.047,667,4.074,671,3.119,678,2.089,679,2.655,681,1.834,773,2.675,976,4.049,977,4.686,988,3.809,990,2.675,992,3.006,993,2.219,994,2.13,1002,2.675,1004,3.489,1005,2.423,1006,3.22,1007,3.22,1008,3.22,1009,2.828,1010,3.006,1341,2.048,1392,3.603,1394,3.263,1396,2.423,1402,3.006,1403,3.006,1404,3.006,1405,2.423,1520,4.698,1521,8.418,1522,5.916,1523,5.916,1524,5.916,1525,5.182,1526,4.306,1527,3.489,1528,5.476,1529,3.848,1530,5.916,1531,3.848,1532,5.916,1533,3.848,1534,5.916,1535,4.393,1536,4.393,1537,3.489,1538,3.489,1539,4.393,1540,4.393,1541,5.182,1542,2.828,1543,4.393,1544,4.393]],["title/classes/ODataEnumTypeFieldParser.html",[226,0.311,1528,3.058]],["body/classes/ODataEnumTypeFieldParser.html",[1,2.303,3,0.11,4,0.096,5,0.11,6,0.117,8,0.07,9,0.276,10,0.181,14,0.226,15,0.125,16,0.578,17,0.012,18,1.303,19,0.485,22,0.127,33,1.423,42,2.777,44,2.147,47,3.72,48,1.689,58,0.173,85,1.263,122,1.14,132,0.797,157,2.432,170,1.977,171,1.944,172,1.698,175,1.249,188,1.593,191,2.761,200,2.258,201,2.015,202,1.944,212,0.163,216,0.006,217,0.008,218,0.006,220,1.302,222,0.415,224,0.956,226,0.458,228,0.301,230,1.326,235,0.419,236,1.86,287,2.09,342,4.079,347,3.698,350,3.698,482,4.509,510,2.455,511,1.11,666,2.455,671,3.243,672,2.694,677,3.479,679,2.09,697,3.698,993,3.479,994,2.258,1005,3.393,1017,2.694,1018,2.352,1037,3.414,1042,2.998,1341,2.171,1392,3.746,1394,3.393,1396,2.569,1405,2.569,1526,2.998,1528,5.049,1537,3.698,1538,3.698,1542,2.998,1545,6.853,1546,4.079,1547,4.079,1548,4.079,1549,3.414,1550,6.033,1551,4.079,1552,3.414,1553,3.414,1554,4.509,1555,4.079,1556,4.079,1557,4.079,1558,3.393,1559,3.187,1560,4.079,1561,4.079,1562,5.387,1563,4.079,1564,5.387,1565,4.079,1566,4.079,1567,2.352,1568,3.187,1569,3.187,1570,4.079,1571,4.079]],["title/classes/ODataEnumTypeParser.html",[226,0.311,1526,2.685]],["body/classes/ODataEnumTypeParser.html",[1,2.017,3,0.103,4,0.09,5,0.103,6,0.122,8,0.065,9,0.264,10,0.22,14,0.227,15,0.129,16,0.627,17,0.012,18,1.221,19,0.465,22,0.122,33,1.364,42,1.762,44,1.362,47,3.329,48,1.662,58,0.172,85,1.578,122,1.119,132,0.747,157,2.773,170,2.144,171,2.461,172,2.15,188,2.282,191,3.205,200,3.235,201,2.886,202,2.785,212,0.177,216,0.006,217,0.008,218,0.006,219,1.895,220,1.247,222,0.441,224,1.37,226,0.439,228,0.283,235,0.394,236,1.321,287,1.961,510,2.304,511,1.041,666,2.304,671,2.304,672,2.528,677,3.37,679,2.646,681,1.824,697,3.47,993,3.37,994,2.119,1005,3.251,1017,3.86,1018,3.37,1037,3.203,1042,2.813,1341,2.037,1394,2.41,1405,2.41,1526,3.795,1528,4.89,1533,3.827,1537,3.47,1538,3.47,1542,2.813,1545,7.164,1546,3.827,1547,3.827,1548,3.827,1549,3.203,1550,5.843,1551,3.827,1552,3.203,1553,3.203,1554,4.321,1555,3.827,1556,3.827,1557,3.827,1558,3.251,1559,2.99,1560,3.827,1561,3.827,1562,5.163,1563,3.827,1564,5.163,1565,3.827,1566,3.827,1567,2.207,1568,4.887,1569,2.99,1570,3.827,1571,3.827,1572,5.894,1573,4.369,1574,4.369,1575,4.369,1576,3.827,1577,3.827,1578,4.369]],["title/classes/ODataInMemoryCache.html",[226,0.311,1579,3.653]],["body/classes/ODataInMemoryCache.html",[3,0.105,4,0.092,5,0.105,6,0.108,8,0.067,9,0.268,10,0.244,14,0.191,15,0.127,16,0.562,17,0.012,18,1.351,19,0.472,20,2.383,22,0.092,27,2.016,38,1.426,58,0.171,66,1.471,98,1.631,122,0.651,154,1.606,158,1.024,173,2.007,174,3.119,175,1.933,176,2.007,212,0.219,216,0.006,217,0.008,218,0.006,219,1.924,220,1.267,221,3.156,222,0.46,224,1.701,226,0.333,228,0.289,235,0.403,240,1.154,283,3.228,289,2.179,726,4.469,736,2.466,766,4.484,784,4.428,852,5.293,913,5.432,915,4.389,916,5.493,917,4.754,918,5.724,919,4.754,920,4.754,921,4.754,922,5.724,923,3.905,924,3.646,926,3.06,928,3.278,930,3.278,932,4.619,934,3.278,936,3.551,938,3.278,939,3.854,941,3.278,943,4.619,950,2.466,1579,5.243,1580,4.471,1581,4.471,1582,3.916,1583,3.916,1584,4.471,1585,4.471,1586,3.916,1587,3.916,1588,3.916,1589,3.916,1590,3.916,1591,3.916,1592,3.916,1593,3.916,1594,3.916,1595,3.278,1596,3.551,1597,3.551,1598,3.551]],["title/classes/ODataInStorageCache.html",[226,0.311,1599,3.312]],["body/classes/ODataInStorageCache.html",[0,1.262,3,0.098,4,0.086,5,0.098,6,0.105,8,0.063,9,0.256,10,0.241,14,0.215,15,0.126,16,0.537,17,0.012,18,1.351,19,0.451,20,2.301,22,0.086,27,1.969,38,1.553,58,0.174,66,1.6,88,1.474,98,1.523,102,2.627,122,0.608,132,0.714,154,1.533,158,0.977,173,1.874,174,3.032,175,1.88,176,1.874,212,0.217,216,0.006,217,0.008,218,0.006,219,1.837,220,1.209,221,3.013,222,0.456,224,1.681,226,0.311,228,0.27,230,1.188,235,0.376,240,0.977,283,3.19,289,2.119,609,1.912,656,2.386,726,4.43,730,3.06,736,2.303,766,4.421,767,3.06,784,4.28,802,2.857,818,2.542,819,3.06,852,5.187,913,5.381,915,4.19,916,5.407,917,4.538,918,5.565,919,4.538,920,4.538,921,4.538,922,5.565,923,3.77,924,3.48,926,2.857,928,3.06,930,3.06,932,4.459,934,3.06,936,3.315,938,3.06,939,4.195,941,3.06,943,4.459,950,2.303,953,4.19,1582,3.657,1583,3.657,1586,3.657,1587,3.657,1588,3.657,1589,3.657,1590,3.657,1591,3.657,1592,3.657,1593,3.657,1594,3.657,1595,3.06,1596,3.315,1597,3.315,1598,3.315,1599,4.538,1600,3.657,1601,4.175,1602,4.175,1603,4.175,1604,3.315,1605,6.138,1606,3.657,1607,3.657,1608,3.657,1609,3.657,1610,3.657,1611,3.657,1612,3.657,1613,3.657,1614,3.657,1615,3.657]],["title/classes/ODataMeta.html",[226,0.311,1296,2.854]],["body/classes/ODataMeta.html",[3,0.087,4,0.077,5,0.087,6,0.121,8,0.056,9,0.315,10,0.207,14,0.186,15,0.12,17,0.012,19,0.415,22,0.138,27,1.413,29,2.279,33,1.218,36,1.157,44,1.908,58,0.138,59,2.989,65,1.55,66,1.334,68,2.595,85,1.604,88,1.311,102,2.835,106,1.447,122,1.266,132,1.139,154,2.059,157,2.352,158,1.047,159,1.55,212,0.162,216,0.005,217,0.007,218,0.005,219,1.693,220,1.115,222,0.437,224,1.257,226,0.496,228,0.24,235,0.334,289,2.271,453,3.208,511,0.885,609,1.089,646,1.876,649,1.731,656,2.555,678,1.86,744,3.208,747,2.048,799,1.958,842,3.25,868,1.958,1014,4.143,1069,1.958,1079,3.604,1081,2.661,1147,2.148,1150,2.148,1256,2.777,1295,2.722,1296,5.141,1297,3.861,1298,4.487,1299,4.487,1300,3.861,1301,2.722,1302,2.722,1306,5.32,1310,5.155,1312,2.722,1314,3.861,1318,3.861,1336,4.487,1337,2.722,1338,2.722,1339,4.487,1340,2.722,1341,1.731,1342,2.722,1343,2.722,1344,2.722,1345,3.861,1346,4.487,1347,2.722,1348,4.487,1349,2.722,1350,2.722,1351,3.391,1352,2.722,1353,2.722,1354,4.487,1355,3.861,1356,2.722,1357,2.722,1358,2.722,1359,2.722,1360,2.722,1361,2.722,1362,2.722,1363,2.722,1364,2.722,1365,3.861,1366,2.722,1367,2.722,1368,2.722,1369,2.722,1370,2.722,1371,2.722,1372,2.722,1373,2.722,1374,5.355,1375,3.861,1376,3.861,1377,2.722,1378,2.722,1379,2.722,1380,2.722,1381,2.722,1382,2.722,1383,5.355,1384,4.487,1385,2.722,1386,3.861,1387,2.722,1388,2.722,1389,2.722,1616,3.713,1617,3.713,1618,3.713,1619,3.713,1620,3.713,1621,3.713,1622,3.713,1623,3.713,1624,3.713,1625,3.713,1626,3.713,1627,3.713,1628,3.713,1629,3.713]],["title/classes/ODataMetadataResource.html",[226,0.311,1630,3.653]],["body/classes/ODataMetadataResource.html",[3,0.085,4,0.075,5,0.085,6,0.104,8,0.054,9,0.232,10,0.241,14,0.206,15,0.127,16,0.341,17,0.012,19,0.602,20,2.743,21,1.324,22,0.075,30,2.019,34,1.065,36,2.173,48,1.615,58,0.17,84,2.543,85,1.681,115,2.089,122,0.881,132,1.128,153,0.636,158,0.886,172,1.324,177,2.019,189,1.31,192,1.368,209,1.097,212,0.219,215,2.089,216,0.005,217,0.007,218,0.005,220,1.097,221,2.732,222,0.466,224,1.731,226,0.27,228,0.235,235,0.327,240,1.192,283,3.294,289,1.567,511,1.571,515,1.629,518,3.179,520,3.681,649,3.861,724,3.334,736,2.002,737,2.21,739,4.195,740,2.21,741,4.647,742,4.161,743,3.334,765,4.415,767,2.661,768,3.814,805,3.336,806,3.546,815,2.661,835,2.337,837,4.116,838,3.179,842,3.229,844,2.661,845,4.136,846,3.799,868,1.914,870,2.337,891,3.156,1018,2.618,1045,2.21,1081,2.618,1083,2.998,1094,3.497,1154,3.814,1232,3.799,1233,3.546,1234,3.799,1235,3.799,1236,4.431,1237,3.799,1238,4.431,1239,3.187,1241,2.883,1242,2.883,1243,2.21,1244,2.883,1247,4.431,1249,2.1,1250,2.883,1251,2.661,1252,4.244,1253,2.883,1254,3.156,1255,2.661,1256,2.732,1257,2.883,1258,2.883,1259,2.661,1260,2.883,1261,2.883,1262,2.883,1263,2.661,1264,2.883,1265,2.661,1266,2.883,1267,2.883,1268,2.661,1269,2.883,1270,2.661,1271,2.883,1272,2.661,1273,2.883,1274,2.883,1275,2.883,1276,2.883,1277,2.883,1278,2.883,1279,2.661,1630,5.774,1631,3.63,1632,3.63,1633,3.63,1634,3.63,1635,3.63,1636,3.63,1637,3.63,1638,3.63,1639,2.661,1640,3.63,1641,3.63]],["title/modules/ODataModule.html",[1642,3.312,1643,3.058]],["body/modules/ODataModule.html",[3,0.135,4,0.119,5,0.135,6,0.105,10,0.169,15,0.086,17,0.012,19,0.66,22,0.145,58,0.119,103,2.582,122,1.025,132,0.984,153,0.706,178,3.412,179,3.939,212,0.152,216,0.008,217,0.009,218,0.008,220,1.218,222,0.314,224,1.182,226,0.429,230,1.638,511,1.371,520,4.285,738,5.42,747,3.173,987,3.329,1145,3.937,1643,5.573,1644,4.569,1645,5.039,1646,7.601,1647,5.806,1648,5.753,1649,5.753,1650,5.753,1651,7.601,1652,7.036,1653,6.658,1654,7.036,1655,5.753,1656,7.601,1657,5.753,1658,5.039,1659,5.753,1660,5.039,1661,5.753,1662,7.036,1663,5.753,1664,5.753,1665,5.039,1666,5.753]],["title/classes/ODataParameterParser.html",[226,0.311,1021,3.312]],["body/classes/ODataParameterParser.html",[3,0.106,4,0.093,5,0.106,6,0.122,8,0.068,9,0.27,10,0.233,14,0.223,15,0.129,16,0.68,17,0.012,19,0.356,22,0.125,25,2.832,39,2.832,40,1.819,48,1.275,58,0.168,66,1.479,85,1.716,87,1.702,122,1.099,132,0.772,154,1.819,169,3.616,170,2.686,171,1.885,172,2.474,175,1.211,188,1.545,195,2.607,208,3.656,212,0.192,216,0.006,217,0.008,218,0.006,219,1.937,220,1.275,222,0.439,224,1.238,226,0.449,228,0.292,235,0.407,236,1.822,511,1.076,609,1.325,672,3.487,674,3.586,677,2.281,679,2.027,975,3.67,982,3.311,985,4.131,987,2.613,993,3.044,994,2.19,1002,4.407,1011,3.67,1016,3.956,1017,2.613,1018,3.427,1021,5.387,1027,3.586,1028,3.956,1030,5.528,1031,3.956,1032,2.907,1033,3.091,1034,3.956,1035,3.956,1036,3.311,1037,3.311,1038,5.279,1039,3.956,1040,5.279,1041,3.956,1042,2.907,1043,3.956,1044,3.956,1045,2.75,1046,3.956,1047,5.279,1048,3.956,1049,2.613,1050,2.613,1051,3.956,1052,3.956,1053,3.956,1054,3.956,1667,6.027,1668,4.516,1669,4.516,1670,4.516,1671,4.516,1672,4.516,1673,4.516]],["title/classes/ODataPathSegments.html",[226,0.311,739,2.413]],["body/classes/ODataPathSegments.html",[3,0.084,4,0.073,5,0.084,6,0.12,8,0.053,9,0.229,10,0.192,14,0.225,15,0.116,16,0.333,17,0.012,19,0.545,22,0.135,27,1.854,30,1.987,31,2.129,32,1.745,33,1.18,36,1.106,38,1.715,48,1.697,58,0.167,66,1.709,74,1.721,100,1.011,101,1.338,122,1.225,126,1.721,132,1.116,175,0.952,189,1.509,209,2.371,212,0.201,216,0.005,217,0.007,218,0.005,220,1.079,222,0.433,224,1.587,226,0.38,228,0.23,230,1.858,235,0.32,240,0.607,252,1.922,339,1.793,511,1.647,513,3.739,515,1.593,546,3.283,609,1.496,646,1.793,649,2.783,666,3.794,724,3.599,739,3.454,740,2.162,741,4.209,754,3.739,778,5.182,828,2.429,842,2.823,896,2.819,995,2.602,1061,4.05,1069,2.689,1239,3.441,1240,5.073,1249,2.951,1396,1.958,1498,2.429,1567,2.576,1674,5.488,1675,2.429,1676,4.376,1677,4.467,1678,6.303,1679,5.1,1680,4.467,1681,3.55,1682,5.182,1683,3.55,1684,3.739,1685,3.55,1686,4.467,1687,3.55,1688,3.55,1689,3.55,1690,3.55,1691,3.55,1692,3.55,1693,5.067,1694,2.819,1695,3.283,1696,2.602,1697,2.602,1698,2.162,1699,3.109,1700,2.819,1701,2.602,1702,4.467,1703,3.109,1704,4.467,1705,4.467,1706,5.716,1707,3.109,1708,4.467,1709,2.819,1710,5.067,1711,5.067,1712,2.602,1713,4.376,1714,3.109,1715,3.109,1716,4.467,1717,3.109,1718,3.109,1719,3.109,1720,3.109,1721,3.109,1722,4.467,1723,3.109,1724,3.109,1725,3.109,1726,3.109,1727,3.109,1728,3.109,1729,3.109,1730,3.109,1731,3.109,1732,3.109,1733,3.109,1734,4.467,1735,3.109,1736,3.109,1737,3.109,1738,2.429,1739,3.109,1740,4.467,1741,3.109,1742,4.467,1743,3.109,1744,4.467,1745,3.109,1746,3.109,1747,3.109,1748,4.467,1749,3.109,1750,3.109,1751,2.285]],["title/classes/ODataPropertyMeta.html",[226,0.311,1351,2.685]],["body/classes/ODataPropertyMeta.html",[3,0.087,4,0.076,5,0.087,6,0.1,8,0.055,9,0.274,10,0.207,14,0.186,15,0.12,17,0.012,19,0.414,22,0.137,27,1.41,29,2.274,33,1.216,36,1.154,44,1.905,58,0.137,59,2.359,65,1.546,66,1.332,68,2.592,85,1.603,88,1.308,102,3.026,106,1.443,122,1.266,132,1.138,154,2.057,157,2.349,158,1.138,159,1.546,212,0.162,216,0.005,217,0.007,218,0.005,220,1.112,222,0.432,224,1.443,226,0.496,228,0.239,283,2.925,289,2.27,453,3.201,511,0.882,609,1.086,646,1.871,649,1.726,656,2.551,678,1.856,744,3.201,747,2.042,799,1.952,842,3.423,868,1.952,1014,4.14,1069,1.952,1079,2.534,1081,2.655,1147,2.143,1150,2.143,1256,2.772,1295,2.715,1296,5.617,1297,3.854,1298,4.48,1299,4.48,1300,3.854,1301,2.715,1302,2.715,1304,2.941,1305,2.941,1306,5.318,1307,2.941,1308,2.941,1310,5.35,1312,2.715,1314,3.854,1316,2.941,1317,2.941,1318,3.854,1319,2.941,1336,2.715,1337,2.715,1338,2.715,1339,2.715,1340,2.715,1341,1.726,1342,2.715,1343,2.715,1344,2.715,1345,3.854,1346,4.48,1347,2.715,1348,4.48,1349,2.715,1350,2.715,1351,4.282,1352,2.715,1353,2.715,1354,4.48,1355,3.854,1356,2.715,1357,2.715,1358,2.715,1359,2.715,1360,2.715,1361,2.715,1362,2.715,1363,2.715,1364,2.715,1365,3.854,1366,2.715,1367,2.715,1368,2.715,1369,2.715,1370,2.715,1371,2.715,1372,2.715,1373,2.715,1374,5.35,1375,3.854,1376,3.854,1377,2.715,1378,2.715,1379,2.715,1380,2.715,1381,2.715,1382,2.715,1383,5.35,1384,4.48,1385,2.715,1386,3.854,1387,2.715,1388,2.715,1389,2.715,1411,3.243,1752,3.703,1753,3.703,1754,3.703]],["title/classes/ODataQueryOptions.html",[226,0.311,1243,2.54]],["body/classes/ODataQueryOptions.html",[3,0.077,4,0.067,5,0.077,6,0.119,8,0.049,9,0.215,10,0.206,14,0.217,15,0.119,16,0.45,17,0.012,18,0.557,19,0.378,22,0.117,27,1.873,38,1.142,48,1.7,58,0.17,66,1.366,85,1.553,87,2.721,100,1.618,101,2.142,106,1.867,122,1.201,132,0.82,154,1.524,175,1.524,177,2.215,189,1.765,209,1.895,212,0.191,215,2.291,216,0.004,217,0.006,218,0.004,219,2.014,220,1.014,222,0.43,224,1.579,226,0.357,228,0.211,235,0.293,240,0.82,339,1.645,511,0.776,655,2.587,662,2.587,724,3.457,771,2.587,799,1.717,812,2.587,842,2.711,891,1.984,923,2.772,1005,2.643,1014,3.135,1049,2.772,1050,3.288,1070,2.388,1135,2.587,1147,2.772,1150,2.772,1239,3.521,1243,3.461,1249,3.288,1282,5.935,1286,2.587,1558,3.135,1639,4.896,1693,2.388,1695,2.097,1697,2.388,1698,1.984,1738,2.229,1751,2.097,1755,6.326,1756,2.587,1757,6.117,1758,4.791,1759,4.978,1760,4.197,1761,4.791,1762,3.257,1763,3.257,1764,3.257,1765,4.197,1766,3.257,1767,3.257,1768,3.257,1769,4.197,1770,3.257,1771,3.805,1772,3.257,1773,3.257,1774,3.257,1775,3.257,1776,3.257,1777,2.587,1778,2.853,1779,2.918,1780,3.889,1781,3.805,1782,3.512,1783,3.279,1784,2.918,1785,3.805,1786,4.941,1787,2.853,1788,2.853,1789,2.853,1790,2.853,1791,2.853,1792,2.853,1793,2.853,1794,2.853,1795,2.853,1796,2.853,1797,2.853,1798,2.853,1799,2.853,1800,2.853,1801,2.853,1802,2.853,1803,2.853,1804,2.853,1805,4.978,1806,2.853,1807,2.587,1808,2.853,1809,2.853,1810,2.853,1811,2.853,1812,2.853,1813,2.853,1814,4.197,1815,2.853,1816,2.853,1817,2.853,1818,2.853,1819,2.853,1820,2.853,1821,2.853,1822,2.587,1823,2.587,1824,3.512,1825,2.853,1826,2.853,1827,2.853,1828,6.977,1829,2.853,1830,2.388,1831,2.853,1832,2.229,1833,2.853,1834,4.978,1835,2.853,1836,2.853,1837,2.853,1838,2.853,1839,2.853,1840,2.853,1841,4.197,1842,4.197,1843,2.853,1844,2.853,1845,2.853,1846,2.853,1847,2.853,1848,2.853,1849,2.853,1850,6.622,1851,2.853,1852,2.853,1853,2.853,1854,2.853,1855,4.978,1856,2.853,1857,2.853,1858,4.197,1859,4.197,1860,2.853,1861,2.853,1862,2.853,1863,2.853,1864,2.853,1865,2.853,1866,2.853,1867,2.853,1868,2.853,1869,2.388]],["title/classes/ODataRequest.html",[226,0.311,726,2.199]],["body/classes/ODataRequest.html",[3,0.087,4,0.076,5,0.087,6,0.125,8,0.055,9,0.235,10,0.221,14,0.22,15,0.124,16,0.685,17,0.012,19,0.554,22,0.076,24,4.059,27,1.637,30,1.44,58,0.108,66,1.531,68,1.44,84,2.56,87,2.749,88,2.479,91,2.983,98,2.947,99,2.641,100,1.052,114,3.274,122,0.968,161,1.792,162,2.983,209,2.268,212,0.098,216,0.005,217,0.007,218,0.005,219,1.687,221,1.949,222,0.453,226,0.275,228,0.239,235,0.333,515,1.659,609,1.95,656,2.549,666,3.219,678,1.854,698,2.71,706,3.237,708,2.935,710,3.237,712,3.237,726,2.768,742,3.223,743,4.023,744,4.048,747,2.039,758,4.598,765,3.846,802,4.178,805,2.38,815,4.476,818,4.048,829,4.178,854,2.53,858,4.848,860,5.278,868,3.504,869,2.935,870,4.279,924,3.197,926,2.53,995,3.849,1567,3.084,1698,2.251,1709,2.935,1870,3.696,1871,5.822,1872,6.105,1873,6.105,1874,5.25,1875,3.696,1876,3.696,1877,3.696,1878,3.696,1879,3.696,1880,3.696,1881,6.646,1882,3.696,1883,3.696,1884,3.696,1885,4.848,1886,4.848,1887,3.696,1888,3.696,1889,3.696,1890,3.696,1891,3.696,1892,3.696,1893,3.696,1894,3.696,1895,3.696,1896,6.105,1897,2.935,1898,3.696,1899,3.696,1900,3.237,1901,3.237,1902,3.237,1903,3.696,1904,3.696,1905,3.696,1906,3.696,1907,3.696,1908,3.696,1909,3.696,1910,5.25,1911,3.696,1912,3.696,1913,3.696,1914,5.25,1915,5.25,1916,3.696,1917,5.25,1918,5.25,1919,3.696,1920,3.696,1921,3.696,1922,3.696,1923,3.696,1924,3.696,1925,3.696,1926,3.696,1927,3.696,1928,3.696,1929,3.696,1930,3.696,1931,3.696,1932,3.696,1933,3.696,1934,3.696,1935,3.696,1936,3.696,1937,3.696,1938,3.696,1939,3.696,1940,3.696,1941,3.696,1942,3.696,1943,3.696,1944,3.696]],["title/classes/ODataResource.html",[226,0.311,742,2.022]],["body/classes/ODataResource.html",[3,0.057,4,0.05,5,0.057,6,0.121,8,0.036,9,0.172,10,0.217,14,0.211,15,0.124,16,0.612,17,0.012,19,0.598,20,2.643,21,0.885,22,0.05,33,1.562,34,2.038,36,1.94,39,1.598,48,1.676,58,0.155,66,1.515,68,2.631,84,2.646,85,1.663,87,2.455,88,0.857,91,1.09,100,1.09,101,0.915,115,2.362,122,1.185,132,1.002,153,0.582,162,1.09,170,1.883,172,1.396,184,1.09,189,0.968,192,2.545,204,1.132,206,1.785,209,1.882,212,0.201,216,0.003,217,0.005,218,0.003,220,0.81,221,2.019,222,0.439,224,1.626,226,0.181,228,0.157,235,0.345,240,1.002,289,1.627,511,1.609,515,1.09,609,1.911,649,3.791,656,1.598,672,3.114,698,1.78,724,2.969,726,2.019,736,1.339,737,1.478,739,3.769,741,3.968,742,3.159,743,3.593,765,3.601,766,3.433,768,3.769,784,1.339,805,2.465,806,2.62,815,5.094,818,2.887,828,3.683,829,1.661,834,2.126,835,1.563,837,1.928,842,2.329,854,4.009,860,1.928,867,2.126,868,2.5,870,4.473,871,2.126,872,2.126,891,2.332,1018,2.395,1032,1.563,1055,3.476,1081,2.719,1083,3.114,1094,3.769,1144,3.245,1154,3.906,1196,5.451,1232,3.476,1233,3.245,1234,2.807,1235,2.807,1236,3.946,1237,2.807,1238,3.946,1239,2.838,1243,3.968,1247,2.807,1249,2.215,1251,1.78,1252,4.007,1254,3.278,1255,1.78,1256,2.838,1259,2.807,1263,2.807,1265,2.807,1268,2.807,1270,2.807,1272,1.78,1279,2.807,1288,2.126,1567,3.51,1695,1.563,1696,2.807,1701,1.78,1777,1.928,1807,1.928,1871,2.126,1885,5.362,1886,5.362,1945,2.428,1946,3.829,1947,2.428,1948,2.428,1949,2.428,1950,2.428,1951,2.428,1952,2.428,1953,2.428,1954,2.428,1955,2.428,1956,2.428,1957,2.428,1958,2.428,1959,2.428,1960,2.428,1961,2.428,1962,2.428,1963,2.428,1964,2.428,1965,2.428,1966,2.428,1967,2.428,1968,2.428,1969,2.428,1970,2.428,1971,2.428,1972,2.428,1973,2.465,1974,2.428,1975,2.428,1976,2.428,1977,3.829,1978,2.428,1979,2.428,1980,2.428,1981,2.428,1982,2.428,1983,1.78,1984,2.428,1985,2.428,1986,2.428,1987,2.428,1988,2.428,1989,2.428,1990,2.428,1991,2.428,1992,2.428,1993,2.428,1994,2.428,1995,2.428,1996,2.428,1997,2.428,1998,2.428,1999,3.829,2000,2.428,2001,2.428,2002,2.428,2003,2.428,2004,2.428,2005,2.428,2006,2.428,2007,2.428,2008,3.829,2009,1.928,2010,2.428,2011,2.428,2012,2.428,2013,2.428,2014,2.428,2015,2.428,2016,2.126,2017,2.428,2018,2.428,2019,2.428,2020,5.382,2021,2.428,2022,3.829,2023,2.428,2024,2.428,2025,2.428,2026,2.428,2027,2.428,2028,2.428,2029,5.857,2030,2.428,2031,2.428,2032,2.428,2033,2.428,2034,2.428,2035,2.126,2036,2.428,2037,2.428,2038,4.741,2039,2.428,2040,2.428,2041,2.428]],["title/classes/ODataResponse.html",[226,0.311,766,2.301]],["body/classes/ODataResponse.html",[3,0.071,4,0.062,5,0.071,6,0.12,8,0.045,9,0.202,10,0.19,14,0.203,15,0.126,17,0.012,18,0.771,19,0.603,22,0.062,24,3.16,27,2.103,33,1.712,34,2.171,36,0.936,38,1.075,48,1.659,58,0.145,66,1.613,84,2.564,85,1.444,86,1.299,88,2.613,100,1.284,115,1.211,122,1.115,132,1.203,145,3.129,146,1.456,147,1.456,154,1.984,158,0.771,170,2.378,174,3.261,192,2.788,212,0.186,216,0.004,217,0.006,218,0.004,219,1.935,220,0.954,222,0.432,224,1.52,226,0.224,228,0.194,235,0.27,511,1.291,512,2.63,515,1.348,520,4.128,609,2.389,648,3.306,656,3.38,678,1.593,708,4.301,726,3.707,730,4.969,742,2.92,743,3.878,744,2.747,746,5.937,747,1.656,749,2.63,751,2.63,765,3.484,766,3.739,784,2.987,802,4.639,809,1.933,818,4.128,819,4.969,852,3.086,853,3.95,854,2.055,869,5.744,897,3.581,924,2.747,926,2.055,990,1.829,1014,3.321,1017,2.609,1032,1.933,1033,2.055,1049,1.737,1050,1.737,1081,1.517,1142,4.301,1154,4.068,1239,3.175,1256,1.583,1351,1.933,1558,1.656,1567,2.736,1595,2.201,1897,3.581,1900,2.63,1901,2.63,1902,2.63,1973,2.903,2035,2.63,2042,3.002,2043,5.416,2044,4.51,2045,4.51,2046,4.51,2047,4.782,2048,3.002,2049,3.002,2050,4.51,2051,3.002,2052,3.002,2053,3.002,2054,4.744,2055,4.51,2056,3.002,2057,4.51,2058,3.002,2059,3.581,2060,3.002,2061,3.002,2062,4.744,2063,3.002,2064,3.002,2065,3.002,2066,3.002,2067,3.002,2068,3.002,2069,2.63,2070,4.51,2071,3.002,2072,3.002,2073,3.002,2074,3.002,2075,3.002,2076,3.002,2077,3.002,2078,3.002,2079,3.002,2080,3.002,2081,3.002,2082,3.002,2083,3.002,2084,3.002,2085,3.002,2086,5.416,2087,3.002,2088,3.002,2089,3.002,2090,2.63,2091,3.002,2092,3.002,2093,3.002,2094,3.002,2095,3.002,2096,3.002,2097,3.002,2098,3.002,2099,3.95,2100,3.002,2101,3.002,2102,2.384,2103,3.002,2104,2.384,2105,3.002,2106,2.384,2107,3.002,2108,3.581,2109,6.021,2110,5.416,2111,3.002,2112,5.416,2113,6.021,2114,6.021,2115,3.002,2116,3.002]],["title/classes/ODataResponseOptions.html",[226,0.311,2047,3.312]],["body/classes/ODataResponseOptions.html",[3,0.102,4,0.09,5,0.102,6,0.126,8,0.065,9,0.263,10,0.25,14,0.214,15,0.123,16,0.721,17,0.012,18,1.005,19,0.525,22,0.09,30,2.594,48,1.244,58,0.147,85,1.464,86,3.084,89,3.228,90,3.457,98,2.6,100,1.673,122,0.856,132,0.744,144,3.2,148,3.323,152,2.85,153,0.817,154,1.785,155,2.638,156,3.228,157,2.351,159,2.779,166,3.228,167,3.362,168,3.761,175,1.785,212,0.189,216,0.006,217,0.008,218,0.006,220,1.244,222,0.456,224,1.464,226,0.324,228,0.281,235,0.392,511,1.037,514,3.455,515,1.953,609,1.276,615,4.667,677,2.969,678,2.076,679,2.638,681,1.816,692,3.81,695,5.148,696,3.81,699,3.81,700,5.148,701,3.81,702,3.81,703,3.81,704,5.148,705,3.81,718,3.81,828,4.555,842,3.084,1197,3.784,1498,2.977,1558,3.932,1701,3.189,1824,3.189,2047,5.286,2069,3.81,2090,3.81,2099,3.81,2117,4.35,2118,5.877,2119,5.877,2120,5.877,2121,5.877,2122,4.35,2123,4.35,2124,4.35,2125,4.35,2126,4.35,2127,4.35,2128,4.35,2129,5.877,2130,4.35,2131,5.877,2132,4.35,2133,5.877,2134,4.35,2135,4.35,2136,5.877,2137,5.877,2138,4.35,2139,4.35,2140,4.35,2141,4.35,2142,4.35,2143,4.35,2144,5.83,2145,4.35,2146,4.35,2147,4.35,2148,4.35,2149,4.35,2150,4.35,2151,4.35,2152,4.35,2153,4.35,2154,4.35,2155,4.35,2156,4.35,2157,4.35]],["title/classes/ODataSchema.html",[226,0.311,977,2.54]],["body/classes/ODataSchema.html",[1,2.006,3,0.087,4,0.076,5,0.087,6,0.126,8,0.055,9,0.235,10,0.233,14,0.223,15,0.129,16,0.346,17,0.012,19,0.604,22,0.076,34,1.535,44,1.898,58,0.158,66,0.802,84,2.793,85,1.251,122,1.165,132,1.199,153,0.991,170,1.682,175,1.403,177,1.434,186,3.216,188,2.083,189,1.539,190,3.076,192,2.5,194,3.54,195,2.635,196,3.076,198,2.839,212,0.203,215,1.483,216,0.005,217,0.007,218,0.005,219,1.682,220,1.107,222,0.457,224,1.539,226,0.274,228,0.238,230,1.047,235,0.331,286,1.94,325,2.369,339,1.859,470,4.156,511,0.877,667,3.709,671,2.759,678,1.848,679,2.349,681,2.926,765,4.214,854,2.518,973,4.836,975,4.039,977,3.187,985,3.187,987,2.129,990,2.241,994,1.784,1011,2.241,1254,2.241,1341,1.715,1390,4.836,1392,3.187,1393,3.836,1394,2.886,1396,2.029,1400,4.583,1402,2.518,1403,2.518,1404,2.518,1405,2.029,1491,4.583,1520,4.836,1559,4.796,1676,2.697,2016,3.223,2158,3.679,2159,5.233,2160,5.233,2161,5.233,2162,5.233,2163,5.233,2164,5.233,2165,3.679,2166,3.679,2167,3.679,2168,3.679,2169,4.836,2170,3.679,2171,3.679,2172,3.679,2173,3.679,2174,3.679,2175,5.233,2176,3.679,2177,5.233,2178,3.679,2179,5.233,2180,3.679,2181,5.233,2182,3.679,2183,5.233,2184,3.679,2185,3.679,2186,3.679,2187,3.679,2188,3.679,2189,2.922,2190,3.679,2191,4.156,2192,3.679,2193,3.679,2194,3.679,2195,3.679,2196,3.679,2197,3.679,2198,3.223,2199,5.233,2200,3.679,2201,3.679,2202,3.679,2203,5.233,2204,3.679,2205,3.679,2206,3.679,2207,3.679,2208,3.679,2209,5.233,2210,3.679,2211,3.679,2212,5.233,2213,3.679,2214,3.679,2215,3.679,2216,3.679,2217,3.679,2218,3.679,2219,3.679,2220,3.679,2221,6.633,2222,3.679,2223,3.679,2224,3.679,2225,3.679,2226,3.679,2227,3.679,2228,3.679]],["title/injectables/ODataServiceFactory.html",[1647,3.058,2229,3.653]],["body/injectables/ODataServiceFactory.html",[3,0.131,4,0.115,5,0.131,6,0.117,8,0.083,10,0.221,14,0.228,15,0.121,17,0.012,19,0.617,22,0.115,27,1.85,31,3.128,32,2.36,34,1.634,58,0.155,103,3.363,122,1.005,132,1.18,158,1.18,209,2.368,212,0.213,216,0.007,217,0.009,218,0.007,220,1.46,222,0.409,224,1.417,226,0.558,235,0.502,240,1.18,325,3.586,738,5.359,1145,3.812,1434,4.879,1435,7.357,1446,4.879,1460,6.219,1647,5.057,2229,6.042,2230,4.879,2231,5.57,2232,5.57,2233,6.898,2234,5.57,2235,6.898,2236,5.57,2237,6.219,2238,6.898]],["title/classes/ODataSingletonService.html",[226,0.311,2237,3.312]],["body/classes/ODataSingletonService.html",[3,0.129,4,0.114,5,0.129,6,0.117,8,0.082,10,0.219,15,0.12,17,0.012,19,0.587,22,0.114,23,3.07,34,2.432,38,1.309,48,1.447,58,0.154,122,1.085,153,1.044,158,1.17,212,0.212,214,2.466,216,0.007,217,0.009,218,0.007,220,1.447,222,0.437,224,1.601,226,0.409,228,0.355,240,0.94,283,2.665,289,2.068,678,2.415,681,2.294,742,2.664,950,3.031,1068,5.713,1073,4.028,1083,4.921,1144,3.76,1431,5.877,1437,5.432,1439,4.364,1445,4.364,1447,4.364,1448,4.813,1450,4.364,1484,4.813,1485,4.813,1495,4.813,2237,5.432,2239,5.495,2240,7.447,2241,5.495,2242,5.495,2243,7.447,2244,5.495,2245,5.495,2246,5.495]],["title/classes/ODataStructuredType.html",[226,0.311,2169,3.312]],["body/classes/ODataStructuredType.html",[1,1.979,3,0.084,4,0.074,5,0.084,6,0.125,8,0.053,9,0.23,10,0.238,14,0.191,15,0.129,16,0.698,17,0.012,19,0.516,22,0.074,25,2.732,36,1.867,39,2.501,44,1.867,48,1.385,58,0.169,66,1.306,68,1.996,85,1.344,100,1.458,122,1.127,132,0.876,170,2.227,175,1.374,184,1.603,193,2.937,202,3.01,206,2.793,207,2.484,212,0.208,216,0.005,217,0.007,218,0.005,219,2.523,220,1.084,222,0.453,224,1.589,226,0.266,228,0.231,230,1.017,235,0.322,287,1.603,337,2.837,340,2.618,341,4.487,481,2.837,482,2.618,483,2.837,510,4.006,511,0.851,609,1.757,667,3.648,671,2.701,678,1.809,679,2.299,681,1.491,773,2.175,975,3.12,976,3.506,977,4.391,985,3.12,987,2.964,988,3.298,990,2.175,992,2.444,993,1.804,994,1.732,1002,3.12,1004,2.837,1005,2.826,1006,2.618,1007,2.618,1008,2.618,1009,2.299,1010,2.444,1011,2.175,1012,3.129,1013,3.129,1014,1.97,1015,3.129,1049,2.067,1050,2.067,1094,3.466,1197,4.642,1252,3.298,1341,1.665,1392,3.12,1394,2.826,1396,1.97,1402,2.444,1403,2.444,1404,2.444,1405,1.97,1525,3.129,1527,2.837,1531,3.129,1541,3.129,1542,3.298,1568,3.506,1577,3.129,1639,4.797,1822,2.837,1823,2.837,1824,3.756,1973,4.213,1983,4.797,2144,3.129,2169,4.068,2247,8.344,2248,5.197,2249,5.123,2250,5.123,2251,4.487,2252,3.572,2253,5.123,2254,7.211,2255,7.211,2256,4.391,2257,5.123,2258,3.572,2259,3.129,2260,5.123,2261,3.572,2262,5.99,2263,4.068,2264,3.572,2265,4.068,2266,4.797,2267,3.572,2268,3.572,2269,3.572,2270,2.837,2271,3.572,2272,3.572,2273,3.572,2274,4.757,2275,3.572,2276,3.572,2277,2.837,2278,3.572,2279,3.572,2280,3.572,2281,3.572,2282,3.572,2283,3.572,2284,3.572,2285,3.572,2286,3.572,2287,3.572,2288,3.572,2289,2.837]],["title/classes/ODataStructuredTypeFieldParser.html",[226,0.311,2256,3.058]],["body/classes/ODataStructuredTypeFieldParser.html",[1,1.604,3,0.047,4,0.041,5,0.047,6,0.122,8,0.03,9,0.147,10,0.228,14,0.209,15,0.127,16,0.697,17,0.012,18,1.029,19,0.328,22,0.099,25,2.006,26,2.015,27,0.877,35,2.805,36,1.498,37,1.148,38,1.549,39,1.735,40,1.115,41,1.735,42,2.763,43,1.148,44,1.296,45,1.148,46,1.938,48,1.72,58,0.156,65,0.833,66,1.701,85,1.68,100,1.713,122,1.192,131,1.525,132,0.711,154,1.744,157,2.696,170,2.454,171,1.735,172,1.516,175,0.877,188,1.422,189,1.051,193,1.468,202,2.006,204,0.931,212,0.172,216,0.003,217,0.004,218,0.003,219,1.051,220,0.692,222,0.442,224,1.505,226,0.244,228,0.129,230,0.568,235,0.18,236,0.989,286,2.534,287,0.896,335,1.585,336,2.865,337,1.585,339,2.679,510,3.864,511,0.779,536,1.585,609,1.963,646,1.652,648,2.398,656,2.006,663,1.585,666,3.004,671,1.725,672,3.481,677,2.1,679,0.896,773,1.216,776,2.598,799,1.052,809,4.043,975,1.992,985,2.531,987,1.155,988,1.285,993,2.428,994,0.968,1002,4.26,1005,1.101,1009,1.285,1011,1.992,1017,3.069,1018,2.679,1030,3.523,1032,2.106,1033,1.366,1036,1.463,1042,1.285,1045,2.531,1049,2.781,1050,3.069,1197,1.285,1239,1.725,1306,2.106,1341,0.931,1392,1.992,1394,1.804,1396,1.101,1405,1.101,1526,3.094,1527,1.585,1529,1.748,1542,4.503,1549,1.463,1552,3.523,1553,1.463,1554,4.411,1558,2.926,1559,1.366,1567,2.1,1568,2.239,1569,2.239,1576,1.748,1684,1.463,1698,1.216,1710,3.888,1711,3.888,1712,1.463,1713,3.047,1779,1.216,1784,1.992,1786,1.366,1830,1.463,1832,2.239,1869,2.398,1973,4.954,1983,3.523,2009,2.598,2059,2.598,2102,2.598,2104,2.598,2106,2.598,2108,2.598,2189,1.585,2191,2.598,2248,1.585,2256,4.411,2259,1.748,2263,1.585,2265,3.301,2266,3.888,2270,2.598,2274,3.301,2277,2.598,2289,1.585,2290,6.455,2291,4.646,2292,4.21,2293,4.21,2294,4.21,2295,4.21,2296,3.271,2297,1.996,2298,1.996,2299,1.996,2300,1.996,2301,1.996,2302,1.996,2303,1.996,2304,1.996,2305,1.996,2306,1.996,2307,1.996,2308,1.996,2309,1.996,2310,1.996,2311,1.996,2312,1.996,2313,1.996,2314,2.865,2315,1.996,2316,1.996,2317,1.996,2318,2.865,2319,1.996,2320,1.996,2321,2.598,2322,2.598,2323,2.598,2324,3.301,2325,2.865,2326,4.646,2327,1.748,2328,3.64,2329,1.748,2330,1.748,2331,2.865,2332,2.865,2333,2.865,2334,2.865,2335,2.865,2336,1.748,2337,1.748,2338,1.748,2339,1.748,2340,1.748,2341,1.748,2342,2.865,2343,1.748,2344,1.748,2345,1.748,2346,2.865,2347,1.748,2348,2.865,2349,1.748,2350,1.748,2351,2.865,2352,1.748,2353,1.748,2354,1.748,2355,1.748,2356,2.865,2357,2.865,2358,2.865,2359,2.865,2360,2.865,2361,1.748,2362,4.99,2363,3.64,2364,1.748,2365,1.748,2366,1.748,2367,1.748,2368,1.748,2369,1.748,2370,1.748,2371,1.748,2372,1.748,2373,1.748,2374,1.748,2375,1.748,2376,1.748,2377,1.748,2378,1.748,2379,1.748,2380,1.748,2381,1.748,2382,1.748,2383,1.748,2384,1.748,2385,1.748,2386,2.865,2387,1.748,2388,1.748,2389,2.865,2390,1.748,2391,1.748,2392,1.748,2393,2.865,2394,1.748,2395,4.99,2396,1.748,2397,3.64,2398,2.865,2399,1.748,2400,1.748,2401,4.21,2402,1.748,2403,1.748,2404,1.748,2405,1.748,2406,1.748,2407,1.748,2408,1.748,2409,1.748,2410,1.748,2411,4.646,2412,1.748,2413,1.748,2414,1.748,2415,1.748,2416,1.748,2417,2.865,2418,1.748,2419,1.748,2420,1.748,2421,1.748,2422,1.748,2423,1.748,2424,1.748,2425,1.748,2426,3.64,2427,1.748,2428,2.865,2429,1.748,2430,1.748,2431,1.748,2432,1.748,2433,1.748,2434,1.748,2435,1.748,2436,1.748,2437,1.748,2438,1.748,2439,1.748,2440,1.748,2441,1.748,2442,1.748,2443,1.748,2444,1.748,2445,1.748,2446,1.748,2447,2.865,2448,2.865,2449,1.748,2450,1.748,2451,1.748]],["title/classes/ODataStructuredTypeParser.html",[226,0.311,1973,2.685]],["body/classes/ODataStructuredTypeParser.html",[1,1.297,3,0.049,4,0.043,5,0.049,6,0.117,8,0.031,9,0.152,10,0.221,14,0.217,15,0.126,16,0.638,17,0.012,18,0.845,19,0.338,22,0.102,25,2.431,26,2.08,27,0.911,35,2.303,36,1.059,37,0.578,38,1.462,39,0.873,40,0.561,41,0.873,42,2.474,43,0.578,44,0.652,45,0.578,46,0.975,48,1.699,58,0.159,65,0.873,66,1.734,85,1.668,100,1.747,122,1.199,131,1.584,132,0.734,154,1.151,157,2.617,170,2.382,171,1.791,172,1.565,175,1.151,188,2.099,189,1.551,193,2.217,202,2.431,204,2,212,0.18,216,0.003,217,0.004,218,0.003,219,1.379,220,0.719,222,0.423,224,1.456,226,0.253,228,0.135,230,0.967,235,0.188,236,0.632,240,0.358,286,1.102,287,0.938,339,1.716,510,3.907,511,0.809,536,1.66,609,1.993,646,1.716,656,2.062,663,3.407,666,3.07,671,1.102,672,3.55,677,2.167,679,1.525,681,0.873,773,1.273,776,2.697,799,1.102,809,4.116,975,2.069,976,2.324,985,2.613,987,1.209,988,2.187,993,2.496,994,1.014,1002,4.316,1005,1.153,1009,1.346,1011,2.069,1017,3.144,1018,2.745,1030,3.622,1032,2.187,1033,1.43,1036,1.532,1042,1.346,1045,2.613,1049,2.858,1050,3.144,1094,1.209,1197,1.346,1306,2.187,1341,0.975,1394,1.153,1396,1.873,1405,1.153,1526,3.18,1542,4.563,1549,1.532,1552,3.622,1553,1.532,1554,4.498,1558,2.997,1559,1.43,1567,2.167,1568,2.324,1569,2.324,1676,2.49,1684,2.49,1698,1.273,1710,3.984,1711,3.984,1712,1.532,1713,3.145,1779,1.273,1784,2.069,1786,1.43,1830,1.532,1832,2.324,1869,2.49,1973,5.032,1983,3.622,2009,2.697,2059,1.66,2102,2.697,2104,2.697,2106,2.697,2108,2.697,2189,1.66,2191,2.697,2248,3.923,2251,2.975,2256,4.498,2263,2.697,2265,3.407,2266,3.145,2270,2.697,2274,4.316,2277,2.697,2289,1.66,2290,6.207,2291,4.76,2292,1.831,2293,1.831,2294,1.831,2295,1.831,2314,1.831,2318,1.831,2321,2.697,2322,2.697,2323,2.697,2324,4.316,2325,2.975,2326,4.76,2327,1.831,2328,3.758,2329,1.831,2330,1.831,2331,2.975,2332,2.975,2333,2.975,2334,2.975,2335,2.975,2336,1.831,2337,1.831,2338,1.831,2339,1.831,2340,1.831,2341,1.831,2342,2.975,2343,1.831,2344,1.831,2345,1.831,2346,2.975,2347,1.831,2348,2.975,2349,1.831,2350,1.831,2351,2.975,2352,1.831,2353,1.831,2354,1.831,2355,1.831,2356,2.975,2357,2.975,2358,2.975,2359,2.975,2360,2.975,2361,1.831,2362,5.1,2363,3.758,2364,1.831,2365,1.831,2366,1.831,2367,1.831,2368,1.831,2369,1.831,2370,1.831,2371,1.831,2372,1.831,2373,1.831,2374,1.831,2375,1.831,2376,1.831,2377,1.831,2378,1.831,2379,1.831,2380,1.831,2381,1.831,2382,1.831,2383,1.831,2384,1.831,2385,1.831,2386,2.975,2387,1.831,2388,1.831,2389,2.975,2390,1.831,2391,1.831,2392,1.831,2393,2.975,2394,1.831,2395,5.1,2396,1.831,2397,3.758,2398,2.975,2399,1.831,2400,1.831,2401,4.327,2402,1.831,2403,1.831,2404,1.831,2405,1.831,2406,1.831,2407,1.831,2408,1.831,2409,1.831,2410,1.831,2411,4.76,2412,1.831,2413,1.831,2414,1.831,2415,1.831,2416,1.831,2417,2.975,2418,1.831,2419,1.831,2420,1.831,2421,1.831,2422,1.831,2423,2.975,2424,1.831,2425,1.831,2426,5.1,2427,1.831,2428,2.975,2429,1.831,2430,1.831,2431,1.831,2432,1.831,2433,1.831,2434,1.831,2435,1.831,2436,1.831,2437,1.831,2438,1.831,2439,1.831,2440,1.831,2441,1.831,2442,1.831,2443,1.831,2444,2.975,2445,1.831,2446,1.831,2447,2.975,2448,2.975,2449,1.831,2450,1.831,2451,1.831,2452,3.397,2453,3.397,2454,3.397,2455,2.09,2456,2.09,2457,2.09,2458,2.09,2459,2.09,2460,2.09,2461,2.09,2462,2.09,2463,2.09,2464,2.09,2465,2.09,2466,2.09,2467,2.09,2468,2.09,2469,2.09,2470,2.09,2471,2.09,2472,2.09]],["title/classes/ODataValueResource.html",[226,0.311,2473,3.653]],["body/classes/ODataValueResource.html",[3,0.081,4,0.071,5,0.081,6,0.107,8,0.051,9,0.223,10,0.24,14,0.211,15,0.128,16,0.322,17,0.012,19,0.579,20,2.84,21,1.252,22,0.071,34,1.007,36,2.126,48,1.668,58,0.17,66,1.277,84,2.343,85,1.736,101,1.293,115,2.007,122,0.994,132,0.851,153,0.611,158,0.851,172,1.252,177,1.94,189,1.258,192,1.293,209,1.038,212,0.22,215,2.007,216,0.005,217,0.007,218,0.005,220,1.053,221,2.624,222,0.465,224,1.731,226,0.256,228,0.222,240,1.217,283,3.273,289,1.505,511,1.531,515,1.54,520,3.567,609,1.007,649,3.83,724,3.23,739,3.946,740,2.09,741,4.332,742,4.14,743,3.23,765,3.946,768,4.502,805,3.204,806,3.406,835,2.209,842,3.175,844,2.516,845,4.008,846,3.649,868,1.81,870,3.77,891,3.031,1018,2.514,1045,3.567,1081,2.514,1083,2.88,1094,3.389,1154,3.717,1232,3.649,1233,3.406,1234,3.649,1235,3.649,1236,4.294,1237,3.649,1238,4.294,1239,3.088,1240,2.349,1241,2.725,1242,2.725,1243,4.154,1244,2.725,1247,4.294,1249,1.986,1250,2.725,1251,2.516,1252,4.136,1253,2.725,1254,3.031,1255,2.516,1256,2.624,1257,2.725,1258,2.725,1259,2.516,1260,2.725,1261,2.725,1262,2.725,1263,2.516,1264,2.725,1265,2.516,1266,2.725,1267,2.725,1268,2.516,1269,2.725,1270,2.516,1271,2.725,1272,2.516,1273,2.725,1274,2.725,1275,2.725,1276,2.725,1277,2.725,1278,2.725,1279,2.516,1292,3.006,1293,5.13,1558,1.893,1885,4.651,1886,4.651,2473,5.627,2474,3.432,2475,4.977,2476,3.432,2477,4.977,2478,3.432,2479,3.432,2480,3.432,2481,3.432,2482,3.432,2483,3.432,2484,3.432,2485,3.432,2486,3.432]],["title/classes/OptionHandler.html",[226,0.311,1771,3.312]],["body/classes/OptionHandler.html",[3,0.073,4,0.064,5,0.073,6,0.122,8,0.069,10,0.227,14,0.22,15,0.122,16,0.517,17,0.012,18,0.942,19,0.363,22,0.114,27,1.903,38,1.097,48,1.731,58,0.172,66,1.331,85,1.407,87,2.301,100,1.568,101,2.076,106,1.794,122,1.192,132,0.788,154,1.903,175,1.752,177,2.146,189,1.392,209,2.205,212,0.204,215,2.22,216,0.004,217,0.006,218,0.004,219,2.099,220,0.975,222,0.441,224,1.634,226,0.343,228,0.2,235,0.278,240,0.788,325,2.965,339,1.56,511,0.736,655,2.452,662,2.452,678,1.626,724,1.703,771,4.374,799,1.628,812,2.452,842,1.336,891,1.88,923,2.665,1014,3.038,1049,2.665,1050,3.187,1070,3.376,1135,4.849,1147,2.665,1150,2.665,1239,3.444,1243,1.88,1249,2.665,1282,5.465,1286,2.452,1462,4.034,1558,3.368,1639,4.037,1693,2.264,1695,1.988,1697,2.264,1698,1.88,1738,2.113,1751,1.988,1755,6.458,1756,2.452,1757,5.999,1759,2.704,1760,2.704,1765,2.704,1769,2.704,1771,3.657,1777,2.452,1778,2.704,1779,2.805,1780,3.769,1781,3.657,1782,3.376,1783,3.152,1784,2.805,1785,3.657,1786,4.856,1787,2.704,1788,2.704,1789,2.704,1790,2.704,1791,2.704,1792,2.704,1793,2.704,1794,2.704,1795,2.704,1796,2.704,1797,2.704,1798,2.704,1799,2.704,1800,2.704,1801,2.704,1802,2.704,1803,2.704,1804,2.704,1805,4.824,1806,2.704,1807,2.452,1808,2.704,1809,2.704,1810,2.704,1811,2.704,1812,2.704,1813,2.704,1814,4.034,1815,2.704,1816,2.704,1817,2.704,1818,2.704,1819,2.704,1820,2.704,1821,2.704,1822,2.452,1823,2.452,1824,3.376,1825,2.704,1826,4.034,1827,2.704,1828,6.905,1829,2.704,1830,2.264,1831,4.034,1832,2.113,1833,5.348,1834,4.824,1835,4.034,1836,2.704,1837,4.034,1838,2.704,1839,2.704,1840,2.704,1841,4.034,1842,4.034,1843,4.034,1844,2.704,1845,2.704,1846,4.034,1847,2.704,1848,2.704,1849,2.704,1850,6.53,1851,2.704,1852,2.704,1853,2.704,1854,4.034,1855,4.824,1856,2.704,1857,4.034,1858,5.348,1859,4.034,1860,2.704,1861,4.034,1862,2.704,1863,2.704,1864,2.704,1865,4.034,1866,2.704,1867,4.034,1868,2.704,1869,3.376,2487,4.605,2488,4.605,2489,4.605,2490,3.088,2491,3.088,2492,3.088,2493,3.088,2494,3.088,2495,3.088,2496,3.088,2497,3.088,2498,3.088,2499,3.088,2500,3.088,2501,3.088,2502,3.088,2503,3.088,2504,3.088,2505,3.088,2506,2.704,2507,3.088]],["title/interfaces/Options.html",[0,1.261,85,0.857]],["body/interfaces/Options.html",[0,2.306,1,1.623,2,1.379,3,0.07,4,0.061,5,0.07,6,0.044,7,1.495,8,0.044,9,0.268,10,0.221,11,2.352,12,2.352,13,2.352,14,0.235,15,0.125,16,0.781,17,0.012,18,1.322,19,0.233,20,1.896,21,1.079,22,0.173,23,1.328,24,1.379,25,1.862,26,2.163,27,1.808,28,1.56,29,2.774,30,2.627,31,1.235,32,1.012,33,0.684,34,0.868,35,2.503,36,1.39,37,0.817,38,0.705,39,2.241,40,1.196,41,1.235,42,1.798,43,0.817,44,2.181,45,0.817,46,1.379,47,2.079,48,1.136,49,2.352,50,1.56,51,1.56,52,1.56,53,1.56,54,1.495,55,1.56,56,1.56,57,1.56,58,0.176,59,2.409,60,1.56,61,1.56,62,1.56,63,1.56,64,1.56,65,1.235,66,1.721,67,1.56,68,1.153,69,1.56,70,1.56,71,1.56,72,1.56,73,1.56,74,1.435,75,1.56,76,1.56,77,1.56,78,1.56,79,1.56,80,1.56,81,1.56,82,1.56,83,1.56,84,2.458,85,1.513,86,2.916,87,1.681,88,1.575,89,3.11,90,3.11,91,2.683,92,1.56,93,2.352,94,1.56,95,1.435,96,1.56,97,1.56,98,3.051,99,1.93,100,1.826,101,2.023,102,3.325,103,3.14,104,2.83,105,2.352,106,1.153,107,1.56,108,2.352,109,2.712,110,2.99,111,1.56,112,1.56,113,1.56,114,3.14,115,2.164,116,2.712,117,2.83,118,1.56,119,2.163,120,1.56,121,3.151,122,0.782,123,1.435,124,1.56,125,1.495,126,1.435,127,1.56,128,1.56,129,1.56,130,1.56,131,2.079,132,0.506,133,1.56,134,2.352,135,2.352,136,2.503,137,2.352,138,2.253,139,1.495,140,1.56,141,1.495,142,2.163,143,1.56,144,2.878,145,1.435,146,1.435,147,1.435,148,2.786,149,2.163,150,1.435,151,1.495,152,2.163,153,0.363,154,0.793,155,1.328,156,2.898,157,2.111,158,1.022,159,1.235,160,2.163,161,2.163,162,1.328,163,1.495,164,1.495,165,1.495,166,1.435,167,1.495,168,1.495,169,1.379,170,1.434,171,1.235,172,1.079,173,1.328,174,1.28,175,0.793,176,1.328,177,1.153,178,1.435,179,1.435,180,1.495,181,1.56,182,1.56,183,1.56,184,1.328,185,1.495,186,2.163,187,3.269,188,1.012,189,0.748,190,1.495,191,2.002,192,1.115,193,2.002,194,1.495,195,1.93,196,1.495,197,2.163,198,1.379,199,2.163,200,1.435,201,1.28,202,1.862,203,1.495,204,1.379,205,1.495,206,1.379,207,2.603,208,2.002,209,0.895,210,1.495,211,1.495,212,0.078,213,1.379,214,1.328,215,1.193,216,0.004,217,0.006,218,0.004]],["title/interfaces/OptionsHelper.html",[0,1.261,157,1.473]],["body/interfaces/OptionsHelper.html",[0,2.32,1,1.649,2,1.417,3,0.072,4,0.063,5,0.072,6,0.046,7,1.535,8,0.046,9,0.271,11,2.399,12,2.399,13,2.399,14,0.235,15,0.124,16,0.762,17,0.012,18,1.33,19,0.24,20,1.927,21,1.108,22,0.174,23,1.364,24,1.417,25,1.9,26,2.207,27,1.826,28,1.602,29,2.807,30,2.126,31,1.269,32,1.04,33,0.703,34,0.891,35,2.543,36,1.418,37,0.84,38,0.724,39,2.277,40,1.221,41,1.269,42,1.835,43,0.84,44,2.2,45,0.84,46,1.417,47,2.122,48,1.154,49,3.194,50,1.602,51,1.602,52,1.602,53,1.602,54,1.535,55,1.602,56,1.602,57,1.602,58,0.177,59,2.449,60,1.602,61,1.602,62,1.602,63,1.602,64,1.602,65,1.269,66,1.73,67,1.602,68,1.184,69,1.602,70,1.602,71,1.602,72,1.602,73,1.602,74,1.474,75,1.602,76,1.602,77,1.602,78,1.602,79,1.602,80,1.602,81,1.602,82,1.602,83,1.602,84,2.483,85,1.525,86,2.36,87,1.715,88,1.607,89,2.207,90,2.207,91,2.719,92,1.602,93,2.399,94,1.602,95,1.474,96,1.602,97,1.602,98,3.061,99,1.969,100,1.847,101,2.056,102,3.336,103,3.168,104,2.876,105,2.399,106,1.184,107,1.602,108,2.399,109,2.756,110,3.024,111,1.602,112,1.602,113,1.602,114,3.168,115,2.199,116,2.756,117,2.876,118,1.602,119,2.207,120,1.602,121,3.194,122,0.795,123,1.474,124,1.602,125,1.535,126,1.474,127,1.602,128,1.602,129,1.602,130,1.602,131,2.122,132,0.52,133,1.602,134,2.399,135,2.399,136,2.543,137,2.399,138,2.299,139,1.535,140,1.602,141,1.535,142,2.207,143,1.602,144,2.449,145,1.474,146,1.474,147,1.474,148,2.122,149,2.207,150,1.474,151,1.535,152,2.207,153,0.373,154,0.815,155,1.364,156,1.474,157,2.291,158,1.11,159,2.529,160,2.207,161,2.207,162,1.364,163,1.535,164,1.535,165,1.535,166,1.474,167,1.535,168,1.535,169,1.417,170,1.463,171,1.269,172,1.108,173,1.364,174,1.315,175,0.815,176,1.364,177,1.184,178,1.474,179,1.474,180,1.535,181,1.602,182,1.602,183,1.602,184,1.364,185,1.535,186,2.207,187,3.302,188,1.04,189,0.768,190,1.535,191,2.043,192,1.145,193,2.043,194,1.535,195,1.969,196,1.535,197,2.207,198,1.417,199,2.207,200,1.474,201,1.315,202,1.9,203,1.535,204,1.417,205,1.535,206,1.417,207,2.645,208,2.043,209,0.919,210,1.535,211,1.535,212,0.08,213,1.417,214,1.364,215,1.225,216,0.004,217,0.006,218,0.004]],["title/interfaces/Parser.html",[0,1.261,170,1.341]],["body/interfaces/Parser.html",[0,2.309,1,1.627,2,1.385,3,0.07,4,0.061,5,0.07,6,0.081,7,1.501,8,0.045,9,0.201,10,0.132,11,2.359,12,2.359,13,2.359,14,0.235,15,0.124,16,0.759,17,0.012,18,1.323,19,0.234,20,1.901,21,1.084,22,0.173,23,1.334,24,1.385,25,1.868,26,2.17,27,1.979,28,1.567,29,2.78,30,2.097,31,1.241,32,1.017,33,0.687,34,0.872,35,2.509,36,1.395,37,0.821,38,0.708,39,2.247,40,1.2,41,1.241,42,1.804,43,0.821,44,2.184,45,0.821,46,1.385,47,2.086,48,1.36,49,2.359,50,1.567,51,1.567,52,1.567,53,1.567,54,1.501,55,1.567,56,1.567,57,1.567,58,0.177,59,2.416,60,1.567,61,1.567,62,1.567,63,1.567,64,1.567,65,1.241,66,1.722,67,1.567,68,1.158,69,1.567,70,1.567,71,1.567,72,1.567,73,1.567,74,1.441,75,1.567,76,1.567,77,1.567,78,1.567,79,1.567,80,1.567,81,1.567,82,1.567,83,1.567,84,2.463,85,1.589,86,2.329,87,1.686,88,1.58,89,2.17,90,2.17,91,2.689,92,1.567,93,2.359,94,1.567,95,1.441,96,1.567,97,1.567,98,3.053,99,1.936,100,1.829,101,2.029,102,3.327,103,3.145,104,2.838,105,2.359,106,1.158,107,1.567,108,2.359,109,2.719,110,2.995,111,1.567,112,1.567,113,1.567,114,3.145,115,2.17,116,2.719,117,2.838,118,1.567,119,2.17,120,1.567,121,3.158,122,0.784,123,1.441,124,1.567,125,1.501,126,1.441,127,1.567,128,1.567,129,1.567,130,1.567,131,2.086,132,0.508,133,1.567,134,2.359,135,2.359,136,2.509,137,2.359,138,2.261,139,1.501,140,1.567,141,1.501,142,2.17,143,1.567,144,2.416,145,1.441,146,1.441,147,1.441,148,2.086,149,2.17,150,1.441,151,1.501,152,2.17,153,0.365,154,0.797,155,1.334,156,1.441,157,2.546,158,1.025,159,1.241,160,2.17,161,2.17,162,1.334,163,1.501,164,1.501,165,1.501,166,1.441,167,1.501,168,1.501,169,1.385,170,1.73,171,1.868,172,1.632,173,1.334,174,1.286,175,0.797,176,1.334,177,1.158,178,1.441,179,1.441,180,1.501,181,1.567,182,1.567,183,1.567,184,1.334,185,1.501,186,2.17,187,3.274,188,1.017,189,0.751,190,1.501,191,2.009,192,1.12,193,2.009,194,1.501,195,1.936,196,1.501,197,2.17,198,1.385,199,2.17,200,1.441,201,1.286,202,1.868,203,1.501,204,1.385,205,1.501,206,1.385,207,2.61,208,2.009,209,0.898,210,1.501,211,1.501,212,0.143,213,1.385,214,1.334,215,1.198,216,0.004,217,0.006,218,0.004,220,0.947,222,0.244,224,0.919,1017,2.589,1018,2.261,2508,2.972,2509,2.972]],["title/interfaces/ResponseOptions.html",[0,1.261,166,2.022]],["body/interfaces/ResponseOptions.html",[0,2.316,1,1.641,2,1.405,3,0.071,4,0.062,5,0.071,6,0.045,7,1.522,8,0.045,9,0.27,10,0.178,11,2.385,12,2.385,13,2.385,14,0.235,15,0.124,16,0.761,17,0.012,18,1.355,19,0.238,20,1.917,21,1.099,22,0.174,23,1.353,24,1.405,25,1.888,26,2.193,27,1.821,28,1.589,29,2.797,30,2.115,31,1.258,32,1.031,33,0.697,34,0.884,35,2.531,36,1.41,37,0.833,38,0.718,39,2.266,40,1.213,41,1.258,42,1.823,43,0.833,44,2.194,45,0.833,46,1.405,47,2.108,48,1.149,49,2.385,50,1.589,51,1.589,52,1.589,53,1.589,54,1.522,55,1.589,56,1.589,57,1.589,58,0.177,59,2.437,60,1.589,61,1.589,62,1.589,63,1.589,64,1.589,65,1.258,66,1.727,67,1.589,68,1.174,69,1.589,70,1.589,71,1.589,72,1.589,73,1.589,74,1.461,75,1.589,76,1.589,77,1.589,78,1.589,79,1.589,80,1.589,81,1.589,82,1.589,83,1.589,84,2.476,85,1.521,86,2.349,87,1.704,88,1.597,89,2.193,90,2.193,91,2.708,92,1.589,93,2.385,94,1.589,95,1.461,96,1.589,97,1.589,98,3.058,99,1.957,100,1.84,101,2.046,102,3.333,103,3.16,104,2.862,105,2.385,106,1.174,107,1.589,108,2.385,109,2.742,110,3.014,111,1.589,112,1.589,113,1.589,114,3.16,115,2.189,116,2.742,117,2.862,118,1.589,119,2.193,120,1.589,121,3.181,122,0.791,123,1.461,124,1.589,125,1.522,126,1.461,127,1.589,128,1.589,129,1.589,130,1.589,131,2.108,132,0.515,133,1.589,134,2.385,135,2.385,136,2.531,137,2.385,138,2.285,139,1.522,140,1.589,141,1.522,142,2.193,143,1.589,144,2.437,145,1.461,146,1.461,147,1.461,148,2.108,149,2.193,150,1.461,151,1.522,152,2.925,153,0.37,154,0.808,155,1.353,156,1.461,157,2.13,158,1.106,159,1.258,160,2.193,161,2.193,162,1.353,163,1.522,164,1.522,165,1.522,166,2.193,167,3.047,168,3.047,169,1.405,170,1.454,171,1.258,172,1.099,173,1.353,174,1.304,175,0.808,176,1.353,177,1.174,178,1.461,179,1.461,180,1.522,181,1.589,182,1.589,183,1.589,184,1.353,185,1.522,186,2.193,187,3.291,188,1.031,189,0.762,190,1.522,191,2.03,192,1.136,193,2.03,194,1.522,195,1.957,196,1.522,197,2.193,198,1.405,199,2.193,200,1.461,201,1.304,202,1.888,203,1.522,204,1.405,205,1.522,206,1.405,207,2.632,208,2.03,209,0.911,210,1.522,211,1.522,212,0.08,213,1.405,214,1.353,215,1.215,216,0.004,217,0.006,218,0.004]],["title/classes/SegmentHandler.html",[226,0.311,1682,3.312]],["body/classes/SegmentHandler.html",[3,0.083,4,0.073,5,0.083,6,0.117,8,0.053,10,0.212,14,0.225,15,0.122,16,0.56,17,0.012,19,0.544,22,0.135,27,2.169,30,1.984,31,2.125,32,1.742,33,1.178,36,1.104,38,1.806,48,1.764,58,0.17,66,1.708,74,2.469,100,1.008,101,1.334,122,1.224,126,1.717,132,1.115,189,1.817,209,2.24,212,0.216,216,0.005,217,0.007,218,0.005,220,1.077,222,0.421,224,1.521,226,0.379,228,0.229,230,1.697,235,0.319,240,1.181,252,1.919,339,1.788,511,1.213,513,3.732,515,1.589,546,3.277,609,1.493,646,1.788,649,1.651,666,3.791,678,1.798,724,1.953,739,2.048,740,2.156,741,3.1,754,3.732,778,2.812,828,2.423,842,1.532,896,2.812,995,2.595,1069,2.684,1239,1.867,1240,5.069,1249,3.449,1498,2.423,1567,2.572,1674,5.362,1675,2.423,1676,2.595,1677,3.101,1678,6.131,1680,3.101,1682,4.043,1684,2.595,1686,3.101,1693,5.062,1694,2.812,1695,3.277,1696,2.595,1697,2.595,1698,2.156,1699,3.101,1700,2.812,1701,2.595,1702,4.459,1703,3.101,1704,4.459,1705,4.459,1706,5.709,1707,3.101,1708,4.459,1709,2.812,1710,5.062,1711,5.062,1712,2.595,1713,4.37,1714,3.101,1715,3.101,1716,4.459,1717,3.101,1718,3.101,1719,3.101,1720,3.101,1721,3.101,1722,4.459,1723,3.101,1724,3.101,1725,3.101,1726,3.101,1727,3.101,1728,3.101,1729,3.101,1730,3.101,1731,3.101,1732,3.101,1733,3.101,1734,4.459,1735,3.101,1736,3.101,1737,3.101,1738,2.423,1739,3.101,1740,4.459,1741,4.459,1742,4.459,1743,4.459,1744,4.459,1745,5.709,1746,3.101,1747,4.459,1748,4.459,1749,5.709,1750,3.101,1751,2.279,2506,3.101,2510,3.54,2511,3.54,2512,3.54,2513,3.54,2514,3.54,2515,3.54,2516,3.54,2517,3.54,2518,3.54,2519,3.54]],["title/interfaces/StoragePayload.html",[0,1.261,1604,3.312]],["body/interfaces/StoragePayload.html",[0,1.637,2,2.524,3,0.127,4,0.112,5,0.127,6,0.081,8,0.081,9,0.304,14,0.225,15,0.124,17,0.012,18,1.326,19,0.534,22,0.112,38,1.29,58,0.16,66,1.613,88,2.738,98,1.974,102,2.982,122,0.789,132,0.926,158,0.926,216,0.007,217,0.009,218,0.007,219,2.178,226,0.403,230,1.541,609,2.17,656,3.399,726,3.9,730,5.683,766,4.08,767,3.969,784,2.986,802,5.305,818,4.721,819,5.683,913,4.362,916,3.705,924,3.297,932,3.705,939,3.485,943,3.705,950,2.986,953,4.968,1595,3.969,1596,4.299,1597,4.299,1598,4.299,1599,4.299,1600,4.742,1604,5.381,1605,6.79,1606,4.742,1607,4.742,1608,4.742,1609,4.742,1610,4.742,1611,4.742,1612,4.742,1613,4.742,1614,4.742,1615,4.742]],["title/interfaces/StructuredTypeField.html",[0,1.261,35,1.944]],["body/interfaces/StructuredTypeField.html",[0,2.283,1,1.903,2,1.322,3,0.067,4,0.059,5,0.067,6,0.042,7,1.432,8,0.042,9,0.262,10,0.242,11,2.277,12,2.277,13,2.277,14,0.235,15,0.128,16,0.782,17,0.012,18,1.381,19,0.224,20,1.847,21,1.034,22,0.173,23,1.273,24,1.322,25,1.803,26,2.094,27,1.779,28,1.495,29,2.723,30,2.038,31,1.184,32,0.97,33,0.656,34,0.832,35,2.727,36,1.962,37,1.616,38,1.394,39,2.768,40,1.688,41,2.442,42,2.538,43,1.616,44,2.315,45,1.616,46,2.727,47,2.014,48,1.107,49,2.277,50,1.495,51,1.495,52,1.495,53,1.495,54,1.432,55,1.495,56,1.495,57,1.495,58,0.176,59,2.348,60,1.495,61,1.495,62,1.495,63,1.495,64,1.495,65,1.184,66,1.707,67,1.495,68,1.105,69,1.495,70,1.495,71,1.495,72,1.495,73,1.495,74,1.375,75,1.495,76,1.495,77,1.495,78,1.495,79,1.495,80,1.495,81,1.495,82,1.495,83,1.495,84,2.419,85,1.46,86,2.263,87,1.628,88,1.525,89,2.094,90,2.094,91,2.625,92,1.495,93,2.277,94,1.495,95,1.375,96,1.495,97,1.495,98,3.037,99,1.869,100,1.792,101,1.971,102,3.306,103,3.095,104,2.758,105,2.277,106,1.105,107,1.495,108,2.277,109,2.643,110,2.935,111,1.495,112,1.495,113,1.495,114,3.095,115,2.109,116,2.643,117,2.758,118,1.495,119,2.094,120,1.495,121,3.084,122,0.762,123,1.375,124,1.495,125,1.432,126,1.375,127,1.495,128,1.495,129,1.495,130,1.495,131,2.014,132,0.485,133,1.495,134,2.277,135,2.277,136,2.439,137,2.277,138,2.182,139,1.432,140,1.495,141,1.432,142,2.094,143,1.495,144,2.348,145,1.375,146,1.375,147,1.375,148,2.014,149,2.094,150,1.375,151,1.432,152,2.094,153,0.348,154,0.761,155,1.273,156,1.375,157,2.066,158,1,159,1.184,160,2.094,161,2.094,162,1.273,163,1.432,164,1.432,165,1.432,166,1.375,167,1.432,168,1.432,169,1.322,170,1.388,171,1.184,172,1.034,173,1.273,174,1.227,175,0.761,176,1.273,177,1.105,178,1.375,179,1.375,180,1.432,181,1.495,182,1.495,183,1.495,184,1.273,185,1.432,186,2.094,187,3.216,188,0.97,189,0.717,190,1.432,191,1.939,192,1.069,193,1.939,194,1.432,195,1.869,196,1.432,197,2.094,198,1.322,199,2.094,200,1.375,201,1.227,202,1.803,203,1.432,204,1.322,205,1.432,206,1.322,207,2.537,208,1.939,209,0.857,210,1.432,211,1.432,212,0.075,213,1.322,214,1.273,215,1.143,216,0.004,217,0.006,218,0.004]],["title/interfaces/StructuredTypeFieldOptions.html",[0,1.261,169,1.944]],["body/interfaces/StructuredTypeFieldOptions.html",[0,2.32,1,1.649,2,1.417,3,0.072,4,0.063,5,0.072,6,0.046,7,1.535,8,0.046,9,0.271,11,2.399,12,2.399,13,2.399,14,0.235,15,0.124,16,0.762,17,0.012,18,1.33,19,0.24,20,1.927,21,1.108,22,0.174,23,1.364,24,1.417,25,1.9,26,2.207,27,1.826,28,1.602,29,2.807,30,2.126,31,1.269,32,1.04,33,0.703,34,0.891,35,3.024,36,1.418,37,0.84,38,0.724,39,2.277,40,1.221,41,1.269,42,2.615,43,0.84,44,2.2,45,0.84,46,1.417,47,2.122,48,1.154,49,2.399,50,1.602,51,1.602,52,1.602,53,1.602,54,1.535,55,1.602,56,1.602,57,1.602,58,0.177,59,2.449,60,1.602,61,1.602,62,1.602,63,1.602,64,1.602,65,1.269,66,1.73,67,1.602,68,1.184,69,1.602,70,1.602,71,1.602,72,1.602,73,1.602,74,1.474,75,1.602,76,1.602,77,1.602,78,1.602,79,1.602,80,1.602,81,1.602,82,1.602,83,1.602,84,2.483,85,1.491,86,2.36,87,1.715,88,1.607,89,2.207,90,2.207,91,2.719,92,1.602,93,2.399,94,1.602,95,1.474,96,1.602,97,1.602,98,3.061,99,1.969,100,1.847,101,2.056,102,3.336,103,3.168,104,2.876,105,2.399,106,1.184,107,1.602,108,2.399,109,2.756,110,3.024,111,1.602,112,1.602,113,1.602,114,3.168,115,2.199,116,2.756,117,2.876,118,1.602,119,2.207,120,1.602,121,3.194,122,0.795,123,1.474,124,1.602,125,1.535,126,1.474,127,1.602,128,1.602,129,1.602,130,1.602,131,2.122,132,0.52,133,1.602,134,2.399,135,2.399,136,2.543,137,2.399,138,2.299,139,1.535,140,1.602,141,1.535,142,2.207,143,1.602,144,2.449,145,1.474,146,1.474,147,1.474,148,2.122,149,2.207,150,1.474,151,1.535,152,2.207,153,0.373,154,0.815,155,1.364,156,1.474,157,2.291,158,1.11,159,1.269,160,2.207,161,2.207,162,1.364,163,1.535,164,1.535,165,1.535,166,1.474,167,1.535,168,1.535,169,2.122,170,1.463,171,1.269,172,1.108,173,1.364,174,1.315,175,0.815,176,1.364,177,1.184,178,1.474,179,1.474,180,1.535,181,1.602,182,1.602,183,1.602,184,1.364,185,1.535,186,2.207,187,3.302,188,1.04,189,0.768,190,1.535,191,2.043,192,1.145,193,2.043,194,1.535,195,1.969,196,1.535,197,2.207,198,1.417,199,2.207,200,1.474,201,1.315,202,1.9,203,1.535,204,1.417,205,1.535,206,1.417,207,2.645,208,2.043,209,0.919,210,1.535,211,1.535,212,0.08,213,1.417,214,1.364,215,1.225,216,0.004,217,0.006,218,0.004]],["title/dependencies.html",[2520,3.474,2521,4.398]],["body/dependencies.html",[17,0.012,21,2.354,216,0.009,217,0.01,218,0.009,1145,4.416,2521,5.652,2522,6.453,2523,8.621,2524,6.453,2525,6.453,2526,6.453,2527,7.536,2528,7.536,2529,6.453,2530,6.453,2531,6.453,2532,6.453,2533,6.453,2534,6.453,2535,6.453,2536,6.453,2537,6.453]],["title/miscellaneous/enumerations.html",[2538,2.236,2539,4.398]],["body/miscellaneous/enumerations.html",[6,0.117,8,0.083,15,0.103,17,0.012,30,2.683,31,2.875,32,2.356,33,1.593,48,1.877,106,2.683,216,0.007,217,0.009,218,0.007,230,1.96,252,2.595,505,4.866,506,6.032,513,5.048,516,4.866,517,4.866,546,4.433,740,4.194,754,5.048,1069,3.631,1147,3.984,1150,3.984,1282,5.048,1674,3.802,1675,4.713,1755,4.412,1756,5.469,1779,4.194,1780,4.713,1781,5.469,1782,5.048,1783,4.713,1784,4.194,1785,5.469,1786,4.713,2538,3.576,2539,4.866,2540,5.555,2541,4.412,2542,5.555,2543,6.886,2544,4.412,2545,4.412,2546,6.886,2547,6.886,2548,6.886,2549,6.886,2550,6.886]],["title/miscellaneous/functions.html",[453,3.058,2538,2.236]],["body/miscellaneous/functions.html",[6,0.115,8,0.071,10,0.255,14,0.224,15,0.104,17,0.012,38,1.128,48,1.469,58,0.179,85,0.972,87,2.343,178,2.295,209,1.431,212,0.229,216,0.006,217,0.008,218,0.006,224,1.729,230,1.77,240,1.187,453,2.883,720,4.146,775,6.081,779,4.146,780,5.446,781,6.081,783,4.146,787,4.146,793,4.146,795,4.146,818,3.786,897,3.759,1240,3.239,1645,4.146,1658,4.146,1665,5.446,1674,3.239,1675,4.255,1700,3.759,1751,5.06,1783,3.239,1897,3.759,2538,3.047,2541,3.759,2544,6.72,2545,3.759,2551,6.217,2552,4.733,2553,6.217,2554,6.217,2555,6.217,2556,6.217,2557,6.217,2558,6.217,2559,6.217,2560,4.733,2561,6.217,2562,6.217,2563,7.657,2564,6.217,2565,6.217,2566,6.217,2567,6.217,2568,6.217,2569,6.217,2570,6.217,2571,6.217,2572,6.943,2573,4.733,2574,4.733,2575,4.733,2576,4.146,2577,4.733,2578,4.733,2579,4.733,2580,6.217,2581,4.733,2582,4.733,2583,4.146,2584,4.733,2585,4.733,2586,4.733,2587,4.733,2588,4.733,2589,4.733,2590,6.217,2591,6.217,2592,4.733,2593,4.733,2594,4.733,2595,4.733,2596,4.733,2597,6.217,2598,4.733]],["title/index.html",[8,0.052,2599,3.043,2600,3.043]],["body/index.html",[4,0.087,17,0.012,19,0.624,22,0.135,34,1.231,38,1,44,2.366,54,2.12,58,0.087,84,2.092,86,2.827,95,3.168,98,2.092,99,1.816,100,1.195,101,2.861,109,2.12,110,2.674,116,2.12,139,2.12,150,2.035,177,1.635,180,2.12,192,2.771,214,2.574,216,0.006,217,0.008,218,0.006,226,0.487,519,3.676,609,1.683,651,3.676,681,1.752,738,2.872,743,4.187,845,3.925,923,2.428,950,2.315,1061,4.555,1069,2.213,1145,4.471,1154,4.779,1197,3.692,1498,5.724,1567,3.301,1569,2.872,1642,4.555,1643,4.204,1647,4.204,1653,6.151,1660,5.023,1695,4.521,1738,2.872,1779,3.493,1780,4.471,1784,3.493,2601,8.023,2602,4.196,2603,4.196,2604,4.196,2605,4.196,2606,4.196,2607,4.196,2608,5.735,2609,7.023,2610,4.196,2611,4.196,2612,7.023,2613,4.196,2614,4.196,2615,4.196,2616,5.735,2617,4.196,2618,6.151,2619,4.196,2620,5.735,2621,4.196,2622,4.196,2623,4.196,2624,5.735,2625,4.196,2626,6.151,2627,5.735,2628,4.196,2629,4.196,2630,4.196,2631,4.196,2632,4.196,2633,4.196,2634,4.196,2635,4.196,2636,5.735,2637,4.196,2638,4.196,2639,4.196,2640,4.196,2641,4.196,2642,4.196,2643,8.116,2644,4.196,2645,4.196,2646,4.196,2647,4.196,2648,5.735,2649,7.353,2650,7.023,2651,4.196,2652,4.196,2653,4.196,2654,4.196,2655,4.196,2656,4.196,2657,5.735,2658,4.196,2659,5.735,2660,4.196,2661,5.735,2662,5.735,2663,5.735,2664,4.196,2665,5.735,2666,4.196,2667,4.196,2668,4.196,2669,4.196,2670,4.196,2671,4.196,2672,4.196,2673,4.196,2674,6.534,2675,4.196,2676,5.735,2677,4.196,2678,4.196,2679,4.196,2680,4.196,2681,4.196,2682,4.196,2683,4.196,2684,5.735,2685,4.196,2686,5.735,2687,4.196,2688,4.196,2689,4.196,2690,4.196,2691,4.196,2692,4.196,2693,4.196,2694,4.196,2695,4.196,2696,4.196,2697,4.196,2698,4.196,2699,5.735,2700,5.735,2701,4.196,2702,4.196,2703,4.196,2704,4.196,2705,4.196]],["title/license.html",[2599,3.043,2600,3.043,2706,3.043]],["body/license.html",[17,0.009,125,3.001,136,3.594,141,3.001,216,0.008,217,0.009,218,0.008,252,2.239,721,5.203,1254,3.617,2198,5.203,2618,5.203,2626,6.284,2706,5.203,2707,5.94,2708,7.708,2709,5.94,2710,5.94,2711,5.94,2712,5.94,2713,7.174,2714,5.94,2715,5.94,2716,5.94,2717,5.94,2718,5.94,2719,5.94,2720,7.174,2721,8.557,2722,5.94,2723,5.94,2724,5.94,2725,5.94,2726,7.174,2727,5.94,2728,5.94,2729,5.94,2730,5.94,2731,5.94,2732,5.94,2733,5.94,2734,5.94,2735,7.174,2736,5.94,2737,5.94,2738,5.94,2739,5.94,2740,5.94,2741,5.94,2742,7.174,2743,7.174,2744,5.94,2745,5.94,2746,5.94,2747,5.94,2748,5.94,2749,5.94,2750,5.94,2751,5.94,2752,5.94,2753,5.94,2754,5.94,2755,5.94,2756,5.94,2757,5.94,2758,5.94,2759,5.94,2760,5.94,2761,5.94,2762,5.94,2763,5.94,2764,5.94,2765,5.94,2766,5.94,2767,5.94,2768,5.94,2769,5.94,2770,5.94,2771,5.94]],["title/modules.html",[1644,4.536]],["body/modules.html",[17,0.01,216,0.009,217,0.01,218,0.009,1643,5.029,1644,5.447,2772,6.859]],["title/overview.html",[2773,5.002]],["body/overview.html",[2,3.166,17,0.01,100,1.933,110,3.166,216,0.009,217,0.01,218,0.009,228,0.439,1642,5.392,2230,5.947,2773,5.947,2774,6.79,2775,6.79]],["title/miscellaneous/typealiases.html",[2538,2.236,2776,5.021]],["body/miscellaneous/typealiases.html",[6,0.12,7,2.207,8,0.065,14,0.208,15,0.131,16,0.41,17,0.012,18,1.008,23,2.646,29,2.55,48,1.247,91,2.646,98,2.72,99,1.89,114,2.646,131,2.037,144,2.646,145,2.119,146,2.119,147,2.119,148,2.748,149,2.119,150,2.119,151,2.207,152,2.858,153,0.536,154,1.172,155,1.961,179,2.858,186,2.858,187,2.858,189,1.686,191,2.646,193,2.646,195,2.55,197,2.858,199,2.858,208,2.646,216,0.006,217,0.008,218,0.006,219,2.807,287,3.448,762,5.843,768,3.411,1141,5.163,1142,4.681,1233,4.034,1567,3.37,1674,2.99,1675,4.034,1678,4.681,1694,5.298,1696,4.89,1751,2.813,1779,3.59,1780,4.034,1782,4.321,1783,4.034,1784,3.59,1832,2.99,2054,5.163,2062,5.163,2266,4.89,2290,3.47,2321,4.681,2322,4.681,2323,4.681,2324,4.681,2538,2.813,2541,3.47,2544,6.907,2545,3.47,2576,5.163,2583,5.163,2777,8.547,2778,6.671,2779,5.894,2780,4.369,2781,7.456,2782,4.369,2783,6.671,2784,5.894,2785,7.141,2786,7.141,2787,7.141,2788,5.894,2789,5.894,2790,7.456,2791,6.671,2792,6.671,2793,7.141,2794,6.671,2795,7.141,2796,5.894,2797,4.369,2798,4.369,2799,4.369,2800,4.369]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":666,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["0.11.3",{"_index":2537,"title":{},"body":{"dependencies.html":{}}}],["07/schema",{"_index":2409,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["1",{"_index":100,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"overview.html":{}}}],["1.1.11",{"_index":2532,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":2775,"title":{},"body":{"overview.html":{}}}],["2",{"_index":110,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"overview.html":{}}}],["2.0",{"_index":145,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["2.0.0",{"_index":2535,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":816,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["2019",{"_index":2709,"title":{},"body":{"license.html":{}}}],["3",{"_index":116,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["3.0",{"_index":146,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["4",{"_index":109,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["4.0",{"_index":147,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["404",{"_index":1515,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["5",{"_index":133,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["6.6.0",{"_index":2533,"title":{},"body":{"dependencies.html":{}}}],["705b5ad71980",{"_index":97,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["82",{"_index":2774,"title":{},"body":{"overview.html":{}}}],["9a",{"_index":1710,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["__meta",{"_index":1058,"title":{},"body":{"classes/ODataCollection.html":{}}}],["__model",{"_index":1064,"title":{},"body":{"classes/ODataCollection.html":{}}}],["__model(attrs",{"_index":1092,"title":{},"body":{"classes/ODataCollection.html":{}}}],["__models",{"_index":1059,"title":{},"body":{"classes/ODataCollection.html":{}}}],["__request",{"_index":1065,"title":{},"body":{"classes/ODataCollection.html":{}}}],["__request(obs",{"_index":1095,"title":{},"body":{"classes/ODataCollection.html":{}}}],["__resource",{"_index":1060,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_action",{"_index":1066,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_action(path",{"_index":1098,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_context",{"_index":1298,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["_function",{"_index":1067,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_function(path",{"_index":1100,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_functions",{"_index":1297,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["_options",{"_index":2043,"title":{},"body":{"classes/ODataResponse.html":{}}}],["_properties",{"_index":1299,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["_query",{"_index":1078,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_resource",{"_index":1075,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_schema",{"_index":1076,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_segment",{"_index":1077,"title":{},"body":{"classes/ODataCollection.html":{}}}],["above",{"_index":2741,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":801,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["abstract",{"_index":289,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{}}}],["acc",{"_index":1559,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["acc.every(c",{"_index":2202,"title":{},"body":{"classes/ODataSchema.html":{}}}],["acc.parameters",{"_index":2206,"title":{},"body":{"classes/ODataSchema.html":{}}}],["acc[name",{"_index":2345,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["accept",{"_index":758,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["accept.length",{"_index":1925,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push(`ieee754compatible=${this.api.options.ieee754compatible",{"_index":1924,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push(`odata.metadata=${this.api.options.metadata",{"_index":1921,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accessors",{"_index":678,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["action",{"_index":252,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["action.ts",{"_index":231,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["action.ts:1",{"_index":351,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:12",{"_index":239,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:14",{"_index":243,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:15",{"_index":245,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:16",{"_index":242,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:17",{"_index":241,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:18",{"_index":244,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:22",{"_index":358,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:24",{"_index":362,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:25",{"_index":360,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:26",{"_index":359,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:27",{"_index":361,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:3",{"_index":355,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:31",{"_index":254,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:33",{"_index":257,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:34",{"_index":255,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:35",{"_index":256,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:39",{"_index":410,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:4",{"_index":357,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:41",{"_index":412,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:42",{"_index":417,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:43",{"_index":413,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:44",{"_index":411,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:45",{"_index":414,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:46",{"_index":415,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:47",{"_index":416,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:5",{"_index":353,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:51",{"_index":438,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:53",{"_index":444,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:54",{"_index":440,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:55",{"_index":439,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:56",{"_index":441,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:57",{"_index":442,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:58",{"_index":443,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:6",{"_index":352,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:7",{"_index":354,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:8",{"_index":356,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["actionimport",{"_index":560,"title":{},"body":{"classes/Field.html":{}}}],["actionimports",{"_index":312,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["actions",{"_index":447,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["add",{"_index":1061,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataPathSegments.html":{},"index.html":{}}}],["add(model",{"_index":1102,"title":{},"body":{"classes/ODataCollection.html":{}}}],["add(name",{"_index":1680,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["addbody",{"_index":2551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addbody(options",{"_index":2574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additionalitems",{"_index":2382,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["addressinfo",{"_index":2675,"title":{},"body":{"index.html":{}}}],["aggregate",{"_index":2576,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["airport",{"_index":2651,"title":{},"body":{"index.html":{}}}],["airport.get().subscribe(console.log",{"_index":2680,"title":{},"body":{"index.html":{}}}],["airports",{"_index":2643,"title":{},"body":{"index.html":{}}}],["airports.entity(\"cyyz\").get({fetchpolicy",{"_index":2654,"title":{},"body":{"index.html":{}}}],["airports.get().subscribe(console.log",{"_index":2679,"title":{},"body":{"index.html":{}}}],["airports.query.filter().clear",{"_index":2670,"title":{},"body":{"index.html":{}}}],["airports.query.filter().push({location",{"_index":2664,"title":{},"body":{"index.html":{}}}],["airports.tojson",{"_index":2666,"title":{},"body":{"index.html":{}}}],["airportsservice",{"_index":2639,"title":{},"body":{"index.html":{}}}],["airportsservice.entities",{"_index":2644,"title":{},"body":{"index.html":{}}}],["alias",{"_index":189,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["alias(name",{"_index":1249,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["aliases",{"_index":1751,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["all(options",{"_index":1104,"title":{},"body":{"classes/ODataCollection.html":{}}}],["allows",{"_index":859,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["along",{"_index":129,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["and/or",{"_index":2733,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2601,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":747,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMeta.html":{},"modules/ODataModule.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["angular/compiler",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1145,"title":{},"body":{"classes/ODataCollection.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":2526,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2530,"title":{},"body":{"dependencies.html":{}}}],["angularodataentity",{"_index":2613,"title":{},"body":{"index.html":{}}}],["annot",{"_index":671,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["annot.type",{"_index":673,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["annotation",{"_index":1,"title":{"interfaces/Annotation.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["annotation.ts",{"_index":259,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{}}}],["annotation.ts:1",{"_index":263,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:15",{"_index":276,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:17",{"_index":278,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:18",{"_index":277,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:2",{"_index":264,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:22",{"_index":484,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:24",{"_index":489,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:25",{"_index":494,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:26",{"_index":486,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:27",{"_index":487,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:28",{"_index":485,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:29",{"_index":490,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:30",{"_index":488,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:31",{"_index":491,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:32",{"_index":492,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:33",{"_index":493,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:5",{"_index":280,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:7",{"_index":282,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:9",{"_index":281,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotationconfig",{"_index":187,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataAnnotation.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["annotationlist",{"_index":260,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["annotations",{"_index":44,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["annotations(value",{"_index":62,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["annotationslist",{"_index":448,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["any)(schema",{"_index":2419,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["any)[f.name",{"_index":2401,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["any[]).map(v",{"_index":2350,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["api",{"_index":84,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["api.findparserfortype(that",{"_index":1980,"title":{},"body":{"classes/ODataResource.html":{}}}],["api.findparserfortype(type",{"_index":2005,"title":{},"body":{"classes/ODataResource.html":{}}}],["api.options",{"_index":2008,"title":{},"body":{"classes/ODataResource.html":{}}}],["apiconfig",{"_index":179,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"modules/ODataModule.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["apinameorentitytype",{"_index":1435,"title":{},"body":{"classes/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{}}}],["apioptions",{"_index":160,"title":{"interfaces/ApiOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["apollo",{"_index":93,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["aports",{"_index":2647,"title":{},"body":{"index.html":{}}}],["app",{"_index":2629,"title":{},"body":{"index.html":{}}}],["app.component.css",{"_index":2634,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":2632,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":2635,"title":{},"body":{"index.html":{}}}],["application/json;${accept.join",{"_index":1927,"title":{},"body":{"classes/ODataRequest.html":{}}}],["application_http",{"_index":760,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["application_json",{"_index":749,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["appliesto",{"_index":274,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["appmodule",{"_index":2624,"title":{},"body":{"index.html":{}}}],["arising",{"_index":2768,"title":{},"body":{"license.html":{}}}],["arr",{"_index":1848,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.find(v",{"_index":1851,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.push(obj",{"_index":1853,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["array",{"_index":1832,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(data",{"_index":1162,"title":{},"body":{"classes/ODataCollection.html":{}}}],["array.isarray(value",{"_index":1032,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["arraybuffer",{"_index":1885,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["arraybuffer(options",{"_index":2475,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["ascollection",{"_index":1234,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["ascollection(entities",{"_index":1251,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["ascollection>>(entities",{"_index":1994,"title":{},"body":{"classes/ODataResource.html":{}}}],["asked",{"_index":112,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["asmodel",{"_index":1235,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["asmodel(entity",{"_index":1255,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["asmodel>(entity",{"_index":1991,"title":{},"body":{"classes/ODataResource.html":{}}}],["assertarray",{"_index":1833,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assertobject",{"_index":2487,"title":{},"body":{"classes/OptionHandler.html":{}}}],["assertobject(create",{"_index":1846,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assign",{"_index":1462,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/OptionHandler.html":{}}}],["assign(entity",{"_index":1467,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["assign(values",{"_index":1867,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["associated",{"_index":2722,"title":{},"body":{"license.html":{}}}],["at(index",{"_index":1843,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["attach",{"_index":1068,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["attach(resource",{"_index":1106,"title":{},"body":{"classes/ODataCollection.html":{}}}],["attach(value",{"_index":1437,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["attach>(value",{"_index":1447,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["attach>>(value",{"_index":1492,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["attr",{"_index":655,"title":{},"body":{"classes/Field.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["attr?.nodevalue",{"_index":658,"title":{},"body":{"classes/Field.html":{}}}],["attribute",{"_index":516,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["attribute_abstract",{"_index":600,"title":{},"body":{"classes/Field.html":{}}}],["attribute_action",{"_index":597,"title":{},"body":{"classes/Field.html":{}}}],["attribute_alias",{"_index":567,"title":{},"body":{"classes/Field.html":{}}}],["attribute_applies_to",{"_index":605,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_term",{"_index":604,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_type",{"_index":575,"title":{},"body":{"classes/Field.html":{}}}],["attribute_contains_target",{"_index":589,"title":{},"body":{"classes/Field.html":{}}}],["attribute_default_value",{"_index":584,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set",{"_index":598,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set_path",{"_index":591,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_type",{"_index":593,"title":{},"body":{"classes/Field.html":{}}}],["attribute_extends",{"_index":603,"title":{},"body":{"classes/Field.html":{}}}],["attribute_function",{"_index":596,"title":{},"body":{"classes/Field.html":{}}}],["attribute_has_stream",{"_index":588,"title":{},"body":{"classes/Field.html":{}}}],["attribute_include_in_service_document",{"_index":599,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_bound",{"_index":590,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_composable",{"_index":592,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_flags",{"_index":602,"title":{},"body":{"classes/Field.html":{}}}],["attribute_max_length",{"_index":579,"title":{},"body":{"classes/Field.html":{}}}],["attribute_name",{"_index":573,"title":{},"body":{"classes/Field.html":{}}}],["attribute_namespace",{"_index":568,"title":{},"body":{"classes/Field.html":{}}}],["attribute_nullable",{"_index":578,"title":{},"body":{"classes/Field.html":{}}}],["attribute_open_type",{"_index":576,"title":{},"body":{"classes/Field.html":{}}}],["attribute_partner",{"_index":585,"title":{},"body":{"classes/Field.html":{}}}],["attribute_path",{"_index":594,"title":{},"body":{"classes/Field.html":{}}}],["attribute_precision",{"_index":580,"title":{},"body":{"classes/Field.html":{}}}],["attribute_property",{"_index":586,"title":{},"body":{"classes/Field.html":{}}}],["attribute_qualifier",{"_index":570,"title":{},"body":{"classes/Field.html":{}}}],["attribute_referenced_property",{"_index":587,"title":{},"body":{"classes/Field.html":{}}}],["attribute_scale",{"_index":581,"title":{},"body":{"classes/Field.html":{}}}],["attribute_srid",{"_index":583,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target",{"_index":595,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target_namespace",{"_index":571,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term",{"_index":572,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term_namespace",{"_index":569,"title":{},"body":{"classes/Field.html":{}}}],["attribute_type",{"_index":577,"title":{},"body":{"classes/Field.html":{}}}],["attribute_underlying_type",{"_index":601,"title":{},"body":{"classes/Field.html":{}}}],["attribute_unicode",{"_index":582,"title":{},"body":{"classes/Field.html":{}}}],["attribute_uri",{"_index":566,"title":{},"body":{"classes/Field.html":{}}}],["attribute_value",{"_index":574,"title":{},"body":{"classes/Field.html":{}}}],["attribute_version",{"_index":565,"title":{},"body":{"classes/Field.html":{}}}],["attributes",{"_index":564,"title":{},"body":{"classes/Field.html":{},"classes/ODataEntityMeta.html":{}}}],["attributes(data",{"_index":1358,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["attributes(value",{"_index":63,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["attributes.getnameditem('version",{"_index":657,"title":{},"body":{"classes/Field.html":{}}}],["attrs",{"_index":1094,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{}}}],["authors",{"_index":2760,"title":{},"body":{"license.html":{}}}],["average",{"_index":2549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backbone",{"_index":1207,"title":{},"body":{"classes/ODataCollection.html":{}}}],["backend",{"_index":1611,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["backend.setitem(key",{"_index":1612,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["backward",{"_index":1729,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["base",{"_index":204,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["base64",{"_index":2368,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["baseterm",{"_index":272,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["basetype",{"_index":290,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["basic",{"_index":2691,"title":{},"body":{"index.html":{}}}],["batch",{"_index":754,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["batch.request.method",{"_index":881,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["batch_prefix",{"_index":753,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["batchboundary",{"_index":836,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["binary",{"_index":762,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/typealiases.html":{}}}],["binding",{"_index":334,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["binding.ts",{"_index":402,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:1",{"_index":404,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:3",{"_index":405,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:4",{"_index":406,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["blob",{"_index":1886,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["blob(options",{"_index":2477,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["body",{"_index":818,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/functions.html":{}}}],["bool",{"_index":11,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["boolean",{"_index":16,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["bound",{"_index":210,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["boundary",{"_index":791,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary.split('=')[1",{"_index":794,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary_prefix_suffix",{"_index":748,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundarydelimiter",{"_index":793,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["boundarydelimiter.length",{"_index":796,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundaryend",{"_index":797,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["break",{"_index":2144,"title":{},"body":{"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{}}}],["browse",{"_index":2772,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2528,"title":{},"body":{"dependencies.html":{}}}],["buildaggregate",{"_index":2553,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildaggregate(aggregate",{"_index":2575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildentry",{"_index":917,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["buildentry(payload",{"_index":928,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["builder",{"_index":1695,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["buildexpand",{"_index":2554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildexpand(expands",{"_index":2577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter",{"_index":2555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter(filters",{"_index":2579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby",{"_index":2556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby(groupby",{"_index":2582,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby",{"_index":2557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby(orderby",{"_index":2584,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildquery",{"_index":1693,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["buildquery(options",{"_index":1799,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["buildtransforms",{"_index":2558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildtransforms(transforms",{"_index":2585,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl",{"_index":2559,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl(path",{"_index":2587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builtfilters",{"_index":2595,"title":{},"body":{"miscellaneous/functions.html":{}}}],["c",{"_index":1254,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{},"license.html":{}}}],["c.find(predicate",{"_index":2443,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["c.istypeof(self",{"_index":1982,"title":{},"body":{"classes/ODataResource.html":{}}}],["c.istypeof(type",{"_index":2105,"title":{},"body":{"classes/ODataResponse.html":{}}}],["c.istypeof(type)).deserialize(value",{"_index":2347,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["c.istypeof(type)).serialize(value",{"_index":2349,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["c.name",{"_index":2203,"title":{},"body":{"classes/ODataSchema.html":{}}}],["c.parameters",{"_index":2208,"title":{},"body":{"classes/ODataSchema.html":{}}}],["cache",{"_index":98,"title":{"interfaces/Cache.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cache_control",{"_index":2068,"title":{},"body":{"classes/ODataResponse.html":{}}}],["cacheability",{"_index":167,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["cachecacheability",{"_index":152,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["cachecontrol",{"_index":2099,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["cachecontrol.split(\",\").foreach(directive",{"_index":2150,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["cached",{"_index":123,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["california",{"_index":2665,"title":{},"body":{"index.html":{}}}],["call",{"_index":1225,"title":{},"body":{"classes/ODataCollection.html":{}}}],["callable",{"_index":2188,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callable.configure(settings",{"_index":2228,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfig",{"_index":195,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callableconfigs",{"_index":2199,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.filter(c",{"_index":2204,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.map(config",{"_index":2210,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.reduce((acc",{"_index":2201,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callables",{"_index":194,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["case",{"_index":828,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/SegmentHandler.html":{}}}],["catch",{"_index":645,"title":{},"body":{"classes/Field.html":{}}}],["catcherror",{"_index":1489,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["caught",{"_index":183,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["changeset",{"_index":879,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changeset_prefix",{"_index":763,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetboundary",{"_index":877,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetendline",{"_index":905,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetid",{"_index":878,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetresponses",{"_index":903,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["channel",{"_index":826,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["charge",{"_index":2717,"title":{},"body":{"license.html":{}}}],["check",{"_index":651,"title":{},"body":{"classes/Field.html":{},"index.html":{}}}],["checking",{"_index":137,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["checks",{"_index":104,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["checkversion(document",{"_index":650,"title":{},"body":{"classes/Field.html":{}}}],["children",{"_index":663,"title":{},"body":{"classes/Field.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["chunk[0].split",{"_index":909,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["chunks",{"_index":896,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["chunks.join(path_separator",{"_index":1718,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["city",{"_index":2659,"title":{},"body":{"index.html":{}}}],["claim",{"_index":2763,"title":{},"body":{"license.html":{}}}],["class",{"_index":226,"title":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["classes",{"_index":228,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"overview.html":{}}}],["clear",{"_index":1757,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["client",{"_index":103,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["clone",{"_index":842,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["close",{"_index":880,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["code",{"_index":814,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["collection",{"_index":39,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["collection(entities",{"_index":1996,"title":{},"body":{"classes/ODataResource.html":{}}}],["collectionoperator",{"_index":2590,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complextype",{"_index":539,"title":{},"body":{"classes/Field.html":{}}}],["complextypes",{"_index":449,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["compodoc",{"_index":2698,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":2531,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":2627,"title":{},"body":{"index.html":{}}}],["composable",{"_index":211,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["compose",{"_index":2437,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["conditions",{"_index":2740,"title":{},"body":{"license.html":{}}}],["config",{"_index":681,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{},"index.html":{}}}],["config.alias",{"_index":2192,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.annotations",{"_index":1402,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["config.base",{"_index":2390,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["config.bound",{"_index":997,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.callables",{"_index":2200,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.collection",{"_index":2271,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["config.composable",{"_index":1001,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.configure(settings",{"_index":2226,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.containers",{"_index":2213,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.entities",{"_index":2196,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.entitysets",{"_index":1399,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["config.entitytype",{"_index":1457,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["config.enums",{"_index":2194,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.fetchpolicy",{"_index":713,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.flags",{"_index":1551,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["config.headers",{"_index":709,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.ieee754compatible",{"_index":705,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.members",{"_index":1538,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["config.metadata",{"_index":701,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.model",{"_index":2269,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["config.name",{"_index":994,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["config.name).reduce((acc",{"_index":2205,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.namespace",{"_index":2190,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.params",{"_index":707,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.path",{"_index":996,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.prefermaxpagesize",{"_index":717,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.preferreturn",{"_index":715,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.return",{"_index":1039,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["config.service",{"_index":1459,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["config.stringasenum",{"_index":703,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.version",{"_index":699,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.withcredentials",{"_index":711,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["configs",{"_index":178,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"modules/ODataModule.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":975,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["configure(settings",{"_index":985,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["connection",{"_index":2770,"title":{},"body":{"license.html":{}}}],["console.log(\"airport",{"_index":2656,"title":{},"body":{"index.html":{}}}],["console.log(\"airports",{"_index":2650,"title":{},"body":{"index.html":{}}}],["console.log(\"all",{"_index":2646,"title":{},"body":{"index.html":{}}}],["console.log(\"people",{"_index":2677,"title":{},"body":{"index.html":{}}}],["console.log(json",{"_index":2667,"title":{},"body":{"index.html":{}}}],["console.log(query",{"_index":2669,"title":{},"body":{"index.html":{}}}],["const",{"_index":609,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["constants",{"_index":515,"title":{},"body":{"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["constructor",{"_index":235,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["constructor(action",{"_index":407,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["constructor(annot",{"_index":669,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["constructor(annotationlist",{"_index":261,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["constructor(api",{"_index":837,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{}}}],["constructor(client",{"_index":1434,"title":{},"body":{"classes/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{}}}],["constructor(config",{"_index":679,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["constructor(data",{"_index":1079,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["constructor(init",{"_index":924,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["constructor(name",{"_index":236,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["constructor(namespace",{"_index":365,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlSchema.html":{}}}],["constructor(o",{"_index":2490,"title":{},"body":{"classes/OptionHandler.html":{}}}],["constructor(options",{"_index":1760,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["constructor(path",{"_index":403,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["constructor(private",{"_index":1738,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["constructor(property",{"_index":433,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["constructor(propertyrefs",{"_index":381,"title":{},"body":{"classes/CsdlKey.html":{}}}],["constructor(protected",{"_index":1446,"title":{},"body":{"classes/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{}}}],["constructor(public",{"_index":265,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{}}}],["constructor(request",{"_index":725,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["constructor(segment",{"_index":2510,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["constructor(segments",{"_index":1677,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["constructor(target",{"_index":279,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["constructor(term",{"_index":275,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["constructor(termnamespace",{"_index":376,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["constructor(type",{"_index":437,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["constructor(uri",{"_index":428,"title":{},"body":{"classes/CsdlReference.html":{}}}],["constructor(xml",{"_index":607,"title":{},"body":{"classes/Field.html":{}}}],["container",{"_index":470,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataSchema.html":{}}}],["container.entitysets",{"_index":2219,"title":{},"body":{"classes/ODataSchema.html":{}}}],["container.ts",{"_index":311,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:10",{"_index":324,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:11",{"_index":322,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:12",{"_index":319,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:17",{"_index":1397,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["container.ts:21",{"_index":1395,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["container.ts:5",{"_index":318,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:7",{"_index":323,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:8",{"_index":321,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:9",{"_index":320,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["containers",{"_index":196,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["containstarget",{"_index":386,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["content",{"_index":732,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content.join(newline",{"_index":830,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_id",{"_index":761,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_transfer_encoding",{"_index":759,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_type",{"_index":751,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["contentid",{"_index":904,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contents",{"_index":2615,"title":{},"body":{"index.html":{}}}],["contenttype",{"_index":897,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{},"miscellaneous/functions.html":{}}}],["contenttype.indexof(application_json",{"_index":2089,"title":{},"body":{"classes/ODataResponse.html":{}}}],["contenttype.split",{"_index":789,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contenttype.split(\",\").find(p",{"_index":2091,"title":{},"body":{"classes/ODataResponse.html":{}}}],["contenttype.split(';')[1].trim",{"_index":792,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contenttypeparts",{"_index":788,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contenttypeparts.length",{"_index":790,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["context",{"_index":59,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["context(value",{"_index":69,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["contract",{"_index":2766,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2735,"title":{},"body":{"license.html":{}}}],["copts",{"_index":2015,"title":{},"body":{"classes/ODataResource.html":{}}}],["copts.helper.countparam",{"_index":2019,"title":{},"body":{"classes/ODataResource.html":{}}}],["copts.helper.etag(options.attrs",{"_index":2025,"title":{},"body":{"classes/ODataResource.html":{}}}],["copy",{"_index":2720,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2708,"title":{},"body":{"license.html":{}}}],["count",{"_index":1069,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["count(value",{"_index":82,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["count).type('edm.int32",{"_index":1284,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["countdistinct",{"_index":2550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["countparam",{"_index":83,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["countryregion",{"_index":2660,"title":{},"body":{"index.html":{}}}],["covered",{"_index":1279,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["create",{"_index":1070,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["create(attrs",{"_index":1110,"title":{},"body":{"classes/ODataCollection.html":{}}}],["create(entity",{"_index":1472,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["createsettings",{"_index":1665,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["createsettings(configs",{"_index":1658,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":2604,"title":{},"body":{"index.html":{}}}],["creation",{"_index":181,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["csdl",{"_index":302,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdl/csdl",{"_index":509,"title":{},"body":{"classes/Field.html":{}}}],["csdlaction",{"_index":227,"title":{"classes/CsdlAction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlactionimport",{"_index":251,"title":{"classes/CsdlActionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlannotable",{"_index":258,"title":{"classes/CsdlAnnotable.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotable:2",{"_index":284,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotation",{"_index":262,"title":{"classes/CsdlAnnotation.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["csdlannotations",{"_index":266,"title":{"classes/CsdlAnnotations.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdlcomplextype",{"_index":285,"title":{"classes/CsdlComplexType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlentitycontainer",{"_index":310,"title":{"classes/CsdlEntityContainer.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlentityset",{"_index":316,"title":{"classes/CsdlEntitySet.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["csdlentitytype",{"_index":305,"title":{"classes/CsdlEntityType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlenummember",{"_index":338,"title":{"classes/CsdlEnumMember.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["csdlenumtype",{"_index":343,"title":{"classes/CsdlEnumType.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunction",{"_index":246,"title":{"classes/CsdlFunction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunctionimport",{"_index":248,"title":{"classes/CsdlFunctionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlinclude",{"_index":363,"title":{"classes/CsdlInclude.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlincludeannotations",{"_index":373,"title":{"classes/CsdlIncludeAnnotations.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlkey",{"_index":306,"title":{"classes/CsdlKey.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationproperty",{"_index":294,"title":{"classes/CsdlNavigationProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationpropertybinding",{"_index":328,"title":{"classes/CsdlNavigationPropertyBinding.html":{}},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlondelete",{"_index":391,"title":{"classes/CsdlOnDelete.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlparameter",{"_index":238,"title":{"classes/CsdlParameter.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlproperty",{"_index":293,"title":{"classes/CsdlProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlpropertyref",{"_index":309,"title":{"classes/CsdlPropertyRef.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlreference",{"_index":369,"title":{"classes/CsdlReference.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlreferentialconstraint",{"_index":390,"title":{"classes/CsdlReferentialConstraint.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlreturntype",{"_index":237,"title":{"classes/CsdlReturnType.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlschema",{"_index":445,"title":{"classes/CsdlSchema.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlsingleton",{"_index":317,"title":{"classes/CsdlSingleton.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlstructuralproperty",{"_index":385,"title":{"classes/CsdlStructuralProperty.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["csdlstructuralproperty:3",{"_index":397,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:4",{"_index":399,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:5",{"_index":398,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuredtype",{"_index":288,"title":{"classes/CsdlStructuredType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["csdlstructuredtype:10",{"_index":296,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:5",{"_index":298,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:6",{"_index":301,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:7",{"_index":299,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:8",{"_index":297,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:9",{"_index":300,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlterm",{"_index":271,"title":{"classes/CsdlTerm.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdltypedefinition",{"_index":456,"title":{"classes/CsdlTypeDefinition.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["ctor",{"_index":1181,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ctor(this.models",{"_index":1183,"title":{},"body":{"classes/ODataCollection.html":{}}}],["current",{"_index":850,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["custom",{"_index":1786,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["custom.reduce((acc",{"_index":1806,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["customheaders",{"_index":1917,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[accept",{"_index":1926,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[if_match_header",{"_index":1919,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[prefer",{"_index":1936,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customizations",{"_index":2695,"title":{},"body":{"index.html":{}}}],["damages",{"_index":2764,"title":{},"body":{"license.html":{}}}],["data",{"_index":102,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["data(data",{"_index":1310,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["dataservices",{"_index":628,"title":{},"body":{"classes/Field.html":{}}}],["date",{"_index":131,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["date.now",{"_index":777,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["dates",{"_index":1697,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["dates.isostringtodate(json.parse(json.stringify(segment.key",{"_index":1725,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["dates.isostringtodate(json.parse(json.stringify(segment.parameters",{"_index":1727,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["dates.isostringtodate(json.parse(json.stringify(this.options",{"_index":1811,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["deal",{"_index":2724,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2771,"title":{},"body":{"license.html":{}}}],["decimal",{"_index":2778,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["deep",{"_index":2694,"title":{},"body":{"index.html":{}}}],["deeppartial",{"_index":2779,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["def",{"_index":1858,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["default",{"_index":36,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["default_fetch_policy",{"_index":694,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["default_timeout",{"_index":949,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["default_version",{"_index":695,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["defaults",{"_index":2248,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["defaultvalue",{"_index":273,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["defined",{"_index":222,"title":{},"body":{"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["definition",{"_index":469,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["definition.ts",{"_index":495,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:10",{"_index":504,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:11",{"_index":502,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:3",{"_index":497,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:5",{"_index":499,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:6",{"_index":503,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:7",{"_index":498,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:8",{"_index":500,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:9",{"_index":501,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["delete",{"_index":891,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{}}}],["delete(options",{"_index":1259,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["deleting",{"_index":2605,"title":{},"body":{"index.html":{}}}],["delivered",{"_index":825,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["deltalink",{"_index":1302,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["deltalink(value",{"_index":81,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["demo",{"_index":2610,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":2521,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":1666,"title":{},"body":{"modules/ODataModule.html":{}}}],["deserialize",{"_index":1017,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Parser.html":{}}}],["deserialize(type",{"_index":2050,"title":{},"body":{"classes/ODataResponse.html":{}}}],["deserialize(value",{"_index":171,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["destroy",{"_index":1463,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["destroy(entity",{"_index":1474,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["diego",{"_index":2710,"title":{},"body":{"license.html":{}}}],["directive",{"_index":2157,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["directive.startswith(max_age",{"_index":2151,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["directly",{"_index":107,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["distribute",{"_index":2731,"title":{},"body":{"license.html":{}}}],["document",{"_index":611,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.attributes",{"_index":619,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.getelementsbytagname(odatametadata.tag_data_services)[0",{"_index":630,"title":{},"body":{"classes/Field.html":{}}}],["documentation",{"_index":2618,"title":{},"body":{"index.html":{},"license.html":{}}}],["domparser",{"_index":610,"title":{},"body":{"classes/Field.html":{}}}],["done",{"_index":1187,"title":{},"body":{"classes/ODataCollection.html":{}}}],["down",{"_index":1840,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["duration",{"_index":2781,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dynamic",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["e.istypeof(type",{"_index":2221,"title":{},"body":{"classes/ODataSchema.html":{}}}],["e[0]}${value_separator}${e[1",{"_index":2002,"title":{},"body":{"classes/ODataResource.html":{}}}],["editlink",{"_index":1366,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["editlink(value",{"_index":78,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["edm.binary",{"_index":2366,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.binary\"].indexof(this.type",{"_index":2361,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.boolean\"].indexof(this.type",{"_index":2379,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.byte",{"_index":2373,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.date",{"_index":2357,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.datetimeoffset",{"_index":2359,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.decimal",{"_index":2377,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.double\"].indexof(this.type",{"_index":2378,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.guid",{"_index":2360,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.int16",{"_index":2372,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.int32",{"_index":2371,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.int64",{"_index":2370,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.sbyte\"].indexof(this.type",{"_index":2374,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.string",{"_index":2356,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edm.timeofday",{"_index":2358,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["edmx:dataservices",{"_index":524,"title":{},"body":{"classes/Field.html":{}}}],["edmx:edmx",{"_index":522,"title":{},"body":{"classes/Field.html":{}}}],["edmx:include",{"_index":528,"title":{},"body":{"classes/Field.html":{}}}],["edmx:includeannotations",{"_index":530,"title":{},"body":{"classes/Field.html":{}}}],["edmx:reference",{"_index":526,"title":{},"body":{"classes/Field.html":{}}}],["element",{"_index":629,"title":{},"body":{"classes/Field.html":{}}}],["empty",{"_index":1135,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["endline",{"_index":899,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["endpointurl",{"_index":1236,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["endregion",{"_index":215,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entities",{"_index":192,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["entities'].indexof(options.responsetype",{"_index":2021,"title":{},"body":{"classes/ODataResource.html":{}}}],["entities(value",{"_index":60,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entities.map(e",{"_index":1176,"title":{},"body":{"classes/ODataCollection.html":{}}}],["entity",{"_index":34,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlSchema.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["entity(\"cyyz\").get",{"_index":2652,"title":{},"body":{"index.html":{}}}],["entity(data",{"_index":1312,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["entity(key",{"_index":1439,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["entity(value",{"_index":57,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitycontainer",{"_index":450,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["entitycontainerconfig",{"_index":197,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityContainer.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entitykey",{"_index":23,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entityset",{"_index":32,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCountResource.html":{},"classes/ODataPathSegments.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["entityset(path",{"_index":2233,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["entitysetconfig",{"_index":199,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitySet.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entitysetpath",{"_index":232,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["entitysets",{"_index":198,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitysetschema",{"_index":1466,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["entitytype",{"_index":213,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntitySet.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntitySet.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitytypes",{"_index":451,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["entries",{"_index":915,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["entry",{"_index":941,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["entry.lastread",{"_index":962,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["entry.payload",{"_index":958,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["enum",{"_index":339,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["enumerations",{"_index":2539,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumhelper",{"_index":1546,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enumhelper.toname(this.members",{"_index":1566,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enumhelper.tonames(this.members",{"_index":1561,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enumhelper.tovalue(this.members",{"_index":1560,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enumhelper.tovalues(this.members",{"_index":1556,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["enums",{"_index":190,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["enumtype",{"_index":536,"title":{},"body":{"classes/Field.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["enumtypeconfig",{"_index":191,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["enumtypefield",{"_index":47,"title":{"interfaces/EnumTypeField.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["enumtypes",{"_index":452,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["error",{"_index":142,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["error(\"batch",{"_index":855,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["error(\"field",{"_index":2386,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["error(\"no",{"_index":1337,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["error('odata",{"_index":653,"title":{},"body":{"classes/Field.html":{}}}],["error('unable",{"_index":647,"title":{},"body":{"classes/Field.html":{}}}],["error(`can't",{"_index":1168,"title":{},"body":{"classes/ODataCollection.html":{}}}],["error(`no",{"_index":1737,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["error.status",{"_index":1514,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["errorhandler",{"_index":182,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["escapeillegalchars",{"_index":2561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escapeillegalchars(string",{"_index":2588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etag",{"_index":68,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["etag(value",{"_index":67,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["event",{"_index":2759,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":1086,"title":{},"body":{"classes/ODataCollection.html":{}}}],["events",{"_index":858,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataRequest.html":{}}}],["examples",{"_index":2611,"title":{},"body":{"index.html":{}}}],["expand",{"_index":1784,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["expandobject",{"_index":2783,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expandoptions",{"_index":2784,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expands",{"_index":2578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandtype",{"_index":2785,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expired",{"_index":959,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["express",{"_index":2750,"title":{},"body":{"license.html":{}}}],["extend",{"_index":313,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["extends",{"_index":158,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponse.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["f",{"_index":1554,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.configure(settings",{"_index":2406,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.default",{"_index":2447,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.deserialize(value[f.name",{"_index":2399,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.iscomplextype",{"_index":2448,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.key",{"_index":2429,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.name",{"_index":1542,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.navigation",{"_index":2410,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.nullable).map(f",{"_index":2422,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.resolve(attrs",{"_index":2431,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.serialize((value",{"_index":2402,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.structured().defaults",{"_index":2450,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.tojsonschema(expand",{"_index":2416,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f.value",{"_index":1543,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["f]{12",{"_index":2365,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["f]{12}$/.test(key",{"_index":1714,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["f]{4",{"_index":1713,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["f]{8",{"_index":1712,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["fa",{"_index":1711,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["factory",{"_index":845,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["factory(api",{"_index":846,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["false",{"_index":1983,"title":{},"body":{"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["features",{"_index":2090,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["features.split(\";\").foreach(o",{"_index":2140,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["fetch",{"_index":95,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["fetch(options",{"_index":1112,"title":{},"body":{"classes/ODataCollection.html":{}}}],["fetchorcreate",{"_index":1464,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["fetchorcreate(entity",{"_index":1478,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["fetchpolicy",{"_index":91,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["field",{"_index":42,"title":{"classes/Field.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["field(odatametadata.attribute_alias",{"_index":635,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_namespace",{"_index":634,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_uri",{"_index":623,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_version",{"_index":617,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_action",{"_index":640,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotation",{"_index":627,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotations",{"_index":644,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_complex_type",{"_index":637,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_container",{"_index":641,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_type",{"_index":638,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_enum_type",{"_index":636,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_function",{"_index":639,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include",{"_index":624,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include_annotations",{"_index":626,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_term",{"_index":643,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_type_definition",{"_index":642,"title":{},"body":{"classes/Field.html":{}}}],["field.annotations",{"_index":1549,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.collection",{"_index":2332,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.default",{"_index":2327,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.field",{"_index":2337,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.key",{"_index":2331,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.maxlength",{"_index":2329,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.navigation",{"_index":2277,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.nullable",{"_index":2334,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.precision",{"_index":2339,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.ref",{"_index":2343,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.scale",{"_index":2341,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.type",{"_index":2325,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["field.value",{"_index":1548,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["fieldnames",{"_index":661,"title":{},"body":{"classes/Field.html":{}}}],["fields",{"_index":202,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["fields(opts",{"_index":2253,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["fields.filter(f",{"_index":2421,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["fields.reduce((acc",{"_index":2449,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["fieldtype",{"_index":506,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["fieldtype.attribute",{"_index":618,"title":{},"body":{"classes/Field.html":{}}}],["fieldtype.tag",{"_index":625,"title":{},"body":{"classes/Field.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["files",{"_index":2723,"title":{},"body":{"license.html":{}}}],["filter",{"_index":1780,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["filter(f",{"_index":2397,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["filter(k",{"_index":1822,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["filter(key",{"_index":1796,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["filter(p",{"_index":1046,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["filter({location",{"_index":2658,"title":{},"body":{"index.html":{}}}],["filters",{"_index":2581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filtertype",{"_index":2786,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["finally",{"_index":865,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["find",{"_index":1676,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["find(predicate",{"_index":1684,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["findannotation",{"_index":1392,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{}}}],["findannotation(predicate",{"_index":1394,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["findcallablefortype",{"_index":2159,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findcallablefortype(type",{"_index":2175,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findentitysetfortype",{"_index":2160,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findentitysetfortype(type",{"_index":2177,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findenumtypefortype",{"_index":2161,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findenumtypefortype(type",{"_index":2179,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findfield",{"_index":2249,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["findfield(name",{"_index":2257,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["findfieldbyname",{"_index":1522,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyname(name",{"_index":1530,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyvalue",{"_index":1523,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyvalue(value",{"_index":1532,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findparser",{"_index":2452,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["findparser(predicate",{"_index":2444,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["findparserfortype",{"_index":1011,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["findstructuredtypefortype",{"_index":2162,"title":{},"body":{"classes/ODataSchema.html":{}}}],["findstructuredtypefortype(type",{"_index":2181,"title":{},"body":{"classes/ODataSchema.html":{}}}],["first",{"_index":99,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["fitness",{"_index":2755,"title":{},"body":{"license.html":{}}}],["flags",{"_index":200,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["fluent",{"_index":2602,"title":{},"body":{"index.html":{}}}],["following",{"_index":2739,"title":{},"body":{"license.html":{}}}],["foreach(callable",{"_index":2227,"title":{},"body":{"classes/ODataSchema.html":{}}}],["foreach(config",{"_index":2225,"title":{},"body":{"classes/ODataSchema.html":{}}}],["format",{"_index":1785,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["forroot",{"_index":1648,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(...configs",{"_index":1661,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(configs",{"_index":1649,"title":{},"body":{"modules/ODataModule.html":{}}}],["found",{"_index":126,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataPathSegments.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["free",{"_index":2716,"title":{},"body":{"license.html":{}}}],["friends",{"_index":2674,"title":{},"body":{"index.html":{}}}],["fromhttpresponse",{"_index":2044,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromhttpresponse(req",{"_index":2055,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromjson",{"_index":2045,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromjson(req",{"_index":2057,"title":{},"body":{"classes/ODataResponse.html":{}}}],["full",{"_index":150,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["func",{"_index":1705,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["func(this",{"_index":864,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["function",{"_index":230,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataInStorageCache.html":{},"modules/ODataModule.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["function(name",{"_index":1314,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["function(undefined",{"_index":2598,"title":{},"body":{"miscellaneous/functions.html":{}}}],["functionimport",{"_index":558,"title":{},"body":{"classes/Field.html":{}}}],["functionimports",{"_index":314,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["functionname",{"_index":249,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["functions",{"_index":453,"title":{"miscellaneous/functions.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"miscellaneous/functions.html":{}}}],["functions(value",{"_index":70,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["furnished",{"_index":2738,"title":{},"body":{"license.html":{}}}],["generated",{"_index":2684,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2609,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":176,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["get(name",{"_index":1686,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["get(options",{"_index":1247,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["get(path",{"_index":1857,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["get({withcount",{"_index":2648,"title":{},"body":{"index.html":{}}}],["get_query",{"_index":1132,"title":{},"body":{"classes/ODataCollection.html":{}}}],["get_resource",{"_index":1126,"title":{},"body":{"classes/ODataCollection.html":{}}}],["get_schema",{"_index":1128,"title":{},"body":{"classes/ODataCollection.html":{}}}],["get_segment",{"_index":1130,"title":{},"body":{"classes/ODataCollection.html":{}}}],["getapi",{"_index":1441,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["getboundarydelimiter",{"_index":2562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getboundarydelimiter(contenttype",{"_index":787,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["getboundaryend",{"_index":2564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getboundaryend(batchboundary",{"_index":900,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["getboundaryend(boundarydelimiter",{"_index":795,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["getcontext",{"_index":1626,"title":{},"body":{"classes/ODataMeta.html":{}}}],["getcount",{"_index":1322,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getdeltalink",{"_index":1326,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["geteditlink",{"_index":1422,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getentitysets",{"_index":2186,"title":{},"body":{"classes/ODataSchema.html":{}}}],["getentitysetschema",{"_index":1486,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["getetag",{"_index":1415,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getfunctions",{"_index":1334,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{}}}],["getheadervalue",{"_index":2565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getheadervalue(header",{"_index":783,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["gethelper",{"_index":692,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["getid",{"_index":1413,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediacontenttype",{"_index":1428,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediaeditlink",{"_index":1426,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediaetag",{"_index":1417,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediareadlink",{"_index":1424,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmetadataetag",{"_index":1419,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmodels",{"_index":1122,"title":{},"body":{"classes/ODataCollection.html":{}}}],["getname",{"_index":2506,"title":{},"body":{"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["getnextlink",{"_index":1324,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getobjects(parentelement",{"_index":660,"title":{},"body":{"classes/Field.html":{}}}],["getodv",{"_index":1624,"title":{},"body":{"classes/ODataMeta.html":{}}}],["getoptions",{"_index":990,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["getpathwithparams",{"_index":1889,"title":{},"body":{"classes/ODataRequest.html":{}}}],["getproperties",{"_index":1628,"title":{},"body":{"classes/ODataMeta.html":{}}}],["getreadlink",{"_index":1320,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{}}}],["getresponse",{"_index":918,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["getresponse(req",{"_index":932,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["getsegment",{"_index":1280,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["getsingletonschema",{"_index":2244,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["getskip",{"_index":1330,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getskiptoken",{"_index":1332,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getstate",{"_index":1124,"title":{},"body":{"classes/ODataCollection.html":{}}}],["getstringcollectionclause",{"_index":2566,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getstringcollectionclause(lambdaparameter",{"_index":2589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getstructuredtypeschema",{"_index":1443,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["getting",{"_index":2599,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettop",{"_index":1328,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["gettype",{"_index":1411,"title":{},"body":{"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["geturl",{"_index":1891,"title":{},"body":{"classes/ODataRequest.html":{}}}],["geturlwithparams",{"_index":1893,"title":{},"body":{"classes/ODataRequest.html":{}}}],["glast",{"_index":774,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["granted",{"_index":2715,"title":{},"body":{"license.html":{}}}],["groupby",{"_index":2583,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guid",{"_index":1694,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["guid(key",{"_index":1715,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["haaster",{"_index":2712,"title":{},"body":{"license.html":{}}}],["handler",{"_index":1813,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["handlerequest",{"_index":919,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handlerequest(req",{"_index":934,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handleresponse(response",{"_index":895,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["handlevalue",{"_index":2567,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handlevalue(value",{"_index":2593,"title":{},"body":{"miscellaneous/functions.html":{}}}],["has(name",{"_index":1765,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["has(path",{"_index":1865,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["hashmap",{"_index":1845,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["haskey",{"_index":1745,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["hasparameters",{"_index":1749,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["hasstream",{"_index":307,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["header",{"_index":1897,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"miscellaneous/functions.html":{}}}],["header.split(';')[0].trim",{"_index":785,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["headers",{"_index":88,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["headers.getall(key",{"_index":811,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["headers.keys().map(key",{"_index":810,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["helper",{"_index":159,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["helpers",{"_index":697,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["helpers/odata",{"_index":2138,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["here",{"_index":2700,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":2714,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2761,"title":{},"body":{"license.html":{}}}],["htmlcollection",{"_index":664,"title":{},"body":{"classes/Field.html":{}}}],["http",{"_index":698,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["http.mergehttpheaders((options",{"_index":866,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["http.mergehttpheaders(this.api.options.headers",{"_index":1937,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http.mergehttpparams(params",{"_index":2018,"title":{},"body":{"classes/ODataResource.html":{}}}],["http.mergehttpparams(this.api.options.params",{"_index":1939,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http11",{"_index":750,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["http://json",{"_index":2407,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["httpclientmodule",{"_index":1652,"title":{},"body":{"modules/ODataModule.html":{}}}],["httpentitiesoptions",{"_index":1141,"title":{},"body":{"classes/ODataCollection.html":{},"miscellaneous/typealiases.html":{}}}],["httpentityoptions",{"_index":2788,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["httperrorresponse",{"_index":745,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntitySetService.html":{}}}],["httpheaders",{"_index":744,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["httpheaders(json.headers",{"_index":2076,"title":{},"body":{"classes/ODataResponse.html":{}}}],["httpoptions",{"_index":768,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"miscellaneous/typealiases.html":{}}}],["httpparams",{"_index":1881,"title":{},"body":{"classes/ODataRequest.html":{}}}],["httppropertyoptions",{"_index":2789,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["httpresponse",{"_index":746,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["https://diegomvh.github.io/angular",{"_index":2701,"title":{},"body":{"index.html":{}}}],["https://github.com/adamhalasz/uniqid",{"_index":772,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["https://github.com/diegomvh/angular",{"_index":2704,"title":{},"body":{"index.html":{}}}],["https://json",{"_index":2354,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["https://medium.com/@galen.corey/understanding",{"_index":94,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["https://services.odata.org/v4/(s(4m0tuxtnhcfctl4gzem3gr10))/trippinservicerw",{"_index":2623,"title":{},"body":{"index.html":{}}}],["id",{"_index":65,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["id(value",{"_index":64,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ieee754",{"_index":1922,"title":{},"body":{"classes/ODataRequest.html":{}}}],["ieee754compatible",{"_index":90,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["if_match_header",{"_index":1895,"title":{},"body":{"classes/ODataRequest.html":{}}}],["implements",{"_index":677,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["implied",{"_index":2751,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["imports",{"_index":1660,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["include_etag",{"_index":2262,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["include_navigation",{"_index":2254,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["include_parents",{"_index":2255,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["includeannotations",{"_index":372,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["included",{"_index":2744,"title":{},"body":{"license.html":{}}}],["includeinservicedocument",{"_index":250,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["includes",{"_index":371,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["including",{"_index":2726,"title":{},"body":{"license.html":{}}}],["incorporates",{"_index":2690,"title":{},"body":{"index.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["inherited",{"_index":283,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{}}}],["init",{"_index":926,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.api",{"_index":1902,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.body",{"_index":1903,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.etag",{"_index":1918,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.fetchpolicy",{"_index":1912,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.headers",{"_index":1938,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.method",{"_index":1899,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.name",{"_index":1606,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["init.observe",{"_index":1909,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.params",{"_index":1940,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.reportprogress",{"_index":1905,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.resource",{"_index":1901,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.resource.pathandparams",{"_index":1916,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.responsetype",{"_index":1907,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.storage",{"_index":1607,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["init.withcredentials",{"_index":1910,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init?.timeout",{"_index":952,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["inject",{"_index":2625,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":2229,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"injectables/ODataServiceFactory.html":{}}}],["injectables",{"_index":2230,"title":{},"body":{"injectables/ODataServiceFactory.html":{},"overview.html":{}}}],["inmutable",{"_index":2657,"title":{},"body":{"index.html":{}}}],["install",{"_index":2619,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2616,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":809,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["int",{"_index":12,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["integer",{"_index":2376,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"overview.html":{}}}],["isbound",{"_index":233,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["iscacheable",{"_index":920,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["iscacheable(req",{"_index":936,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["iscomplextype",{"_index":2291,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["iscomposable",{"_index":247,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["isedmtype",{"_index":2292,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["isenumtype",{"_index":2293,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["isexpired",{"_index":921,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isexpired(entry",{"_index":938,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isflags",{"_index":345,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["isnamespaceof",{"_index":2163,"title":{},"body":{"classes/ODataSchema.html":{}}}],["isnamespaceof(type",{"_index":2183,"title":{},"body":{"classes/ODataSchema.html":{}}}],["isnavigation",{"_index":2294,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["isstructuredtype",{"_index":2295,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["issubtypeof",{"_index":1237,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["issubtypeof(other",{"_index":1263,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["istypeof",{"_index":976,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["istypeof(type",{"_index":988,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["item",{"_index":1805,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["items",{"_index":2381,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["iterable",{"_index":1057,"title":{},"body":{"classes/ODataCollection.html":{}}}],["iteratorresult",{"_index":1186,"title":{},"body":{"classes/ODataCollection.html":{}}}],["join",{"_index":812,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["join(param_separator",{"_index":2003,"title":{},"body":{"classes/ODataResource.html":{}}}],["json",{"_index":1567,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["json.body",{"_index":2075,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.key",{"_index":1724,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.parameters",{"_index":1726,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.status",{"_index":2077,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.statustext",{"_index":2078,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.stringify(array.from(responses.entries",{"_index":1613,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["json.type",{"_index":1723,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.url",{"_index":2079,"title":{},"body":{"classes/ODataResponse.html":{}}}],["jsonschemacustom",{"_index":2322,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpand",{"_index":2323,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpandoptions",{"_index":2266,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaoptions",{"_index":2324,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaselect",{"_index":2321,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["k",{"_index":1824,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["k.trim",{"_index":2142,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["keep",{"_index":1758,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["keep(...names",{"_index":1820,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["keep(names",{"_index":1767,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["key",{"_index":38,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["key(value",{"_index":1743,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["keyof",{"_index":26,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["keys",{"_index":2426,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["key}=${value",{"_index":1810,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["kind",{"_index":2749,"title":{},"body":{"license.html":{}}}],["lambdaparameter",{"_index":2592,"title":{},"body":{"miscellaneous/functions.html":{}}}],["last",{"_index":778,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["lastread",{"_index":930,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["liability",{"_index":2765,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2762,"title":{},"body":{"license.html":{}}}],["library",{"_index":2612,"title":{},"body":{"index.html":{}}}],["license",{"_index":2706,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":2727,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2752,"title":{},"body":{"license.html":{}}}],["lines",{"_index":901,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["literal",{"_index":219,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/typealiases.html":{}}}],["m",{"_index":1083,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{}}}],["mainly",{"_index":2689,"title":{},"body":{"index.html":{}}}],["make",{"_index":113,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["makes",{"_index":135,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["map",{"_index":736,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{}}}],["map(([key",{"_index":1809,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["map(([name",{"_index":1042,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["map((resp",{"_index":874,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["map(({entities",{"_index":1192,"title":{},"body":{"classes/ODataCollection.html":{}}}],["map(annot",{"_index":1403,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["map(config",{"_index":1400,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{}}}],["map(container",{"_index":2214,"title":{},"body":{"classes/ODataSchema.html":{}}}],["map(e",{"_index":2001,"title":{},"body":{"classes/ODataResource.html":{}}}],["map(f",{"_index":2415,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["map(name",{"_index":2081,"title":{},"body":{"classes/ODataResponse.html":{}}}],["map(pathsegmentsbuilder",{"_index":1717,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["map>(json.parse(storage.getitem(name",{"_index":1609,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["mapfields",{"_index":1524,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapfields(mapper",{"_index":1534,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapper",{"_index":1536,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["match",{"_index":1383,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match(/[&?]{1}\\$skip=(\\d",{"_index":1387,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match(/[&?]{1}\\$skiptoken=([\\d\\w\\s",{"_index":1388,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match(/[&?]{1}\\$top=(\\d",{"_index":1385,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match[1",{"_index":1389,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["matching",{"_index":217,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["max",{"_index":2548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["max_age",{"_index":2069,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["maxage",{"_index":168,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["maxlength",{"_index":37,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["maxpagesize",{"_index":1932,"title":{},"body":{"classes/ODataRequest.html":{}}}],["mediacontenttype",{"_index":1372,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediacontenttype(value",{"_index":80,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediaeditlink",{"_index":1370,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediaeditlink(value",{"_index":79,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediaetag",{"_index":1361,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediaetag(value",{"_index":72,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediareadlink",{"_index":1368,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediareadlink(value",{"_index":77,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["member",{"_index":203,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["members",{"_index":201,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["merchantability",{"_index":2754,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2198,"title":{},"body":{"classes/ODataSchema.html":{},"license.html":{}}}],["meta",{"_index":1154,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["meta.annotations",{"_index":1509,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["meta.data(payload",{"_index":2112,"title":{},"body":{"classes/ODataResponse.html":{}}}],["meta.type",{"_index":1173,"title":{},"body":{"classes/ODataCollection.html":{}}}],["metadata",{"_index":30,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["metadataetag",{"_index":1363,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["metadataetag(value",{"_index":73,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["method",{"_index":868,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["methods",{"_index":220,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["min",{"_index":2547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":149,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":2538,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["missing",{"_index":111,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mit",{"_index":2707,"title":{},"body":{"license.html":{}}}],["model",{"_index":206,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["model(entity",{"_index":1993,"title":{},"body":{"classes/ODataResource.html":{}}}],["model.isvalid",{"_index":1218,"title":{},"body":{"classes/ODataCollection.html":{}}}],["model.save",{"_index":1219,"title":{},"body":{"classes/ODataCollection.html":{}}}],["model.toentity",{"_index":1179,"title":{},"body":{"classes/ODataCollection.html":{}}}],["models",{"_index":1073,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["models.length",{"_index":1188,"title":{},"body":{"classes/ODataCollection.html":{}}}],["models/collection",{"_index":1488,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["models/index",{"_index":1971,"title":{},"body":{"classes/ODataResource.html":{}}}],["models/model",{"_index":1445,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["models[pointer",{"_index":1189,"title":{},"body":{"classes/ODataCollection.html":{}}}],["modify",{"_index":2729,"title":{},"body":{"license.html":{}}}],["module",{"_index":1642,"title":{"modules/ODataModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":1644,"title":{"modules.html":{}},"body":{"modules/ODataModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":1651,"title":{},"body":{"modules/ODataModule.html":{}}}],["multipart_mixed",{"_index":756,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["multipart_mixed_boundary",{"_index":755,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["multipart_mixed_boundary}${changesetboundary",{"_index":885,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["mutable",{"_index":2663,"title":{},"body":{"index.html":{}}}],["n",{"_index":771,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["name",{"_index":58,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:string",{"_index":2280,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["namednodemap",{"_index":652,"title":{},"body":{"classes/Field.html":{}}}],["names",{"_index":1005,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["names.foreach(name",{"_index":1818,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["names.indexof(k",{"_index":1823,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["names.indexof(type",{"_index":1009,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["names.join",{"_index":1565,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["names.map(name",{"_index":1563,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["names.push(`${this.alias}.${this.name",{"_index":2394,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["names.push(`${this.schema.alias}.${this.name",{"_index":1008,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["namespace",{"_index":188,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["namespace}.${config.name",{"_index":1037,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{}}}],["navigation",{"_index":41,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["navigationproperties",{"_index":291,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["navigationproperty",{"_index":546,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["navigationpropertybinding",{"_index":327,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["navigationpropertybindings",{"_index":472,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["needs",{"_index":2438,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["nestedexpandoptions",{"_index":2791,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["network",{"_index":114,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["never",{"_index":1136,"title":{},"body":{"classes/ODataCollection.html":{}}}],["new",{"_index":132,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["new(...params",{"_index":207,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitySet.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["newentity",{"_index":1507,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["newline",{"_index":752,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["newline_regexp",{"_index":764,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["next",{"_index":1071,"title":{},"body":{"classes/ODataCollection.html":{}}}],["next(options",{"_index":1114,"title":{},"body":{"classes/ODataCollection.html":{}}}],["nextlink",{"_index":1301,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["nextlink(value",{"_index":75,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ngmodule",{"_index":1653,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["none",{"_index":151,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["none_parser",{"_index":1030,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["noninfringement",{"_index":2758,"title":{},"body":{"license.html":{}}}],["note",{"_index":92,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["notice",{"_index":2742,"title":{},"body":{"license.html":{}}}],["now",{"_index":775,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["now().tostring(36",{"_index":782,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["npm",{"_index":2620,"title":{},"body":{"index.html":{}}}],["null",{"_index":656,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/StoragePayload.html":{}}}],["nullable",{"_index":40,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["number(directive.split(\"=\")[1",{"_index":2152,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["number(match[1",{"_index":1386,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["number(statusparts[1",{"_index":911,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["number.isnan(maxage",{"_index":2153,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["o",{"_index":1826,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["o.split",{"_index":2141,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["obj",{"_index":1850,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object",{"_index":1306,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["object.assign",{"_index":1045,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{}}}],["object.assign(acc",{"_index":1050,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["object.assign(acc.parameters",{"_index":2207,"title":{},"body":{"classes/ODataSchema.html":{}}}],["object.assign(entity",{"_index":1508,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["object.assign(options",{"_index":2038,"title":{},"body":{"classes/ODataResource.html":{}}}],["object.assign(params",{"_index":1807,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{}}}],["object.assign(this",{"_index":674,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["object.assign({etag",{"_index":1505,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["object.assign({field",{"_index":2348,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["object.assign({options",{"_index":1013,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataStructuredType.html":{}}}],["object.assign({responsetype",{"_index":1294,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["object.entries(config.fields",{"_index":1553,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["object.entries(config.parameters",{"_index":1041,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["object.entries(params",{"_index":2000,"title":{},"body":{"classes/ODataResource.html":{}}}],["object.entries(this.params",{"_index":1808,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(this.options",{"_index":1821,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(value",{"_index":2282,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["object.values(key",{"_index":2432,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["objects",{"_index":662,"title":{},"body":{"classes/Field.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.get(obj",{"_index":1860,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.has(obj",{"_index":1866,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.merge(obj",{"_index":1868,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.set(obj",{"_index":1856,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["objects.unset(obj",{"_index":1862,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["obs",{"_index":1097,"title":{},"body":{"classes/ODataCollection.html":{}}}],["obs$.pipe",{"_index":1191,"title":{},"body":{"classes/ODataCollection.html":{}}}],["obs$.pipe(map",{"_index":1210,"title":{},"body":{"classes/ODataCollection.html":{}}}],["observable",{"_index":20,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["observe",{"_index":860,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["obtaining",{"_index":2719,"title":{},"body":{"license.html":{}}}],["odata",{"_index":1498,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResponseOptions.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["odata.etag(entity",{"_index":1500,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["odata.metadata",{"_index":2143,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata.streaming",{"_index":2145,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/docs",{"_index":2702,"title":{},"body":{"index.html":{}}}],["odata/src/lib/cache/cache.ts",{"_index":914,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["odata/src/lib/cache/cache.ts:14",{"_index":927,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:15",{"_index":925,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:20",{"_index":933,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:21",{"_index":944,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:23",{"_index":929,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:31",{"_index":942,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:41",{"_index":931,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:46",{"_index":945,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:55",{"_index":940,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:59",{"_index":937,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:63",{"_index":935,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/memory.ts",{"_index":1580,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:12",{"_index":1584,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:3",{"_index":1581,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:8",{"_index":1585,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/storage.ts",{"_index":1600,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odata/src/lib/cache/storage.ts:12",{"_index":1601,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:23",{"_index":1603,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:27",{"_index":1602,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/client.ts",{"_index":2573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["odata/src/lib/models/collection.ts",{"_index":1056,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:112",{"_index":1096,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:123",{"_index":1113,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:138",{"_index":1115,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:150",{"_index":1105,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:160",{"_index":1103,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:173",{"_index":1119,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:187",{"_index":1111,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:197",{"_index":1109,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:20",{"_index":1085,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:201",{"_index":1129,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:207",{"_index":1131,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:21",{"_index":1082,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:213",{"_index":1133,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:22",{"_index":1084,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:220",{"_index":1101,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:227",{"_index":1099,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:23",{"_index":1123,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:27",{"_index":1125,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:37",{"_index":1087,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:38",{"_index":1088,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:39",{"_index":1091,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:40",{"_index":1089,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:41",{"_index":1090,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:42",{"_index":1080,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:56",{"_index":1107,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:63",{"_index":1127,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:67",{"_index":1093,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:79",{"_index":1117,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:83",{"_index":1120,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:87",{"_index":1108,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:98",{"_index":1121,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/model.ts",{"_index":2797,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/module.ts",{"_index":1645,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["odata/src/lib/module.ts:19",{"_index":1650,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata/src/lib/options.ts",{"_index":676,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:10",{"_index":682,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:11",{"_index":688,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:13",{"_index":686,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:14",{"_index":683,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:15",{"_index":691,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:16",{"_index":687,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:17",{"_index":680,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:32",{"_index":693,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:6",{"_index":690,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:7",{"_index":685,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:8",{"_index":689,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:9",{"_index":684,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/parsers/callable.ts",{"_index":1016,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:10",{"_index":1670,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:11",{"_index":1668,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:12",{"_index":1667,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:21",{"_index":1673,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:27",{"_index":1672,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:33",{"_index":1020,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:34",{"_index":1024,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:35",{"_index":1023,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:36",{"_index":1022,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:37",{"_index":1019,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:48",{"_index":1026,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:53",{"_index":1029,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:59",{"_index":1025,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:8",{"_index":1669,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:9",{"_index":1671,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/edm.ts",{"_index":2798,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/parsers/enum",{"_index":1545,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["odata/src/lib/parsers/structured",{"_index":2290,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/builder.ts",{"_index":2545,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/path",{"_index":1674,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/query",{"_index":1755,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/request.ts",{"_index":1870,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:10",{"_index":1876,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:11",{"_index":1880,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:12",{"_index":1884,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:13",{"_index":1888,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:14",{"_index":1887,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:15",{"_index":1877,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:16",{"_index":1878,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:17",{"_index":1882,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:18",{"_index":1883,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:19",{"_index":1874,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:8",{"_index":1879,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:80",{"_index":1890,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:88",{"_index":1892,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:9",{"_index":1875,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:92",{"_index":1894,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/resource.ts",{"_index":1945,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:101",{"_index":1964,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:109",{"_index":1952,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:111",{"_index":1962,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:125",{"_index":1963,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:132",{"_index":1949,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:137",{"_index":1961,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:198",{"_index":1955,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:205",{"_index":1959,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:212",{"_index":1960,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:220",{"_index":1957,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:228",{"_index":1953,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:29",{"_index":1947,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:30",{"_index":1948,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:31",{"_index":1946,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:46",{"_index":1965,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:53",{"_index":1966,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:57",{"_index":1956,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:68",{"_index":1958,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:79",{"_index":1951,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:88",{"_index":1950,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:97",{"_index":1954,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/responses/csdl/csdl",{"_index":229,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["odata/src/lib/resources/responses/meta.ts",{"_index":1295,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:100",{"_index":1421,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:104",{"_index":1423,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:108",{"_index":1425,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:11",{"_index":1616,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:112",{"_index":1427,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:116",{"_index":1429,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:120",{"_index":1406,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:121",{"_index":1430,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:128",{"_index":1410,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:134",{"_index":1309,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:138",{"_index":1311,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:142",{"_index":1313,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:146",{"_index":1321,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:150",{"_index":1323,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:154",{"_index":1325,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:158",{"_index":1327,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:162",{"_index":1329,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:167",{"_index":1331,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:172",{"_index":1333,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:177",{"_index":1303,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:178",{"_index":1335,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:185",{"_index":1315,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:28",{"_index":1617,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:29",{"_index":1627,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:36",{"_index":1618,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:37",{"_index":1629,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:44",{"_index":1623,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:49",{"_index":1621,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:5",{"_index":1619,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:50",{"_index":1622,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:54",{"_index":1752,"title":{},"body":{"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:58",{"_index":1753,"title":{},"body":{"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:6",{"_index":1620,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:62",{"_index":1754,"title":{},"body":{"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:68",{"_index":1408,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:7",{"_index":1625,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:72",{"_index":1409,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:76",{"_index":1407,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:80",{"_index":1412,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:84",{"_index":1414,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:88",{"_index":1416,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:92",{"_index":1418,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:96",{"_index":1420,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/metadata.ts",{"_index":505,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:20",{"_index":507,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:21",{"_index":508,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/options.ts",{"_index":2117,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:10",{"_index":2126,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:11",{"_index":2123,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:13",{"_index":2122,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:14",{"_index":2121,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:23",{"_index":2135,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:27",{"_index":2128,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:31",{"_index":2132,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:48",{"_index":2134,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:54",{"_index":2130,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:6",{"_index":2127,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:7",{"_index":2125,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:9",{"_index":2124,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/response.ts",{"_index":2042,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:103",{"_index":2051,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:112",{"_index":2053,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:122",{"_index":2052,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:132",{"_index":2061,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:14",{"_index":2049,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:142",{"_index":2064,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:15",{"_index":2046,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:31",{"_index":2056,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:43",{"_index":2058,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:61",{"_index":2063,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:73",{"_index":2048,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:74",{"_index":2065,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:95",{"_index":2060,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/types.ts",{"_index":2800,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/types/batch.ts",{"_index":720,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["odata/src/lib/resources/types/batch.ts:137",{"_index":731,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:51",{"_index":727,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:52",{"_index":728,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:57",{"_index":735,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:75",{"_index":734,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/count.ts",{"_index":1231,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:12",{"_index":1246,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:18",{"_index":1281,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:30",{"_index":1245,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:36",{"_index":1248,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts",{"_index":1631,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:11",{"_index":1632,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:16",{"_index":1633,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:21",{"_index":1634,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:29",{"_index":1635,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/options.ts",{"_index":2799,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/types/value.ts",{"_index":2474,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:12",{"_index":2480,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:20",{"_index":2479,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:26",{"_index":2476,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:32",{"_index":2478,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:38",{"_index":2481,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/schema/annotation.ts",{"_index":668,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/annotation.ts:4",{"_index":670,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/callable.ts",{"_index":974,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:10",{"_index":980,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:11",{"_index":978,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:22",{"_index":989,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:29",{"_index":991,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:33",{"_index":986,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:6",{"_index":984,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:7",{"_index":981,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:8",{"_index":983,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:9",{"_index":979,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/entity",{"_index":1391,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{}}}],["odata/src/lib/schema/enum",{"_index":1521,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["odata/src/lib/schema/schema.ts",{"_index":2158,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:11",{"_index":2166,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:12",{"_index":2172,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:13",{"_index":2165,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:14",{"_index":2171,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:15",{"_index":2170,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:16",{"_index":2167,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:17",{"_index":2168,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:18",{"_index":2164,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:43",{"_index":2184,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:47",{"_index":2185,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:51",{"_index":2187,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:56",{"_index":2174,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:61",{"_index":2180,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:65",{"_index":2182,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:69",{"_index":2176,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:73",{"_index":2178,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:78",{"_index":2173,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/structured",{"_index":2247,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["odata/src/lib/services/entity",{"_index":1461,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["odata/src/lib/services/entity.ts",{"_index":1432,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:11",{"_index":1438,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:16",{"_index":1442,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:21",{"_index":1444,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:6",{"_index":1436,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:9",{"_index":1440,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/factory.ts",{"_index":2231,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:10",{"_index":2234,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:15",{"_index":2236,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:7",{"_index":2232,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/singleton.ts",{"_index":2239,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:11",{"_index":2241,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:15",{"_index":2245,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:6",{"_index":2242,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/types.ts",{"_index":7,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/types.ts:143",{"_index":2508,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:144",{"_index":2509,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:148",{"_index":225,"title":{},"body":{"interfaces/Cache.html":{}}}],["odata/src/lib/types.ts:149",{"_index":223,"title":{},"body":{"interfaces/Cache.html":{}}}],["odata/wiki",{"_index":2705,"title":{},"body":{"index.html":{}}}],["odata_annotation_prefix",{"_index":50,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_configurations",{"_index":1656,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata_context",{"_index":55,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_count",{"_index":53,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_etag",{"_index":54,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["odata_function_prefix",{"_index":51,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_id",{"_index":52,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_media_etag",{"_index":56,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_version",{"_index":757,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata_version_headers",{"_index":2067,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata_version_headers.indexof(k",{"_index":2095,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataannotation",{"_index":667,"title":{"classes/ODataAnnotation.html":{}},"body":{"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odataannotation(annot",{"_index":1404,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odataapi",{"_index":765,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{}}}],["odataapioptions",{"_index":675,"title":{"classes/ODataApiOptions.html":{}},"body":{"classes/ODataApiOptions.html":{}}}],["odatabatchrequest",{"_index":719,"title":{"classes/ODataBatchRequest.html":{}},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchrequest(req",{"_index":862,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource",{"_index":833,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource(api",{"_index":848,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource(this.api",{"_index":843,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatacache",{"_index":913,"title":{"classes/ODataCache.html":{}},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatacache:14",{"_index":1583,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:15",{"_index":1582,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:20",{"_index":1588,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:21",{"_index":1593,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:23",{"_index":1586,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:31",{"_index":1592,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:41",{"_index":1587,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:46",{"_index":1594,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:55",{"_index":1591,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:59",{"_index":1590,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:63",{"_index":1589,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacacheentry",{"_index":939,"title":{"interfaces/ODataCacheEntry.html":{}},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatacallable",{"_index":973,"title":{"classes/ODataCallable.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataSchema.html":{}}}],["odatacallable(config",{"_index":2211,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatacallableparser",{"_index":982,"title":{"classes/ODataCallableParser.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odatacallableparser(config",{"_index":1003,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odataclient",{"_index":738,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odatacollection",{"_index":1055,"title":{"classes/ODataCollection.html":{}},"body":{"classes/ODataCollection.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataResource.html":{}}}],["odatacontext",{"_index":29,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odatacountresource",{"_index":1230,"title":{"classes/ODataCountResource.html":{}},"body":{"classes/ODataCountResource.html":{}}}],["odatacountresource(api",{"_index":1287,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odatacountresource(this.api",{"_index":1291,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odataentities",{"_index":1142,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odataentitiesmeta",{"_index":1081,"title":{"classes/ODataEntitiesMeta.html":{}},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{}}}],["odataentitiesmeta(data",{"_index":1160,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitiesmeta(payload",{"_index":2115,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataentitiesmeta(this.annotations",{"_index":1377,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odataentity",{"_index":2054,"title":{},"body":{"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odataentitycontainer",{"_index":1390,"title":{"classes/ODataEntityContainer.html":{}},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{}}}],["odataentitycontainer(container",{"_index":2215,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odataentitymeta",{"_index":1256,"title":{"classes/ODataEntityMeta.html":{}},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{}}}],["odataentitymeta(data",{"_index":1379,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odataentitymeta(payload",{"_index":2111,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataentitymeta(this.annotations",{"_index":1356,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odataentityresource",{"_index":1138,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntitySetService.html":{}}}],["odataentityservice",{"_index":1431,"title":{"classes/ODataEntityService.html":{}},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odataentityservice:11",{"_index":1484,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odataentityservice:9",{"_index":1485,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["odataentityset",{"_index":1393,"title":{"classes/ODataEntitySet.html":{}},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataSchema.html":{}}}],["odataentityset(config",{"_index":1401,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["odataentitysetresource",{"_index":1137,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntitySetService.html":{}}}],["odataentitysetresource).action(path",{"_index":1229,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).count().get",{"_index":1223,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).function(path",{"_index":1228,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).query",{"_index":1227,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).schema",{"_index":1224,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).segment",{"_index":1226,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetservice",{"_index":1460,"title":{"classes/ODataEntitySetService.html":{}},"body":{"classes/ODataEntitySetService.html":{},"injectables/ODataServiceFactory.html":{}}}],["odataenumtype",{"_index":1520,"title":{"classes/ODataEnumType.html":{}},"body":{"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{}}}],["odataenumtype(config",{"_index":2195,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odataenumtypefieldparser",{"_index":1528,"title":{"classes/ODataEnumTypeFieldParser.html":{}},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["odataenumtypefieldparser(name",{"_index":1555,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["odataenumtypeparser",{"_index":1526,"title":{"classes/ODataEnumTypeParser.html":{}},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odataenumtypeparser(config",{"_index":1539,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["odatafunctionresource",{"_index":1140,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odatahelper",{"_index":696,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["odatahelper[this.version",{"_index":718,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["odatainmemorycache",{"_index":1579,"title":{"classes/ODataInMemoryCache.html":{}},"body":{"classes/ODataInMemoryCache.html":{}}}],["odatainstoragecache",{"_index":1599,"title":{"classes/ODataInStorageCache.html":{}},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatameta",{"_index":1296,"title":{"classes/ODataMeta.html":{}},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:28",{"_index":1304,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:36",{"_index":1305,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:44",{"_index":1319,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:49",{"_index":1316,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:5",{"_index":1307,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:50",{"_index":1317,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:6",{"_index":1308,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatametadata",{"_index":518,"title":{},"body":{"classes/Field.html":{},"classes/ODataMetadataResource.html":{}}}],["odatametadata(body",{"_index":1641,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadata.tag_reference",{"_index":622,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_schema",{"_index":633,"title":{},"body":{"classes/Field.html":{}}}],["odatametadataresource",{"_index":1630,"title":{"classes/ODataMetadataResource.html":{}},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadataresource(api",{"_index":1638,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadataresource(this.api",{"_index":1636,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadatatype",{"_index":148,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odatamodel",{"_index":1144,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataResource.html":{},"classes/ODataSingletonService.html":{}}}],["odatamodule",{"_index":1643,"title":{"modules/ODataModule.html":{}},"body":{"modules/ODataModule.html":{},"index.html":{},"modules.html":{}}}],["odatamodule.forroot",{"_index":2622,"title":{},"body":{"index.html":{}}}],["odatamodule.forroot(trippinconfig",{"_index":2687,"title":{},"body":{"index.html":{}}}],["odatanavigationpropertyresource",{"_index":1139,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataparameterparser",{"_index":1021,"title":{"classes/ODataParameterParser.html":{}},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odataparameterparser(name",{"_index":1043,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odatapathsegments",{"_index":739,"title":{"classes/ODataPathSegments.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["odatapathsegments(this.tojson",{"_index":1728,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["odataproperty",{"_index":2062,"title":{},"body":{"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odatapropertymeta",{"_index":1351,"title":{"classes/ODataPropertyMeta.html":{}},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponse.html":{}}}],["odatapropertymeta(payload",{"_index":2116,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odatapropertymeta(this.annotations",{"_index":1352,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odataqueryoptions",{"_index":1243,"title":{"classes/ODataQueryOptions.html":{}},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{}}}],["odataqueryoptions(this.tojson",{"_index":1812,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["odatarequest",{"_index":726,"title":{"classes/ODataRequest.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["odataresource",{"_index":742,"title":{"classes/ODataResource.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:101",{"_index":1276,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:109",{"_index":1258,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:111",{"_index":1274,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:125",{"_index":1275,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:132",{"_index":1250,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:137",{"_index":1273,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:198",{"_index":1262,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:205",{"_index":1269,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:212",{"_index":1271,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:220",{"_index":1266,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:228",{"_index":1260,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:29",{"_index":1241,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:30",{"_index":1242,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:31",{"_index":1244,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:46",{"_index":1277,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:53",{"_index":1278,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:57",{"_index":1264,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:68",{"_index":1267,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:79",{"_index":1257,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:88",{"_index":1253,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:97",{"_index":1261,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresponse",{"_index":766,"title":{"classes/ODataResponse.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["odataresponse.fromjson(req",{"_index":1615,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odataresponseoptions",{"_index":2047,"title":{"classes/ODataResponseOptions.html":{}},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["odataresponseoptions(this",{"_index":2139,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odataresponseoptions(this.api.options",{"_index":2087,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataschema",{"_index":977,"title":{"classes/ODataSchema.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odatasegment",{"_index":1678,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["odataservicefactory",{"_index":1647,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odatasettings",{"_index":1654,"title":{},"body":{"modules/ODataModule.html":{}}}],["odatasettings(...configs",{"_index":1659,"title":{},"body":{"modules/ODataModule.html":{}}}],["odatasingletonresource",{"_index":2243,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odatasingletonservice",{"_index":2237,"title":{"classes/ODataSingletonService.html":{}},"body":{"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{}}}],["odatastructuredtype",{"_index":2169,"title":{"classes/ODataStructuredType.html":{}},"body":{"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odatastructuredtype(config",{"_index":2197,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatastructuredtypefieldparser",{"_index":2256,"title":{"classes/ODataStructuredTypeFieldParser.html":{}},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odatastructuredtypefieldparser(name",{"_index":2392,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odatastructuredtypeparser",{"_index":1973,"title":{"classes/ODataStructuredTypeParser.html":{}},"body":{"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["odatastructuredtypeparser(config",{"_index":2272,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["odatausage",{"_index":2621,"title":{},"body":{"index.html":{}}}],["odatavalueresource",{"_index":2473,"title":{"classes/ODataValueResource.html":{}},"body":{"classes/ODataValueResource.html":{}}}],["odatavalueresource(api",{"_index":2485,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odatavalueresource(this.api",{"_index":2486,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odataversion",{"_index":144,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odataversionhelper",{"_index":49,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odv",{"_index":1336,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["of(cached",{"_index":967,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["of(model",{"_index":1222,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ondelete",{"_index":387,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["one",{"_index":1839,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["onerror",{"_index":722,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onerror(content",{"_index":729,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onload",{"_index":723,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onload(content",{"_index":733,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["open",{"_index":205,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["opentype",{"_index":292,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["opt",{"_index":1339,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["opt.headers",{"_index":1343,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["opt.headers.get(\"etag",{"_index":1344,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["opt.options",{"_index":1340,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["option",{"_index":1759,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["option(name",{"_index":1769,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"miscellaneous/functions.html":{}}}],["optionhandler",{"_index":1771,"title":{"classes/OptionHandler.html":{}},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["optionhandler(this.options",{"_index":1815,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["options",{"_index":85,"title":{"interfaces/Options.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["options.apiname",{"_index":2013,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.attrs",{"_index":2022,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.clear",{"_index":2484,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["options.custom",{"_index":2417,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["options.custom[f.name",{"_index":2418,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["options.etag",{"_index":2024,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.expand",{"_index":2411,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["options.fetchpolicy",{"_index":2027,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.headers",{"_index":867,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResource.html":{}}}],["options.helper.type(value",{"_index":2346,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["options.keep(queryoptionnames.filter",{"_index":1285,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["options.meta",{"_index":1159,"title":{},"body":{"classes/ODataCollection.html":{}}}],["options.params",{"_index":871,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResource.html":{}}}],["options.reportprogress",{"_index":2026,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.resource",{"_index":1156,"title":{},"body":{"classes/ODataCollection.html":{}}}],["options.resource?.api.options",{"_index":1161,"title":{},"body":{"classes/ODataCollection.html":{}}}],["options.responsetype",{"_index":2020,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.select",{"_index":2412,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["options.select).indexof(f.name",{"_index":2413,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["options.stringasenum",{"_index":1562,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["options.ts",{"_index":1756,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["options.ts:101",{"_index":1763,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:106",{"_index":2491,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:109",{"_index":2507,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:113",{"_index":2503,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:117",{"_index":2497,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:122",{"_index":2505,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:128",{"_index":2492,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:134",{"_index":2500,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:138",{"_index":2501,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:145",{"_index":2495,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:151",{"_index":2493,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:164",{"_index":2502,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:169",{"_index":2498,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:174",{"_index":2504,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:185",{"_index":2499,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:190",{"_index":2494,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:196",{"_index":2496,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:22",{"_index":1761,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:29",{"_index":1772,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:58",{"_index":1776,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:65",{"_index":1775,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:69",{"_index":1764,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:74",{"_index":1770,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:81",{"_index":1766,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:85",{"_index":1774,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:89",{"_index":1768,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:96",{"_index":1762,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.withcount",{"_index":2017,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.withcredentials",{"_index":872,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResource.html":{}}}],["optionshelper",{"_index":157,"title":{"interfaces/OptionsHelper.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["opts",{"_index":1639,"title":{},"body":{"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["opts.include_etag",{"_index":2284,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["opts.include_navigation",{"_index":2276,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["opts.include_parents",{"_index":2278,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["orderby",{"_index":1783,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["orderbyobject",{"_index":2792,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["orderbytype",{"_index":2793,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["other.type",{"_index":1978,"title":{},"body":{"classes/ODataResource.html":{}}}],["otherwise",{"_index":141,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"license.html":{}}}],["out",{"_index":2769,"title":{},"body":{"license.html":{}}}],["overview",{"_index":2773,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":25,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["p.configure(settings",{"_index":1054,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.name",{"_index":1047,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.serialize(params[p.name",{"_index":1051,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.startswith(application_json",{"_index":2092,"title":{},"body":{"classes/ODataResponse.html":{}}}],["package",{"_index":2520,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":161,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["param_separator",{"_index":1968,"title":{},"body":{"classes/ODataResource.html":{}}}],["parameter",{"_index":208,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["parameter.type",{"_index":1031,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parameters",{"_index":212,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["parameters(value",{"_index":1747,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["params",{"_index":87,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["params[p.name",{"_index":1048,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parent",{"_index":2274,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parent.children.push(this",{"_index":2404,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parent.fields.filter(field",{"_index":2275,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["parent.parent",{"_index":2279,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["parentelement.children",{"_index":665,"title":{},"body":{"classes/Field.html":{}}}],["parse",{"_index":648,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{}}}],["parse(entities",{"_index":1116,"title":{},"body":{"classes/ODataCollection.html":{}}}],["parse(parser",{"_index":2059,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parsenot",{"_index":2568,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsenot(builtfilters",{"_index":2594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":170,"title":{"interfaces/Parser.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parser).serialize(e",{"_index":2007,"title":{},"body":{"classes/ODataResource.html":{}}}],["parser.deserialize(value",{"_index":2106,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parser.findparser(c",{"_index":2104,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parser.parsefromstring(xml",{"_index":612,"title":{},"body":{"classes/Field.html":{}}}],["parser.serialize(value",{"_index":2009,"title":{},"body":{"classes/ODataResource.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["parsers",{"_index":184,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parsers/structured",{"_index":2066,"title":{},"body":{"classes/ODataResponse.html":{}}}],["parsersettings",{"_index":1012,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataStructuredType.html":{}}}],["partial",{"_index":1252,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{}}}],["particular",{"_index":2756,"title":{},"body":{"license.html":{}}}],["partner",{"_index":388,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["parts",{"_index":1987,"title":{},"body":{"classes/ODataResource.html":{}}}],["parts[0",{"_index":1989,"title":{},"body":{"classes/ODataResource.html":{}}}],["pass",{"_index":128,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["patch",{"_index":806,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["patch'].indexof(this.method",{"_index":1930,"title":{},"body":{"classes/ODataRequest.html":{}}}],["patch(attrs",{"_index":1265,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["path",{"_index":209,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["path(value",{"_index":1741,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["path.indexof(query_separator",{"_index":1986,"title":{},"body":{"classes/ODataResource.html":{}}}],["path.split(query_separator",{"_index":1988,"title":{},"body":{"classes/ODataResource.html":{}}}],["path_separator",{"_index":1699,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathandparams",{"_index":1238,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["pathsegmentnames",{"_index":740,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["pathsegmentnames.function",{"_index":1703,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathsegments",{"_index":1232,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["pathsegmentsbuilder",{"_index":2569,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pathsegmentsbuilder(segment",{"_index":1700,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["pathwithparams",{"_index":1872,"title":{},"body":{"classes/ODataRequest.html":{}}}],["path}${query_separator}${querystring",{"_index":2004,"title":{},"body":{"classes/ODataResource.html":{}}}],["path}?${this.params",{"_index":1942,"title":{},"body":{"classes/ODataRequest.html":{}}}],["payload",{"_index":174,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["people",{"_index":2671,"title":{},"body":{"index.html":{}}}],["people.expand",{"_index":2673,"title":{},"body":{"index.html":{}}}],["people.get({withcount",{"_index":2681,"title":{},"body":{"index.html":{}}}],["peopleservice",{"_index":2641,"title":{},"body":{"index.html":{}}}],["peopleservice.entities",{"_index":2672,"title":{},"body":{"index.html":{}}}],["permission",{"_index":2713,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":13,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["permit",{"_index":2736,"title":{},"body":{"license.html":{}}}],["person",{"_index":2718,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2737,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2250,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["pick(value",{"_index":2260,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["pipe(catcherror((error",{"_index":1513,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["pipe(map(({entity",{"_index":1497,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["pipe(map(entities",{"_index":1205,"title":{},"body":{"classes/ODataCollection.html":{}}}],["pipe(switchmap",{"_index":2653,"title":{},"body":{"index.html":{}}}],["pipe(tap(model",{"_index":1220,"title":{},"body":{"classes/ODataCollection.html":{}}}],["plainobject",{"_index":1696,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["please",{"_index":2606,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":1185,"title":{},"body":{"classes/ODataCollection.html":{}}}],["policies",{"_index":96,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["policy",{"_index":964,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["portions",{"_index":2746,"title":{},"body":{"license.html":{}}}],["post",{"_index":805,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["post(attrs",{"_index":1268,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["post(entity",{"_index":1496,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["post(func",{"_index":849,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["precision",{"_index":43,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["predicate",{"_index":1396,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["predicate(this",{"_index":2441,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["prefer",{"_index":1896,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.length",{"_index":1935,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.push(`odata.maxpagesize=${this.api.options.prefermaxpagesize",{"_index":1934,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefer.push(`return=${this.api.options.preferreturn",{"_index":1931,"title":{},"body":{"classes/ODataRequest.html":{}}}],["prefermaxpagesize",{"_index":163,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["preferreturn",{"_index":164,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["prefix",{"_index":781,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["present",{"_index":105,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["primitive",{"_index":1830,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["private",{"_index":154,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["project",{"_index":2608,"title":{},"body":{"index.html":{}}}],["projects/.../batch.ts",{"_index":2563,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../builder.ts",{"_index":2544,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../client.ts",{"_index":2552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../edm.ts",{"_index":2782,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../metadata.ts",{"_index":2540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../model.ts",{"_index":2780,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../module.ts",{"_index":2560,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../options.ts",{"_index":2787,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../path",{"_index":2541,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../query",{"_index":2542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../structured",{"_index":2790,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../types.ts",{"_index":2777,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["properties(value",{"_index":71,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["property",{"_index":33,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["property(name",{"_index":1318,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["property(value",{"_index":61,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["property.enum",{"_index":1570,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["property.ts",{"_index":384,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["property.ts:1",{"_index":477,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:14",{"_index":420,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:15",{"_index":421,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:16",{"_index":422,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:17",{"_index":424,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:18",{"_index":423,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:19",{"_index":419,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:25",{"_index":392,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:3",{"_index":478,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:30",{"_index":395,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:31",{"_index":393,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:32",{"_index":396,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:33",{"_index":394,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:39",{"_index":434,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:4",{"_index":480,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:41",{"_index":435,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:42",{"_index":436,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:46",{"_index":408,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:48",{"_index":409,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:5",{"_index":479,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:9",{"_index":418,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["propertyref",{"_index":544,"title":{},"body":{"classes/Field.html":{}}}],["propertyrefs",{"_index":308,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["propname",{"_index":2591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propprefix",{"_index":2580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["protected",{"_index":649,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["provide",{"_index":1662,"title":{},"body":{"modules/ODataModule.html":{}}}],["provided",{"_index":2747,"title":{},"body":{"license.html":{}}}],["providers",{"_index":1646,"title":{},"body":{"modules/ODataModule.html":{}}}],["public",{"_index":153,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["publish",{"_index":2730,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2757,"title":{},"body":{"license.html":{}}}],["push",{"_index":2488,"title":{},"body":{"classes/OptionHandler.html":{}}}],["push(value",{"_index":1835,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["put",{"_index":221,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCountResource.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["put(attrs",{"_index":1270,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["put(entity",{"_index":1504,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["put(key",{"_index":173,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["putresponse",{"_index":922,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["putresponse(req",{"_index":943,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["qualifier",{"_index":268,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["queried",{"_index":140,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["queries",{"_index":2638,"title":{},"body":{"index.html":{}}}],["query",{"_index":101,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["query_separator",{"_index":1969,"title":{},"body":{"classes/ODataResource.html":{}}}],["querying",{"_index":2603,"title":{},"body":{"index.html":{}}}],["queryoptionnames",{"_index":1282,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["queryoptionnames.expand",{"_index":1794,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.filter",{"_index":1788,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.format",{"_index":1795,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.orderby",{"_index":1790,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.search",{"_index":1286,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.select",{"_index":1787,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skip",{"_index":1792,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skiptoken",{"_index":1793,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.top",{"_index":1791,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.transform",{"_index":1789,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptions",{"_index":1233,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"miscellaneous/typealiases.html":{}}}],["querystring",{"_index":1999,"title":{},"body":{"classes/ODataResource.html":{}}}],["r",{"_index":1027,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataParameterParser.html":{}}}],["range",{"_index":2375,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["raw",{"_index":2794,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["readlink",{"_index":1300,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["readlink(value",{"_index":76,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["reattach",{"_index":1169,"title":{},"body":{"classes/ODataCollection.html":{}}}],["records",{"_index":1152,"title":{},"body":{"classes/ODataCollection.html":{}}}],["reduce",{"_index":2218,"title":{},"body":{"classes/ODataSchema.html":{}}}],["reduce((acc",{"_index":1049,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["ref",{"_index":46,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ref.add(model._resource",{"_index":1209,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ref.remove(model._resource",{"_index":1213,"title":{},"body":{"classes/ODataCollection.html":{}}}],["reference",{"_index":513,"title":{},"body":{"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["reference.ts",{"_index":364,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["reference.ts:14",{"_index":366,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:16",{"_index":368,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:17",{"_index":367,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:21",{"_index":377,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:23",{"_index":380,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:24",{"_index":378,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:25",{"_index":379,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:3",{"_index":429,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:5",{"_index":432,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:6",{"_index":431,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:7",{"_index":430,"title":{},"body":{"classes/CsdlReference.html":{}}}],["referencedproperty",{"_index":401,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["references",{"_index":606,"title":{},"body":{"classes/Field.html":{}}}],["referentialconstraint",{"_index":548,"title":{},"body":{"classes/Field.html":{}}}],["referentialconstraints",{"_index":389,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["regardless",{"_index":124,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["region",{"_index":177,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["related",{"_index":2607,"title":{},"body":{"index.html":{}}}],["relative",{"_index":800,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["remove",{"_index":923,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"index.html":{}}}],["remove(...names",{"_index":1817,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["remove(model",{"_index":1118,"title":{},"body":{"classes/ODataCollection.html":{}}}],["remove(names",{"_index":1773,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["remove(value",{"_index":1837,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["renderprimitivevalue",{"_index":2570,"title":{},"body":{"miscellaneous/functions.html":{}}}],["renderprimitivevalue(key",{"_index":2596,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replace(/\\;/g",{"_index":2097,"title":{},"body":{"classes/ODataResponse.html":{}}}],["reportprogress",{"_index":1871,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["representation",{"_index":165,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["req",{"_index":852,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{}}}],["req.api",{"_index":853,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["req.fetchpolicy",{"_index":965,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.method",{"_index":963,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.observe",{"_index":857,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.onload(chunk.slice(1",{"_index":910,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["req.resource",{"_index":2070,"title":{},"body":{"classes/ODataResponse.html":{}}}],["request",{"_index":115,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["request(method",{"_index":1272,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["requested",{"_index":120,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["requests",{"_index":835,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["res",{"_index":784,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["res$.pipe(map((res",{"_index":2029,"title":{},"body":{"classes/ODataResource.html":{}}}],["res$.pipe(startwith(cached",{"_index":972,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res$.pipe(tap((res",{"_index":969,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.body",{"_index":2035,"title":{},"body":{"classes/ODataResource.html":{},"classes/ODataResponse.html":{}}}],["res.delete(object.assign({etag",{"_index":1510,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["res.entities",{"_index":2030,"title":{},"body":{"classes/ODataResource.html":{}}}],["res.entity",{"_index":2031,"title":{},"body":{"classes/ODataResource.html":{}}}],["res.headers",{"_index":2071,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.join(newline",{"_index":813,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.length",{"_index":893,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.options.cacheability",{"_index":970,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.options.maxage",{"_index":1597,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["res.patch(attrs",{"_index":1506,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["res.property",{"_index":2032,"title":{},"body":{"classes/ODataResource.html":{}}}],["res.push(`${batch",{"_index":890,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${changesetboundary",{"_index":887,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${changesetboundary}${boundary_prefix_suffix",{"_index":882,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${this.batchboundary",{"_index":883,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${this.batchboundary}${boundary_prefix_suffix",{"_index":894,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_id",{"_index":889,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_transfer_encoding",{"_index":888,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_type",{"_index":807,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(json.stringify(batch.request.body",{"_index":892,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(newline",{"_index":886,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.segment.entityset().haskey",{"_index":1502,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["res.split(':')[1].trim",{"_index":786,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.status",{"_index":2072,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.statustext",{"_index":2073,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.tojson",{"_index":1614,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["res.url",{"_index":2074,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.value",{"_index":2033,"title":{},"body":{"classes/ODataResource.html":{}}}],["reset",{"_index":1062,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resolve",{"_index":2296,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["resolve(value",{"_index":2314,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["resolvekey",{"_index":2251,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["resolvekey(attrs",{"_index":2263,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["resource",{"_index":743,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["resource.clone().asmodel(attrs",{"_index":1175,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.entity",{"_index":1171,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.issubtypeof(this.__resource",{"_index":1167,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.segment.entityset().type(meta.type",{"_index":1174,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.type",{"_index":1166,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resourceparams",{"_index":1915,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resourcepath",{"_index":1914,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resources",{"_index":950,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataSingletonService.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["resources/index",{"_index":1143,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resp",{"_index":876,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["responds",{"_index":117,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["response",{"_index":829,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["response.body.split(newline_regexp",{"_index":902,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["response.headers.get(content_type",{"_index":898,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["responseoptions",{"_index":166,"title":{"interfaces/ResponseOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["responses",{"_index":767,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"interfaces/StoragePayload.html":{}}}],["responses/index",{"_index":1972,"title":{},"body":{"classes/ODataResource.html":{}}}],["responsetype",{"_index":870,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["responsetypes",{"_index":2034,"title":{},"body":{"classes/ODataResource.html":{}}}],["restriction",{"_index":2725,"title":{},"body":{"license.html":{}}}],["result",{"_index":216,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":218,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":122,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["returned",{"_index":121,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["returns",{"_index":224,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":234,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["rights",{"_index":2728,"title":{},"body":{"license.html":{}}}],["root",{"_index":2630,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":21,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":737,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{}}}],["s.name",{"_index":1736,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.type).filter(t",{"_index":1720,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["same",{"_index":856,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["save",{"_index":1465,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["save(entity",{"_index":1480,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["scale",{"_index":45,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["schema",{"_index":510,"title":{},"body":{"classes/Field.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.alias",{"_index":2273,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["schema.contentencoding",{"_index":2367,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.default",{"_index":2380,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.format",{"_index":2363,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.maxlength",{"_index":2369,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.namespace",{"_index":1004,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["schema.namespace}.${config.name",{"_index":998,"title":{},"body":{"classes/ODataCallable.html":{}}}],["schema.org",{"_index":2355,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.org/draft",{"_index":2408,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.pattern",{"_index":2364,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.properties",{"_index":2414,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.required",{"_index":2420,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schema.ts",{"_index":446,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:10",{"_index":466,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:11",{"_index":459,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:12",{"_index":464,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:13",{"_index":461,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:14",{"_index":463,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:15",{"_index":465,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:16",{"_index":458,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:17",{"_index":462,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:18",{"_index":468,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:19",{"_index":467,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:20",{"_index":460,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:8",{"_index":457,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.type",{"_index":2362,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["schemaconfig",{"_index":186,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["schemas",{"_index":185,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["search",{"_index":1781,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["segment",{"_index":1240,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["segment.key",{"_index":1708,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.name",{"_index":1702,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.parameters",{"_index":1704,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.path",{"_index":1706,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.type",{"_index":1722,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.type(type",{"_index":2483,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["segmenthandler",{"_index":1682,"title":{"classes/SegmentHandler.html":{}},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(segment",{"_index":1734,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(this.segments[this.segments.length",{"_index":1732,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segments",{"_index":741,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["segments.add(pathsegmentnames.batch",{"_index":847,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["segments.add(pathsegmentnames.count",{"_index":1283,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["segments.add(pathsegmentnames.metadata",{"_index":1637,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["segments.add(pathsegmentnames.value",{"_index":2482,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["segments.get(pathsegmentnames.entityset",{"_index":1289,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["segments.get(pathsegmentnames.navigationproperty",{"_index":1290,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["segments.ts",{"_index":1675,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["segments.ts:103",{"_index":1687,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:111",{"_index":2511,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:114",{"_index":2519,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:118",{"_index":2518,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:124",{"_index":2517,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:130",{"_index":2515,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:136",{"_index":2513,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:140",{"_index":2516,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:146",{"_index":2514,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:151",{"_index":2512,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:50",{"_index":1679,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:56",{"_index":1689,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:62",{"_index":1692,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:66",{"_index":1691,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:70",{"_index":1690,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:83",{"_index":1683,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:87",{"_index":1685,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:92",{"_index":1688,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:97",{"_index":1681,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["select",{"_index":1779,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["selector",{"_index":2628,"title":{},"body":{"index.html":{}}}],["selecttype",{"_index":2795,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["self",{"_index":1977,"title":{},"body":{"classes/ODataResource.html":{}}}],["sell",{"_index":2734,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":1018,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"interfaces/Parser.html":{}}}],["serialize(params",{"_index":1028,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["serialize(value",{"_index":172,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["server",{"_index":138,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["service",{"_index":214,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["servicerooturl",{"_index":180,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["services/index",{"_index":1655,"title":{},"body":{"modules/ODataModule.html":{}}}],["sessionstorage",{"_index":1608,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["set",{"_index":325,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/OptionHandler.html":{}}}],["set(path",{"_index":1854,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["set.ts",{"_index":326,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{}}}],["set.ts:11",{"_index":1476,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:15",{"_index":1477,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:18",{"_index":1454,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:21",{"_index":1469,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:22",{"_index":1470,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:23",{"_index":1471,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:25",{"_index":1455,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:29",{"_index":1453,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:3",{"_index":329,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:32",{"_index":1487,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:36",{"_index":1473,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:42",{"_index":1483,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:5",{"_index":332,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:53",{"_index":1468,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:6",{"_index":330,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:64",{"_index":1475,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:7",{"_index":333,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:74",{"_index":1479,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:8",{"_index":331,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:84",{"_index":1481,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["set.ts:9",{"_index":1452,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["setcache",{"_index":2118,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setcache(cachecontrol",{"_index":2129,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setfeatures",{"_index":2119,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setfeatures(features",{"_index":2131,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["settings",{"_index":987,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["settings.findparserfortype(this.base",{"_index":2403,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["settings.findparserfortype(this.return",{"_index":1052,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["settings.findparserfortype(this.type",{"_index":1036,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["settings.options",{"_index":2353,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["setversion",{"_index":2120,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setversion(version",{"_index":2133,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["shall",{"_index":2743,"title":{},"body":{"license.html":{}}}],["shortcuts",{"_index":1511,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["single",{"_index":2434,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["singleton",{"_index":31,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["singleton(path",{"_index":2235,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["singleton.ts",{"_index":471,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:3",{"_index":473,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:5",{"_index":474,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:6",{"_index":476,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:7",{"_index":475,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singletons",{"_index":315,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["singletonschema",{"_index":2240,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["skip",{"_index":106,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["skiptoken",{"_index":1150,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["slice(1",{"_index":1707,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["software",{"_index":2721,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["specified",{"_index":654,"title":{},"body":{"classes/Field.html":{}}}],["split",{"_index":1803,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["srid",{"_index":253,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["standardaggregatemethods",{"_index":2543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["started",{"_index":2600,"title":{"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":906,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["startwith",{"_index":947,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["state",{"_index":1074,"title":{},"body":{"classes/ODataCollection.html":{}}}],["states",{"_index":2662,"title":{},"body":{"index.html":{}}}],["static",{"_index":520,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{}}}],["status",{"_index":730,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["status.code",{"_index":817,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["status.text",{"_index":820,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statusparts",{"_index":908,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statusparts[2",{"_index":912,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statustext",{"_index":819,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["step",{"_index":108,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["storage",{"_index":1605,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["storagepayload",{"_index":1604,"title":{"interfaces/StoragePayload.html":{}},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["store",{"_index":155,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["store'].indexof(directive",{"_index":2155,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["streaming",{"_index":156,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["stringasenum",{"_index":89,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structural",{"_index":303,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["structured",{"_index":286,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["structuredtypeconfig",{"_index":193,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["structuredtypefield",{"_index":35,"title":{"interfaces/StructuredTypeField.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structuredtypefieldoptions",{"_index":169,"title":{"interfaces/StructuredTypeFieldOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structuredtypeschema",{"_index":1433,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["strucuturedtype",{"_index":2388,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["styleurls",{"_index":2633,"title":{},"body":{"index.html":{}}}],["subject",{"_index":721,"title":{},"body":{"classes/ODataBatchRequest.html":{},"license.html":{}}}],["sublicense",{"_index":2732,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2683,"title":{},"body":{"index.html":{}}}],["subscribe(({entities",{"_index":2649,"title":{},"body":{"index.html":{}}}],["subscribe(({entity",{"_index":2655,"title":{},"body":{"index.html":{}}}],["subscribe(aports",{"_index":2645,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":2745,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":780,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["sum",{"_index":2546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super",{"_index":798,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["super(annotationlist",{"_index":269,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["super(api",{"_index":838,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{}}}],["super(init",{"_index":1595,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["super(name",{"_index":304,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{}}}],["super.get",{"_index":1293,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataValueResource.html":{}}}],["super.get(opts).pipe(map((body",{"_index":1640,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["support",{"_index":2692,"title":{},"body":{"index.html":{}}}],["supported",{"_index":659,"title":{},"body":{"classes/Field.html":{}}}],["switch",{"_index":1701,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/SegmentHandler.html":{}}}],["switchmap",{"_index":1134,"title":{},"body":{"classes/ODataCollection.html":{}}}],["symbol.iterator",{"_index":1184,"title":{},"body":{"classes/ODataCollection.html":{}}}],["sync",{"_index":1063,"title":{},"body":{"classes/ODataCollection.html":{}}}],["system",{"_index":1778,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["t",{"_index":27,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["t[p",{"_index":28,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["table",{"_index":2614,"title":{},"body":{"index.html":{}}}],["tag",{"_index":517,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["tag_action",{"_index":553,"title":{},"body":{"classes/Field.html":{}}}],["tag_action_import",{"_index":559,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotation",{"_index":533,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotations",{"_index":532,"title":{},"body":{"classes/Field.html":{}}}],["tag_complex_type",{"_index":538,"title":{},"body":{"classes/Field.html":{}}}],["tag_data_services",{"_index":523,"title":{},"body":{"classes/Field.html":{}}}],["tag_edmx",{"_index":521,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_container",{"_index":554,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_set",{"_index":555,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_type",{"_index":540,"title":{},"body":{"classes/Field.html":{}}}],["tag_enum_type",{"_index":535,"title":{},"body":{"classes/Field.html":{}}}],["tag_function",{"_index":550,"title":{},"body":{"classes/Field.html":{}}}],["tag_function_import",{"_index":557,"title":{},"body":{"classes/Field.html":{}}}],["tag_include",{"_index":527,"title":{},"body":{"classes/Field.html":{}}}],["tag_include_annotations",{"_index":529,"title":{},"body":{"classes/Field.html":{}}}],["tag_key",{"_index":542,"title":{},"body":{"classes/Field.html":{}}}],["tag_member",{"_index":537,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property",{"_index":545,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property_binding",{"_index":561,"title":{},"body":{"classes/Field.html":{}}}],["tag_on_delete",{"_index":549,"title":{},"body":{"classes/Field.html":{}}}],["tag_parameter",{"_index":552,"title":{},"body":{"classes/Field.html":{}}}],["tag_property",{"_index":541,"title":{},"body":{"classes/Field.html":{}}}],["tag_property_ref",{"_index":543,"title":{},"body":{"classes/Field.html":{}}}],["tag_reference",{"_index":525,"title":{},"body":{"classes/Field.html":{}}}],["tag_referential_constraint",{"_index":547,"title":{},"body":{"classes/Field.html":{}}}],["tag_return_type",{"_index":551,"title":{},"body":{"classes/Field.html":{}}}],["tag_schema",{"_index":534,"title":{},"body":{"classes/Field.html":{}}}],["tag_singleton",{"_index":556,"title":{},"body":{"classes/Field.html":{}}}],["tag_term",{"_index":531,"title":{},"body":{"classes/Field.html":{}}}],["tag_type_definition",{"_index":562,"title":{},"body":{"classes/Field.html":{}}}],["tags",{"_index":519,"title":{},"body":{"classes/Field.html":{},"index.html":{}}}],["tap",{"_index":948,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{}}}],["target",{"_index":267,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["targetnamespace",{"_index":375,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["templateurl",{"_index":2631,"title":{},"body":{"index.html":{}}}],["term",{"_index":270,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["termnamespace",{"_index":374,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["terms",{"_index":454,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["test",{"_index":1804,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["text",{"_index":815,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["text/plain",{"_index":1928,"title":{},"body":{"classes/ODataRequest.html":{}}}],["text/xml",{"_index":613,"title":{},"body":{"classes/Field.html":{}}}],["thatparser",{"_index":1979,"title":{},"body":{"classes/ODataResource.html":{}}}],["thatparser.findparser(c",{"_index":1981,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.__meta",{"_index":1158,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__meta.clone",{"_index":1180,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__meta.count",{"_index":1153,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__meta.data(data",{"_index":1163,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__meta.entity(attrs",{"_index":1172,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__meta.skip",{"_index":1149,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__meta.skiptoken",{"_index":1151,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__meta.top",{"_index":1148,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__model(attrs",{"_index":1217,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__model(e",{"_index":1177,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__models",{"_index":1146,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__models.indexof(model",{"_index":1214,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__models.map(model",{"_index":1178,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__models.push(model",{"_index":1211,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__models.splice(index",{"_index":1215,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__request(obs",{"_index":1198,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__resource",{"_index":1155,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__resource.all(options",{"_index":1204,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__resource.clone",{"_index":1170,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__resource.get",{"_index":1195,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__resource.reference",{"_index":1208,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__resource.type",{"_index":1165,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.__resource?.api.options",{"_index":1206,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._context",{"_index":1346,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this._functions",{"_index":1374,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this._options",{"_index":2086,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setcache(cachecontrol",{"_index":2101,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setfeatures(features",{"_index":2093,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setversion(version",{"_index":2098,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._properties",{"_index":1348,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this._query.skip(this.state.skip",{"_index":1200,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._query.skiptoken(this.state.skiptoken",{"_index":1203,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.add$.emit(model",{"_index":1212,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.add(model",{"_index":1221,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.alias",{"_index":2191,"title":{},"body":{"classes/ODataSchema.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.annotations",{"_index":1341,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.annotations.find(predicate",{"_index":1405,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.api",{"_index":854,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{}}}],["this.api.findcollectionfortype(type",{"_index":1995,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.api.findentitysetbyname(this.name",{"_index":1495,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["this.api.findmodelfortype(type",{"_index":1992,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.api.findparserfortype(type",{"_index":2107,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.api.findstructuredtypefortype(this.apinameorentitytype",{"_index":1451,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.api.options",{"_index":2016,"title":{},"body":{"classes/ODataResource.html":{},"classes/ODataSchema.html":{}}}],["this.api.options.fetchpolicy",{"_index":1913,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.helper",{"_index":1499,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.api.options.ieee754compatible",{"_index":1923,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.metadata",{"_index":1920,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.prefermaxpagesize",{"_index":1933,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.preferreturn",{"_index":1929,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.withcredentials",{"_index":1911,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.request",{"_index":851,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.api.request(request",{"_index":2028,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.api.request(request).pipe",{"_index":873,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.api.servicerooturl}${this",{"_index":1997,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.api.servicerooturl}${this.path",{"_index":1943,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.servicerooturl}${this.pathwithparams",{"_index":1944,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.apinameorentitytype",{"_index":1450,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataSingletonService.html":{}}}],["this.assertarray",{"_index":1849,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().filter(v",{"_index":1838,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().push(value",{"_index":1836,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray()[index",{"_index":1844,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertobject(false",{"_index":1859,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertobject(true",{"_index":1855,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.attach(options.resource",{"_index":1157,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.base",{"_index":2389,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.batchboundary",{"_index":839,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.body",{"_index":869,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.body)[\"d",{"_index":2110,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.bound",{"_index":999,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.cacheability",{"_index":2156,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.callables",{"_index":2209,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.callables.find(e",{"_index":2223,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.checkversion(document",{"_index":614,"title":{},"body":{"classes/Field.html":{}}}],["this.children",{"_index":2391,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.children.find(c",{"_index":2442,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.client",{"_index":2238,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["this.client.apibyname(options.apiname",{"_index":2014,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.client.apifor(this.apinameorentitytype",{"_index":1449,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.client.entityset(this.name",{"_index":1490,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.client.singleton(this.name",{"_index":2246,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["this.collection",{"_index":2270,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.complete",{"_index":823,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.composable",{"_index":1000,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.constructor",{"_index":1182,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.containers",{"_index":2212,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.context",{"_index":1354,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.create(entity",{"_index":1516,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.default",{"_index":2326,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.deserialize(this.default",{"_index":2352,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.deserialize(type",{"_index":2114,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.entities",{"_index":1491,"title":{},"body":{"classes/ODataEntitySetService.html":{},"classes/ODataSchema.html":{}}}],["this.entities.find(e",{"_index":2222,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entity(entity",{"_index":1501,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.entity(entity).fetch(options",{"_index":1512,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.entity(entity).segment.entityset().haskey",{"_index":1518,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.entitysets",{"_index":1398,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["this.entitysets.find(e",{"_index":2224,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entitytype",{"_index":1456,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["this.entries",{"_index":953,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.entries.delete(key",{"_index":961,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.foreach((entry",{"_index":960,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.get(key",{"_index":956,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.set(key",{"_index":954,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.enums",{"_index":2193,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.enums.find(e",{"_index":2220,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.error(new",{"_index":827,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.error(res",{"_index":832,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.factory.entity(\"airports",{"_index":2640,"title":{},"body":{"index.html":{}}}],["this.factory.entity(\"people",{"_index":2642,"title":{},"body":{"index.html":{}}}],["this.fetch(options",{"_index":1201,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.fetchpolicy",{"_index":712,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["this.field",{"_index":2336,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.fields",{"_index":1552,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.fields().find(f",{"_index":1541,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.fields().map(mapper",{"_index":1544,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.fields(opts).map(f",{"_index":2281,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.fields.filter(f",{"_index":2428,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.fields.find(f",{"_index":2424,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.fields.foreach(f",{"_index":2405,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.fields.map(f",{"_index":1571,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.find(predicate",{"_index":2445,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.find(s",{"_index":1735,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.flags",{"_index":1550,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.functions[name",{"_index":1376,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.get(req.urlwithparams",{"_index":1598,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.getfieldvaluebyattribute",{"_index":616,"title":{},"body":{"classes/Field.html":{}}}],["this.getobjects(dataservices",{"_index":632,"title":{},"body":{"classes/Field.html":{}}}],["this.getobjects(document.documentelement",{"_index":621,"title":{},"body":{"classes/Field.html":{}}}],["this.getresponse(req",{"_index":966,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.handleresponse(resp",{"_index":875,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.headers",{"_index":708,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.headers.get(cache_control",{"_index":2100,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(content_type",{"_index":2088,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(key",{"_index":2096,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.getall(name",{"_index":2082,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.keys",{"_index":2080,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.keys().find(k",{"_index":2094,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.ieee754compatible",{"_index":704,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.isenumtype",{"_index":2385,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.isexpired(entry",{"_index":957,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.isstructuredtype",{"_index":2387,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.key",{"_index":2330,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.keys",{"_index":2430,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.keys().length",{"_index":2440,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.maxage",{"_index":2154,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.maxlength",{"_index":2328,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.members",{"_index":1537,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.metadata",{"_index":700,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.method",{"_index":1898,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.model",{"_index":2268,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.n",{"_index":1827,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.name",{"_index":993,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.name).split('/').reduce((acc",{"_index":2344,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.namespace",{"_index":2189,"title":{},"body":{"classes/ODataSchema.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.namespace}.${this.name",{"_index":2393,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.navigation",{"_index":2335,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.next(odataresponse.fromhttpresponse(this.request",{"_index":822,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.nextlink",{"_index":1384,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.nullable",{"_index":2333,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.o[this.n",{"_index":1828,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].filter((v",{"_index":1863,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].length",{"_index":1841,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n][0",{"_index":1842,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.observe",{"_index":1908,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.odata.batch(\"trippin\").post(batch",{"_index":2678,"title":{},"body":{"index.html":{}}}],["this.odata.fromjson(json",{"_index":2668,"title":{},"body":{"index.html":{}}}],["this.odv.annotations(data",{"_index":1342,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.attributes(data",{"_index":1359,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.context(this.annotations",{"_index":1347,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.count(this.annotations",{"_index":1380,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.deltalink(this.annotations",{"_index":1382,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.editlink(this.annotations",{"_index":1367,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.entities(data",{"_index":1378,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.entity(data",{"_index":1357,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.etag(this.annotations",{"_index":1345,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.functions(this.annotations",{"_index":1375,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.id(this.annotations",{"_index":1360,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediacontenttype(this.annotations",{"_index":1373,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediaeditlink(this.annotations",{"_index":1371,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediaetag(this.annotations",{"_index":1362,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediareadlink(this.annotations",{"_index":1369,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.metadataetag(this.annotations",{"_index":1364,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.nextlink(this.annotations",{"_index":1381,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.properties(this.annotations",{"_index":1349,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.property(data",{"_index":1353,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.readlink(this.annotations",{"_index":1365,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.type(this.annotations",{"_index":1355,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.option(name).clear",{"_index":1819,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options",{"_index":1014,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["this.options.helper",{"_index":1338,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.options.helper.etag(attrs",{"_index":2286,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.options.helper.etag(value",{"_index":2285,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.options.helper.type(value",{"_index":2103,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.options.version",{"_index":2109,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.options[k",{"_index":1825,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[key",{"_index":1798,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[name",{"_index":1814,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[queryoptionnames.custom",{"_index":1801,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.parameters",{"_index":1040,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parameters.foreach(p",{"_index":1053,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.params",{"_index":706,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["this.params.keys().length",{"_index":1941,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.parent",{"_index":2395,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.defaults",{"_index":2446,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.deserialize(value",{"_index":2396,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.keys",{"_index":2427,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.serialize(value",{"_index":2400,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parent.typefor(name",{"_index":2425,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parse(data",{"_index":1164,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.parse(entities",{"_index":1193,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.parse(parser",{"_index":2108,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser",{"_index":1002,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser.configure(parsersettings",{"_index":1015,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataStructuredType.html":{}}}],["this.parser.defaults",{"_index":2288,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.parser.deserialize(value",{"_index":1044,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.fields",{"_index":1540,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.parser.iscomplextype",{"_index":2383,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.parser.resolvekey(attrs",{"_index":2287,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.parser.serialize(v",{"_index":1034,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.serialize(value",{"_index":1035,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.tojsonschema(options",{"_index":2289,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.path",{"_index":995,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/SegmentHandler.html":{}}}],["this.pathandparams",{"_index":1998,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments",{"_index":1288,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataResource.html":{}}}],["this.pathsegments.clone",{"_index":844,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["this.pathsegments.last()?.type",{"_index":1975,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.path",{"_index":1984,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.tojson",{"_index":2010,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.types",{"_index":1976,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.precision",{"_index":2338,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.prefermaxpagesize",{"_index":716,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["this.preferreturn",{"_index":714,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["this.properties[name",{"_index":1350,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.put(req.urlwithparams",{"_index":1596,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.putresponse(req",{"_index":971,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.queries",{"_index":2637,"title":{},"body":{"index.html":{}}}],["this.queryoptions",{"_index":1974,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.queryoptions.alias(name",{"_index":2012,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.queryoptions.clone",{"_index":1292,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataValueResource.html":{}}}],["this.queryoptions.params",{"_index":1985,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.queryoptions.tojson",{"_index":2011,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.ref",{"_index":2342,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.references",{"_index":620,"title":{},"body":{"classes/Field.html":{}}}],["this.remove",{"_index":955,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.remove$.emit(model",{"_index":1216,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.reportprogress",{"_index":1904,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.request$.emit(obs",{"_index":1190,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.request('delete",{"_index":2041,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('get",{"_index":2036,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('patch",{"_index":2040,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('post",{"_index":2037,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('put",{"_index":2039,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request.headers",{"_index":808,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.method",{"_index":803,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.pathwithparams",{"_index":804,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.urlwithparams",{"_index":821,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests",{"_index":841,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests.push(new",{"_index":861,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests[index",{"_index":907,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests[this.requests.length",{"_index":863,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.resource",{"_index":1900,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.resource.type",{"_index":2113,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.responsetype",{"_index":1906,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.return",{"_index":1038,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.scale",{"_index":2340,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.schema",{"_index":992,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.alias",{"_index":1007,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.namespace}.${this.name",{"_index":1006,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.options",{"_index":1010,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schemas",{"_index":631,"title":{},"body":{"classes/Field.html":{}}}],["this.segment.key",{"_index":1744,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.name",{"_index":1739,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.parameters",{"_index":1748,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.path",{"_index":1742,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.type",{"_index":1740,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments",{"_index":1716,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.length",{"_index":1731,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.map(s",{"_index":1719,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.map(segment",{"_index":1721,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.push(segment",{"_index":1733,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments].reverse().find(predicate",{"_index":1730,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.serialize(options.attrs",{"_index":2023,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.service",{"_index":1458,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["this.state.skip",{"_index":1199,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.state.skiptoken",{"_index":1202,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.status",{"_index":2083,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.statustext",{"_index":2084,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.streaming",{"_index":2146,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.stringasenum",{"_index":702,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.sync$.emit",{"_index":1194,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.timeout",{"_index":951,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.tojson(parser",{"_index":2351,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.type",{"_index":672,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.type.startswith(\"edm",{"_index":2384,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["this.type}'${name",{"_index":1564,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.update(entity",{"_index":1519,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["this.url",{"_index":2085,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.value",{"_index":1547,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["this.version",{"_index":615,"title":{},"body":{"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.withcredentials",{"_index":710,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["throw",{"_index":646,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/SegmentHandler.html":{}}}],["throwerror",{"_index":946,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitySetService.html":{}}}],["throwerror(\"no",{"_index":968,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["throwerror(\"resource",{"_index":1503,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["throwerror(error",{"_index":1517,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["thrown",{"_index":143,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["time",{"_index":776,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["timeout",{"_index":916,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["title",{"_index":1569,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"index.html":{}}}],["todo",{"_index":799,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["toentities",{"_index":1072,"title":{},"body":{"classes/ODataCollection.html":{}}}],["tojson",{"_index":1239,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["tojson(parser",{"_index":2318,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["tojsonschema",{"_index":1568,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["tojsonschema(options",{"_index":2265,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["tokens",{"_index":1657,"title":{},"body":{"modules/ODataModule.html":{}}}],["tools",{"_index":1816,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["top",{"_index":1147,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["tort",{"_index":2767,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":724,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["transform",{"_index":1782,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transforms",{"_index":2586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trim",{"_index":2148,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["trippin",{"_index":2636,"title":{},"body":{"index.html":{}}}],["trippinconfig",{"_index":2685,"title":{},"body":{"index.html":{}}}],["trippinmodule",{"_index":2686,"title":{},"body":{"index.html":{}}}],["trips",{"_index":2676,"title":{},"body":{"index.html":{}}}],["true",{"_index":1197,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"index.html":{}}}],["true}).subscribe(console.log",{"_index":2682,"title":{},"body":{"index.html":{}}}],["try",{"_index":608,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{}}}],["tslib",{"_index":2534,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":127,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type(value",{"_index":74,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataPathSegments.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["type.startswith(this.alias",{"_index":2217,"title":{},"body":{"classes/ODataSchema.html":{}}}],["type.startswith(this.namespace",{"_index":2216,"title":{},"body":{"classes/ODataSchema.html":{}}}],["type.ts",{"_index":287,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"miscellaneous/typealiases.html":{}}}],["type.ts:1",{"_index":346,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:10",{"_index":340,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:100",{"_index":2304,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:11",{"_index":1525,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:111",{"_index":2320,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:12",{"_index":341,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:13",{"_index":342,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/ODataEnumTypeFieldParser.html":{}}}],["type.ts:14",{"_index":295,"title":{},"body":{"classes/CsdlComplexType.html":{}}}],["type.ts:152",{"_index":2311,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:155",{"_index":2310,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:158",{"_index":2312,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:161",{"_index":2308,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:165",{"_index":2309,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:168",{"_index":2306,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:173",{"_index":2317,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:18",{"_index":1574,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:181",{"_index":2458,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:182",{"_index":2459,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:183",{"_index":2455,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:184",{"_index":2456,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:185",{"_index":2460,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:186",{"_index":2457,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:187",{"_index":2454,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:19",{"_index":1575,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:199",{"_index":2467,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:20",{"_index":1533,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataEnumTypeParser.html":{}}}],["type.ts:207",{"_index":2463,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:21",{"_index":1573,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:217",{"_index":2470,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:22",{"_index":1572,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:226",{"_index":2461,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:23",{"_index":2259,"title":{},"body":{"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:239",{"_index":2471,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:24",{"_index":2303,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:25",{"_index":2301,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:26",{"_index":2298,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:261",{"_index":2472,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:268",{"_index":2468,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:27",{"_index":335,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:273",{"_index":2469,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:28",{"_index":2300,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:288",{"_index":2466,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:29",{"_index":2297,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:292",{"_index":2464,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:298",{"_index":2465,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:3",{"_index":349,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:30",{"_index":337,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:302",{"_index":2462,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["type.ts:31",{"_index":1529,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:32",{"_index":2299,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:33",{"_index":1576,"title":{},"body":{"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:34",{"_index":1527,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:35",{"_index":2302,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:36",{"_index":336,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:38",{"_index":1531,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:4",{"_index":348,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:42",{"_index":382,"title":{},"body":{"classes/CsdlKey.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:43",{"_index":1577,"title":{},"body":{"classes/ODataEnumTypeParser.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:44",{"_index":383,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:46",{"_index":1535,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:48",{"_index":425,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:5",{"_index":350,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumTypeFieldParser.html":{}}}],["type.ts:50",{"_index":427,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:51",{"_index":426,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:54",{"_index":2307,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:58",{"_index":2315,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:59",{"_index":1578,"title":{},"body":{"classes/ODataEnumTypeParser.html":{}}}],["type.ts:6",{"_index":347,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumTypeFieldParser.html":{}}}],["type.ts:61",{"_index":2258,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:63",{"_index":2313,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:65",{"_index":2261,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:7",{"_index":482,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:71",{"_index":2305,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:8",{"_index":481,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:81",{"_index":2264,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:82",{"_index":2319,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["type.ts:85",{"_index":2252,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:89",{"_index":2267,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:9",{"_index":483,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:90",{"_index":2316,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{}}}],["typealiases",{"_index":2776,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedefinition",{"_index":563,"title":{},"body":{"classes/Field.html":{}}}],["typedefinitions",{"_index":455,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["typefor",{"_index":2453,"title":{},"body":{"classes/ODataStructuredTypeParser.html":{}}}],["typefor(name",{"_index":2423,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["typeof",{"_index":1709,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/SegmentHandler.html":{}}}],["types",{"_index":511,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["types.isarray(custom",{"_index":1802,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isarray(this.o[this.n",{"_index":1834,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(key",{"_index":2439,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["types.isempty(this.o[this.n",{"_index":1829,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(this.options[key",{"_index":1797,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(this.segment.key",{"_index":1746,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isempty(this.segment.parameters",{"_index":1750,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isempty(v",{"_index":1864,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(value",{"_index":2451,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["types.isobject(this.o[this.n",{"_index":1847,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isobject(v",{"_index":1852,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isobject(value",{"_index":2102,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["undefined",{"_index":66,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["underlayingtype",{"_index":496,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["underlyingtype",{"_index":344,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["unicode",{"_index":400,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["uniqid",{"_index":2571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniqid(batch_prefix",{"_index":840,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["uniqid(changeset_prefix",{"_index":884,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["uniqid(prefix",{"_index":779,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["united",{"_index":2661,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":831,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["unnamed",{"_index":2572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unpacked",{"_index":2796,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unset",{"_index":2489,"title":{},"body":{"classes/OptionHandler.html":{}}}],["unset(path",{"_index":1861,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["unsuccessful",{"_index":824,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["up",{"_index":130,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["update",{"_index":119,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitySetService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["update(entity",{"_index":1482,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["updated",{"_index":134,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["updating",{"_index":139,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["uri",{"_index":370,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["url",{"_index":802,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["urls",{"_index":1777,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{}}}],["urls.parsequerystring(parts[1",{"_index":1990,"title":{},"body":{"classes/ODataResource.html":{}}}],["urls.parsequerystring(query.substr(1",{"_index":1800,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["urlwithparams",{"_index":1873,"title":{},"body":{"classes/ODataRequest.html":{}}}],["usage",{"_index":2617,"title":{},"body":{"index.html":{}}}],["use",{"_index":2626,"title":{},"body":{"index.html":{},"license.html":{}}}],["usefactory",{"_index":1664,"title":{},"body":{"modules/ODataModule.html":{}}}],["uses",{"_index":118,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["usevalue",{"_index":1663,"title":{},"body":{"modules/ODataModule.html":{}}}],["using",{"_index":2697,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1698,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["utils/http",{"_index":769,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["utils/index",{"_index":1970,"title":{},"body":{"classes/ODataResource.html":{}}}],["utils/types",{"_index":512,"title":{},"body":{"classes/Field.html":{},"classes/ODataResponse.html":{}}}],["v",{"_index":1558,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{}}}],["v4",{"_index":2696,"title":{},"body":{"index.html":{}}}],["val",{"_index":2597,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":48,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["value(v",{"_index":1831,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["value).reduce((acc",{"_index":1557,"title":{},"body":{"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataEnumTypeParser.html":{}}}],["value.attach(this.entities",{"_index":1494,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["value.attach(this.entities().entity",{"_index":1493,"title":{},"body":{"classes/ODataEntitySetService.html":{}}}],["value.attach(this.entity",{"_index":1448,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["value.map(e",{"_index":2006,"title":{},"body":{"classes/ODataResource.html":{}}}],["value.map(v",{"_index":1033,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["value[f.name",{"_index":2398,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["value[k",{"_index":2283,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["value_separator",{"_index":1967,"title":{},"body":{"classes/ODataResource.html":{}}}],["values",{"_index":1869,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{}}}],["values.length",{"_index":2433,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["values.some(v",{"_index":2436,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["values[0",{"_index":2435,"title":{},"body":{"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["van",{"_index":2711,"title":{},"body":{"license.html":{}}}],["var",{"_index":773,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{}}}],["variables",{"_index":834,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResource.html":{}}}],["version",{"_index":86,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["version.replace(/\\;/g",{"_index":2147,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_2_0",{"_index":2136,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_3_0",{"_index":2137,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_4_0",{"_index":514,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataResponseOptions.html":{}}}],["version_4_0].indexof(value",{"_index":2149,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["versions",{"_index":2693,"title":{},"body":{"index.html":{}}}],["viewed",{"_index":2699,"title":{},"body":{"index.html":{}}}],["void",{"_index":175,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataEnumTypeFieldParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataStructuredTypeFieldParser.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["warranties",{"_index":2753,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2748,"title":{},"body":{"license.html":{}}}],["whether",{"_index":125,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"license.html":{}}}],["wiki",{"_index":2703,"title":{},"body":{"index.html":{}}}],["window.addeventlistener(\"beforeunload",{"_index":1610,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["withcount",{"_index":1196,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataResource.html":{}}}],["withcredentials",{"_index":162,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["without",{"_index":136,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitySetService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"license.html":{}}}],["works",{"_index":2688,"title":{},"body":{"index.html":{}}}],["xssi_prefix",{"_index":770,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["yes",{"_index":240,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataCache.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySetService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredTypeParser.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":2536,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Annotation.html":{"url":"interfaces/Annotation.html","title":"interface - Annotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Annotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bool\n                                \n                                \n                                            Optional\n                                        int\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        properties\n                                \n                                \n                                            Optional\n                                        string\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bool\n                                    \n                                \n                                \n                                    \n                                        bool:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        int\n                                    \n                                \n                                \n                                    \n                                        int:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        string\n                                    \n                                \n                                \n                                    \n                                        string:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  preferMaxPageSize?: number;\n  preferReturn?: 'representation' | 'minimal';\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiOptions.html":{"url":"interfaces/ApiOptions.html","title":"interface - ApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fetchPolicy\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                            Optional\n                                        preferMaxPageSize\n                                \n                                \n                                            Optional\n                                        preferReturn\n                                \n                                \n                                            Optional\n                                        withCredentials\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fetchPolicy\n                                    \n                                \n                                \n                                    \n                                        fetchPolicy:         FetchPolicy\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchPolicy\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preferMaxPageSize\n                                    \n                                \n                                \n                                    \n                                        preferMaxPageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preferReturn\n                                    \n                                \n                                \n                                    \n                                        preferReturn:     \"representation\" | \"minimal\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"representation\" | \"minimal\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  preferMaxPageSize?: number;\n  preferReturn?: 'representation' | 'minimal';\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cache.html":{"url":"interfaces/Cache.html","title":"interface - Cache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    get\n                                \n                                \n                                    put\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  preferMaxPageSize?: number;\n  preferReturn?: 'representation' | 'minimal';\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAction.html":{"url":"classes/CsdlAction.html","title":"class - CsdlAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                    Optional\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType?: CsdlReturnType, isBound?: boolean, entitySetPath?: string, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlActionImport.html":{"url":"classes/CsdlActionImport.html","title":"class - CsdlActionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlActionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, action: string, entitySet?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotable.html":{"url":"classes/CsdlAnnotable.html","title":"class - CsdlAnnotable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotation.html":{"url":"classes/CsdlAnnotation.html","title":"class - CsdlAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                term\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(term: string, qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            term\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotations.html":{"url":"classes/CsdlAnnotations.html","title":"class - CsdlAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                target\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(target: string, annotationList: CsdlAnnotation[], qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlComplexType.html":{"url":"classes/CsdlComplexType.html","title":"class - CsdlComplexType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlComplexType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityContainer.html":{"url":"classes/CsdlEntityContainer.html","title":"class - CsdlEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actionImports\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySets\n                            \n                            \n                                    Public\n                                    Optional\n                                extend\n                            \n                            \n                                    Public\n                                    Optional\n                                functionImports\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                singletons\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, extend?: string, entitySets?: CsdlEntitySet[], singletons?: CsdlSingleton[], functionImports?: CsdlFunctionImport[], actionImports?: CsdlActionImport[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extend\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySets\n                                                  \n                                                        \n                                                                        CsdlEntitySet[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        singletons\n                                                  \n                                                        \n                                                                        CsdlSingleton[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionImports\n                                                  \n                                                        \n                                                                    CsdlFunctionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionImports\n                                                  \n                                                        \n                                                                    CsdlActionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlActionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntitySet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            extend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlFunctionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            singletons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlSingleton[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlEntitySet } from './csdl-entity-set';\nimport { CsdlSingleton } from './csdl-singleton';\nimport { CsdlFunctionImport, CsdlActionImport } from './csdl-function-action';\n\nexport class CsdlEntityContainer {\n    constructor(\n        public name: string,\n        public extend?: string,\n        public entitySets?: CsdlEntitySet[],\n        public singletons?: CsdlSingleton[],\n        public functionImports?: CsdlFunctionImport[],\n        public actionImports?: CsdlActionImport[]\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntitySet.html":{"url":"classes/CsdlEntitySet.html","title":"class - CsdlEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entityType\n                            \n                            \n                                    Public\n                                    Optional\n                                includeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBinding\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, entityType: string, navigationPropertyBinding?: CsdlNavigationPropertyBinding[], includeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBinding\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBinding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlEntitySet {\n    constructor(\n        public name: string,\n        public entityType: string,\n        public navigationPropertyBinding?: CsdlNavigationPropertyBinding[],\n        public includeInServiceDocument?: boolean\n    ) {\n\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityType.html":{"url":"classes/CsdlEntityType.html","title":"class - CsdlEntityType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                hasStream\n                            \n                            \n                                    Public\n                                    Optional\n                                key\n                            \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, key?: CsdlKey, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean, hasStream?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        CsdlKey\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        hasStream\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            hasStream\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlKey\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumMember.html":{"url":"classes/CsdlEnumMember.html","title":"class - CsdlEnumMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value?: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumType.html":{"url":"classes/CsdlEnumType.html","title":"class - CsdlEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                isFlags\n                            \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                underlyingType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, members: CsdlEnumMember[], underlyingType?: string, isFlags?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        members\n                                                  \n                                                        \n                                                                        CsdlEnumMember[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlyingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isFlags\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isFlags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumMember[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            underlyingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunction.html":{"url":"classes/CsdlFunction.html","title":"class - CsdlFunction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                    Optional\n                                isComposable\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType: CsdlReturnType, isBound?: boolean, entitySetPath?: string, isComposable?: boolean, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isComposable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isComposable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunctionImport.html":{"url":"classes/CsdlFunctionImport.html","title":"class - CsdlFunctionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunctionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                functionName\n                            \n                            \n                                    Public\n                                    Optional\n                                IncludeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, functionName: string, entitySet?: string, IncludeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        IncludeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            functionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            IncludeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlInclude.html":{"url":"classes/CsdlInclude.html","title":"class - CsdlInclude","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlInclude\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                namespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlIncludeAnnotations.html":{"url":"classes/CsdlIncludeAnnotations.html","title":"class - CsdlIncludeAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlIncludeAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                    Optional\n                                targetNamespace\n                            \n                            \n                                    Public\n                                termNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(termNamespace: string, qualifier?: string, targetNamespace?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        termNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            targetNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            termNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlKey.html":{"url":"classes/CsdlKey.html","title":"class - CsdlKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                propertyRefs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(propertyRefs: CsdlPropertyRef[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyRefs\n                                                  \n                                                        \n                                                                    CsdlPropertyRef[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propertyRefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlPropertyRef[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationProperty.html":{"url":"classes/CsdlNavigationProperty.html","title":"class - CsdlNavigationProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                containsTarget\n                            \n                            \n                                    Public\n                                    Optional\n                                onDelete\n                            \n                            \n                                    Public\n                                    Optional\n                                partner\n                            \n                            \n                                    Public\n                                    Optional\n                                referentialConstraints\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, partner?: string, containsTarget?: boolean, referentialConstraints?: CsdlReferentialConstraint[], onDelete?: CsdlOnDelete)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        partner\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        containsTarget\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        referentialConstraints\n                                                  \n                                                        \n                                                                        CsdlReferentialConstraint[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        onDelete\n                                                  \n                                                        \n                                                                        CsdlOnDelete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            containsTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDelete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlOnDelete\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            partner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            referentialConstraints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReferentialConstraint[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationPropertyBinding.html":{"url":"classes/CsdlNavigationPropertyBinding.html","title":"class - CsdlNavigationPropertyBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationPropertyBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(path: string, target: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlNavigationPropertyBinding {\n    constructor(\n        public path: string,\n        public target: string,\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlOnDelete.html":{"url":"classes/CsdlOnDelete.html","title":"class - CsdlOnDelete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlOnDelete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlParameter.html":{"url":"classes/CsdlParameter.html","title":"class - CsdlParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlProperty.html":{"url":"classes/CsdlProperty.html","title":"class - CsdlProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, defaultValue?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlPropertyRef.html":{"url":"classes/CsdlPropertyRef.html","title":"class - CsdlPropertyRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlPropertyRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReference.html":{"url":"classes/CsdlReference.html","title":"class - CsdlReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                includeAnnotations\n                            \n                            \n                                    Public\n                                    Optional\n                                includes\n                            \n                            \n                                    Public\n                                uri\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uri: string, includes?: CsdlInclude[], includeAnnotations?: CsdlIncludeAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        includes\n                                                  \n                                                        \n                                                                        CsdlInclude[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeAnnotations\n                                                  \n                                                        \n                                                                        CsdlIncludeAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeAnnotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlIncludeAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlInclude[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReferentialConstraint.html":{"url":"classes/CsdlReferentialConstraint.html","title":"class - CsdlReferentialConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReferentialConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                property\n                            \n                            \n                                    Public\n                                referencedProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, referencedProperty: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referencedProperty\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            property\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referencedProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReturnType.html":{"url":"classes/CsdlReturnType.html","title":"class - CsdlReturnType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReturnType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSchema.html":{"url":"classes/CsdlSchema.html","title":"class - CsdlSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actions\n                            \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationsList\n                            \n                            \n                                    Public\n                                    Optional\n                                complexTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                entityContainer\n                            \n                            \n                                    Public\n                                    Optional\n                                entityTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                enumTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                functions\n                            \n                            \n                                    Public\n                                namespace\n                            \n                            \n                                    Public\n                                    Optional\n                                terms\n                            \n                            \n                                    Public\n                                    Optional\n                                typeDefinitions\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string, enumTypes?: CsdlEnumType[], complexTypes?: CsdlComplexType[], entityTypes?: CsdlEntityType[], functions?: CsdlFunction[], actions?: CsdlAction[], entityContainer?: CsdlEntityContainer, typeDefinitions?: CsdlTypeDefinition[], terms?: CsdlTerm[], annotationsList?: CsdlAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        enumTypes\n                                                  \n                                                        \n                                                                        CsdlEnumType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        complexTypes\n                                                  \n                                                        \n                                                                        CsdlComplexType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityTypes\n                                                  \n                                                        \n                                                                        CsdlEntityType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functions\n                                                  \n                                                        \n                                                                        CsdlFunction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                        CsdlAction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityContainer\n                                                  \n                                                        \n                                                                        CsdlEntityContainer\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeDefinitions\n                                                  \n                                                        \n                                                                        CsdlTypeDefinition[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        terms\n                                                  \n                                                        \n                                                                        CsdlTerm[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationsList\n                                                  \n                                                        \n                                                                        CsdlAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            complexTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlComplexType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            enumTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlFunction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            terms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTerm[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            typeDefinitions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTypeDefinition[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotation, CsdlAnnotable, CsdlTerm, CsdlAnnotations } from './csdl-annotation';\nimport { CsdlTypeDefinition } from './csdl-type-definition';\nimport { CsdlEnumType } from './csdl-enum-type';\nimport { CsdlEntityType, CsdlComplexType } from './csdl-structured-type';\nimport { CsdlFunction, CsdlAction } from './csdl-function-action';\nimport { CsdlEntityContainer } from './csdl-entity-container';\n\nexport class CsdlSchema extends CsdlAnnotable {\n    constructor(\n        public namespace: string,\n        public alias?: string,\n        public enumTypes?: CsdlEnumType[],\n        public complexTypes?: CsdlComplexType[],\n        public entityTypes?: CsdlEntityType[],\n        public functions?: CsdlFunction[],\n        public actions?: CsdlAction[],\n        public entityContainer?: CsdlEntityContainer,\n        public typeDefinitions?: CsdlTypeDefinition[],\n        public terms?: CsdlTerm[],\n        public annotationsList?: CsdlAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSingleton.html":{"url":"classes/CsdlSingleton.html","title":"class - CsdlSingleton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSingleton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBindings\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, navigationPropertyBindings?: CsdlNavigationPropertyBinding[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBindings\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBindings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlSingleton {\n    constructor(\n        public name: string,\n        public type: string,\n        public navigationPropertyBindings?: CsdlNavigationPropertyBinding[]\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuralProperty.html":{"url":"classes/CsdlStructuralProperty.html","title":"class - CsdlStructuralProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuralProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuredType.html":{"url":"classes/CsdlStructuredType.html","title":"class - CsdlStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTerm.html":{"url":"classes/CsdlTerm.html","title":"class - CsdlTerm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTerm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appliesTo\n                            \n                            \n                                    Public\n                                    Optional\n                                baseTerm\n                            \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, baseTerm?: string, defaultValue?: string, appliesTo?: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseTerm\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        appliesTo\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appliesTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseTerm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTypeDefinition.html":{"url":"classes/CsdlTypeDefinition.html","title":"class - CsdlTypeDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTypeDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                underlayingType\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, underlayingType: string, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlayingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            underlayingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlTypeDefinition extends CsdlAnnotable {\n    constructor(\n        public name: string,\n        public underlayingType: string,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        annotationList?: CsdlAnnotation[]) {\n        super(annotationList);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnumTypeField.html":{"url":"interfaces/EnumTypeField.html","title":"interface - EnumTypeField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EnumTypeField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        annotations\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        annotations\n                                    \n                                \n                                \n                                    \n                                        annotations:         Annotation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Annotation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  preferMaxPageSize?: number;\n  preferReturn?: 'representation' | 'minimal';\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/metadata.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldType\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, fieldType: FieldType)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fieldType\n                                                  \n                                                        \n                                                                        FieldType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlTypeDefinition } from './csdl/csdl-type-definition';\nimport { CsdlSchema } from './csdl/csdl-schema';\nimport { Types } from '../../utils/types';\nimport { CsdlEnumType, CsdlEnumMember } from './csdl/csdl-enum-type';\nimport { CsdlEntityType, CsdlPropertyRef, CsdlKey, CsdlComplexType } from './csdl/csdl-structured-type';\nimport { CsdlFunction, CsdlParameter, CsdlFunctionImport, CsdlActionImport, CsdlReturnType, CsdlAction } from './csdl/csdl-function-action';\nimport { CsdlProperty, CsdlNavigationProperty, CsdlReferentialConstraint, CsdlOnDelete } from './csdl/csdl-structural-property';\nimport { CsdlEntitySet } from './csdl/csdl-entity-set';\nimport { CsdlSingleton } from './csdl/csdl-singleton';\nimport { CsdlEntityContainer } from './csdl/csdl-entity-container';\nimport { CsdlReference, CsdlInclude, CsdlIncludeAnnotations } from './csdl/csdl-reference';\nimport { CsdlAnnotation, CsdlTerm, CsdlAnnotations } from './csdl/csdl-annotation';\nimport { CsdlNavigationPropertyBinding } from './csdl/csdl-navigation-property-binding';\nimport { VERSION_4_0 } from '../../constants';\n\nenum FieldType {\n    ATTRIBUTE, TAG\n}\n\nclass Field {\n    constructor(public name: string, public fieldType: FieldType) { }\n}\n\nexport class ODataMetadata {\n    // TAGS\n    private static readonly TAG_EDMX = 'edmx:Edmx';\n    private static readonly TAG_DATA_SERVICES = 'edmx:DataServices';\n    private static readonly TAG_REFERENCE = 'edmx:Reference';\n    private static readonly TAG_INCLUDE = 'edmx:Include';\n    private static readonly TAG_INCLUDE_ANNOTATIONS = 'edmx:IncludeAnnotations';\n    private static readonly TAG_TERM = 'Term';\n    private static readonly TAG_ANNOTATIONS = 'Annotations';\n    private static readonly TAG_ANNOTATION = 'Annotation';\n    private static readonly TAG_SCHEMA = 'Schema';\n    private static readonly TAG_ENUM_TYPE = 'EnumType';\n    private static readonly TAG_MEMBER = 'Member';\n    private static readonly TAG_COMPLEX_TYPE = 'ComplexType';\n    private static readonly TAG_ENTITY_TYPE = 'EntityType';\n    private static readonly TAG_PROPERTY = 'Property';\n    private static readonly TAG_KEY = 'Key';\n    private static readonly TAG_PROPERTY_REF = 'PropertyRef';\n    private static readonly TAG_NAVIGATION_PROPERTY = 'NavigationProperty';\n    private static readonly TAG_REFERENTIAL_CONSTRAINT = 'ReferentialConstraint';\n    private static readonly TAG_ON_DELETE = 'OnDelete';\n    private static readonly TAG_FUNCTION = 'Function';\n    private static readonly TAG_RETURN_TYPE = 'ReturnType';\n    private static readonly TAG_PARAMETER = 'Parameter';\n    private static readonly TAG_ACTION = 'Action';\n    private static readonly TAG_ENTITY_CONTAINER = 'EntityContainer';\n    private static readonly TAG_ENTITY_SET = 'EntitySet';\n    private static readonly TAG_SINGLETON = 'Singleton';\n    private static readonly TAG_FUNCTION_IMPORT = 'FunctionImport';\n    private static readonly TAG_ACTION_IMPORT = 'ActionImport';\n    private static readonly TAG_NAVIGATION_PROPERTY_BINDING = 'NavigationPropertyBinding';\n    private static readonly TAG_TYPE_DEFINITION = 'TypeDefinition';\n\n    // ATTRIBUTES\n    private static readonly ATTRIBUTE_VERSION = 'Version';\n    private static readonly ATTRIBUTE_URI = 'Uri';\n    private static readonly ATTRIBUTE_ALIAS = 'Alias';\n    private static readonly ATTRIBUTE_NAMESPACE = 'Namespace';\n    private static readonly ATTRIBUTE_TERM_NAMESPACE = 'TermNamespace';\n    private static readonly ATTRIBUTE_QUALIFIER = 'Qualifier';\n    private static readonly ATTRIBUTE_TARGET_NAMESPACE = 'TargetNamespace';\n    private static readonly ATTRIBUTE_TERM = 'Term';\n    private static readonly ATTRIBUTE_NAME = 'Name';\n    private static readonly ATTRIBUTE_VALUE = 'Value';\n    private static readonly ATTRIBUTE_BASE_TYPE = 'BaseType';\n    private static readonly ATTRIBUTE_OPEN_TYPE = 'OpenType';\n    private static readonly ATTRIBUTE_TYPE = 'Type';\n    private static readonly ATTRIBUTE_NULLABLE = 'Nullable';\n    private static readonly ATTRIBUTE_MAX_LENGTH = 'MaxLength';\n    private static readonly ATTRIBUTE_PRECISION = 'Precision';\n    private static readonly ATTRIBUTE_SCALE = 'Scale';\n    private static readonly ATTRIBUTE_UNICODE = 'Unicode';\n    private static readonly ATTRIBUTE_SRID = 'SRID';\n    private static readonly ATTRIBUTE_DEFAULT_VALUE = 'DefaultValue';\n    private static readonly ATTRIBUTE_PARTNER = 'Partner';\n    private static readonly ATTRIBUTE_PROPERTY = 'Property';\n    private static readonly ATTRIBUTE_REFERENCED_PROPERTY = 'ReferencedProperty';\n    private static readonly ATTRIBUTE_HAS_STREAM = 'HasStream';\n    private static readonly ATTRIBUTE_CONTAINS_TARGET = 'ContainsTarget';\n    private static readonly ATTRIBUTE_IS_BOUND = 'IsBound';\n    private static readonly ATTRIBUTE_ENTITY_SET_PATH = 'EntitySetPath';\n    private static readonly ATTRIBUTE_IS_COMPOSABLE = 'IsComposable';\n    private static readonly ATTRIBUTE_ENTITY_TYPE = 'EntityType';\n    private static readonly ATTRIBUTE_PATH = 'Path';\n    private static readonly ATTRIBUTE_TARGET = 'Target';\n    private static readonly ATTRIBUTE_FUNCTION = 'Function';\n    private static readonly ATTRIBUTE_ACTION = 'Action';\n    private static readonly ATTRIBUTE_ENTITY_SET = 'EntitySet';\n    private static readonly ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT = 'IncludeInServiceDocument';\n    private static readonly ATTRIBUTE_ABSTRACT = 'Abstract';\n    private static readonly ATTRIBUTE_UNDERLYING_TYPE = 'UnderlyingType';\n    private static readonly ATTRIBUTE_IS_FLAGS = 'IsFlags';\n    private static readonly ATTRIBUTE_EXTENDS = 'Extends';\n    private static readonly ATTRIBUTE_BASE_TERM = 'BaseTerm';\n    private static readonly ATTRIBUTE_APPLIES_TO = 'AppliesTo';\n\n    public readonly version: string;\n    public readonly references: CsdlReference[];\n    public readonly schemas: CsdlSchema[];\n\n    constructor(xml: string) {\n        try {\n            const parser: DOMParser = new DOMParser();\n            const document: Document = parser.parseFromString(xml, 'text/xml');\n\n            this.checkVersion(document);\n\n            this.version = this.getFieldValueByAttribute(\n                new Field(ODataMetadata.ATTRIBUTE_VERSION, FieldType.ATTRIBUTE),\n                document.documentElement.attributes);\n\n            this.references = this.getObjects(document.documentElement, ODataMetadata.TAG_REFERENCE, [\n                new Field(ODataMetadata.ATTRIBUTE_URI, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.TAG_INCLUDE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_INCLUDE_ANNOTATIONS, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n\n            const dataServices: Element = document.documentElement.getElementsByTagName(ODataMetadata.TAG_DATA_SERVICES)[0];\n            this.schemas = this.getObjects(dataServices, ODataMetadata.TAG_SCHEMA, [\n                new Field(ODataMetadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.TAG_ENUM_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_COMPLEX_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ENTITY_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_FUNCTION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ACTION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ENTITY_CONTAINER, FieldType.TAG),\n                new Field(ODataMetadata.TAG_TYPE_DEFINITION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_TERM, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATIONS, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n        } catch (error) {\n            throw new Error('Unable to parse metadata, ' + error);\n        }\n    }\n\n    protected checkVersion(document: Document) {\n        // check version\n        const attributes: NamedNodeMap = document.documentElement.attributes;\n        if (!attributes) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const attr: Attr | null = attributes.getNamedItem('Version');\n        if (attr === null) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const odataVersion = attr?.nodeValue;\n        if (odataVersion !== VERSION_4_0) {\n            throw new Error('OData version \"' + odataVersion + '\" is not supported');\n        }\n    }\n\n    protected getObjects(parentElement: Element, tag: string, fieldNames: Field[]): any[] {\n        let objects: any[] = [];\n\n        const children: HTMLCollection = parentElement.children;\n        for (let index = 0; index \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataAnnotation.html":{"url":"classes/ODataAnnotation.html","title":"class - ODataAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annot: AnnotationConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/annotation.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annot\n                                                  \n                                                        \n                                                                        AnnotationConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/annotation.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AnnotationConfig } from '../types';\n\nexport class ODataAnnotation {\n  type: string;\n  constructor(annot: AnnotationConfig) {\n    this.type = annot.type;\n    Object.assign(this, annot);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataApiOptions.html":{"url":"classes/ODataApiOptions.html","title":"class - ODataApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataApiOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/options.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ApiOptions\n                            OptionsHelper\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fetchPolicy\n                            \n                            \n                                headers\n                            \n                            \n                                    Optional\n                                ieee754Compatible\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                params\n                            \n                            \n                                    Optional\n                                preferMaxPageSize\n                            \n                            \n                                    Optional\n                                preferReturn\n                            \n                            \n                                    Optional\n                                streaming\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                version\n                            \n                            \n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/options.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FetchPolicy\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ieee754Compatible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            metadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataMetadataType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            preferMaxPageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            preferReturn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"representation\" | \"minimal\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            streaming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataVersion\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/options.ts:32\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DEFAULT_FETCH_POLICY, DEFAULT_VERSION } from './constants';\nimport { ODataHelper } from './helpers';\nimport { ApiOptions, FetchPolicy, ODataMetadataType, ODataVersion, OptionsHelper } from './types';\n\nexport class ODataApiOptions implements ApiOptions, OptionsHelper {\n  version: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  fetchPolicy: FetchPolicy;\n  streaming?: boolean;\n  // Http\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  preferReturn?: 'representation' | 'minimal';\n  preferMaxPageSize?: number;\n\n  constructor(config: ApiOptions) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.metadata = config.metadata;\n    this.stringAsEnum = config.stringAsEnum;\n    this.ieee754Compatible = config.ieee754Compatible;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.withCredentials = config.withCredentials;\n    this.fetchPolicy = config.fetchPolicy || DEFAULT_FETCH_POLICY;\n    this.preferReturn = config.preferReturn;\n    this.preferMaxPageSize = config.preferMaxPageSize;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBatchRequest.html":{"url":"classes/ODataBatchRequest.html","title":"class - ODataBatchRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBatchRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/batch.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onError\n                            \n                            \n                                onLoad\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: ODataRequest)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/types/batch.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                        ODataRequest\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataRequest\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:52\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(content: string[], status: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoad\n                        \n                        \n                    \n                \n            \n            \n                \nonLoad(content: string[], status: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ODataClient } from '../../client';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataResource } from '../resource';\nimport { HttpHeaders, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { BOUNDARY_PREFIX_SUFFIX, APPLICATION_JSON, HTTP11, CONTENT_TYPE, NEWLINE, BATCH_PREFIX, $BATCH, MULTIPART_MIXED_BOUNDARY, VERSION_4_0, MULTIPART_MIXED, ODATA_VERSION, ACCEPT, CONTENT_TRANSFER_ENCODING, APPLICATION_HTTP, CONTENT_ID, BINARY, CHANGESET_PREFIX, NEWLINE_REGEXP } from '../../constants';\nimport { ODataRequest } from '../request';\nimport { ODataApi } from '../../api';\nimport { ODataResponse } from '../responses';\nimport { HttpOptions } from './options';\nimport { Http } from '../../utils/http';\n\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n\n// From https://github.com/adamhalasz/uniqid\nvar glast: number;\nfunction now() {\n  let time = Date.now();\n  let last = glast || time;\n  return glast = time > last ? time : last + 1;\n}\nfunction uniqid(prefix?: string, suffix?: string): string { return (prefix ? prefix : '') + now().toString(36) + (suffix ? suffix : ''); }\n\nfunction getHeaderValue(header: string): string {\n  let res: string = header.split(';')[0].trim();\n  res = res.split(':')[1].trim();\n  return res;\n}\n\nfunction getBoundaryDelimiter(contentType: string): string {\n  const contentTypeParts: string[] = contentType.split(';');\n  if (contentTypeParts.length === 2) {\n    const boundary: string = contentType.split(';')[1].trim();\n    const boundaryDelimiter: string = BOUNDARY_PREFIX_SUFFIX + boundary.split('=')[1];\n    return boundaryDelimiter;\n  } else {\n    return '';\n  }\n}\n\nfunction getBoundaryEnd(boundaryDelimiter: string): string {\n  if (!boundaryDelimiter.length) {\n    return '';\n  }\n  const boundaryEnd: string = boundaryDelimiter + BOUNDARY_PREFIX_SUFFIX;\n  return boundaryEnd;\n}\n\nexport class ODataBatchRequest extends Subject> {\n  constructor(public request: ODataRequest)\n   {\n    super();\n  }\n\n  toString() {\n    //TODO: Relative or Absolute url ?\n    let res = [`${this.request.method} ${this.request.pathWithParams} ${HTTP11}`];\n    if (this.request.method === 'POST' || this.request.method === 'PATCH' || this.request.method === 'PUT') {\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_JSON}`);\n    }\n\n    if (this.request.headers instanceof HttpHeaders) {\n      let headers = this.request.headers;\n      res = [\n        ...res,\n        ...headers.keys().map(key => `${key}: ${(headers.getAll(key) || []).join(',')}`)\n      ];\n    }\n\n    return res.join(NEWLINE);\n  }\n\n  onLoad(content: string[], status: { code: number, text: string }) {\n    let headers: HttpHeaders = new HttpHeaders();\n    var index = 1;\n    for (; index = 200 && status.code ({\n        body,\n        headers,\n        status: status.code,\n        statusText: status.text,\n        url: this.request.urlWithParams\n      });\n      this.next(ODataResponse.fromHttpResponse(this.request, res));\n      this.complete();\n    } else {\n      // An unsuccessful request is delivered on the error channel.\n      this.error(new HttpErrorResponse({\n        // The error in this case is the response body (error from the server).\n        error: body,\n        headers,\n        status: status.code,\n        statusText: status.text,\n        url: this.request.urlWithParams\n      }));\n    }\n  }\n\n  onError(content: string[], status: { code: number, text: string }) {\n    const res = new HttpErrorResponse({\n      error: content.join(NEWLINE),\n      status: status.code || 0,\n      statusText: status.text || 'Unknown Error',\n      url: this.request.urlWithParams || undefined,\n    });\n    this.error(res);\n  }\n}\n\nexport class ODataBatchResource extends ODataResource {\n  // VARIABLES\n  private requests: ODataBatchRequest[];\n  batchBoundary: string;\n\n  constructor(api: ODataApi, segments?: ODataPathSegments) {\n    super(api, segments);\n    this.batchBoundary = uniqid(BATCH_PREFIX);\n    this.requests = [];\n  }\n\n  clone() {\n    //TODO: Clone\n    return new ODataBatchResource(this.api, this.pathSegments.clone());\n  }\n\n  //#region Factory\n  static factory(api: ODataApi) {\n    let segments = new ODataPathSegments();\n    segments.add(PathSegmentNames.batch, $BATCH);\n    return new ODataBatchResource(api, segments);\n  }\n  //#endregion\n\n  post(func: (batch: ODataBatchResource) => void, options?: HttpOptions): Observable> {\n    const current = this.api.request;\n    this.api.request = (req: ODataRequest): Observable => {\n      if (req.api !== this.api)\n        throw new Error(\"Batch Request are for the same api.\");\n      if (req.observe === 'events')\n        throw new Error(\"Batch Request does not allows observe == 'events'.\");\n      this.requests.push(new ODataBatchRequest(req));\n      return this.requests[this.requests.length - 1];\n    }\n    try {\n      func(this);\n    } finally {\n      this.api.request = current;\n    }\n\n    const headers = Http.mergeHttpHeaders((options && options.headers) || {}, {\n      [ODATA_VERSION]: VERSION_4_0,\n      [CONTENT_TYPE]: MULTIPART_MIXED_BOUNDARY + this.batchBoundary,\n      [ACCEPT]: MULTIPART_MIXED\n    });\n    const request = new ODataRequest({\n      method: \"POST\",\n      body: this.body(),\n      api: this.api,\n      resource: this,\n      observe: 'response',\n      responseType: 'text',\n      headers: headers,\n      params: options ? options.params : undefined,\n      withCredentials: options ? options.withCredentials : undefined\n    });\n\n    return this.api.request(request).pipe(\n      map((resp: ODataResponse) => {\n        this.handleResponse(resp);\n        return resp;\n      })\n    );\n  }\n\n  body(): string {\n    let res = [];\n    let changesetBoundary: string | null = null;\n    let changesetId = 1;\n\n    for (const batch of this.requests) {\n      // if method is GET and there is a changeset boundary open then close it\n      if (batch.request.method === 'GET' && changesetBoundary !== null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n        changesetBoundary = null;\n      }\n\n      // if there is no changeset boundary open then open a batch boundary\n      if (changesetBoundary === null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${this.batchBoundary}`);\n      }\n\n      // if method is not GET and there is no changeset boundary open then open a changeset boundary\n      if (batch.request.method !== 'GET') {\n        if (changesetBoundary === null) {\n          changesetBoundary = uniqid(CHANGESET_PREFIX);\n          res.push(`${CONTENT_TYPE}: ${MULTIPART_MIXED_BOUNDARY}${changesetBoundary}`);\n          res.push(NEWLINE);\n        }\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}`);\n      }\n\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_HTTP}`);\n      res.push(`${CONTENT_TRANSFER_ENCODING}: ${BINARY}`);\n\n      if (batch.request.method !== 'GET') {\n        res.push(`${CONTENT_ID}: ${changesetId++}`);\n      }\n\n      res.push(NEWLINE);\n      res.push(`${batch}`);\n\n      if (batch.request.method === 'GET' || batch.request.method === 'DELETE') {\n        res.push(NEWLINE);\n      } else {\n        res.push(JSON.stringify(batch.request.body));\n      }\n    }\n\n    if (res.length) {\n      if (changesetBoundary !== null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n        changesetBoundary = null;\n      }\n      res.push(`${BOUNDARY_PREFIX_SUFFIX}${this.batchBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n    }\n    return res.join(NEWLINE);\n  }\n\n  handleResponse(response: ODataResponse) {\n    let chunks: string[][] = [];\n    const contentType: string = response.headers.get(CONTENT_TYPE) || \"\";\n    const batchBoundary: string = getBoundaryDelimiter(contentType);\n    const endLine: string = getBoundaryEnd(batchBoundary);\n\n    const lines: string[] = response.body.split(NEWLINE_REGEXP);\n\n    let changesetResponses: string[][] | null = null;\n    let contentId: number | null = null;\n    let changesetBoundary: string | null = null;\n    let changesetEndLine: string | null = null;\n    let startIndex: number | null = null;\n    for (let index = 0; index  {\n      const req = this.requests[index];\n      const statusParts = chunk[0].split(' ');\n      req.onLoad(chunk.slice(1), {\n        code: Number(statusParts[1]),\n        text: statusParts[2]\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCache.html":{"url":"classes/ODataCache.html","title":"class - ODataCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/cache.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Cache\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEntry\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init?: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/cache.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/cache/cache.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/cache/cache.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: T; lastRead: any; timeout: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\nimport { DEFAULT_TIMEOUT } from '../constants';\nimport { Cache } from '../types';\nimport { ODataRequest, ODataResponse } from '../resources';\n\nexport interface ODataCacheEntry {\n  payload: T;\n  lastRead: number;\n  timeout?: number;\n}\n\nexport abstract class ODataCache implements Cache {\n  timeout: number;\n  entries: Map>;\n  constructor(init?: {timeout?: number}) {\n    this.timeout = init?.timeout || DEFAULT_TIMEOUT;\n    this.entries = new Map>();\n  }\n  abstract getResponse(req: ODataRequest): ODataResponse | undefined;\n  abstract putResponse(req: ODataRequest, res: ODataResponse): void;\n\n  buildEntry(payload: T, timeout?: number) {\n    return {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    };\n  }\n\n  put(key: string, payload: T, timeout?: number) {\n    const entry = {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    } as ODataCacheEntry;\n    this.entries.set(key, entry);\n    this.remove();\n  }\n\n  get(key: string) {\n    const entry = this.entries.get(key);\n    return entry !== undefined && !this.isExpired(entry) ? entry.payload : undefined;\n  }\n\n  private remove() {\n    // remove expired cache entries\n    this.entries.forEach((entry, key) => {\n      if (this.isExpired(entry)) {\n        this.entries.delete(key);\n      }\n    });\n  }\n\n  isExpired(entry: ODataCacheEntry) {\n    return entry.lastRead ) {\n    return req.observe === 'response' && req.method === 'GET';\n  }\n\n  handleRequest(req: ODataRequest, res$: Observable>): Observable> {\n    const policy = req.fetchPolicy;\n    const cached = this.getResponse(req);\n    if (policy === 'no-cache') {\n      return res$;\n    }\n    if (policy === 'cache-only') {\n      if (cached) {\n        return of(cached);\n      } else {\n        return throwError(\"No Cached\");\n      }\n    }\n    if (policy === 'cache-first' || policy === 'cache-and-network' || policy === 'network-only') {\n      res$ = res$.pipe(tap((res: ODataResponse) => {\n        if (res.options.cacheability !== 'no-store')\n          this.putResponse(req, res);\n      }));\n    }\n    return (cached !== undefined && policy !== 'network-only') ?\n      (policy === 'cache-and-network' ? res$.pipe(startWith(cached)) : of(cached)) :\n      res$;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ODataCacheEntry.html":{"url":"interfaces/ODataCacheEntry.html","title":"interface - ODataCacheEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ODataCacheEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/cache.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastRead\n                                \n                                \n                                        payload\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastRead\n                                    \n                                \n                                \n                                    \n                                        lastRead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\nimport { DEFAULT_TIMEOUT } from '../constants';\nimport { Cache } from '../types';\nimport { ODataRequest, ODataResponse } from '../resources';\n\nexport interface ODataCacheEntry {\n  payload: T;\n  lastRead: number;\n  timeout?: number;\n}\n\nexport abstract class ODataCache implements Cache {\n  timeout: number;\n  entries: Map>;\n  constructor(init?: {timeout?: number}) {\n    this.timeout = init?.timeout || DEFAULT_TIMEOUT;\n    this.entries = new Map>();\n  }\n  abstract getResponse(req: ODataRequest): ODataResponse | undefined;\n  abstract putResponse(req: ODataRequest, res: ODataResponse): void;\n\n  buildEntry(payload: T, timeout?: number) {\n    return {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    };\n  }\n\n  put(key: string, payload: T, timeout?: number) {\n    const entry = {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    } as ODataCacheEntry;\n    this.entries.set(key, entry);\n    this.remove();\n  }\n\n  get(key: string) {\n    const entry = this.entries.get(key);\n    return entry !== undefined && !this.isExpired(entry) ? entry.payload : undefined;\n  }\n\n  private remove() {\n    // remove expired cache entries\n    this.entries.forEach((entry, key) => {\n      if (this.isExpired(entry)) {\n        this.entries.delete(key);\n      }\n    });\n  }\n\n  isExpired(entry: ODataCacheEntry) {\n    return entry.lastRead ) {\n    return req.observe === 'response' && req.method === 'GET';\n  }\n\n  handleRequest(req: ODataRequest, res$: Observable>): Observable> {\n    const policy = req.fetchPolicy;\n    const cached = this.getResponse(req);\n    if (policy === 'no-cache') {\n      return res$;\n    }\n    if (policy === 'cache-only') {\n      if (cached) {\n        return of(cached);\n      } else {\n        return throwError(\"No Cached\");\n      }\n    }\n    if (policy === 'cache-first' || policy === 'cache-and-network' || policy === 'network-only') {\n      res$ = res$.pipe(tap((res: ODataResponse) => {\n        if (res.options.cacheability !== 'no-store')\n          this.putResponse(req, res);\n      }));\n    }\n    return (cached !== undefined && policy !== 'network-only') ?\n      (policy === 'cache-and-network' ? res$.pipe(startWith(cached)) : of(cached)) :\n      res$;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCallable.html":{"url":"classes/ODataCallable.html","title":"class - ODataCallable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCallable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/callable.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bound\n                            \n                            \n                                    Optional\n                                composable\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                path\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                isTypeOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: CallableConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/callable.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CallableConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            composable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataCallableParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Parser, CallableConfig } from '../types';\nimport { ODataSchema } from './schema';\nimport { ODataCallableParser } from '../parsers';\n\nexport class ODataCallable {\n  schema: ODataSchema;\n  name: string;\n  path: string;\n  bound?: boolean;\n  composable?: boolean;\n  parser: ODataCallableParser;\n\n  constructor(config: CallableConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.path = config.path || (config.bound ? `${schema.namespace}.${config.name}` : config.name);\n    this.bound = config.bound;\n    this.composable = config.composable;\n    this.parser = new ODataCallableParser(config, schema.namespace);\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    const parserSettings = Object.assign({options: this.options}, settings);\n    this.parser.configure(parserSettings);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCallableParser.html":{"url":"classes/ODataCallableParser.html","title":"class - ODataCallableParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCallableParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/callable.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                parameters\n                            \n                            \n                                parser\n                            \n                            \n                                    Optional\n                                return\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: CallableConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/callable.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CallableConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataParameterParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            return\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:34\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     R\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(params: any, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parser, Options, Parameter, CallableConfig, StructuredTypeFieldOptions } from '../types';\n\nconst NONE_PARSER = {\n  serialize(value: any, options: Options) {return value}\n} as Parser;\n\nexport class ODataParameterParser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  collection?: boolean;\n  nullable?: boolean;\n\n  constructor(name: string, parameter: Parameter) {\n    this.name = name;\n    this.type = parameter.type;\n    this.parser = NONE_PARSER;\n    Object.assign(this, parameter);\n  }\n\n  serialize(value: Type, options: StructuredTypeFieldOptions): any {\n    return Array.isArray(value) ?\n      value.map(v => this.parser.serialize(v, options)) :\n      this.parser.serialize(value, options);\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser = settings.findParserForType(this.type) || NONE_PARSER;\n  }\n}\n\nexport class ODataCallableParser implements Parser {\n  name: string;\n  type: string;\n  return?: string;\n  parser: Parser;\n  parameters: ODataParameterParser[];\n  constructor(config: CallableConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${config.name}`;\n    this.return = config.return;\n    this.parser = NONE_PARSER;\n    this.parameters = Object.entries(config.parameters || [])\n      .map(([name, p]) => new ODataParameterParser(name, p as Parameter));\n  }\n\n  // Deserialize\n  deserialize(value: any, options: StructuredTypeFieldOptions): R {\n    return this.parser.deserialize(value, options);\n  }\n\n  // Serialize\n  serialize(params: any, options: StructuredTypeFieldOptions): any {\n    return Object.assign({}, this.parameters\n      .filter(p => p.name in params && params[p.name] !== undefined)\n      .reduce((acc, p) => Object.assign(acc, { [p.name]: p.serialize(params[p.name], options) }), {})\n    );\n  }\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    if (this.return)\n      this.parser = settings.findParserForType(this.return) || NONE_PARSER;\n    this.parameters.forEach(p => p.configure(settings));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCollection.html":{"url":"classes/ODataCollection.html","title":"class - ODataCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/collection.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Iterable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                __meta\n                            \n                            \n                                    Private\n                                __models\n                            \n                            \n                                    Private\n                                __resource\n                            \n                            \n                                add$\n                            \n                            \n                                remove$\n                            \n                            \n                                request$\n                            \n                            \n                                reset$\n                            \n                            \n                                sync$\n                            \n                            \n                                update$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                __model\n                            \n                            \n                                    Private\n                                __request\n                            \n                            \n                                    Protected\n                                _action\n                            \n                            \n                                    Protected\n                                _function\n                            \n                            \n                                add\n                            \n                            \n                                all\n                            \n                            \n                                attach\n                            \n                            \n                                clone\n                            \n                            \n                                count\n                            \n                            \n                                create\n                            \n                            \n                                fetch\n                            \n                            \n                                next\n                            \n                            \n                                    Protected\n                                parse\n                            \n                            \n                                remove\n                            \n                            \n                                toEntities\n                            \n                            \n                                    Public\n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    models\n                                \n                                \n                                    state\n                                \n                                \n                                    _resource\n                                \n                                \n                                    _schema\n                                \n                                \n                                    _segment\n                                \n                                \n                                    _query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: any, options: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/collection.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            __meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntitiesMeta\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            __models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     M[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            __resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            request$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter>>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sync$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            __model\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    __model(attrs: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            __request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    __request(obs$: Observable>)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obs$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _action\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _action(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:227\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _function\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _function(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:220\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(model: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            all\n                        \n                        \n                    \n                \n            \n            \n                \nall(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \nattach(resource: ODataResource)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataCollection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(attrs: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            next\n                        \n                        \n                    \n                \n            \n            \n                \nnext(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(model: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toEntities\n                        \n                        \n                    \n                \n            \n            \n                \ntoEntities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { next(): any; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        models\n                    \n                \n\n                \n                    \n                        getmodels()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:23\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _resource\n                    \n                \n\n                \n                    \n                        get_resource()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _schema\n                    \n                \n\n                \n                    \n                        get_schema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:201\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _segment\n                    \n                \n\n                \n                    \n                        get_segment()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:207\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _query\n                    \n                \n\n                \n                    \n                        get_query()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:213\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { map, switchMap, tap } from 'rxjs/operators';\nimport { Observable, EMPTY, NEVER, of } from 'rxjs';\n\nimport {\n  ODataResource,\n  ODataEntitySetResource,\n  ODataEntityResource,\n  ODataNavigationPropertyResource,\n  ODataFunctionResource,\n  ODataEntitiesMeta,\n  HttpOptions,\n  HttpEntitiesOptions,\n  ODataEntities\n} from '../resources/index';\n\nimport { ODataModel } from './model';\nimport { EventEmitter } from '@angular/core';\n\nexport class ODataCollection> implements Iterable {\n  private __resource: ODataResource | null;\n  private __meta: ODataEntitiesMeta;\n  private __models: M[];\n  get models() {\n    return [...this.__models];\n  }\n\n  get state() {\n    return {\n      top: this.__meta.top,\n      skip: this.__meta.skip,\n      skiptoken: this.__meta.skiptoken,\n      records: this.__meta.count,\n    };\n  }\n\n  //Events\n  add$ = new EventEmitter();\n  remove$ = new EventEmitter();\n  update$ = new EventEmitter();\n  request$ = new EventEmitter>>();\n  sync$ = new EventEmitter();\n  reset$ = new EventEmitter();\n\n  constructor(data?: any, options: { resource?: ODataResource, meta?: ODataEntitiesMeta, parse?: boolean } = {}) {\n    data = data || {};\n    this.__resource = null;\n    this.__models = [] as M[];\n    if (options.resource instanceof ODataResource)\n      this.attach(options.resource);\n    this.__meta = options.meta || new ODataEntitiesMeta(data, {options: options.resource?.api.options});\n    if (!Array.isArray(data))\n      data = this.__meta.data(data) || [];\n    this.__models = this.parse(data);\n  }\n\n  attach(resource: ODataResource) {\n    if (this.__resource !== null && this.__resource.type() !== resource.type() && !resource.isSubtypeOf(this.__resource))\n      throw new Error(`Can't reattach ${resource.type()} to ${this.__resource.type()}`);\n    this.__resource = resource;\n    return this;\n  }\n\n  get _resource() {\n    return this.__resource !== null ? this.__resource.clone() as ODataResource : null;\n  }\n\n  private __model(attrs: T): M {\n    let resource = this.__resource ? this.__resource.clone() : null;\n    if (resource instanceof ODataEntitySetResource)\n      resource = resource.entity();\n    const meta = this.__meta.entity(attrs);\n    if (resource instanceof ODataEntityResource || resource instanceof ODataNavigationPropertyResource) {\n      if (meta.type !== undefined) {\n        resource.segment.entitySet().type(meta.type);\n      }\n    }\n    return (resource ? resource.clone().asModel(attrs, meta) : attrs) as M;\n  }\n  protected parse(entities: T[]): M[] {\n    return entities.map(e => this.__model(e));\n  }\n\n  toEntities() {\n    return this.__models.map(model => model.toEntity());\n  }\n\n  clone() {\n    let options: { resource?: ODataResource, meta?: ODataEntitiesMeta } = {};\n    if (this.__resource)\n      options.resource = this.__resource.clone();\n    if (this.__meta)\n      options.meta = this.__meta.clone();\n    let Ctor = this.constructor;\n    return new Ctor(this.models, options);\n  }\n\n  // Iterable\n  public [Symbol.iterator]() {\n    let pointer = 0;\n    let models = this.__models;\n    return {\n      next(): IteratorResult {\n        return {\n          done: pointer === models.length,\n          value: models[pointer++]\n        };\n      }\n    }\n  }\n\n  // Requests\n  private __request(obs$: Observable>): Observable {\n    this.request$.emit(obs$);\n    return obs$.pipe(\n      map(({entities, meta}) => {\n        this.__meta = meta;\n        this.__models = this.parse(entities || []);\n        this.sync$.emit();\n        return this;\n      }));\n  }\n\n  fetch(options?: HttpOptions): Observable {\n    let obs$: Observable> = NEVER;\n    if (this.__resource instanceof ODataEntitySetResource) {\n      obs$ = this.__resource.get(\n        Object.assign({ withCount: true }, options || {}));\n    } else if (this.__resource instanceof ODataNavigationPropertyResource) {\n      obs$ = this.__resource.get(\n        Object.assign({ responseType: 'entities', withCount: true }, options || {}));\n    } else if (this.__resource instanceof ODataFunctionResource) {\n      obs$ = this.__resource.get(\n        Object.assign({ responseType: 'entities', withCount: true }, options || {}));\n    }\n    return this.__request(obs$);\n  }\n\n  next(options?: HttpOptions) {\n    if (this.state.skip) {\n      this._query.skip(this.state.skip);\n      return this.fetch(options);\n    }\n    else if (this.state.skiptoken) {\n      this._query.skiptoken(this.state.skiptoken);\n      return this.fetch(options);\n    }\n    return EMPTY;\n  }\n\n  all(options?: HttpOptions): Observable {\n    let obs$: Observable = NEVER;\n    if (this.__resource instanceof ODataEntitySetResource || this.__resource instanceof ODataNavigationPropertyResource) {\n      obs$ = this.__resource.all(options)\n        .pipe(map(entities => ({entities, meta: new ODataEntitiesMeta({}, {options: this.__resource?.api.options})})));\n    }\n    return this.__request(obs$);\n  }\n\n  //TODO: add and remove like backbone\n  add(model: M): Observable {\n    let obs$: Observable = EMPTY;\n    if (this.__resource instanceof ODataNavigationPropertyResource) {\n      let ref = this.__resource.reference();\n      obs$ = ref.add(model._resource as ODataEntityResource);\n    }\n    return obs$.pipe(map(() => {\n      this.__models.push(model);\n      this.add$.emit(model);\n      return this;\n    }));\n  }\n\n  remove(model: M) {\n    let obs$: Observable = EMPTY;\n    if (this.__resource instanceof ODataNavigationPropertyResource) {\n      let ref = this.__resource.reference();\n      obs$ = ref.remove(model._resource as ODataEntityResource);\n    }\n    return obs$.pipe(map(() => {\n      const index = this.__models.indexOf(model);\n      this.__models.splice(index, 1);\n      this.remove$.emit(model);\n      return this;\n    }));\n  }\n\n  create(attrs: T) {\n    const model = this.__model(attrs);\n    if (model.isValid())\n      return model.save()\n        .pipe(tap(model => this.add(model)))\n    this.add(model);\n    return of(model);\n  }\n\n  // Count\n  count() {\n    return (this.__resource as ODataEntitySetResource).count().get();\n  }\n\n  get _schema() {\n    if (!this.__resource)\n      throw new Error(`Can't config without ODataResource`);\n    return (this.__resource as ODataEntitySetResource).schema;\n  }\n\n  get _segment() {\n    if (!this.__resource)\n      throw new Error(`Can't call without ODataResource`);\n    return (this.__resource as ODataEntitySetResource).segment;\n  }\n\n  get _query() {\n    if (!this.__resource)\n      throw new Error(`Can't query without ODataResource`);\n    return (this.__resource as ODataEntitySetResource).query;\n  }\n\n  // Function\n  protected _function(path: string) {\n    if (!this.__resource)\n      throw new Error(`Can't navigationProperty without ODataResource`);\n    return (this.__resource as ODataEntitySetResource).function(path);\n  }\n\n  // Action\n  protected _action(path: string) {\n    if (!this.__resource)\n      throw new Error(`Can't navigationProperty without ODataResource`);\n    return (this.__resource as ODataEntitySetResource).action(path);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCountResource.html":{"url":"classes/ODataCountResource.html","title":"class - ODataCountResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCountResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/count.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                get\n                            \n                            \n                                alias\n                            \n                            \n                                asCollection\n                            \n                            \n                                asModel\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                isSubtypeOf\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    segment\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:31\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataCountResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(api: ODataApi, segments: ODataPathSegments, options: ODataQueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api\n                                    \n                                                ODataApi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                                ODataPathSegments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataCountResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asCollection\n                        \n                        \n                    \n                \n            \n            \n                \nasCollection(entities: Partial[], meta?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:88\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asModel\n                        \n                        \n                    \n                \n            \n            \n                \nasModel(entity: Partial, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:79\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:228\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endpointUrl\n                        \n                        \n                    \n                \n            \n            \n                \nendpointUrl()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:198\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSubtypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisSubtypeOf(other: ODataResource)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:220\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:68\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:205\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:212\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:137\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:111\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:125\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:101\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:46\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        segment\n                    \n                \n\n                \n                    \n                        getsegment()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataQueryOptions, QueryOptionNames } from '../query-options';\nimport { ODataResource } from '../resource';\nimport { HttpOptions } from './options';\nimport { $COUNT } from '../../constants';\nimport { ODataApi } from '../../api';\n\nexport class ODataCountResource extends ODataResource {\n  //#region Factory\n  static factory(api: ODataApi, segments: ODataPathSegments, options: ODataQueryOptions) {\n    segments.add(PathSegmentNames.count, $COUNT).type('Edm.Int32');\n    options.keep(QueryOptionNames.filter, QueryOptionNames.search);\n    return new ODataCountResource(api, segments, options);\n  }\n\n  get segment() {\n    const segments = this.pathSegments;\n    return {\n      entitySet() {\n        return segments.get(PathSegmentNames.entitySet);\n      },\n      navigationProperty() {\n        return segments.get(PathSegmentNames.navigationProperty);\n      }\n    }\n  }\n\n  clone() {\n    return new ODataCountResource(this.api, this.pathSegments.clone(), this.queryOptions.clone());\n  }\n  //#endregion\n\n  //#region Requests\n  get(options?: HttpOptions): Observable {\n    return super.get(\n      Object.assign({responseType: 'value'}, options || {})\n    );\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitiesMeta.html":{"url":"classes/ODataEntitiesMeta.html","title":"class - ODataEntitiesMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitiesMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataMeta\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                entity\n                            \n                            \n                                function\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    readLink\n                                \n                                \n                                    count\n                                \n                                \n                                    nextLink\n                                \n                                \n                                    deltaLink\n                                \n                                \n                                    top\n                                \n                                \n                                    skip\n                                \n                                \n                                    skiptoken\n                                \n                                \n                                    functions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:177\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitiesMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \nentity(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityMeta\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:146\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        count\n                    \n                \n\n                \n                    \n                        getcount()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:150\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextLink\n                    \n                \n\n                \n                    \n                        getnextLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:154\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deltaLink\n                    \n                \n\n                \n                    \n                        getdeltaLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:158\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n\n                \n                    \n                        gettop()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:162\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:167\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skiptoken\n                    \n                \n\n                \n                    \n                        getskiptoken()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:172\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:178\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    if (!this.options)\n      throw Error(\"No helper\");\n    return this.options.helper;\n  }\n\n  constructor(data: Object, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    //TODO: Default options\n    this.options = opt.options;\n    this.annotations = (this.options ? this.odv.annotations(data) : data) || {};\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context: any;\n  get context(): ODataContext {\n    if (!this._context) {\n      this._context = this.odv.context(this.annotations) || {};\n    }\n    return this._context;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = this.odv.properties(this.annotations) || {};\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone() : ODataMeta;\n  abstract data(data: Object) : Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type() {\n    return this.odv.type(this.annotations);\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type() {\n    return this.odv.type(this.annotations);\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag() {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink() {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink() {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink() {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType() {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations) || {};\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n\n  entity(data: Object) {\n    return new ODataEntityMeta(data, {options: this.options});\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityContainer.html":{"url":"classes/ODataEntityContainer.html","title":"class - ODataEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/entity-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                entitySets\n                            \n                            \n                                name\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntityContainerConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/entity-container.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntityContainerConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entitySets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntitySet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { Annotation, EntityContainerConfig } from '../types';\nimport { ODataEntitySet } from './entity-set';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataEntityContainer {\n  schema: ODataSchema;\n  name: string;\n  annotations: ODataAnnotation[];\n  entitySets: ODataEntitySet[];\n  constructor(config: EntityContainerConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.entitySets = (config.entitySets || []).map(config => new ODataEntitySet(config, schema));\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n  get options() {\n    return this.schema.options;\n  }\n\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityMeta.html":{"url":"classes/ODataEntityMeta.html","title":"class - ODataEntityMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataMeta\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attributes\n                            \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                function\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                                \n                                    id\n                                \n                                \n                                    etag\n                                \n                                \n                                    mediaEtag\n                                \n                                \n                                    metadataEtag\n                                \n                                \n                                    readLink\n                                \n                                \n                                    editLink\n                                \n                                \n                                    mediaReadLink\n                                \n                                \n                                    mediaEditLink\n                                \n                                \n                                    mediaContentType\n                                \n                                \n                                    functions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attributes\n                        \n                        \n                    \n                \n            \n            \n                \nattributes(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:76\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntityMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:80\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:84\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        etag\n                    \n                \n\n                \n                    \n                        getetag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:88\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEtag\n                    \n                \n\n                \n                    \n                        getmediaEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:92\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        metadataEtag\n                    \n                \n\n                \n                    \n                        getmetadataEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:96\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:100\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        editLink\n                    \n                \n\n                \n                    \n                        geteditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaReadLink\n                    \n                \n\n                \n                    \n                        getmediaReadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:108\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEditLink\n                    \n                \n\n                \n                    \n                        getmediaEditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:112\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaContentType\n                    \n                \n\n                \n                    \n                        getmediaContentType()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:116\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:121\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    if (!this.options)\n      throw Error(\"No helper\");\n    return this.options.helper;\n  }\n\n  constructor(data: Object, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    //TODO: Default options\n    this.options = opt.options;\n    this.annotations = (this.options ? this.odv.annotations(data) : data) || {};\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context: any;\n  get context(): ODataContext {\n    if (!this._context) {\n      this._context = this.odv.context(this.annotations) || {};\n    }\n    return this._context;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = this.odv.properties(this.annotations) || {};\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone() : ODataMeta;\n  abstract data(data: Object) : Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type() {\n    return this.odv.type(this.annotations);\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type() {\n    return this.odv.type(this.annotations);\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag() {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink() {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink() {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink() {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType() {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations) || {};\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n\n  entity(data: Object) {\n    return new ODataEntityMeta(data, {options: this.options});\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityService.html":{"url":"classes/ODataEntityService.html","title":"class - ODataEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                    Abstract\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                                \n                                    structuredTypeSchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient, name: string, apiNameOrEntityType?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiNameOrEntityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:11\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity.ts:16\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        structuredTypeSchema\n                    \n                \n\n                \n                    \n                        getstructuredTypeSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataResource } from '../resources';\nimport { ODataClient } from \"../client\";\nimport { EntityKey } from '../types';\nimport { ODataModel } from '../models/model';\n\nexport abstract class ODataEntityService {\n  constructor(protected client: ODataClient, protected name: string, protected apiNameOrEntityType?: string) { }\n\n  public abstract entity(key?: EntityKey): ODataResource;\n  // Models\n  public attach>(value: M): M {\n    return value.attach(this.entity());\n  }\n\n  // Api Config\n  get api() {\n    return this.client.apiFor(this.apiNameOrEntityType);\n  }\n\n  // Entity Config\n  get structuredTypeSchema() {\n    if (this.apiNameOrEntityType === undefined)\n      return null;\n    return this.api.findStructuredTypeForType(this.apiNameOrEntityType) || null;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitySet.html":{"url":"classes/ODataEntitySet.html","title":"class - ODataEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/entity-set.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                entityType\n                            \n                            \n                                name\n                            \n                            \n                                schema\n                            \n                            \n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAnnotation\n                            \n                            \n                                isTypeOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntitySetConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/entity-set.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntitySetConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { Annotation, EntitySetConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\nexport class ODataEntitySet {\n  schema: ODataSchema\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations: ODataAnnotation[];\n  constructor(config: EntitySetConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.entityType = config.entityType;\n    this.service = config.service;\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitySetService.html":{"url":"classes/ODataEntitySetService.html","title":"class - ODataEntitySetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitySetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/entity-set.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assign\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Public\n                                fetchOrCreate\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                    Abstract\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    entitySetSchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assign(entity: Partial, attrs: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:21\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:22\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitySetResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchOrCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchOrCreate(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataEntityService\n\n                \n            \n            \n                \n                        Defined in         ODataEntityService:11\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataEntityService\n\n                \n            \n            \n                \n                        Defined in         ODataEntityService:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        entitySetSchema\n                    \n                \n\n                \n                    \n                        getentitySetSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity-set.ts:32\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataEntitySetResource, ODataEntityResource, HttpOptions } from '../resources';\nimport { EntityKey } from '../types';\nimport { ODataCollection } from '../models/collection';\nimport { ODataModel } from '../models/model';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { ODataEntityService } from './entity';\n\nexport class ODataEntitySetService extends ODataEntityService {\n  public entities(): ODataEntitySetResource {\n    return this.client.entitySet(this.name, this.apiNameOrEntityType);\n  }\n\n  public entity(key?: EntityKey): ODataEntityResource {\n    return this.entities()\n      .entity(key);\n  }\n\n  // Models\n  public attach>(value: M): M;\n  public attach>>(value: C): C;\n  public attach(value: any): any {\n    if (value instanceof ODataModel) {\n      return value.attach(this.entities().entity());\n    } else if (value instanceof ODataCollection) {\n      return value.attach(this.entities());\n    }\n  }\n\n  // Service Config\n  get entitySetSchema() {\n    return this.api.findEntitySetByName(this.name) || null;\n  }\n\n  public create(entity: Partial, options?: HttpOptions): Observable {\n    return this.entities()\n      .post(entity, options)\n      .pipe(map(({entity}) => entity));\n  }\n\n  public update(entity: Partial, options?: HttpOptions): Observable {\n    const odata = this.api.options.helper;\n    const etag = odata.etag(entity);\n    const res = this.entity(entity);\n    if (!res.segment.entitySet().hasKey())\n      return throwError(\"Resource without key\");\n    return this.entity(entity as EntityKey)\n      .put(entity, Object.assign({etag}, options || {}))\n      .pipe(map(({entity}) => entity));\n  }\n\n  public assign(entity: Partial, attrs: Partial, options?: HttpOptions): Observable {\n    const odata = this.api.options.helper;\n    const etag = odata.etag(entity);\n    const res = this.entity(entity);\n    if (!res.segment.entitySet().hasKey())\n      return throwError(\"Resource without key\");\n    return res.patch(attrs, Object.assign({etag}, options || {}))\n      .pipe(map(({entity: newentity, meta}) => newentity ? newentity :\n        Object.assign(entity, attrs, meta.annotations) as T));\n  }\n\n  public destroy(entity: Partial, options?: HttpOptions) {\n    const odata = this.api.options.helper;\n    const etag = odata.etag(entity);\n    const res = this.entity(entity);\n    if (!res.segment.entitySet().hasKey())\n      return throwError(\"Resource without key\");\n    return res.delete(Object.assign({etag}, options || {}));\n  }\n\n  // Shortcuts\n  public fetchOrCreate(entity: Partial, options?: HttpOptions): Observable {\n    return this.entity(entity).fetch(options)\n      .pipe(catchError((error: HttpErrorResponse) => {\n        if (error.status === 404)\n          return this.create(entity, options);\n        else\n          return throwError(error);\n      }));\n  }\n\n  public save(entity: Partial, options?: HttpOptions) {\n    return this.entity(entity).segment.entitySet().hasKey() ?\n      this.update(entity, options) :\n      this.create(entity, options);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumType.html":{"url":"classes/ODataEnumType.html","title":"class - ODataEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                findAnnotation\n                            \n                            \n                                findFieldByName\n                            \n                            \n                                findFieldByValue\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                mapFields\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumTypeConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/enum-type.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumTypeParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fields\n                        \n                        \n                    \n                \n            \n            \n                \nfields()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ODataEnumTypeFieldParser[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findFieldByName\n                        \n                        \n                    \n                \n            \n            \n                \nfindFieldByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findFieldByValue\n                        \n                        \n                    \n                \n            \n            \n                \nfindFieldByValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapFields\n                        \n                        \n                    \n                \n            \n            \n                \nmapFields(mapper: (field: ODataEnumTypeFieldParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:46\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapper\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:27\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { ODataEnumTypeFieldParser, ODataEnumTypeParser } from '../parsers';\nimport { Annotation, EnumTypeConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataEnumType {\n  schema: ODataSchema;\n  name: string;\n  parser: ODataEnumTypeParser;\n  members: { [name: string]: number } | { [value: number]: string };\n  annotations: ODataAnnotation[];\n  constructor(config: EnumTypeConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.members = config.members;\n    this.parser = new ODataEnumTypeParser(config, schema.namespace);\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n  fields(): ODataEnumTypeFieldParser[] {\n    return this.parser.fields;\n  }\n\n  findFieldByName(name: string) {\n    return this.fields().find(f => f.name === name);\n  }\n\n  findFieldByValue(value: number) {\n    return this.fields().find(f => f.value === value);\n  }\n\n  mapFields(mapper: (field: ODataEnumTypeFieldParser) => T) {\n    return this.fields().map(mapper);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumTypeFieldParser.html":{"url":"classes/ODataEnumTypeFieldParser.html","title":"class - ODataEnumTypeFieldParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumTypeFieldParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/enum-type.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            EnumTypeField\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAnnotation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, field: EnumTypeField)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        EnumTypeField\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Annotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EnumHelper } from '../helpers';\nimport { EnumTypeConfig, Parser, OptionsHelper, EnumTypeField, Annotation } from '../types';\n\nexport class ODataEnumTypeFieldParser implements EnumTypeField {\n  name: string;\n  value: number;\n  annotations: Annotation[];\n  constructor(name: string, field: EnumTypeField) {\n    this.name = name;\n    this.value = field.value;\n    this.annotations = field.annotations || [];\n  }\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n}\nexport class ODataEnumTypeParser implements Parser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: ODataEnumTypeFieldParser[];\n  constructor(config: EnumTypeConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${config.name}`;\n    this.flags = config.flags;\n    this.members = config.members;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataEnumTypeFieldParser(name, f as EnumTypeField));\n  }\n\n  // Deserialize\n  deserialize(value: string, options: OptionsHelper): Type {\n    // string -> Type\n    if (this.flags) {\n      return EnumHelper.toValues(this.members, value).reduce((acc, v) => acc | v, 0) as any;\n    } else {\n      return EnumHelper.toValue(this.members, value) as any;\n    }\n  }\n\n  // Serialize\n  serialize(value: Type, options: OptionsHelper): string {\n    // Type -> string\n    if (this.flags) {\n      let names = EnumHelper.toNames(this.members, value);\n      if (!options.stringAsEnum)\n        names = names.map(name => `${this.type}'${name}'`)\n      return names.join(\", \");\n    } else {\n      let name = EnumHelper.toName(this.members, (value) as number);\n      if (!options.stringAsEnum)\n        name = `${this.type}'${name}'`;\n      return name;\n    }\n  }\n\n  // Json Schema\n  toJsonSchema() {\n    let property = {\n      title: this.name,\n      type: \"string\"\n    };\n    property.enum = this.fields.map(f => f.name);\n    return property;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumTypeParser.html":{"url":"classes/ODataEnumTypeParser.html","title":"class - ODataEnumTypeParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumTypeParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/enum-type.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                    Optional\n                                flags\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                            \n                                toJsonSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumTypeConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ODataEnumTypeFieldParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            flags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: string, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: Type, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum-type.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EnumHelper } from '../helpers';\nimport { EnumTypeConfig, Parser, OptionsHelper, EnumTypeField, Annotation } from '../types';\n\nexport class ODataEnumTypeFieldParser implements EnumTypeField {\n  name: string;\n  value: number;\n  annotations: Annotation[];\n  constructor(name: string, field: EnumTypeField) {\n    this.name = name;\n    this.value = field.value;\n    this.annotations = field.annotations || [];\n  }\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n}\nexport class ODataEnumTypeParser implements Parser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: ODataEnumTypeFieldParser[];\n  constructor(config: EnumTypeConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${config.name}`;\n    this.flags = config.flags;\n    this.members = config.members;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataEnumTypeFieldParser(name, f as EnumTypeField));\n  }\n\n  // Deserialize\n  deserialize(value: string, options: OptionsHelper): Type {\n    // string -> Type\n    if (this.flags) {\n      return EnumHelper.toValues(this.members, value).reduce((acc, v) => acc | v, 0) as any;\n    } else {\n      return EnumHelper.toValue(this.members, value) as any;\n    }\n  }\n\n  // Serialize\n  serialize(value: Type, options: OptionsHelper): string {\n    // Type -> string\n    if (this.flags) {\n      let names = EnumHelper.toNames(this.members, value);\n      if (!options.stringAsEnum)\n        names = names.map(name => `${this.type}'${name}'`)\n      return names.join(\", \");\n    } else {\n      let name = EnumHelper.toName(this.members, (value) as number);\n      if (!options.stringAsEnum)\n        name = `${this.type}'${name}'`;\n      return name;\n    }\n  }\n\n  // Json Schema\n  toJsonSchema() {\n    let property = {\n      title: this.name,\n      type: \"string\"\n    };\n    property.enum = this.fields.map(f => f.name);\n    return property;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataInMemoryCache.html":{"url":"classes/ODataInMemoryCache.html","title":"class - ODataInMemoryCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataInMemoryCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/memory.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                            \n                                putResponse\n                            \n                            \n                                buildEntry\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init?: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/memory.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:14\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/memory.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \nputResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/memory.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: T; lastRead: any; timeout: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache } from './cache';\nexport class ODataInMemoryCache extends ODataCache> {\n  constructor(init?: {timeout?: number}) {\n    super(init);\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.urlWithParams, res, res.options.maxAge);\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    return this.get(req.urlWithParams);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataInStorageCache.html":{"url":"classes/ODataInStorageCache.html","title":"class - ODataInStorageCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataInStorageCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/storage.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                            \n                                putResponse\n                            \n                            \n                                buildEntry\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/storage.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:14\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/storage.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \nputResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/storage.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: T; lastRead: any; timeout: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache, ODataCacheEntry } from './cache';\n\ninterface StoragePayload {\n    body: any | null;\n    headers: {[name: string]: string | string[]};\n    status: number;\n    statusText: string;\n    url: string | null;\n}\n\nexport class ODataInStorageCache extends ODataCache {\n  constructor(init: {timeout?: number, name: string, storage?: Storage}) {\n    super(init);\n    const name = init.name;\n    const storage = init.storage || sessionStorage;\n    this.entries = new Map>(JSON.parse(storage.getItem(name) || \"[]\"));\n    window.addEventListener(\"beforeunload\", ((backend, key, responses) => function() {\n      backend.setItem(key, JSON.stringify(Array.from(responses.entries())))\n    })(storage, name, this.entries));\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.urlWithParams, res.toJSON(), res.options.maxAge);\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    const data = this.get(req.urlWithParams);\n\n    return data !== undefined ? ODataResponse.fromJSON(req, data) : undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataMeta.html":{"url":"classes/ODataMeta.html","title":"class - ODataMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    odv\n                                \n                                \n                                    context\n                                \n                                \n                                    properties\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Object, opt: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opt\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odv\n                    \n                \n\n                \n                    \n                        getodv()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:7\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n\n                \n                    \n                        getcontext()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        properties\n                    \n                \n\n                \n                    \n                        getproperties()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    if (!this.options)\n      throw Error(\"No helper\");\n    return this.options.helper;\n  }\n\n  constructor(data: Object, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    //TODO: Default options\n    this.options = opt.options;\n    this.annotations = (this.options ? this.odv.annotations(data) : data) || {};\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context: any;\n  get context(): ODataContext {\n    if (!this._context) {\n      this._context = this.odv.context(this.annotations) || {};\n    }\n    return this._context;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = this.odv.properties(this.annotations) || {};\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone() : ODataMeta;\n  abstract data(data: Object) : Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type() {\n    return this.odv.type(this.annotations);\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type() {\n    return this.odv.type(this.annotations);\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag() {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink() {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink() {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink() {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType() {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations) || {};\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n\n  entity(data: Object) {\n    return new ODataEntityMeta(data, {options: this.options});\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataMetadataResource.html":{"url":"classes/ODataMetadataResource.html","title":"class - ODataMetadataResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataMetadataResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/metadata.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                get\n                            \n                            \n                                alias\n                            \n                            \n                                asCollection\n                            \n                            \n                                asModel\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                isSubtypeOf\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ODataApi, segments?: ODataPathSegments)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataPathSegments\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:31\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMetadataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(api: ODataApi)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api\n                                    \n                                                ODataApi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataMetadataResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asCollection\n                        \n                        \n                    \n                \n            \n            \n                \nasCollection(entities: Partial[], meta?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:88\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asModel\n                        \n                        \n                    \n                \n            \n            \n                \nasModel(entity: Partial, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:79\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:228\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endpointUrl\n                        \n                        \n                    \n                \n            \n            \n                \nendpointUrl()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:198\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSubtypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisSubtypeOf(other: ODataResource)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:220\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:68\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:205\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:212\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:137\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:111\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:125\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:101\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:46\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { ODataResource } from '../resource';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { map } from 'rxjs/operators';\nimport { HttpOptions } from './options';\nimport { ODataMetadata } from '../responses';\nimport { $METADATA } from '../../constants';\nimport { ODataApi } from '../../api';\n\nexport class ODataMetadataResource extends ODataResource {\n  constructor(api: ODataApi, segments?: ODataPathSegments) {\n    super(api, segments);\n  }\n\n  clone() {\n    return new ODataMetadataResource(this.api, this.pathSegments.clone());\n  }\n\n  //#region Factory\n  static factory(api: ODataApi) {\n    let segments = new ODataPathSegments();\n    segments.add(PathSegmentNames.metadata, $METADATA);\n    return new ODataMetadataResource(api, segments);\n  }\n  //#endregion\n\n  //#region Requests\n  get(options?: HttpOptions): Observable {\n    let opts = Object.assign({ responseType: 'text' }, options || {});\n    return super.get(opts).pipe(map((body: any) => new ODataMetadata(body)));\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ODataModule.html":{"url":"modules/ODataModule.html","title":"module - ODataModule","body":"\n                   \n\n\n\n\n    Modules\n    ODataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-odata/src/lib/module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ODataClient\n                        \n                        \n                            ODataServiceFactory\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(configs: ApiConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                ApiConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ODataSettings } from './settings';\nimport { ODataClient } from './client';\nimport { ODataServiceFactory } from './services/index';\nimport { ApiConfig } from './types';\nimport { ODATA_CONFIGURATIONS } from './tokens';\n\nexport function createSettings(configs: ApiConfig[]) {\n  return new ODataSettings(...configs);\n}\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [ODataClient, ODataServiceFactory]\n})\nexport class ODataModule {\n  public static forRoot(...configs: ApiConfig[]): ModuleWithProviders {\n    return {\n      ngModule: ODataModule,\n      providers: [\n        { provide: ODATA_CONFIGURATIONS, useValue: configs },\n        {\n          provide: ODataSettings,\n          useFactory: createSettings,\n          deps: [ODATA_CONFIGURATIONS]\n        },\n        ODataClient,\n        ODataServiceFactory\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataParameterParser.html":{"url":"classes/ODataParameterParser.html","title":"class - ODataParameterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataParameterParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/callable.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                nullable\n                            \n                            \n                                    Private\n                                parser\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, parameter: Parameter)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/callable.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameter\n                                                  \n                                                        \n                                                                        Parameter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: Type, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parser, Options, Parameter, CallableConfig, StructuredTypeFieldOptions } from '../types';\n\nconst NONE_PARSER = {\n  serialize(value: any, options: Options) {return value}\n} as Parser;\n\nexport class ODataParameterParser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  collection?: boolean;\n  nullable?: boolean;\n\n  constructor(name: string, parameter: Parameter) {\n    this.name = name;\n    this.type = parameter.type;\n    this.parser = NONE_PARSER;\n    Object.assign(this, parameter);\n  }\n\n  serialize(value: Type, options: StructuredTypeFieldOptions): any {\n    return Array.isArray(value) ?\n      value.map(v => this.parser.serialize(v, options)) :\n      this.parser.serialize(value, options);\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser = settings.findParserForType(this.type) || NONE_PARSER;\n  }\n}\n\nexport class ODataCallableParser implements Parser {\n  name: string;\n  type: string;\n  return?: string;\n  parser: Parser;\n  parameters: ODataParameterParser[];\n  constructor(config: CallableConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${config.name}`;\n    this.return = config.return;\n    this.parser = NONE_PARSER;\n    this.parameters = Object.entries(config.parameters || [])\n      .map(([name, p]) => new ODataParameterParser(name, p as Parameter));\n  }\n\n  // Deserialize\n  deserialize(value: any, options: StructuredTypeFieldOptions): R {\n    return this.parser.deserialize(value, options);\n  }\n\n  // Serialize\n  serialize(params: any, options: StructuredTypeFieldOptions): any {\n    return Object.assign({}, this.parameters\n      .filter(p => p.name in params && params[p.name] !== undefined)\n      .reduce((acc, p) => Object.assign(acc, { [p.name]: p.serialize(params[p.name], options) }), {})\n    );\n  }\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    if (this.return)\n      this.parser = settings.findParserForType(this.return) || NONE_PARSER;\n    this.parameters.forEach(p => p.configure(settings));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPathSegments.html":{"url":"classes/ODataPathSegments.html","title":"class - ODataPathSegments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPathSegments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clone\n                            \n                            \n                                find\n                            \n                            \n                                get\n                            \n                            \n                                last\n                            \n                            \n                                path\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segments?: ODataSegment[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataSegment[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            segments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSegment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:50\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(name: string, path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SegmentHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPathSegments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(predicate: (segment: ODataSegment) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SegmentHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            last\n                        \n                        \n                    \n                \n            \n            \n                \nlast()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SegmentHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            path\n                        \n                        \n                    \n                \n            \n            \n                \npath()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import buildQuery, { guid, Alias, alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { Types, Dates } from '../utils';\n\nimport { PATH_SEPARATOR } from '../constants';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action'\n}\n\nexport type ODataSegment = {\n  name: string;\n  path: string;\n  type?: string;\n  key?: any;\n  parameters?: any;\n}\n\nfunction pathSegmentsBuilder(segment: ODataSegment): string {\n  switch (segment.name) {\n    case PathSegmentNames.function:\n      const parameters = segment.parameters;\n      return (parameters ?\n        buildQuery({ func: { [segment.path]: parameters }}) :\n        buildQuery({ func: segment.path})\n      ).slice(1);\n    default:\n      let key = segment.key;\n      if (typeof (key) === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(key)) {\n        key = guid(key);\n      }\n      return segment.path + (key ? buildQuery({ key }) : \"\");\n  }\n}\n\nexport class ODataPathSegments {\n  protected segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this.segments = segments || [];\n  }\n\n  path(): string {\n    let chunks = this.segments\n      .map(pathSegmentsBuilder);\n    return chunks.join(PATH_SEPARATOR);\n  }\n\n  types(): string[] {\n    return this.segments.map(s => s.type).filter(t => t !== undefined) as string[];\n  }\n\n  toString(): string {\n    return this.path();\n  }\n\n  toJSON() {\n    return this.segments.map(segment => {\n      let json = { name: segment.name, path: segment.path };\n      if (segment.type !== undefined)\n        json.type = segment.type;\n      if (segment.key !== undefined)\n        json.key = Dates.isoStringToDate(JSON.parse(JSON.stringify(segment.key)));\n      if (segment.parameters !== undefined)\n        json.parameters = Dates.isoStringToDate(JSON.parse(JSON.stringify(segment.parameters)));\n      return json;\n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(predicate: (segment: ODataSegment) => boolean) {\n    //Backward Find\n    return [...this.segments].reverse().find(predicate);\n  }\n\n  last() {\n    return (this.segments.length > 0) ?\n       new SegmentHandler(this.segments[this.segments.length - 1]) : undefined;\n  }\n\n  add(name: string, path: string) {\n    const segment = { name, path } as ODataSegment;\n    this.segments.push(segment);\n    return new SegmentHandler(segment);\n  }\n\n  get(name: string) {\n    let segment = this.find(s => s.name === name);\n    if (segment === undefined)\n      throw Error(`No Segment for name ${name} was found`);\n    return new SegmentHandler(segment);\n  }\n}\n\nexport class SegmentHandler {\n  constructor(private segment: ODataSegment) {}\n\n  get name() {\n    return this.segment.name;\n  }\n\n  type(value?: string) {\n    if (value !== undefined)\n      this.segment.type = value;\n    return this.segment.type;\n  }\n\n  path(value?: string) {\n    if (value !== undefined)\n      this.segment.path = value;\n    return this.segment.path;\n  }\n\n  key(value?: T) {\n    if (value !== undefined)\n      this.segment.key = value;\n    return this.segment.key as T;\n  }\n\n  hasKey() {\n    return !Types.isEmpty(this.segment.key);\n  }\n\n  parameters(value?: T) {\n    if (value !== undefined)\n      this.segment.parameters = value;\n    return this.segment.parameters as T;\n  }\n\n  hasParameters() {\n    return !Types.isEmpty(this.segment.parameters);\n  }\n\n  // Aliases\n  alias(name: string, value?: any): Alias {\n    return alias(name, value);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPropertyMeta.html":{"url":"classes/ODataPropertyMeta.html","title":"class - ODataPropertyMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPropertyMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataMeta\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPropertyMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:62\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    if (!this.options)\n      throw Error(\"No helper\");\n    return this.options.helper;\n  }\n\n  constructor(data: Object, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    //TODO: Default options\n    this.options = opt.options;\n    this.annotations = (this.options ? this.odv.annotations(data) : data) || {};\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context: any;\n  get context(): ODataContext {\n    if (!this._context) {\n      this._context = this.odv.context(this.annotations) || {};\n    }\n    return this._context;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = this.odv.properties(this.annotations) || {};\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone() : ODataMeta;\n  abstract data(data: Object) : Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type() {\n    return this.odv.type(this.annotations);\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type() {\n    return this.odv.type(this.annotations);\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag() {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink() {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink() {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink() {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType() {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations) || {};\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n\n  entity(data: Object) {\n    return new ODataEntityMeta(data, {options: this.options});\n  }\n\n  get readLink() {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count() {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink() {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink() {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataQueryOptions.html":{"url":"classes/ODataQueryOptions.html","title":"class - ODataQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataQueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                clear\n                            \n                            \n                                clone\n                            \n                            \n                                has\n                            \n                            \n                                keep\n                            \n                            \n                                option\n                            \n                            \n                                params\n                            \n                            \n                                remove\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alias\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataQueryOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: QueryOptionNames)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keep\n                        \n                        \n                    \n                \n            \n            \n                \nkeep(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            option\n                        \n                        \n                    \n                \n            \n            \n                \noption(name: QueryOptionNames, opts?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:74\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OptionHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            params\n                        \n                        \n                    \n                \n            \n            \n                \nparams()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import buildQuery, { alias, Alias } from './builder';\n\nimport { Dates, Types, Urls, Objects } from '../utils';\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  expand = 'expand',\n  format = 'format',\n  // Custom options\n  custom = 'custom'\n}\n\nexport class ODataQueryOptions {\n  options: {[name: string]: any};\n\n  constructor(options?: {[name: string]: any}) {\n    this.options = options || {};\n  }\n\n  // Params\n  params(): {[name: string]: any} {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format]\n        .filter(key => !Types.isEmpty(this.options[key]))\n        .reduce((acc, key) => Object.assign(acc, {[key]: this.options[key]}), {});\n\n    let query = buildQuery(options);\n    let params = (query) ? Urls.parseQueryString(query.substr(1)) : {};\n\n    // Custom\n    let custom = this.options[QueryOptionNames.custom] || {};\n    if (Types.isArray(custom)) {\n      //TODO: split test for item type\n      custom = custom.reduce((acc: {[name: string]: any}, item: {[name: string]: any}) => Object.assign(acc, item), {});\n    }\n    Object.assign(params, custom);\n\n    return params;\n  }\n\n  toString(): string {\n    return Object.entries(this.params())\n      .filter(([, value]) => value)\n      .map(([key, value]) => `${key}=${value}`)\n      .join(\"&\");\n  }\n\n  toJSON() {\n    return Dates.isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (opts !== undefined)\n      this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return this.options[name] !== undefined;\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach(name => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter(k => names.indexOf(k as QueryOptionNames) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Aliases\n  alias(name: string, value: any): Alias {\n    return alias(name, value);\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(private o: {[name: string]: any}, private n: QueryOptionNames) { }\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  empty() {\n    return Types.isEmpty(this.o[this.n]);\n  }\n\n  //#region Primitive Value\n  value(v?: any) {\n    return v !== undefined && (this.o[this.n] = v) || this.o[this.n];\n  }\n  //#endregion\n\n  //#region Array Value\n  private assertArray(): any[] {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = this.o[this.n] !== undefined ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter(v => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1)\n      this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n  //#endregion\n\n  //#region HashMap Value\n  private assertObject(create: boolean): {[name: string]: any} {\n    if (!Types.isArray(this.o[this.n]) && Types.isObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find(v => Types.isObject(v));\n    if (!obj && create) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(path: string, value: any) {\n    let obj = this.assertObject(true);\n    Objects.set(obj, path, value);\n  }\n\n  get(path: string, def?: any): any {\n    let obj = this.assertObject(false) || {};\n    return Objects.get(obj, path, def);\n  }\n\n  unset(path: string) {\n    let obj = this.assertObject(true);\n    Objects.unset(obj, path);\n\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter((v: any) => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1)\n        this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(path: string) {\n    let obj = this.assertObject(false) || {};\n    return Objects.has(obj, path);\n  }\n\n  assign(values: {[attr: string]: any}) {\n    let obj = this.assertObject(true);\n    return Objects.merge(obj, values);\n  }\n  //#endregion\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataRequest.html":{"url":"classes/ODataRequest.html","title":"class - ODataRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/request.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                body\n                            \n                            \n                                    Readonly\n                                fetchPolicy\n                            \n                            \n                                    Readonly\n                                headers\n                            \n                            \n                                    Readonly\n                                method\n                            \n                            \n                                    Readonly\n                                observe\n                            \n                            \n                                    Readonly\n                                params\n                            \n                            \n                                    Readonly\n                                path\n                            \n                            \n                                    Readonly\n                                    Optional\n                                reportProgress\n                            \n                            \n                                    Readonly\n                                resource\n                            \n                            \n                                    Readonly\n                                    Optional\n                                responseType\n                            \n                            \n                                    Readonly\n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pathWithParams\n                                \n                                \n                                    url\n                                \n                                \n                                    urlWithParams\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fetchPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"cache-first\" | \"cache-and-network\" | \"network-only\" | \"no-cache\" | \"cache-only\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            observe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"events\" | \"response\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpParams\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            reportProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            responseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pathWithParams\n                    \n                \n\n                \n                    \n                        getpathWithParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:80\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:88\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        urlWithParams\n                    \n                \n\n                \n                    \n                        geturlWithParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:92\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ODataApi } from '../api';\nimport { ACCEPT, IF_MATCH_HEADER, PREFER } from '../constants';\nimport { Http } from '../utils';\nimport { ODataResource } from './resource';\n\nexport class ODataRequest {\n  readonly method: string;\n  readonly api: ODataApi;\n  readonly body: T | null;\n  readonly observe: 'events' | 'response'\n  readonly reportProgress?: boolean;\n  readonly withCredentials?: boolean;\n  readonly responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  readonly fetchPolicy: 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\n  readonly headers: HttpHeaders;\n  readonly params: HttpParams;\n  readonly path: string;\n  readonly resource: ODataResource;\n\n  constructor(init: {\n    method: string,\n    api: ODataApi,\n    resource: ODataResource,\n    body: T | null,\n    observe: 'events' | 'response',\n    etag?: string,\n    headers?: HttpHeaders | { [header: string]: string | string[] },\n    reportProgress?: boolean,\n    params?: HttpParams | { [param: string]: string | string[] },\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text',\n    fetchPolicy?: 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only',\n    withCredentials?: boolean\n  }) {\n    this.method = init.method;\n    this.resource = init.resource;\n\n    this.api = init.api;\n    this.body = init.body;\n    this.reportProgress = init.reportProgress;\n    this.responseType = init.responseType;\n    this.observe = init.observe;\n\n    this.withCredentials = (init.withCredentials === undefined) ? this.api.options.withCredentials : init.withCredentials;\n    this.fetchPolicy = init.fetchPolicy || this.api.options.fetchPolicy;\n\n    // The Path and Params from resource\n    const [resourcePath, resourceParams] = init.resource.pathAndParams();\n    this.path = resourcePath;\n\n    // Headers\n    const customHeaders: {[name: string]: string | string[]} = {};\n    if (typeof init.etag === 'string')\n      customHeaders[IF_MATCH_HEADER] = init.etag;\n\n    const accept = [];\n    // Metadata ?\n    if (this.api.options.metadata !== undefined)\n      accept.push(`odata.metadata=${this.api.options.metadata}`);\n    // IEEE754\n    if (this.api.options.ieee754Compatible !== undefined)\n      accept.push(`IEEE754Compatible=${this.api.options.ieee754Compatible}`);\n    if (accept.length > 0)\n      customHeaders[ACCEPT] = [`application/json;${accept.join(';')}`, \"text/plain\", \"*/*\"];\n    const prefer = [];\n    // Return ?\n    if (this.api.options.preferReturn !== undefined && ['POST', 'PUT', 'PATCH'].indexOf(this.method) !== -1)\n      prefer.push(`return=${this.api.options.preferReturn}`);\n    // MaxPageSize\n    if (this.api.options.preferMaxPageSize !== undefined)\n      prefer.push(`odata.maxpagesize=${this.api.options.preferMaxPageSize}`);\n    if (prefer.length > 0)\n      customHeaders[PREFER] = prefer;\n    this.headers = Http.mergeHttpHeaders(this.api.options.headers, customHeaders, init.headers || {});\n\n    // Params\n    this.params = Http.mergeHttpParams(this.api.options.params, resourceParams, init.params || {});\n  }\n\n  get pathWithParams() {\n    let path = this.path;\n    if (this.params.keys().length > 0) {\n      path = `${path}?${this.params}`;\n    }\n    return path;\n  }\n\n  get url() {\n    return `${this.api.serviceRootUrl}${this.path}`;\n  }\n\n  get urlWithParams() {\n    return `${this.api.serviceRootUrl}${this.pathWithParams}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResource.html":{"url":"classes/ODataResource.html","title":"class - ODataResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/resource.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                asCollection\n                            \n                            \n                                asModel\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                isSubtypeOf\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ODataApi, segments?: ODataPathSegments, options?: ODataQueryOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/resource.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataPathSegments\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ODataQueryOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asCollection\n                        \n                        \n                    \n                \n            \n            \n                \nasCollection(entities: Partial[], meta?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:88\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asModel\n                        \n                        \n                    \n                \n            \n            \n                \nasModel(entity: Partial, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:79\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endpointUrl\n                        \n                        \n                    \n                \n            \n            \n                \nendpointUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSubtypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisSubtypeOf(other: ODataResource)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:68\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  VALUE_SEPARATOR,\n  PARAM_SEPARATOR,\n  QUERY_SEPARATOR\n} from '../constants';\nimport { Http, Urls } from '../utils/index';\n\nimport { PlainObject } from './builder';\nimport { ODataPathSegments } from './path-segments';\nimport {\n  ODataQueryOptions\n} from './query-options';\nimport { HttpOptions } from './types';\nimport {\n  ODataModel,\n  ODataCollection\n} from '../models/index';\nimport { ODataResponse, ODataEntityMeta, ODataEntitiesMeta } from './responses/index';\nimport { ODataApi } from '../api';\nimport { Parser } from '../types';\nimport { ODataRequest } from './request';\nimport { ODataStructuredTypeParser } from '../parsers';\n\nexport abstract class ODataResource {\n  // VARIABLES\n  public api: ODataApi;\n  protected pathSegments: ODataPathSegments;\n  protected queryOptions: ODataQueryOptions;\n\n  constructor(\n    api: ODataApi,\n    segments?: ODataPathSegments,\n    options?: ODataQueryOptions\n  ) {\n    this.api = api;\n    this.pathSegments = segments || new ODataPathSegments();\n    this.queryOptions = options || new ODataQueryOptions();\n  }\n\n  /**\n   * @returns string The type of the resource\n   */\n  type() {\n    return this.pathSegments.last()?.type();\n  }\n\n  /**\n   * @returns string All covered types of the resource\n   */\n  types(): string[] {\n    return this.pathSegments.types();\n  }\n\n  isSubtypeOf(other: ODataResource) {\n    const api = this.api;\n    const self = this.type();\n    const that = other.type();\n    if (self !== undefined && that !== undefined) {\n      const thatParser = api.findParserForType(that) as ODataStructuredTypeParser;\n      return thatParser.findParser(c => c.isTypeOf(self)) !== undefined;\n    }\n    return false;\n  }\n\n  pathAndParams(): [string, PlainObject] {\n    let path = this.pathSegments.path();\n    let params = this.queryOptions.params();\n    if (path.indexOf(QUERY_SEPARATOR) !== -1) {\n      let parts = path.split(QUERY_SEPARATOR);\n      path = parts[0];\n      Object.assign(params, Urls.parseQueryString(parts[1]));\n    }\n    return [path, params];\n  }\n\n  asModel>(entity: Partial, meta?: ODataEntityMeta): M {\n    let Model = ODataModel;\n    let type = this.type();\n    if (type !== undefined) {\n      Model = this.api.findModelForType(type) || ODataModel;\n    }\n    return new Model(entity, {resource: this, meta}) as M;\n  }\n\n  asCollection>>(entities: Partial[], meta?: ODataEntitiesMeta): C {\n    let Collection = ODataCollection;\n    let type = this.type();\n    if (type !== undefined) {\n      Collection = this.api.findCollectionForType(type) || ODataCollection;\n    }\n    return new Collection(entities, {resource: this, meta}) as C;\n  }\n\n  endpointUrl() {\n    return `${this.api.serviceRootUrl}${this}`;\n  }\n\n  toString(): string {\n    let [path, params] = this.pathAndParams();\n    let queryString = Object.entries(params)\n      .map(e => `${e[0]}${VALUE_SEPARATOR}${e[1]}`)\n      .join(PARAM_SEPARATOR);\n    return queryString ? `${path}${QUERY_SEPARATOR}${queryString}` : path;\n  }\n\n  abstract clone(): ODataResource;\n\n  serialize(value: any): any {\n    let api = this.api;\n    let type = this.type();\n    if (type !== undefined) {\n      let parser = api.findParserForType(type);\n      if (parser !== undefined && 'serialize' in parser) {\n        return Array.isArray(value) ?\n          value.map(e => (parser as Parser).serialize(e, api.options)) :\n          parser.serialize(value, api.options);\n      }\n    }\n    return value;\n  }\n\n  toJSON() {\n    return {\n      segments: this.pathSegments.toJSON(),\n      options: this.queryOptions.toJSON()\n    };\n  }\n\n  alias(name: string, value?: any) {\n    return this.queryOptions.alias(name, value);\n  }\n\n  // Base Requests\n  protected request(\n    method: string,\n    options: HttpOptions & {\n      attrs?: any,\n      etag?: string,\n      responseType?: 'arraybuffer' | 'blob' | 'json' | 'text' | 'value' | 'property' | 'entity' | 'entities',\n      withCount?: boolean\n    }): Observable {\n\n    //let api = options.apiName ? this.client.apiByName(options.apiName) : this.api;\n    const copts = this.api.options;\n    let params = options.params || {};\n    if (options.withCount) {\n      params = Http.mergeHttpParams(params, copts.helper.countParam());\n    }\n\n    let responseType: 'arraybuffer' | 'blob' | 'json' | 'text' =\n      (options.responseType && ['property', 'entity', 'entities'].indexOf(options.responseType) !== -1) ?\n        'json' :\n      (options.responseType === 'value') ?\n        'text' :\n        options.responseType;\n\n    let body = options.attrs !== undefined ? this.serialize(options.attrs) : null;\n\n    let etag = options.etag;\n    if (etag === undefined && options.attrs != null) {\n      etag = copts.helper.etag(options.attrs);\n    }\n\n    const request = new ODataRequest({\n      method,\n      body,\n      etag,\n      api: this.api,\n      resource: this,\n      observe: 'response',\n      headers: options.headers,\n      reportProgress: options.reportProgress,\n      params: params,\n      responseType: responseType,\n      fetchPolicy: options.fetchPolicy,\n      withCredentials: options.withCredentials\n    });\n\n    const res$ = this.api.request(request);\n    switch (options.responseType) {\n      case 'entities':\n        return res$.pipe(map((res: ODataResponse) => res.entities()));\n      case 'entity':\n        return res$.pipe(map((res: ODataResponse) => res.entity()));\n      case 'property':\n        return res$.pipe(map((res: ODataResponse) => res.property()));\n      case 'value':\n        return res$.pipe(map((res: ODataResponse) => res.value() as Type));\n      default:\n        // Other responseTypes (arraybuffer, blob, json, text) return body\n        return res$.pipe(map((res: ODataResponse) => res.body));\n    }\n  }\n\n  protected get(options: HttpOptions & {\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('GET', options);\n  }\n\n  protected post(attrs: any, options: HttpOptions & {\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('POST', Object.assign(options, { attrs }));\n  }\n\n  protected put(attrs: any, options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('PUT', Object.assign(options, { attrs }));\n  }\n\n  protected patch(attrs: any, options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('PATCH', Object.assign(options, { attrs }));\n  }\n\n  protected delete(options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('DELETE', options);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponse.html":{"url":"classes/ODataResponse.html","title":"class - ODataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/response.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HttpResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _options\n                            \n                            \n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deserialize\n                            \n                            \n                                entities\n                            \n                            \n                                entity\n                            \n                            \n                                    Static\n                                fromHttpResponse\n                            \n                            \n                                    Static\n                                fromJSON\n                            \n                            \n                                    Private\n                                parse\n                            \n                            \n                                property\n                            \n                            \n                                toJSON\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/response.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ODataResponseOptions | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deserialize(type: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \nentities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \nentity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromHttpResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromHttpResponse(req: ODataRequest, res: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:31\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSON(req: ODataRequest, json: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    json\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(parser: Parser, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parser\n                                    \n                                                Parser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataProperty\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { body: any; headers: any; status: any; statusText: any; url: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T | null\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:74\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ODataEntityMeta, ODataEntitiesMeta, ODataPropertyMeta } from './meta';\nimport { Parser } from '../../types';\nimport { Types } from '../../utils/types';\nimport { ODataResource } from '../resource';\nimport { ODataStructuredTypeParser } from '../../parsers/structured-type';\nimport { ODataEntities, ODataEntity, ODataProperty } from './types';\nimport { APPLICATION_JSON, ODATA_VERSION_HEADERS, CONTENT_TYPE, CACHE_CONTROL, MAX_AGE } from '../../constants';\nimport { ODataApi } from '../../api';\nimport { ODataRequest } from '../request';\nimport { ODataResponseOptions } from './options';\n\nexport class ODataResponse extends HttpResponse {\n  readonly api: ODataApi;\n  readonly resource: ODataResource;\n\n  constructor(init: {\n      api: ODataApi,\n      resource: ODataResource,\n      body: T | null;\n      headers: HttpHeaders;\n      status: number;\n      statusText: string;\n      url?: string;\n  }) {\n    super(init);\n    this.api = init.api;\n    this.resource = init.resource;\n  }\n\n  static fromHttpResponse(req: ODataRequest, res: HttpResponse) {\n    return new ODataResponse({\n      api: req.api,\n      resource: req.resource,\n      body: res.body,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n      url: res.url || undefined,\n    });\n  }\n\n  static fromJSON(req: ODataRequest, json: {\n      body: T | null;\n      headers: {[name: string]: string | string[]};\n      status: number;\n      statusText: string;\n      url: string | null;\n  }) {\n    return new ODataResponse({\n      api: req.api,\n      resource: req.resource,\n      body: json.body,\n      headers: new HttpHeaders(json.headers),\n      status: json.status,\n      statusText: json.statusText,\n      url: json.url || undefined,\n    });\n  }\n\n  toJSON() {\n    return {\n      body: this.body,\n      headers: this.headers.keys()\n        .map(name => ({[name]: this.headers.getAll(name) || []}))\n        .reduce((acc, header) => Object.assign(acc, header), {}),\n      status: this.status,\n      statusText: this.statusText,\n      url: this.url\n    }\n  }\n\n  private _options: ODataResponseOptions | null = null;\n  get options(): ODataResponseOptions {\n    if (this._options === null) {\n      this._options = new ODataResponseOptions(this.api.options);\n      const contentType = this.headers.get(CONTENT_TYPE);\n      if (contentType && contentType.indexOf(APPLICATION_JSON) !== -1) {\n        const features = contentType.split(\",\").find(p => p.startsWith(APPLICATION_JSON)) as string;\n        this._options.setFeatures(features);\n      }\n      const key = this.headers.keys().find(k => ODATA_VERSION_HEADERS.indexOf(k) !== -1);\n      if (key) {\n        const version = (this.headers.get(key) || \"\").replace(/\\;/g, \"\") as '2.0' | '3.0' | '4.0';\n        this._options.setVersion(version);\n      }\n      const cacheControl = this.headers.get(CACHE_CONTROL);\n      if (cacheControl) {\n        this._options.setCache(cacheControl);\n      }\n    }\n    return this._options;\n  }\n\n  private parse(parser: Parser, value: any): any {\n    const type = Types.isObject(value) ? this.options.helper.type(value) : undefined;\n    if (type !== undefined && parser instanceof ODataStructuredTypeParser) {\n      parser = parser.findParser(c => c.isTypeOf(type));\n    }\n    return parser.deserialize(value, this.options);\n  }\n\n  private deserialize(type: string, value: any): any {\n    const parser = this.api.findParserForType(type);\n    if (parser !== undefined)\n      return Array.isArray(value) ?\n        value.map(v => this.parse(parser, v)) :\n        this.parse(parser, value);\n    return value;\n  }\n\n  entity(): ODataEntity {\n    const payload = this.body && this.options.version === \"2.0\" ? (this.body)[\"d\"] : this.body;\n    const meta = new ODataEntityMeta(payload || {}, {options: this.options, headers: this.headers});\n    let entity = payload ? meta.data(payload) as T : null;\n    const type = this.resource.type();\n    if (entity !== null && type !== undefined)\n      entity = this.deserialize(type, entity) as T;\n    return { entity, meta };\n  }\n\n  entities(): ODataEntities {\n    const payload = this.options.version === \"2.0\" ? (this.body)[\"d\"] : this.body;\n    const meta = new ODataEntitiesMeta(payload || {}, {options: this.options, headers: this.headers});\n    let entities = payload ? meta.data(payload) as T[] : null;\n    const type = this.resource.type();\n    if (entities !== null && type !== undefined)\n      entities = this.deserialize(type, entities) as T[];\n    return { entities, meta };\n  }\n\n  property(): ODataProperty {\n    const payload = this.options.version === \"2.0\" ? (this.body)[\"d\"] : this.body;\n    const meta = new ODataPropertyMeta(payload || {}, {options: this.options, headers: this.headers});\n    let property = payload ? meta.data(payload) as T : null;\n    const type = this.resource.type();\n    if (property !== null && type !== undefined)\n      property = this.deserialize(type, property) as T;\n    return { property, meta };\n  }\n\n  value(): T | null {\n    const payload = this.body && this.options.version === \"2.0\" ? this.body : this.body;\n    const type = this.resource.type();\n    return payload ?\n      (type !== undefined ? this.deserialize(type, payload) : payload) as T:\n      null;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponseOptions.html":{"url":"classes/ODataResponseOptions.html","title":"class - ODataResponseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/options.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ResponseOptions\n                            OptionsHelper\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cacheability\n                            \n                            \n                                    Optional\n                                ieee754Compatible\n                            \n                            \n                                    Optional\n                                maxAge\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                    Optional\n                                streaming\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                setCache\n                            \n                            \n                                setFeatures\n                            \n                            \n                                setVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Options)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cacheability\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"public\" | \"private\" | \"no-cache\" | \"no-store\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ieee754Compatible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            metadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataMetadataType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            streaming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataVersion\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResponseOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCache\n                        \n                        \n                    \n                \n            \n            \n                \nsetCache(cacheControl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cacheControl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFeatures\n                        \n                        \n                    \n                \n            \n            \n                \nsetFeatures(features: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    features\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVersion\n                        \n                        \n                    \n                \n            \n            \n                \nsetVersion(version: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DEFAULT_VERSION, MAX_AGE, VERSION_2_0, VERSION_3_0, VERSION_4_0 } from '../../constants';\nimport { ODataHelper } from '../../helpers/odata';\nimport { CacheCacheability, ODataMetadataType, ODataVersion, Options, OptionsHelper, ResponseOptions } from '../../types';\n\nexport class ODataResponseOptions implements ResponseOptions, OptionsHelper {\n  version: ODataVersion;\n  streaming?: boolean;\n  // OData\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  // Cache\n  cacheability?: 'public' | 'private' | 'no-cache' | 'no-store';\n  maxAge?: number;\n\n  constructor(config: Options) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.metadata = config.metadata;\n    this.stringAsEnum = config.stringAsEnum;\n    this.ieee754Compatible = config.ieee754Compatible;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n\n  clone() {\n    return new ODataResponseOptions(this);\n  }\n\n  setFeatures(features: string) {\n    features.split(\";\").forEach(o => {\n      let [k, v] = o.split(\"=\");\n      switch (k.trim()) {\n        case 'odata.metadata':\n          this.metadata = v as ODataMetadataType;\n          break;\n        case 'odata.streaming':\n          this.streaming = v == \"true\";\n          break;\n        case 'IEEE754Compatible':\n          this.ieee754Compatible = v == \"true\";\n          break;\n      }\n    });\n  }\n\n  setVersion(version: string) {\n    const value = version.replace(/\\;/g, \"\").trim();\n    if ([VERSION_2_0, VERSION_3_0, VERSION_4_0].indexOf(value) !== -1)\n      this.version = value as ODataVersion;\n  }\n\n  setCache(cacheControl: string) {\n    cacheControl.split(\",\").forEach(directive => {\n      if (directive.startsWith(MAX_AGE)) {\n        let maxAge = Number(directive.split(\"=\")[1]);\n        if (!Number.isNaN(maxAge))\n          this.maxAge = maxAge;\n      }\n      if (['public', 'private', 'no-cache', 'no-store'].indexOf(directive) !== -1) {\n        this.cacheability = directive as CacheCacheability;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSchema.html":{"url":"classes/ODataSchema.html","title":"class - ODataSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                annotations\n                            \n                            \n                                api\n                            \n                            \n                                callables\n                            \n                            \n                                containers\n                            \n                            \n                                entities\n                            \n                            \n                                enums\n                            \n                            \n                                namespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                findAnnotation\n                            \n                            \n                                    Public\n                                findCallableForType\n                            \n                            \n                                    Public\n                                findEntitySetForType\n                            \n                            \n                                    Public\n                                findEnumTypeForType\n                            \n                            \n                                    Public\n                                findStructuredTypeForType\n                            \n                            \n                                isNamespaceOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                                \n                                    entitySets\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: SchemaConfig, api: ODataApi)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SchemaConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataCallable[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enums\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCallableForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCallableForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEntitySetForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEntitySetForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEnumTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEnumTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findStructuredTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findStructuredTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNamespaceOf\n                        \n                        \n                    \n                \n            \n            \n                \nisNamespaceOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        entitySets\n                    \n                \n\n                \n                    \n                        getentitySets()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataStructuredType } from './structured-type';\nimport { ODataCallable } from './callable';\nimport { ODataEntityContainer } from './entity-container';\nimport { ODataEnumType } from './enum-type';\nimport { ODataApi } from '../api';\nimport { SchemaConfig, Parser, CallableConfig, Annotation } from '../types';\nimport { ODataEntitySet } from './entity-set';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataSchema {\n  api: ODataApi;\n  namespace: string;\n  alias?: string;\n  enums: ODataEnumType[];\n  entities: ODataStructuredType[];\n  callables: ODataCallable[];\n  containers: ODataEntityContainer[];\n  annotations: ODataAnnotation[];\n\n  constructor(config: SchemaConfig, api: ODataApi) {\n    this.api = api;\n    this.namespace = config.namespace;\n    this.alias = config.alias;\n    this.enums = (config.enums || []).map(config => new ODataEnumType(config, this));\n    this.entities = (config.entities || []).map(config => new ODataStructuredType(config, this));\n    // Merge callables\n    let callableConfigs = (config.callables || []);\n    callableConfigs = callableConfigs.reduce((acc: CallableConfig[], config) => {\n      if (acc.every(c => c.name !== config.name)) {\n        config = callableConfigs.filter(c => c.name === config.name).reduce((acc, c) => {\n          acc.parameters = Object.assign(acc.parameters || {}, c.parameters || {});\n          return acc;\n        }, config);\n        return [...acc, config];\n      }\n      return acc;\n    }, [] as CallableConfig[]);\n    this.callables = callableConfigs.map(config => new ODataCallable(config, this));\n    this.containers = (config.containers || []).map(container => new ODataEntityContainer(container, this));\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isNamespaceOf(type: string) {\n    return type.startsWith(this.namespace) || (this.alias && type.startsWith(this.alias));\n  }\n\n  get options() {\n    return this.api.options;\n  }\n\n  get entitySets() {\n    return this.containers\n      .reduce(\n        (acc, container) => [...acc, ...container.entitySets], [] as ODataEntitySet[]);\n  }\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  //#region Find for Type\n  public findEnumTypeForType(type: string) {\n    return this.enums.find(e => e.isTypeOf(type));\n  }\n\n  public findStructuredTypeForType(type: string) {\n    return this.entities.find(e => e.isTypeOf(type));\n  }\n\n  public findCallableForType(type: string) {\n    return this.callables.find(e => e.isTypeOf(type));\n  }\n\n  public findEntitySetForType(type: string) {\n      return this.entitySets.find(e => e.isTypeOf(type));\n  }\n  //#endregion\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    // Configure Entities\n    this.entities\n      .forEach(config => config.configure(settings));\n    // Configure callables\n    this.callables\n      .forEach(callable => callable.configure(settings));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ODataServiceFactory.html":{"url":"injectables/ODataServiceFactory.html","title":"injectable - ODataServiceFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ODataServiceFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/factory.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entitySet\n                            \n                            \n                                singleton\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/factory.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entitySet\n                        \n                        \n                    \n                \n            \n            \n                \nentitySet(path: string, apiNameOrEntityType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:10\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiNameOrEntityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntitySetService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            singleton\n                        \n                        \n                    \n                \n            \n            \n                \nsingleton(path: string, apiNameOrEntityType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:15\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiNameOrEntityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataSingletonService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ODataClient } from \"../client\";\nimport { ODataEntitySetService } from './entity-set';\nimport { ODataSingletonService } from './singleton';\n\n@Injectable()\nexport class ODataServiceFactory {\n  constructor(protected client: ODataClient) { }\n\n  entitySet(path: string, apiNameOrEntityType?: string): ODataEntitySetService {\n    return new class extends ODataEntitySetService {\n    }(this.client, path, apiNameOrEntityType);\n  }\n\n  singleton(path: string, apiNameOrEntityType?: string): ODataSingletonService {\n    return new class extends ODataSingletonService {\n    }(this.client, path, apiNameOrEntityType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSingletonService.html":{"url":"classes/ODataSingletonService.html","title":"class - ODataSingletonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSingletonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/singleton.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataEntityService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                    Abstract\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    singletonSchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/singleton.ts:11\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/singleton.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataSingletonResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataEntityService\n\n                \n            \n            \n                \n                        Defined in         ODataEntityService:11\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataEntityService\n\n                \n            \n            \n                \n                        Defined in         ODataEntityService:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        singletonSchema\n                    \n                \n\n                \n                    \n                        getsingletonSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/singleton.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataModel } from '../models/model';\nimport { ODataSingletonResource } from '../resources';\nimport { ODataEntityService } from \"./entity\";\n\nexport class ODataSingletonService extends ODataEntityService {\n  public entity(): ODataSingletonResource {\n    return this.client.singleton(this.name, this.apiNameOrEntityType);\n  }\n\n  // Models\n  public attach>(value: M): M {\n    return value.attach(this.entity());\n  }\n  // Service Config\n  get singletonSchema() {\n    return this.api.findEntitySetByName(this.name);\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataStructuredType.html":{"url":"classes/ODataStructuredType.html","title":"class - ODataStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                    Optional\n                                model\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                defaults\n                            \n                            \n                                fields\n                            \n                            \n                                findAnnotation\n                            \n                            \n                                findField\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                pick\n                            \n                            \n                                resolveKey\n                            \n                            \n                                toJsonSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: StructuredTypeConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/structured-type.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StructuredTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredTypeParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaults\n                        \n                        \n                    \n                \n            \n            \n                \ndefaults()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fields\n                        \n                        \n                    \n                \n            \n            \n                \nfields(opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { include_navigation: false, include_parents: true }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ODataStructuredTypeFieldParser[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findField\n                        \n                        \n                    \n                \n            \n            \n                \nfindField(name: P)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:61\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                            P\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pick\n                        \n                        \n                    \n                \n            \n            \n                \npick(value: literal type, opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { include_navigation: false, include_parents: true, include_etag: true }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Partial\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveKey\n                        \n                        \n                    \n                \n            \n            \n                \nresolveKey(attrs: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaExpandOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                JsonSchemaExpandOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:30\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { JsonSchemaExpandOptions, ODataStructuredTypeFieldParser, ODataStructuredTypeParser } from '../parsers';\nimport { Annotation, Parser, StructuredTypeConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\nimport { ODataSchema } from './schema';\n\nexport class ODataStructuredType {\n  schema: ODataSchema;\n  name: string;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  parser: ODataStructuredTypeParser;\n  annotations: ODataAnnotation[];\n\n  constructor(config: StructuredTypeConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataStructuredTypeParser(config, schema.namespace, schema.alias);\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    const parserSettings = Object.assign({options: this.options}, settings);\n    this.parser.configure(parserSettings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = { include_navigation: false, include_parents: true }): ODataStructuredTypeFieldParser[] {\n    let parent = this.parser as ODataStructuredTypeParser | undefined;\n    let fields = []>[];\n    while (parent !== undefined) {\n      fields = [\n        ...parent.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parent = parent.parent;\n    }\n    return fields;\n  }\n\n  findField(name: P) {\n    return this.fields().find(f => f.name === name);\n  }\n\n  pick(value: {[name:string]: any}, opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean,\n    include_etag?: boolean\n  } = { include_navigation: false, include_parents: true, include_etag: true }): Partial {\n    const names = this.fields(opts).map(f => f.name);\n    let attrs = Object.keys(value)\n      .filter(k => names.indexOf(k) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: value[k] }), {});\n    if (opts.include_etag) {\n      const etag = this.options.helper.etag(value);\n      this.options.helper.etag(attrs, etag);\n    }\n    return attrs;\n  }\n\n  resolveKey(attrs: any) {\n    return this.parser.resolveKey(attrs);\n  }\n\n  defaults() {\n    return this.parser.defaults();\n  }\n\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    return this.parser.toJsonSchema(options);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataStructuredTypeFieldParser.html":{"url":"classes/ODataStructuredTypeFieldParser.html","title":"class - ODataStructuredTypeFieldParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataStructuredTypeFieldParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/structured-type.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StructuredTypeField\n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                collection\n                            \n                            \n                                    Optional\n                                default\n                            \n                            \n                                    Optional\n                                field\n                            \n                            \n                                key\n                            \n                            \n                                    Optional\n                                maxLength\n                            \n                            \n                                name\n                            \n                            \n                                navigation\n                            \n                            \n                                nullable\n                            \n                            \n                                    Private\n                                parser\n                            \n                            \n                                    Optional\n                                precision\n                            \n                            \n                                    Optional\n                                ref\n                            \n                            \n                                    Optional\n                                scale\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                enum\n                            \n                            \n                                findAnnotation\n                            \n                            \n                                isComplexType\n                            \n                            \n                                isEdmType\n                            \n                            \n                                isEnumType\n                            \n                            \n                                isNavigation\n                            \n                            \n                                isStructuredType\n                            \n                            \n                                    Private\n                                parse\n                            \n                            \n                                resolve\n                            \n                            \n                                serialize\n                            \n                            \n                                structured\n                            \n                            \n                                    Private\n                                toJson\n                            \n                            \n                                toJsonSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, field: StructuredTypeField)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        StructuredTypeField\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Annotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            default\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ref\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enum\n                        \n                        \n                    \n                \n            \n            \n                \nenum()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAnnotation\n                        \n                        \n                    \n                \n            \n            \n                \nfindAnnotation(predicate: (annot: Annotation) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplexType\n                        \n                        \n                    \n                \n            \n            \n                \nisComplexType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEdmType\n                        \n                        \n                    \n                \n            \n            \n                \nisEdmType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnumType\n                        \n                        \n                    \n                \n            \n            \n                \nisEnumType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNavigation\n                        \n                        \n                    \n                \n            \n            \n                \nisNavigation()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isStructuredType\n                        \n                        \n                    \n                \n            \n            \n                \nisStructuredType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(parser: ODataStructuredTypeParser, value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parser\n                                    \n                                                ODataStructuredTypeParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: Type, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            structured\n                        \n                        \n                    \n                \n            \n            \n                \nstructured()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataStructuredTypeParser\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJson(parser: ODataStructuredTypeParser, value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parser\n                                    \n                                                ODataStructuredTypeParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaExpandOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                JsonSchemaExpandOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types } from '../utils';\nimport { Parser, StructuredTypeField, StructuredTypeConfig, Annotation, OptionsHelper } from '../types';\nimport { ODataEnumTypeParser } from './enum-type';\n\nconst NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value,\n} as Parser;\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaCustom = {[P in keyof T]?: (schema: any, field: ODataStructuredTypeFieldParser) => any };\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaOptions };\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  custom?: JsonSchemaCustom;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaOptions = JsonSchemaExpandOptions;\n\nexport class ODataStructuredTypeFieldParser implements StructuredTypeField, Parser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  default?: any;\n  maxLength?: number;\n  key: boolean;\n  collection: boolean;\n  nullable: boolean;\n  navigation: boolean;\n  field?: string;\n  precision?: number;\n  scale?: number;\n  ref?: string;\n  annotations: Annotation[];\n\n  constructor(name: string, field: StructuredTypeField) {\n    this.name = name;\n    this.type = field.type;\n    this.parser = NONE_PARSER;\n    this.annotations = field.annotations || [];\n    this.default = field.default;\n    this.maxLength = field.maxLength;\n    this.key = field.key !== undefined ? field.key : false;\n    this.collection = field.collection !== undefined ? field.collection : false;\n    this.nullable = field.nullable !== undefined ? field.nullable : true;\n    this.navigation = field.navigation !== undefined ? field.navigation : false;\n    this.field = field.field;\n    this.precision = field.precision;\n    this.scale = field.scale;\n    this.ref = field.ref;\n  }\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  resolve(value: any) {\n    return (this.ref || this.name).split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  private parse(parser: ODataStructuredTypeParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).deserialize(value, options);\n    }\n    return parser.deserialize(value, options);\n  }\n\n  deserialize(value: any, options: OptionsHelper): Type {\n    const parser = this.parser;\n    if (parser instanceof ODataStructuredTypeParser) {\n      return Array.isArray(value) ?\n        value.map(v => this.parse(parser, v, options)) :\n        this.parse(parser, value, options);\n    }\n    return parser.deserialize(value, Object.assign({field: this}, options));\n  }\n\n  // Serialize\n  private toJson(parser: ODataStructuredTypeParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).serialize(value, options);\n    }\n    return parser.serialize(value, options);\n  }\n\n  serialize(value: Type, options: OptionsHelper): any {\n    const parser = this.parser;\n    if (parser instanceof ODataStructuredTypeParser) {\n      return Array.isArray(value) ?\n        (value as any[]).map(v => this.toJson(parser, v, options)) :\n        this.toJson(parser, value, options);\n    }\n    return parser.serialize(value, Object.assign({field: this}, options));\n  }\n\n  configure(settings: {\n    findParserForType: (type: string) => Parser | undefined,\n    options: OptionsHelper\n  }) {\n    this.parser = settings.findParserForType(this.type) || NONE_PARSER;\n    if (this.default !== undefined)\n      this.default = this.deserialize(this.default, settings.options);\n  }\n\n  // Json Schema\n  // https://json-schema.org/\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let schema: any = (this.parser instanceof ODataStructuredTypeFieldParser ||\n      this.parser instanceof ODataStructuredTypeParser ||\n      this.parser instanceof ODataEnumTypeParser) ?\n    this.parser.toJsonSchema(options) : {title: this.name, type: \"object\"} as any;\n\n    if ([\"Edm.String\", \"Edm.Date\", \"Edm.TimeOfDay\", \"Edm.DateTimeOffset\", \"Edm.Guid\", \"Edm.Binary\"].indexOf(this.type) !== -1) {\n      schema.type = \"string\";\n      if (this.type === \"Edm.Date\")\n        schema.format = \"date\";\n      else if (this.type === \"Edm.TimeOfDay\")\n        schema.format = \"time\";\n      else if (this.type === \"Edm.DateTimeOffset\")\n        schema.format = \"date-time\";\n      else if (this.type === \"Edm.Guid\")\n        schema.pattern = \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$\";\n      else if (this.type === \"Edm.Binary\")\n        schema.contentEncoding = \"base64\";\n      else if (this.type === \"Edm.String\" && this.maxLength)\n        schema.maxLength = this.maxLength;\n    } else if ([\"Edm.Int64\", \"Edm.Int32\", \"Edm.Int16\", \"Edm.Byte\", \"Edm.SByte\"].indexOf(this.type) !== -1) {\n      //TODO: Range\n      schema.type = \"integer\";\n    } else if ([\"Edm.Decimal\", \"Edm.Double\"].indexOf(this.type) !== -1) {\n      schema.type = \"number\";\n    } else if ([\"Edm.Boolean\"].indexOf(this.type) !== -1) {\n      schema.type = \"boolean\";\n    }\n    if (this.default)\n      schema.default = this.default;\n    if (this.nullable)\n      schema.type = [schema.type, 'null'];\n    if (this.collection)\n      schema = {\n        type: \"array\",\n        items: schema,\n        additionalItems: false\n      };\n    return schema;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n  isEnumType() {\n    return this.parser instanceof ODataEnumTypeParser;\n  }\n  isStructuredType() {\n    return this.parser instanceof ODataStructuredTypeParser;\n  }\n  isComplexType() {\n    return this.parser instanceof ODataStructuredTypeParser && this.parser.isComplexType();\n  }\n\n  isEdmType() {\n    return this.type.startsWith(\"Edm.\");\n  }\n  enum() {\n    if (!this.isEnumType())\n      throw new Error(\"Field are not EnumType\")\n    return this.parser as ODataEnumTypeParser;\n  }\n  structured() {\n    if (!this.isStructuredType())\n      throw new Error(\"Field are not StrucuturedType\")\n    return this.parser as ODataStructuredTypeParser;\n  }\n}\n\nexport class ODataStructuredTypeParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  base?: string;\n  parent?: ODataStructuredTypeParser;\n  children: ODataStructuredTypeParser[];\n  fields: ODataStructuredTypeFieldParser[];\n\n  constructor(config: StructuredTypeConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.children = [];\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataStructuredTypeFieldParser(name, f as StructuredTypeField));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias)\n      names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options: OptionsHelper): Type {\n    if (this.parent)\n      value = this.parent.deserialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && value[f.name] !== undefined && value[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.deserialize(value[f.name], options) }), {})\n    );\n  }\n\n  // Serialize\n  serialize(value: Type, options: OptionsHelper): any {\n    if (this.parent)\n      value = this.parent.serialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && (value as any)[f.name] !== undefined && (value as any)[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.serialize((value as any)[f.name], options) }), {})\n    );\n  }\n\n  configure(settings: {\n    findParserForType: (type: string) => Parser | undefined,\n    options: OptionsHelper\n  }) {\n    if (this.base) {\n      const parent = settings.findParserForType(this.base) as ODataStructuredTypeParser;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema = {\n      $schema: \"http://json-schema.org/draft-07/schema#\",\n      $id: `${this.namespace}.${this.name}`,\n      title: this.name,\n      type: \"object\"\n    } as any;\n    const fields = this.fields\n      .filter(f => (!f.navigation || (options.expand && f.name in options.expand)) && (!options.select || (options.select).indexOf(f.name) !== -1));\n    schema.properties = fields\n      .map(f => {\n        let expand = options.expand && f.name in options.expand ? (options.expand as any)[f.name] : undefined;\n        let schema = f.toJsonSchema(expand);\n        if (options.custom && f.name in options.custom)\n          schema = (options.custom[f.name as keyof Type] as (schema: any, field: ODataStructuredTypeFieldParser) => any)(schema, f);\n        return { [f.name]: schema };\n      })\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    schema.required = fields.filter(f => !f.nullable).map(f => f.name);\n    return schema;\n  }\n\n  typeFor(name: string): string | undefined {\n    const field = this.fields.find(f => f.name === name);\n    if (field === undefined && this.parent !== undefined)\n      return this.parent.typeFor(name);\n    return field !== undefined ? field.type : undefined;\n  }\n\n  keys() {\n    const keys: ODataStructuredTypeFieldParser[] = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {}) as any;\n    const values = Object.values(key);\n    if (values.length === 1) {\n      // Single primitive key value\n      key = values[0];\n    } else if (values.some(v => v === undefined)) {\n      // Compose key, needs all values\n      key = null;\n    }\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplexType() {\n    return this.keys().length === 0;\n  }\n\n  find(predicate: (p: ODataStructuredTypeParser) => boolean): ODataStructuredTypeParser | undefined {\n    if (predicate(this))\n      return this;\n    return this.children.find(c => c.find(predicate));\n  }\n\n  findParser(predicate: (p: ODataStructuredTypeParser) => boolean): Parser {\n    return this.find(predicate) || NONE_PARSER;\n  }\n\n  defaults(): {[name: string]: any} {\n    let value = (this.parent) ? this.parent.defaults() : {};\n    let fields = this.fields.filter(f => f.default !== undefined || f.isComplexType());\n    return Object.assign({}, value, fields.reduce((acc, f) => {\n      let value = f.isComplexType() ? f.structured().defaults() : f.default;\n      if (!Types.isEmpty(value))\n        Object.assign(acc, {[f.name]: value });\n      return acc;\n    }, {}));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataStructuredTypeParser.html":{"url":"classes/ODataStructuredTypeParser.html","title":"class - ODataStructuredTypeParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataStructuredTypeParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/structured-type.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                    Optional\n                                base\n                            \n                            \n                                children\n                            \n                            \n                                fields\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                            \n                                    Optional\n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                defaults\n                            \n                            \n                                deserialize\n                            \n                            \n                                find\n                            \n                            \n                                findParser\n                            \n                            \n                                isComplexType\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                keys\n                            \n                            \n                                resolveKey\n                            \n                            \n                                serialize\n                            \n                            \n                                toJsonSchema\n                            \n                            \n                                typeFor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: StructuredTypeConfig, namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:187\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StructuredTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:183\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:184\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredTypeParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:186\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ODataStructuredTypeFieldParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:187\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:181\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:182\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredTypeParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:185\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaults\n                        \n                        \n                    \n                \n            \n            \n                \ndefaults()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:302\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(predicate: (p: ODataStructuredTypeParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataStructuredTypeParser | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findParser\n                        \n                        \n                    \n                \n            \n            \n                \nfindParser(predicate: (p: ODataStructuredTypeParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:298\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Parser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplexType\n                        \n                        \n                    \n                \n            \n            \n                \nisComplexType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:288\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keys\n                        \n                        \n                    \n                \n            \n            \n                \nkeys()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:268\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveKey\n                        \n                        \n                    \n                \n            \n            \n                \nresolveKey(attrs: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: Type, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                JsonSchemaOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeFor\n                        \n                        \n                    \n                \n            \n            \n                \ntypeFor(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/structured-type.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types } from '../utils';\nimport { Parser, StructuredTypeField, StructuredTypeConfig, Annotation, OptionsHelper } from '../types';\nimport { ODataEnumTypeParser } from './enum-type';\n\nconst NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value,\n} as Parser;\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaCustom = {[P in keyof T]?: (schema: any, field: ODataStructuredTypeFieldParser) => any };\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaOptions };\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  custom?: JsonSchemaCustom;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaOptions = JsonSchemaExpandOptions;\n\nexport class ODataStructuredTypeFieldParser implements StructuredTypeField, Parser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  default?: any;\n  maxLength?: number;\n  key: boolean;\n  collection: boolean;\n  nullable: boolean;\n  navigation: boolean;\n  field?: string;\n  precision?: number;\n  scale?: number;\n  ref?: string;\n  annotations: Annotation[];\n\n  constructor(name: string, field: StructuredTypeField) {\n    this.name = name;\n    this.type = field.type;\n    this.parser = NONE_PARSER;\n    this.annotations = field.annotations || [];\n    this.default = field.default;\n    this.maxLength = field.maxLength;\n    this.key = field.key !== undefined ? field.key : false;\n    this.collection = field.collection !== undefined ? field.collection : false;\n    this.nullable = field.nullable !== undefined ? field.nullable : true;\n    this.navigation = field.navigation !== undefined ? field.navigation : false;\n    this.field = field.field;\n    this.precision = field.precision;\n    this.scale = field.scale;\n    this.ref = field.ref;\n  }\n  findAnnotation(predicate: (annot: Annotation) => boolean) {\n    return this.annotations.find(predicate);\n  }\n\n  resolve(value: any) {\n    return (this.ref || this.name).split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  private parse(parser: ODataStructuredTypeParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).deserialize(value, options);\n    }\n    return parser.deserialize(value, options);\n  }\n\n  deserialize(value: any, options: OptionsHelper): Type {\n    const parser = this.parser;\n    if (parser instanceof ODataStructuredTypeParser) {\n      return Array.isArray(value) ?\n        value.map(v => this.parse(parser, v, options)) :\n        this.parse(parser, value, options);\n    }\n    return parser.deserialize(value, Object.assign({field: this}, options));\n  }\n\n  // Serialize\n  private toJson(parser: ODataStructuredTypeParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).serialize(value, options);\n    }\n    return parser.serialize(value, options);\n  }\n\n  serialize(value: Type, options: OptionsHelper): any {\n    const parser = this.parser;\n    if (parser instanceof ODataStructuredTypeParser) {\n      return Array.isArray(value) ?\n        (value as any[]).map(v => this.toJson(parser, v, options)) :\n        this.toJson(parser, value, options);\n    }\n    return parser.serialize(value, Object.assign({field: this}, options));\n  }\n\n  configure(settings: {\n    findParserForType: (type: string) => Parser | undefined,\n    options: OptionsHelper\n  }) {\n    this.parser = settings.findParserForType(this.type) || NONE_PARSER;\n    if (this.default !== undefined)\n      this.default = this.deserialize(this.default, settings.options);\n  }\n\n  // Json Schema\n  // https://json-schema.org/\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let schema: any = (this.parser instanceof ODataStructuredTypeFieldParser ||\n      this.parser instanceof ODataStructuredTypeParser ||\n      this.parser instanceof ODataEnumTypeParser) ?\n    this.parser.toJsonSchema(options) : {title: this.name, type: \"object\"} as any;\n\n    if ([\"Edm.String\", \"Edm.Date\", \"Edm.TimeOfDay\", \"Edm.DateTimeOffset\", \"Edm.Guid\", \"Edm.Binary\"].indexOf(this.type) !== -1) {\n      schema.type = \"string\";\n      if (this.type === \"Edm.Date\")\n        schema.format = \"date\";\n      else if (this.type === \"Edm.TimeOfDay\")\n        schema.format = \"time\";\n      else if (this.type === \"Edm.DateTimeOffset\")\n        schema.format = \"date-time\";\n      else if (this.type === \"Edm.Guid\")\n        schema.pattern = \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$\";\n      else if (this.type === \"Edm.Binary\")\n        schema.contentEncoding = \"base64\";\n      else if (this.type === \"Edm.String\" && this.maxLength)\n        schema.maxLength = this.maxLength;\n    } else if ([\"Edm.Int64\", \"Edm.Int32\", \"Edm.Int16\", \"Edm.Byte\", \"Edm.SByte\"].indexOf(this.type) !== -1) {\n      //TODO: Range\n      schema.type = \"integer\";\n    } else if ([\"Edm.Decimal\", \"Edm.Double\"].indexOf(this.type) !== -1) {\n      schema.type = \"number\";\n    } else if ([\"Edm.Boolean\"].indexOf(this.type) !== -1) {\n      schema.type = \"boolean\";\n    }\n    if (this.default)\n      schema.default = this.default;\n    if (this.nullable)\n      schema.type = [schema.type, 'null'];\n    if (this.collection)\n      schema = {\n        type: \"array\",\n        items: schema,\n        additionalItems: false\n      };\n    return schema;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n  isEnumType() {\n    return this.parser instanceof ODataEnumTypeParser;\n  }\n  isStructuredType() {\n    return this.parser instanceof ODataStructuredTypeParser;\n  }\n  isComplexType() {\n    return this.parser instanceof ODataStructuredTypeParser && this.parser.isComplexType();\n  }\n\n  isEdmType() {\n    return this.type.startsWith(\"Edm.\");\n  }\n  enum() {\n    if (!this.isEnumType())\n      throw new Error(\"Field are not EnumType\")\n    return this.parser as ODataEnumTypeParser;\n  }\n  structured() {\n    if (!this.isStructuredType())\n      throw new Error(\"Field are not StrucuturedType\")\n    return this.parser as ODataStructuredTypeParser;\n  }\n}\n\nexport class ODataStructuredTypeParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  base?: string;\n  parent?: ODataStructuredTypeParser;\n  children: ODataStructuredTypeParser[];\n  fields: ODataStructuredTypeFieldParser[];\n\n  constructor(config: StructuredTypeConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.children = [];\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataStructuredTypeFieldParser(name, f as StructuredTypeField));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias)\n      names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options: OptionsHelper): Type {\n    if (this.parent)\n      value = this.parent.deserialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && value[f.name] !== undefined && value[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.deserialize(value[f.name], options) }), {})\n    );\n  }\n\n  // Serialize\n  serialize(value: Type, options: OptionsHelper): any {\n    if (this.parent)\n      value = this.parent.serialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && (value as any)[f.name] !== undefined && (value as any)[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.serialize((value as any)[f.name], options) }), {})\n    );\n  }\n\n  configure(settings: {\n    findParserForType: (type: string) => Parser | undefined,\n    options: OptionsHelper\n  }) {\n    if (this.base) {\n      const parent = settings.findParserForType(this.base) as ODataStructuredTypeParser;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaOptions = {}) {\n    let schema = {\n      $schema: \"http://json-schema.org/draft-07/schema#\",\n      $id: `${this.namespace}.${this.name}`,\n      title: this.name,\n      type: \"object\"\n    } as any;\n    const fields = this.fields\n      .filter(f => (!f.navigation || (options.expand && f.name in options.expand)) && (!options.select || (options.select).indexOf(f.name) !== -1));\n    schema.properties = fields\n      .map(f => {\n        let expand = options.expand && f.name in options.expand ? (options.expand as any)[f.name] : undefined;\n        let schema = f.toJsonSchema(expand);\n        if (options.custom && f.name in options.custom)\n          schema = (options.custom[f.name as keyof Type] as (schema: any, field: ODataStructuredTypeFieldParser) => any)(schema, f);\n        return { [f.name]: schema };\n      })\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    schema.required = fields.filter(f => !f.nullable).map(f => f.name);\n    return schema;\n  }\n\n  typeFor(name: string): string | undefined {\n    const field = this.fields.find(f => f.name === name);\n    if (field === undefined && this.parent !== undefined)\n      return this.parent.typeFor(name);\n    return field !== undefined ? field.type : undefined;\n  }\n\n  keys() {\n    const keys: ODataStructuredTypeFieldParser[] = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {}) as any;\n    const values = Object.values(key);\n    if (values.length === 1) {\n      // Single primitive key value\n      key = values[0];\n    } else if (values.some(v => v === undefined)) {\n      // Compose key, needs all values\n      key = null;\n    }\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplexType() {\n    return this.keys().length === 0;\n  }\n\n  find(predicate: (p: ODataStructuredTypeParser) => boolean): ODataStructuredTypeParser | undefined {\n    if (predicate(this))\n      return this;\n    return this.children.find(c => c.find(predicate));\n  }\n\n  findParser(predicate: (p: ODataStructuredTypeParser) => boolean): Parser {\n    return this.find(predicate) || NONE_PARSER;\n  }\n\n  defaults(): {[name: string]: any} {\n    let value = (this.parent) ? this.parent.defaults() : {};\n    let fields = this.fields.filter(f => f.default !== undefined || f.isComplexType());\n    return Object.assign({}, value, fields.reduce((acc, f) => {\n      let value = f.isComplexType() ? f.structured().defaults() : f.default;\n      if (!Types.isEmpty(value))\n        Object.assign(acc, {[f.name]: value });\n      return acc;\n    }, {}));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataValueResource.html":{"url":"classes/ODataValueResource.html","title":"class - ODataValueResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataValueResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/value.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arraybuffer\n                            \n                            \n                                blob\n                            \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                get\n                            \n                            \n                                alias\n                            \n                            \n                                asCollection\n                            \n                            \n                                asModel\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                isSubtypeOf\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:31\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            arraybuffer\n                        \n                        \n                    \n                \n            \n            \n                \narraybuffer(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            blob\n                        \n                        \n                    \n                \n            \n            \n                \nblob(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataValueResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(api: ODataApi, type: string | undefined, segments: ODataPathSegments, options: ODataQueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        V\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api\n                                    \n                                                ODataApi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                                ODataPathSegments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataValueResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asCollection\n                        \n                        \n                    \n                \n            \n            \n                \nasCollection(entities: Partial[], meta?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:88\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asModel\n                        \n                        \n                    \n                \n            \n            \n                \nasModel(entity: Partial, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:79\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:228\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endpointUrl\n                        \n                        \n                    \n                \n            \n            \n                \nendpointUrl()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:198\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSubtypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisSubtypeOf(other: ODataResource)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:220\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:68\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:205\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:212\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:137\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:111\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:125\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:101\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:46\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { ODataResource } from '../resource';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataQueryOptions } from '../query-options';\nimport { HttpOptions } from './options';\nimport { $VALUE } from '../../constants';\nimport { ODataApi } from '../../api';\n\nexport class ODataValueResource extends ODataResource {\n  //#region Factory\n  static factory(api: ODataApi, type: string | undefined, segments: ODataPathSegments, options: ODataQueryOptions) {\n    const segment = segments.add(PathSegmentNames.value, $VALUE);\n    if (type)\n      segment.type(type);\n    options.clear();\n    return new ODataValueResource(api, segments, options);\n  }\n\n  clone() {\n    return new ODataValueResource(this.api, this.pathSegments.clone(), this.queryOptions.clone());\n  }\n  //#endregion\n\n  //#region Requests\n  arraybuffer(options?: HttpOptions): Observable {\n    return super.get(\n      Object.assign({ responseType: 'arraybuffer' }, options || {})\n    );\n  }\n\n  blob(options?: HttpOptions): Observable {\n    return super.get(\n      Object.assign({ responseType: 'blob' }, options || {})\n    );\n  }\n\n  get(options?: HttpOptions): Observable {\n    return super.get(\n      Object.assign({ responseType: 'value' }, options || {})\n    );\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionHandler.html":{"url":"classes/OptionHandler.html","title":"class - OptionHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assertArray\n                            \n                            \n                                    Private\n                                assertObject\n                            \n                            \n                                assign\n                            \n                            \n                                at\n                            \n                            \n                                clear\n                            \n                            \n                                empty\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                push\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                toJSON\n                            \n                            \n                                unset\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: literal type, n: QueryOptionNames)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        n\n                                                  \n                                                        \n                                                                        QueryOptionNames\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertArray()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertObject(create: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \nassign(values: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            at\n                        \n                        \n                    \n                \n            \n            \n                \nat(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            empty\n                        \n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(path: string, def?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            push\n                        \n                        \n                    \n                \n            \n            \n                \npush(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(path: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unset\n                        \n                        \n                    \n                \n            \n            \n                \nunset(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue(v?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:109\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import buildQuery, { alias, Alias } from './builder';\n\nimport { Dates, Types, Urls, Objects } from '../utils';\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  expand = 'expand',\n  format = 'format',\n  // Custom options\n  custom = 'custom'\n}\n\nexport class ODataQueryOptions {\n  options: {[name: string]: any};\n\n  constructor(options?: {[name: string]: any}) {\n    this.options = options || {};\n  }\n\n  // Params\n  params(): {[name: string]: any} {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format]\n        .filter(key => !Types.isEmpty(this.options[key]))\n        .reduce((acc, key) => Object.assign(acc, {[key]: this.options[key]}), {});\n\n    let query = buildQuery(options);\n    let params = (query) ? Urls.parseQueryString(query.substr(1)) : {};\n\n    // Custom\n    let custom = this.options[QueryOptionNames.custom] || {};\n    if (Types.isArray(custom)) {\n      //TODO: split test for item type\n      custom = custom.reduce((acc: {[name: string]: any}, item: {[name: string]: any}) => Object.assign(acc, item), {});\n    }\n    Object.assign(params, custom);\n\n    return params;\n  }\n\n  toString(): string {\n    return Object.entries(this.params())\n      .filter(([, value]) => value)\n      .map(([key, value]) => `${key}=${value}`)\n      .join(\"&\");\n  }\n\n  toJSON() {\n    return Dates.isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (opts !== undefined)\n      this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return this.options[name] !== undefined;\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach(name => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter(k => names.indexOf(k as QueryOptionNames) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Aliases\n  alias(name: string, value: any): Alias {\n    return alias(name, value);\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(private o: {[name: string]: any}, private n: QueryOptionNames) { }\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  empty() {\n    return Types.isEmpty(this.o[this.n]);\n  }\n\n  //#region Primitive Value\n  value(v?: any) {\n    return v !== undefined && (this.o[this.n] = v) || this.o[this.n];\n  }\n  //#endregion\n\n  //#region Array Value\n  private assertArray(): any[] {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = this.o[this.n] !== undefined ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter(v => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1)\n      this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n  //#endregion\n\n  //#region HashMap Value\n  private assertObject(create: boolean): {[name: string]: any} {\n    if (!Types.isArray(this.o[this.n]) && Types.isObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find(v => Types.isObject(v));\n    if (!obj && create) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(path: string, value: any) {\n    let obj = this.assertObject(true);\n    Objects.set(obj, path, value);\n  }\n\n  get(path: string, def?: any): any {\n    let obj = this.assertObject(false) || {};\n    return Objects.get(obj, path, def);\n  }\n\n  unset(path: string) {\n    let obj = this.assertObject(true);\n    Objects.unset(obj, path);\n\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter((v: any) => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1)\n        this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(path: string) {\n    let obj = this.assertObject(false) || {};\n    return Objects.has(obj, path);\n  }\n\n  assign(values: {[attr: string]: any}) {\n    let obj = this.assertObject(true);\n    return Objects.merge(obj, values);\n  }\n  //#endregion\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        ieee754Compatible\n                                \n                                \n                                            Optional\n                                        metadata\n                                \n                                \n                                            Optional\n                                        streaming\n                                \n                                \n                                            Optional\n                                        stringAsEnum\n                                \n                                \n                                            Optional\n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ieee754Compatible\n                                    \n                                \n                                \n                                    \n                                        ieee754Compatible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:         ODataMetadataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataMetadataType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streaming\n                                    \n                                \n                                \n                                    \n                                        streaming:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stringAsEnum\n                                    \n                                \n                                \n                                    \n                                        stringAsEnum:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         ODataVersion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataVersion\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  preferMaxPageSize?: number;\n  preferReturn?: 'representation' | 'minimal';\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionsHelper.html":{"url":"interfaces/OptionsHelper.html","title":"interface - OptionsHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OptionsHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        helper\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        helper\n                                    \n                                \n                                \n                                    \n                                        helper:         ODataVersionHelper\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataVersionHelper\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  preferMaxPageSize?: number;\n  preferReturn?: 'representation' | 'minimal';\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Parser.html":{"url":"interfaces/Parser.html","title":"interface - Parser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Parser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    deserialize\n                                \n                                \n                                    serialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  preferMaxPageSize?: number;\n  preferReturn?: 'representation' | 'minimal';\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseOptions.html":{"url":"interfaces/ResponseOptions.html","title":"interface - ResponseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cacheability\n                                \n                                \n                                            Optional\n                                        maxAge\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cacheability\n                                    \n                                \n                                \n                                    \n                                        cacheability:         CacheCacheability\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CacheCacheability\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  preferMaxPageSize?: number;\n  preferReturn?: 'representation' | 'minimal';\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SegmentHandler.html":{"url":"classes/SegmentHandler.html","title":"class - SegmentHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SegmentHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                hasKey\n                            \n                            \n                                hasParameters\n                            \n                            \n                                key\n                            \n                            \n                                parameters\n                            \n                            \n                                path\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segment: ODataSegment)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:111\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segment\n                                                  \n                                                        \n                                                                        ODataSegment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alias\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasKey\n                        \n                        \n                    \n                \n            \n            \n                \nhasKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasParameters\n                        \n                        \n                    \n                \n            \n            \n                \nhasParameters()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            key\n                        \n                        \n                    \n                \n            \n            \n                \nkey(value?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:130\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parameters\n                        \n                        \n                    \n                \n            \n            \n                \nparameters(value?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:140\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            path\n                        \n                        \n                    \n                \n            \n            \n                \npath(value?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype(value?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:114\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import buildQuery, { guid, Alias, alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { Types, Dates } from '../utils';\n\nimport { PATH_SEPARATOR } from '../constants';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action'\n}\n\nexport type ODataSegment = {\n  name: string;\n  path: string;\n  type?: string;\n  key?: any;\n  parameters?: any;\n}\n\nfunction pathSegmentsBuilder(segment: ODataSegment): string {\n  switch (segment.name) {\n    case PathSegmentNames.function:\n      const parameters = segment.parameters;\n      return (parameters ?\n        buildQuery({ func: { [segment.path]: parameters }}) :\n        buildQuery({ func: segment.path})\n      ).slice(1);\n    default:\n      let key = segment.key;\n      if (typeof (key) === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(key)) {\n        key = guid(key);\n      }\n      return segment.path + (key ? buildQuery({ key }) : \"\");\n  }\n}\n\nexport class ODataPathSegments {\n  protected segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this.segments = segments || [];\n  }\n\n  path(): string {\n    let chunks = this.segments\n      .map(pathSegmentsBuilder);\n    return chunks.join(PATH_SEPARATOR);\n  }\n\n  types(): string[] {\n    return this.segments.map(s => s.type).filter(t => t !== undefined) as string[];\n  }\n\n  toString(): string {\n    return this.path();\n  }\n\n  toJSON() {\n    return this.segments.map(segment => {\n      let json = { name: segment.name, path: segment.path };\n      if (segment.type !== undefined)\n        json.type = segment.type;\n      if (segment.key !== undefined)\n        json.key = Dates.isoStringToDate(JSON.parse(JSON.stringify(segment.key)));\n      if (segment.parameters !== undefined)\n        json.parameters = Dates.isoStringToDate(JSON.parse(JSON.stringify(segment.parameters)));\n      return json;\n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(predicate: (segment: ODataSegment) => boolean) {\n    //Backward Find\n    return [...this.segments].reverse().find(predicate);\n  }\n\n  last() {\n    return (this.segments.length > 0) ?\n       new SegmentHandler(this.segments[this.segments.length - 1]) : undefined;\n  }\n\n  add(name: string, path: string) {\n    const segment = { name, path } as ODataSegment;\n    this.segments.push(segment);\n    return new SegmentHandler(segment);\n  }\n\n  get(name: string) {\n    let segment = this.find(s => s.name === name);\n    if (segment === undefined)\n      throw Error(`No Segment for name ${name} was found`);\n    return new SegmentHandler(segment);\n  }\n}\n\nexport class SegmentHandler {\n  constructor(private segment: ODataSegment) {}\n\n  get name() {\n    return this.segment.name;\n  }\n\n  type(value?: string) {\n    if (value !== undefined)\n      this.segment.type = value;\n    return this.segment.type;\n  }\n\n  path(value?: string) {\n    if (value !== undefined)\n      this.segment.path = value;\n    return this.segment.path;\n  }\n\n  key(value?: T) {\n    if (value !== undefined)\n      this.segment.key = value;\n    return this.segment.key as T;\n  }\n\n  hasKey() {\n    return !Types.isEmpty(this.segment.key);\n  }\n\n  parameters(value?: T) {\n    if (value !== undefined)\n      this.segment.parameters = value;\n    return this.segment.parameters as T;\n  }\n\n  hasParameters() {\n    return !Types.isEmpty(this.segment.parameters);\n  }\n\n  // Aliases\n  alias(name: string, value?: any): Alias {\n    return alias(name, value);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoragePayload.html":{"url":"interfaces/StoragePayload.html","title":"interface - StoragePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StoragePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/storage.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        headers\n                                \n                                \n                                        status\n                                \n                                \n                                        statusText\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusText\n                                    \n                                \n                                \n                                    \n                                        statusText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache, ODataCacheEntry } from './cache';\n\ninterface StoragePayload {\n    body: any | null;\n    headers: {[name: string]: string | string[]};\n    status: number;\n    statusText: string;\n    url: string | null;\n}\n\nexport class ODataInStorageCache extends ODataCache {\n  constructor(init: {timeout?: number, name: string, storage?: Storage}) {\n    super(init);\n    const name = init.name;\n    const storage = init.storage || sessionStorage;\n    this.entries = new Map>(JSON.parse(storage.getItem(name) || \"[]\"));\n    window.addEventListener(\"beforeunload\", ((backend, key, responses) => function() {\n      backend.setItem(key, JSON.stringify(Array.from(responses.entries())))\n    })(storage, name, this.entries));\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.urlWithParams, res.toJSON(), res.options.maxAge);\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    const data = this.get(req.urlWithParams);\n\n    return data !== undefined ? ODataResponse.fromJSON(req, data) : undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StructuredTypeField.html":{"url":"interfaces/StructuredTypeField.html","title":"interface - StructuredTypeField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StructuredTypeField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        annotations\n                                \n                                \n                                            Optional\n                                        collection\n                                \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                            Optional\n                                        field\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        maxLength\n                                \n                                \n                                            Optional\n                                        navigation\n                                \n                                \n                                            Optional\n                                        nullable\n                                \n                                \n                                            Optional\n                                        precision\n                                \n                                \n                                            Optional\n                                        ref\n                                \n                                \n                                            Optional\n                                        scale\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        annotations\n                                    \n                                \n                                \n                                    \n                                        annotations:         Annotation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Annotation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                    \n                                \n                                \n                                    \n                                        collection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxLength\n                                    \n                                \n                                \n                                    \n                                        maxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        navigation\n                                    \n                                \n                                \n                                    \n                                        navigation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullable\n                                    \n                                \n                                \n                                    \n                                        nullable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precision\n                                    \n                                \n                                \n                                    \n                                        precision:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  preferMaxPageSize?: number;\n  preferReturn?: 'representation' | 'minimal';\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StructuredTypeFieldOptions.html":{"url":"interfaces/StructuredTypeFieldOptions.html","title":"interface - StructuredTypeFieldOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StructuredTypeFieldOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        OptionsHelper\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         StructuredTypeField\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StructuredTypeField\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string | undefined;\n  etag(value: {[name: string]: any}, etag?: string): string | undefined;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string | undefined;\n  metadataEtag(value: {[name: string]: any}): string | undefined;\n  type(value: {[name: string]: any}): string | undefined;\n  nextLink(value: {[name: string]: any}): string | undefined;\n  readLink(value: {[name: string]: any}): string | undefined;\n  mediaReadLink(value: {[name: string]: any}): string | undefined;\n  editLink(value: {[name: string]: any}): string | undefined;\n  mediaEditLink(value: {[name: string]: any}): string | undefined;\n  mediaContentType(value: {[name: string]: any}): string | undefined;\n  deltaLink(value: {[name: string]: any}): string | undefined;\n  count(value: {[name: string]: any}): number | undefined;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  preferMaxPageSize?: number;\n  preferReturn?: 'representation' | 'minimal';\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  entityType: string;\n  service: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.1.0\n        \n            @angular/common : ~11.1.0\n        \n            @angular/compiler : ~11.1.0\n        \n            @angular/core : ~11.1.0\n        \n            @angular/forms : ~11.1.0\n        \n            @angular/platform-browser : ~11.1.0\n        \n            @angular/platform-browser-dynamic : ~11.1.0\n        \n            @angular/router : ~11.1.0\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FieldType   (projects/.../metadata.ts)\n                        \n                        \n                            PathSegmentNames   (projects/.../path-segments.ts)\n                        \n                        \n                            QueryOptionNames   (projects/.../query-options.ts)\n                        \n                        \n                            StandardAggregateMethods   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/responses/metadata.ts\n    \n        \n            \n                \n                    \n                        \n                        FieldType\n                    \n                \n                        \n                            \n                                 ATTRIBUTE\n                            \n                        \n                        \n                            \n                                 TAG\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n        \n            \n                \n                    \n                        \n                        PathSegmentNames\n                    \n                \n                        \n                            \n                                 batch\n                            \n                        \n                        \n                            \n                                Value : batch\n                            \n                        \n                        \n                            \n                                 metadata\n                            \n                        \n                        \n                            \n                                Value : metadata\n                            \n                        \n                        \n                            \n                                 entitySet\n                            \n                        \n                        \n                            \n                                Value : entitySet\n                            \n                        \n                        \n                            \n                                 singleton\n                            \n                        \n                        \n                            \n                                Value : singleton\n                            \n                        \n                        \n                            \n                                 type\n                            \n                        \n                        \n                            \n                                Value : type\n                            \n                        \n                        \n                            \n                                 property\n                            \n                        \n                        \n                            \n                                Value : property\n                            \n                        \n                        \n                            \n                                 navigationProperty\n                            \n                        \n                        \n                            \n                                Value : navigationProperty\n                            \n                        \n                        \n                            \n                                 reference\n                            \n                        \n                        \n                            \n                                Value : reference\n                            \n                        \n                        \n                            \n                                 value\n                            \n                        \n                        \n                            \n                                Value : value\n                            \n                        \n                        \n                            \n                                 count\n                            \n                        \n                        \n                            \n                                Value : count\n                            \n                        \n                        \n                            \n                                 function\n                            \n                        \n                        \n                            \n                                Value : function\n                            \n                        \n                        \n                            \n                                 action\n                            \n                        \n                        \n                            \n                                Value : action\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/query-options.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryOptionNames\n                    \n                \n                        \n                            \n                                 select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 filter\n                            \n                        \n                        \n                            \n                                Value : filter\n                            \n                        \n                        \n                            \n                                 search\n                            \n                        \n                        \n                            \n                                Value : search\n                            \n                        \n                        \n                            \n                                 transform\n                            \n                        \n                        \n                            \n                                Value : transform\n                            \n                        \n                        \n                            \n                                 orderBy\n                            \n                        \n                        \n                            \n                                Value : orderBy\n                            \n                        \n                        \n                            \n                                 top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 skip\n                            \n                        \n                        \n                            \n                                Value : skip\n                            \n                        \n                        \n                            \n                                 skiptoken\n                            \n                        \n                        \n                            \n                                Value : skiptoken\n                            \n                        \n                        \n                            \n                                 expand\n                            \n                        \n                        \n                            \n                                Value : expand\n                            \n                        \n                        \n                            \n                                 format\n                            \n                        \n                        \n                            \n                                Value : format\n                            \n                        \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n            \n                \n                    \n                        \n                        StandardAggregateMethods\n                    \n                \n                        \n                            \n                                 sum\n                            \n                        \n                        \n                            \n                                Value : sum\n                            \n                        \n                        \n                            \n                                 min\n                            \n                        \n                        \n                            \n                                Value : min\n                            \n                        \n                        \n                            \n                                 max\n                            \n                        \n                        \n                            \n                                Value : max\n                            \n                        \n                        \n                            \n                                 average\n                            \n                        \n                        \n                            \n                                Value : average\n                            \n                        \n                        \n                            \n                                 countdistinct\n                            \n                        \n                        \n                            \n                                Value : countdistinct\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addBody   (projects/.../client.ts)\n                        \n                        \n                            buildAggregate   (projects/.../builder.ts)\n                        \n                        \n                            buildExpand   (projects/.../builder.ts)\n                        \n                        \n                            buildFilter   (projects/.../builder.ts)\n                        \n                        \n                            buildGroupBy   (projects/.../builder.ts)\n                        \n                        \n                            buildOrderBy   (projects/.../builder.ts)\n                        \n                        \n                            buildTransforms   (projects/.../builder.ts)\n                        \n                        \n                            buildUrl   (projects/.../builder.ts)\n                        \n                        \n                            createSettings   (projects/.../module.ts)\n                        \n                        \n                            escapeIllegalChars   (projects/.../builder.ts)\n                        \n                        \n                            getBoundaryDelimiter   (projects/.../batch.ts)\n                        \n                        \n                            getBoundaryEnd   (projects/.../batch.ts)\n                        \n                        \n                            getHeaderValue   (projects/.../batch.ts)\n                        \n                        \n                            getStringCollectionClause   (projects/.../builder.ts)\n                        \n                        \n                            handleValue   (projects/.../builder.ts)\n                        \n                        \n                            now   (projects/.../batch.ts)\n                        \n                        \n                            parseNot   (projects/.../builder.ts)\n                        \n                        \n                            pathSegmentsBuilder   (projects/.../path-segments.ts)\n                        \n                        \n                            renderPrimitiveValue   (projects/.../builder.ts)\n                        \n                        \n                            uniqid   (projects/.../batch.ts)\n                        \n                        \n                            Unnamed function   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/client.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addBody\n                        \n                        \n                    \n                \n            \n            \n                \naddBody(options, body)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            buildAggregate\n                        \n                        \n                    \n                \n            \n            \n                \nbuildAggregate(aggregate)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aggregate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildExpand\n                        \n                        \n                    \n                \n            \n            \n                \nbuildExpand(expands)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expands\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildFilter\n                        \n                        \n                    \n                \n            \n            \n                \nbuildFilter(filters, aliases, propPrefix: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propPrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildGroupBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildGroupBy(groupBy)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildOrderBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildOrderBy(orderBy, prefix)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prefix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildTransforms\n                        \n                        \n                    \n                \n            \n            \n                \nbuildTransforms(transforms)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transforms\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildUrl\n                        \n                        \n                    \n                \n            \n            \n                \nbuildUrl(path, params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            escapeIllegalChars\n                        \n                        \n                    \n                \n            \n            \n                \nescapeIllegalChars(string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStringCollectionClause\n                        \n                        \n                    \n                \n            \n            \n                \ngetStringCollectionClause(lambdaParameter, value: any, collectionOperator, propName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lambdaParameter\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionOperator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propName\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleValue\n                        \n                        \n                    \n                \n            \n            \n                \nhandleValue(value, aliases?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseNot\n                        \n                        \n                    \n                \n            \n            \n                \nparseNot(builtFilters)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builtFilters\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renderPrimitiveValue\n                        \n                        \n                    \n                \n            \n            \n                \nrenderPrimitiveValue(key, val: any, aliases)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Unnamed function\n                        \n                        \n                    \n                \n            \n            \n                \nUnnamed function(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createSettings\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSettings(configs)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/types/batch.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getBoundaryDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \ngetBoundaryDelimiter(contentType)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBoundaryEnd\n                        \n                        \n                    \n                \n            \n            \n                \ngetBoundaryEnd(boundaryDelimiter)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    boundaryDelimiter\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHeaderValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetHeaderValue(header)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            now\n                        \n                        \n                    \n                \n            \n            \n                \nnow()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uniqid\n                        \n                        \n                    \n                \n            \n            \n                \nuniqid(prefix?, suffix?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prefix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    suffix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            pathSegmentsBuilder\n                        \n                        \n                    \n                \n            \n            \n                \npathSegmentsBuilder(segment)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    segment\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular OData\n\n\nA fluent API for querying, creating, updating and deleting OData resources in Angular.\nOData service for Angular.\nPlease check also my other related project, OData Angular Generator\nDemo:\nFull examples of the library:\n\nAngularODataEntity\n\nTable of contents\n\nInstallation\nUsage\nGenerator\nOData Version\nQuery Builder\nDocumentation\n\nInstallation\nInstall from npm:\nnpm i angular-odataUsage\n1) Add module to your project\nimport { NgModule } from '@angular/core';\nimport { ODataModule } from 'angular-odata';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot({\n      serviceRootUrl: 'https://services.odata.org/V4/(S(4m0tuxtnhcfctl4gzem3gr10))/TripPinServiceRW/'\n    })\n    ...\n  ]\n})\nexport class AppModule {}2) Inject and use the ODataServiceFactory\nimport { Component } from '@angular/core';\nimport { ODataClient, ODATA_ETAG } from 'angular-odata';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TripPin';\n  constructor(private factory: ODataServiceFactory) {\n    this.queries();\n  }\n\n  queries() {\n    // Use OData Service Factory\n    let airportsService = this.factory.entity(\"Airports\");\n    let peopleService = this.factory.entity(\"People\");\n\n    let airports = airportsService.entities();\n\n    // Fetch all airports\n    airports\n    .all()\n    .subscribe(aports => console.log(\"All: \", aports));\n\n    // Fetch airports with count\n    airports\n    .get({withCount: true})\n    .subscribe(({entities, meta}) => console.log(\"Airports: \", entities, \"Annotations: \", meta));\n\n    // Fetch airport with key\n    airports\n    .entity(\"CYYZ\").get()\n    .pipe(switchMap(() => airports.entity(\"CYYZ\").get({fetchPolicy: 'cache-first'}))) // From Cache!\n    .subscribe(({entity, meta}) => console.log(\"Airport: \", entity, \"Annotations: \", meta));\n\n    // Filter airports (inmutable resource)\n    airports\n    .filter({Location: {City: {CountryRegion: \"United States\"}}})\n    .get()\n    .subscribe(({entities, meta}) => console.log(\"Airports of United States: \", entities, \"Annotations: \", meta));\n\n    // Add filter (mutable resource)\n    airports.query.filter().push({Location: {City: {Region: \"California\"}}});\n    airports\n    .get()\n    .subscribe(({entities, meta}) => console.log(\"Airports in California: \", entities, \"Annotations: \", meta));\n\n    // Resource to JSON\n    const json = airports.toJSON();\n    console.log(json);\n    // JSON to Resource\n    const query = this.odata.fromJSON(json);\n    console.log(query);\n\n    // Remove filter (mutable resource)\n    airports.query.filter().clear();\n    airports\n    .get()\n    .subscribe(({entities, meta}) => console.log(\"Airports: \", entities, \"Annotations: \", meta));\n\n    let people = peopleService.entities();\n\n    // Expand (inmutable resource)\n    people.expand({\n      Friends: {\n        expand: { Friends: { select: ['AddressInfo']}}\n      },\n      Trips: { select: ['Name', 'Tags'] },\n    })\n    .get({withCount: true})\n    .subscribe(({entities, meta}) => console.log(\"People with Friends and Trips: \", entities, \"Annotations: \", meta));\n\n    this.odata.batch(\"TripPin\").post(batch => {\n      airports.get().subscribe(console.log);\n      airport.get().subscribe(console.log);\n      people.get({withCount: true}).subscribe(console.log);\n    }).subscribe();\n  }\n}Generator\nIf you use OData Angular Generator, import the config and the module from generated source.\nimport { NgModule } from '@angular/core';\n\nimport { ODataModule } from 'angular-odata';\nimport { TripPinConfig, TripPinModule } from './trippin';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot(TripPinConfig),\n    TripPinModule\n  ]\n  ...\n})\nexport class AppModule {}OData Version\nThe library works mainly with OData Version 4, however, it incorporates basic support for versions 3 and 2.\nQuery Builder\nFor a deep query customizations the library use odata-query as a builder.\n\nOData v4 query builder\n\nDocumentation\nThe api documentation is generated using compodoc and can be viewed here: https://diegomvh.github.io/angular-odata/docs/\nLibrary documentation can be viewed on the wiki here: https://github.com/diegomvh/angular-odata/wiki\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Diego van Haaster\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ODataModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    82 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Aggregate   (projects/.../builder.ts)\n                        \n                        \n                            Alias   (projects/.../builder.ts)\n                        \n                        \n                            AnnotationConfig   (projects/.../types.ts)\n                        \n                        \n                            ApiConfig   (projects/.../types.ts)\n                        \n                        \n                            Binary   (projects/.../builder.ts)\n                        \n                        \n                            CacheCacheability   (projects/.../types.ts)\n                        \n                        \n                            CallableConfig   (projects/.../types.ts)\n                        \n                        \n                            Decimal   (projects/.../builder.ts)\n                        \n                        \n                            DeepPartial   (projects/.../model.ts)\n                        \n                        \n                            Duration   (projects/.../edm.ts)\n                        \n                        \n                            Duration   (projects/.../builder.ts)\n                        \n                        \n                            EntityContainerConfig   (projects/.../types.ts)\n                        \n                        \n                            EntityKey   (projects/.../types.ts)\n                        \n                        \n                            EntitySetConfig   (projects/.../types.ts)\n                        \n                        \n                            EnumTypeConfig   (projects/.../types.ts)\n                        \n                        \n                            Expand   (projects/.../builder.ts)\n                        \n                        \n                            ExpandObject   (projects/.../builder.ts)\n                        \n                        \n                            ExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ExpandType   (projects/.../builder.ts)\n                        \n                        \n                            FetchPolicy   (projects/.../types.ts)\n                        \n                        \n                            Filter   (projects/.../builder.ts)\n                        \n                        \n                            FilterType   (projects/.../builder.ts)\n                        \n                        \n                            GroupBy   (projects/.../builder.ts)\n                        \n                        \n                            Guid   (projects/.../builder.ts)\n                        \n                        \n                            HttpEntitiesOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpEntityOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpPropertyOptions   (projects/.../options.ts)\n                        \n                        \n                            Json   (projects/.../builder.ts)\n                        \n                        \n                            JsonSchemaCustom   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaExpand   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaExpandOptions   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaOptions   (projects/.../structured-type.ts)\n                        \n                        \n                            JsonSchemaSelect   (projects/.../structured-type.ts)\n                        \n                        \n                            NestedExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ODataContext   (projects/.../types.ts)\n                        \n                        \n                            ODataEntities   (projects/.../types.ts)\n                        \n                        \n                            ODataEntity   (projects/.../types.ts)\n                        \n                        \n                            ODataMetadataType   (projects/.../types.ts)\n                        \n                        \n                            ODataProperty   (projects/.../types.ts)\n                        \n                        \n                            ODataSegment   (projects/.../path-segments.ts)\n                        \n                        \n                            ODataVersion   (projects/.../types.ts)\n                        \n                        \n                            OrderBy   (projects/.../builder.ts)\n                        \n                        \n                            OrderByObject   (projects/.../builder.ts)\n                        \n                        \n                            OrderByType   (projects/.../builder.ts)\n                        \n                        \n                            Parameter   (projects/.../types.ts)\n                        \n                        \n                            PlainObject   (projects/.../builder.ts)\n                        \n                        \n                            QueryOptions   (projects/.../builder.ts)\n                        \n                        \n                            Raw   (projects/.../builder.ts)\n                        \n                        \n                            SchemaConfig   (projects/.../types.ts)\n                        \n                        \n                            Select   (projects/.../builder.ts)\n                        \n                        \n                            SelectType   (projects/.../builder.ts)\n                        \n                        \n                            StructuredTypeConfig   (projects/.../types.ts)\n                        \n                        \n                            Transform   (projects/.../builder.ts)\n                        \n                        \n                            Unpacked   (projects/.../builder.ts)\n                        \n                        \n                            Value   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n    \n        \n            \n                \n                    \n                    Aggregate\n                \n            \n            \n                \n                        string | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Alias\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Binary\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Decimal\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Duration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Expand\n                \n            \n            \n                \n                        ExpandType | ExpandType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandObject\n                \n            \n            \n                \n                             | NestedExpandOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandType\n                \n            \n            \n                \n                        string | ExpandObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                        FilterType | FilterType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterType\n                \n            \n            \n                \n                            string | PlainObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GroupBy\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Guid\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Json\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NestedExpandOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderBy\n                \n            \n            \n                \n                        OrderByType | OrderByType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByObject\n                \n            \n            \n                \n                         |  | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByType\n                \n            \n            \n                \n                        string | OrderByObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PlainObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Raw\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Select\n                \n            \n            \n                \n                        SelectType | SelectType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectType\n                \n            \n            \n                \n                        string | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Transform\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Unpacked\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Value\n                \n            \n            \n                \n                        string | Date | number | boolean | Raw | Guid | Duration | Binary | Json | Alias | Decimal\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    AnnotationConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ApiConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CacheCacheability\n                \n            \n            \n                \n                        \"public\" | \"private\" | \"no-cache\" | \"no-store\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CallableConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityContainerConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityKey\n                \n            \n            \n                \n                         | string | number\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntitySetConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EnumTypeConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FetchPolicy\n                \n            \n            \n                \n                        \"cache-first\" | \"cache-and-network\" | \"network-only\" | \"no-cache\" | \"cache-only\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataContext\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataMetadataType\n                \n            \n            \n                \n                        \"minimal\" | \"full\" | \"none\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataVersion\n                \n            \n            \n                \n                        \"2.0\" | \"3.0\" | \"4.0\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Parameter\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SchemaConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StructuredTypeConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/models/model.ts\n    \n    \n        \n            \n                \n                    \n                    DeepPartial\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/parsers/edm.ts\n    \n    \n        \n            \n                \n                    \n                    Duration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/types/options.ts\n    \n    \n        \n            \n                \n                    \n                    HttpEntitiesOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpEntityOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpPropertyOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/parsers/structured-type.ts\n    \n    \n        \n            \n                \n                    \n                    JsonSchemaCustom\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaOptions\n                \n            \n            \n                \n                            JsonSchemaExpandOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaSelect\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/responses/types.ts\n    \n    \n        \n            \n                \n                    \n                    ODataEntities\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataEntity\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataProperty\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n    \n        \n            \n                \n                    \n                    ODataSegment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
