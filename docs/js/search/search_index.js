var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/BatchRequest.html",[0,0.344,1,3.039]],["body/classes/BatchRequest.html",[0,0.399,1,4.588,2,0.172,3,0.104,4,0.091,5,0.091,6,0.122,7,2.4,8,0.066,9,0.211,10,3.125,11,5.14,12,5.344,13,4.634,14,5.344,15,0.827,16,5.046,17,6.767,18,0.174,19,3.309,20,1.015,21,4.514,22,0.273,23,3.079,24,6.241,25,4.956,26,0.234,27,4.514,28,0.114,29,0.016,30,0.114,31,0.117,32,0.438,33,0.18,34,2.189,35,0.984,36,4.514,37,3.079,38,3.079,39,4.514,40,3.079,41,3.079,42,3.079,43,4.514,44,3.079,45,0.666,46,0.87,47,2.67,48,5.344,49,2.67,50,2.121,51,1.38,52,2.777,53,1.904,54,1.015,55,2.4,56,3.537,57,2.199,58,1.447,59,4.475,60,2.988,61,2.097,62,2.038,63,2.199,64,3.305,65,4.475,66,3.519,67,5.475,68,3.519,69,3.519,70,3.224,71,3.224,72,4.166,73,3.519,74,3.519,75,3.519,76,3.224,77,2.4,78,2.199,79,3.079,80,3.896,81,2.67,82,2.67,83,1.447,84,0.133,85,1.52,86,2.67,87,2.67,88,2.038,89,2.67,90,2.67,91,5.344,92,6.814,93,3.079,94,3.079,95,3.079,96,3.079,97,3.079,98,1.463,99,2.945,100,1.141,101,4.514,102,3.079,103,3.079,104,3.914,105,0.59,106,2.356,107,3.519,108,3.079,109,2.67,110,4.514,111,3.079,112,3.079,113,0.438,114,3.079,115,3.079,116,5.344,117,6.266,118,3.079,119,6.94,120,2.512,121,4.514,122,0.946,123,3.079,124,1.202,125,3.079,126,3.079,127,3.079,128,3.079,129,3.079,130,3.079,131,2.932,132,3.079,133,3.079,134,3.079,135,3.079,136,2.67,137,1.447,138,3.079,139,3.079,140,3.079,141,3.079,142,3.079,143,1.689,144,3.079,145,3.079,146,3.079,147,3.079,148,3.079,149,3.079,150,3.079,151,3.079,152,5.886,153,5.433,154,5.433,155,3.079,156,5.886,157,5.886,158,6.94,159,3.079,160,3.079,161,3.079,162,3.079,163,3.079,164,3.079,165,3.079,166,3.079,167,3.079,168,1.158,169,0.006,170,0.008,171,0.006]],["title/classes/CsdlAction.html",[0,0.344,172,1.925]],["body/classes/CsdlAction.html",[0,0.652,2,0.251,3,0.152,4,0.133,5,0.133,6,0.13,8,0.096,9,0.275,15,0.928,18,0.227,22,0.454,26,0.248,28,0.191,29,0.015,30,0.195,31,0.132,32,0.987,33,0.206,84,0.218,113,1.05,169,0.008,170,0.011,171,0.008,172,2.902,173,1.5,174,2.134,175,2.618,176,4.287,177,4.287,178,3.642,179,1.231,180,3.834,181,1.097,182,3.834,183,4.505,184,4.505,185,4.505,186,4.505,187,4.505,188,4.505,189,2.224,190,2.618,191,2.224,192,2.786,193,2.902,194,2.472,195,2.224,196,1.44,197,1.736,198,1.736,199,2.12,200,2.12,201,2.12]],["title/classes/CsdlActionImport.html",[0,0.344,195,1.925]],["body/classes/CsdlActionImport.html",[0,0.66,2,0.264,3,0.159,4,0.139,5,0.139,6,0.126,8,0.101,9,0.283,15,0.928,18,0.197,22,0.459,26,0.238,28,0.17,29,0.015,30,0.197,31,0.129,32,0.673,33,0.208,84,0.22,113,1.064,169,0.009,170,0.011,171,0.009,172,2.334,173,1.458,174,2.074,175,2.748,176,3.524,177,3.524,178,2.994,179,1.291,180,3.479,181,1.064,182,3.479,189,2.334,190,2.748,191,2.334,192,2.924,193,3.689,194,2.594,195,2.994,196,2.334,197,1.791,198,1.791,199,2.187,200,2.187,201,2.187,202,4.727,203,4.727,204,4.727,205,4.727]],["title/classes/CsdlAnnotable.html",[0,0.344,206,1.832]],["body/classes/CsdlAnnotable.html",[0,0.653,2,0.299,3,0.181,4,0.158,5,0.158,6,0.123,8,0.114,9,0.306,15,0.915,18,0.209,22,0.446,26,0.221,28,0.136,29,0.015,30,0.166,31,0.123,32,0.763,33,0.203,84,0.218,105,1.028,113,1.009,169,0.01,170,0.012,171,0.01,173,1.415,181,0.763,197,1.583,198,1.583,199,1.933,200,1.933,201,1.933,206,3.332,207,3.547,208,3.939,209,5.359,210,3.457,211,5.359,212,5.359,213,3.547,214,2.94,215,2.94,216,3.599,217,2.785,218,3.547,219,2.94,220,3.547,221,2.646,222,3.547]],["title/classes/CsdlAnnotation.html",[0,0.344,210,1.748]],["body/classes/CsdlAnnotation.html",[0,0.648,2,0.293,3,0.177,4,0.155,5,0.155,6,0.127,8,0.112,9,0.303,15,0.917,18,0.207,22,0.443,26,0.237,28,0.133,29,0.015,30,0.164,31,0.127,32,0.748,33,0.207,84,0.216,105,1.007,113,1,169,0.01,170,0.012,171,0.01,173,1.465,181,0.748,197,1.551,198,1.551,199,1.894,200,1.894,201,1.894,206,3.045,207,3.476,208,3.367,210,3.289,213,3.476,214,2.881,215,2.881,216,4.211,217,2.729,218,4.856,219,2.881,220,3.476,221,2.593,222,3.476,223,5.252,224,5.252,225,5.252,226,5.252]],["title/classes/CsdlAnnotations.html",[0,0.344,214,2.139]],["body/classes/CsdlAnnotations.html",[0,0.642,2,0.286,3,0.173,4,0.151,5,0.151,6,0.126,8,0.109,9,0.298,15,0.918,18,0.221,22,0.439,26,0.245,28,0.13,29,0.015,30,0.162,31,0.129,32,0.729,33,0.206,84,0.214,105,1.223,113,0.989,169,0.01,170,0.012,171,0.01,173,1.452,181,0.729,197,1.513,198,1.513,199,1.848,200,1.848,201,1.848,206,3.418,207,3.39,208,3.964,210,3.419,213,3.39,214,3.5,215,3.99,216,4.185,217,2.662,218,3.39,219,2.81,220,3.39,221,2.528,222,3.39,227,5.122,228,5.122,229,5.122,230,5.122,231,2.193,232,3.658]],["title/classes/CsdlComplexType.html",[0,0.344,233,2.026]],["body/classes/CsdlComplexType.html",[0,0.637,2,0.253,3,0.153,4,0.134,5,0.134,6,0.102,8,0.097,9,0.366,15,0.913,18,0.231,22,0.446,26,0.254,28,0.115,29,0.015,30,0.194,31,0.13,32,1.026,33,0.202,46,0.535,84,0.213,100,1.147,105,1.259,169,0.008,170,0.011,171,0.008,173,1.179,179,1.239,181,1.129,231,3.165,233,3.069,234,3.239,235,2.489,236,4.523,237,3.626,238,4.771,239,5.106,240,4.771,241,3.223,242,3.223,243,4.536,244,3.933,245,3.933,246,3.933,247,3.933,248,3.933,249,3.933,250,1.943,251,2.034,252,1.061,253,2.915,254,2.358,255,3.239,256,2.805,257,3.003,258,3.239,259,1.571]],["title/classes/CsdlEntityContainer.html",[0,0.344,260,2.581]],["body/classes/CsdlEntityContainer.html",[0,0.438,2,0.277,3,0.167,4,0.146,5,0.146,6,0.134,8,0.106,9,0.292,15,0.912,18,0.234,22,0.378,26,0.259,28,0.126,29,0.015,30,0.188,31,0.133,32,1.055,33,0.197,46,0.807,84,0.146,169,0.009,170,0.012,171,0.009,173,1.551,174,1.409,179,1.355,191,3.658,195,3.658,196,1.585,250,2.932,260,4.138,261,3.515,262,4.301,263,7.41,264,7.41,265,7.41,266,7.41,267,7.41,268,4.905,269,4.905,270,4.96,271,4.96,272,4.96,273,4.96,274,4.96,275,4.96,276,4.96,277,2.578,278,3.283]],["title/classes/CsdlEntitySet.html",[0,0.344,268,2.581]],["body/classes/CsdlEntitySet.html",[0,0.474,2,0.299,3,0.181,4,0.158,5,0.158,6,0.133,8,0.114,9,0.307,15,0.904,18,0.224,22,0.397,26,0.255,28,0.136,29,0.015,30,0.192,31,0.131,32,0.935,33,0.2,46,0.633,84,0.158,169,0.01,170,0.012,171,0.01,173,1.54,179,1.466,181,1.052,194,4.16,250,2.298,252,1.255,261,3.458,268,4.346,279,4.653,280,6.574,281,6.574,282,4.689,283,5.367,284,5.367,285,5.367,286,5.367,287,5.367,288,2.406,289,4.183]],["title/classes/CsdlEntityType.html",[0,0.344,254,2.026]],["body/classes/CsdlEntityType.html",[0,0.628,2,0.242,3,0.146,4,0.128,5,0.128,6,0.118,8,0.093,9,0.364,15,0.916,18,0.235,22,0.441,26,0.258,28,0.11,29,0.015,30,0.192,31,0.132,32,1.061,33,0.201,46,0.512,84,0.21,100,1.797,105,1.233,169,0.008,170,0.011,171,0.008,173,1.365,179,1.187,181,1.137,231,3.128,233,2.258,234,3.752,235,2.384,236,4.489,237,3.596,238,4.732,239,5.064,240,4.732,241,3.19,242,3.19,244,3.768,245,3.768,246,3.768,247,3.768,248,3.768,249,3.768,250,1.861,251,1.948,252,1.016,253,2.834,254,2.983,255,3.901,256,4.397,257,2.876,258,3.15,259,1.505,290,4.346,291,4.346,292,4.346]],["title/classes/CsdlEnumMember.html",[0,0.344,293,2.581]],["body/classes/CsdlEnumMember.html",[0,0.594,2,0.311,3,0.188,4,0.165,5,0.165,6,0.13,8,0.119,9,0.314,15,0.901,18,0.213,22,0.436,26,0.243,28,0.142,29,0.015,30,0.197,31,0.125,32,0.795,33,0.197,35,1.411,84,0.198,85,3.697,113,1.066,169,0.01,170,0.013,171,0.01,173,1.495,179,1.524,181,0.795,235,3.061,293,4.776,294,4.838,295,5.58,296,5.58,297,3.451,298,2.39,299,4.35,300,4.35]],["title/classes/CsdlEnumType.html",[0,0.344,297,2.411]],["body/classes/CsdlEnumType.html",[0,0.577,2,0.296,3,0.179,4,0.157,5,0.157,6,0.133,8,0.113,9,0.305,15,0.909,18,0.223,22,0.427,26,0.255,28,0.135,29,0.015,30,0.195,31,0.131,32,0.929,33,0.201,35,0.979,84,0.192,85,3.8,113,0.757,169,0.01,170,0.012,171,0.01,173,1.537,179,1.452,181,1.049,235,2.916,293,5.005,297,4.037,298,3.238,299,5.894,300,5.894,301,5.316,302,4.609,303,5.316,304,4.609,305,4.609]],["title/classes/CsdlFunction.html",[0,0.344,189,1.925]],["body/classes/CsdlFunction.html",[0,0.648,2,0.247,3,0.149,4,0.13,5,0.13,6,0.131,8,0.094,9,0.271,15,0.928,18,0.226,22,0.452,26,0.252,28,0.19,29,0.015,30,0.195,31,0.133,32,0.98,33,0.205,84,0.216,113,1.045,169,0.008,170,0.011,171,0.008,172,2.184,173,1.515,174,2.156,175,2.571,176,4.266,177,4.266,178,3.623,179,1.209,180,3.815,181,1.119,182,3.815,189,2.867,190,4.157,191,2.184,192,2.736,193,2.867,194,2.427,195,2.184,196,1.414,197,1.715,198,1.715,199,2.095,200,2.095,201,2.095,306,4.424,307,4.424,308,4.424,309,4.424,310,4.424,311,4.424,312,4.424]],["title/classes/CsdlFunctionImport.html",[0,0.344,191,1.925]],["body/classes/CsdlFunctionImport.html",[0,0.656,2,0.258,3,0.156,4,0.136,5,0.136,6,0.128,8,0.098,9,0.279,15,0.928,18,0.214,22,0.457,26,0.244,28,0.168,29,0.015,30,0.196,31,0.131,32,0.851,33,0.207,84,0.219,113,1.058,169,0.009,170,0.011,171,0.009,172,2.282,173,1.483,174,2.11,175,2.686,176,3.474,177,3.474,178,2.95,179,1.263,180,3.442,181,1.102,182,3.442,189,2.282,190,2.686,191,2.95,192,4.485,193,3.667,194,3.979,195,2.282,196,1.477,197,1.765,198,1.765,199,2.156,200,2.156,201,2.156,313,4.622,314,4.622,315,4.622,316,4.622,317,4.622]],["title/classes/CsdlInclude.html",[0,0.344,318,2.411]],["body/classes/CsdlInclude.html",[0,0.629,2,0.301,3,0.182,4,0.159,5,0.159,6,0.128,8,0.115,9,0.308,15,0.905,18,0.21,22,0.447,26,0.24,28,0.137,29,0.015,30,0.137,31,0.123,32,0.769,33,0.205,46,0.637,84,0.21,105,1.036,169,0.01,170,0.012,171,0.01,173,1.479,206,3.099,208,2.808,210,2.956,216,2.965,217,2.808,250,2.314,259,2.631,318,4.4,319,3.859,320,2.673,321,4.685,322,5.403,323,5.403,324,5.403,325,3.342,326,3.342,327,3.859,328,4.212,329,4.212,330,4.078,331,3.859,332,3.859]],["title/classes/CsdlIncludeAnnotations.html",[0,0.344,330,2.411]],["body/classes/CsdlIncludeAnnotations.html",[0,0.622,2,0.294,3,0.178,4,0.155,5,0.155,6,0.13,8,0.112,9,0.303,15,0.909,18,0.222,22,0.444,26,0.247,28,0.134,29,0.015,30,0.134,31,0.127,32,0.925,33,0.206,46,0.622,84,0.208,105,1.011,169,0.01,170,0.012,171,0.01,173,1.506,206,3.053,208,2.74,210,2.912,216,4.139,217,2.74,250,2.258,259,1.826,318,4.017,319,3.766,320,1.902,325,3.261,326,3.261,327,3.766,328,4.11,329,4.11,330,4.353,331,5.246,332,5.388,333,5.273,334,5.273,335,5.273,336,5.273,337,5.273]],["title/classes/CsdlKey.html",[0,0.344,255,2.139]],["body/classes/CsdlKey.html",[0,0.659,2,0.283,3,0.171,4,0.149,5,0.149,6,0.12,8,0.108,9,0.36,15,0.901,18,0.149,22,0.459,26,0.214,28,0.129,29,0.015,30,0.189,31,0.11,33,0.198,46,0.598,84,0.22,100,1.281,105,1.215,169,0.009,170,0.012,171,0.009,173,1.381,181,1.099,233,2.634,234,3.794,235,2.781,236,4.019,237,3.505,238,4.613,239,4.937,240,4.613,241,3.103,242,3.103,250,2.171,251,2.272,252,1.185,253,3.129,254,2.634,255,3.794,256,3.135,257,4.795,258,4.092,259,1.755,338,5.069,339,5.069,340,5.069]],["title/classes/CsdlNavigationProperty.html",[0,0.344,242,1.67]],["body/classes/CsdlNavigationProperty.html",[0,0.635,2,0.25,3,0.151,4,0.132,5,0.132,6,0.127,8,0.096,9,0.274,15,0.921,18,0.231,22,0.445,26,0.256,28,0.114,29,0.015,30,0.19,31,0.139,32,1.023,33,0.206,84,0.212,105,1.253,113,0.93,169,0.008,170,0.011,171,0.008,173,1.471,179,1.226,181,1.114,196,1.435,197,2.274,198,1.326,199,1.62,200,1.62,201,1.62,221,2.216,231,2.797,237,2.11,241,1.923,242,2.512,251,3.304,252,1.05,253,2.895,341,2.777,342,4.363,343,4.444,344,4.444,345,4.444,346,4.756,347,3.942,348,3.942,349,4.49,350,4.49,351,4.49,352,4.49,353,4.49,354,3.893,355,3.893,356,3.893,357,2.609,358,2.777]],["title/classes/CsdlNavigationPropertyBinding.html",[0,0.344,282,2.411]],["body/classes/CsdlNavigationPropertyBinding.html",[0,0.507,2,0.32,3,0.193,4,0.169,5,0.169,6,0.131,8,0.122,9,0.319,15,0.879,18,0.169,22,0.413,26,0.246,28,0.146,29,0.015,30,0.146,31,0.126,33,0.202,58,3.554,84,0.169,169,0.011,170,0.013,171,0.011,173,1.51,215,4.238,252,1.768,282,4.23,288,3.39,359,4.98,360,5.743,361,5.743,362,5.743,363,5.743]],["title/classes/CsdlOnDelete.html",[0,0.344,348,2.139]],["body/classes/CsdlOnDelete.html",[0,0.661,2,0.286,3,0.173,4,0.151,5,0.151,6,0.12,8,0.109,9,0.298,15,0.915,18,0.151,22,0.461,26,0.215,28,0.13,29,0.015,30,0.185,31,0.134,33,0.206,84,0.221,105,1.225,113,0.99,169,0.01,170,0.012,171,0.01,173,1.389,181,1.066,196,2.326,197,2.211,198,1.517,199,1.852,200,1.852,201,1.852,221,2.535,237,2.413,241,2.199,242,2.199,251,3.118,252,1.201,253,3.154,341,3.176,342,4.043,343,3.176,344,3.176,345,3.176,346,3.399,347,3.506,348,3.816,357,2.985,358,3.176,364,5.135,365,5.135,366,5.135]],["title/classes/CsdlParameter.html",[0,0.344,182,2.026]],["body/classes/CsdlParameter.html",[0,0.645,2,0.241,3,0.146,4,0.128,5,0.128,6,0.132,8,0.092,9,0.268,15,0.928,18,0.229,22,0.45,26,0.255,28,0.163,29,0.015,30,0.194,31,0.137,32,1.011,33,0.206,84,0.215,113,1.132,169,0.008,170,0.011,171,0.008,172,2.138,173,1.526,174,2.172,175,2.517,176,3.329,177,3.329,178,2.828,179,1.183,180,3.335,181,1.089,182,3.549,189,2.138,190,2.517,191,2.138,192,2.679,193,2.828,194,2.376,195,2.138,196,1.384,197,2.155,198,2.155,199,2.632,200,2.632,201,2.632,367,4.331,368,4.331,369,4.331,370,4.331,371,4.331,372,4.331,373,4.331,374,4.331]],["title/classes/CsdlProperty.html",[0,0.344,241,1.67]],["body/classes/CsdlProperty.html",[0,0.626,2,0.24,3,0.145,4,0.127,5,0.127,6,0.13,8,0.092,9,0.266,15,0.922,18,0.234,22,0.44,26,0.26,28,0.109,29,0.015,30,0.188,31,0.139,32,1.058,33,0.206,84,0.209,105,1.227,113,1.114,169,0.008,170,0.011,171,0.008,173,1.506,179,1.175,181,1.107,196,1.375,197,2.255,198,2.093,199,2.556,200,2.556,201,2.556,221,3.499,231,2.74,237,2.022,241,2.442,242,1.843,251,3.382,252,1.006,253,2.815,341,2.661,342,4.319,343,2.661,344,2.661,345,2.661,346,2.848,347,3.129,348,3.129,354,3.731,355,3.731,356,3.731,357,4.119,358,2.661,375,4.303,376,4.303,377,4.303,378,4.303,379,4.303,380,4.303,381,4.303]],["title/classes/CsdlPropertyRef.html",[0,0.344,258,2.139]],["body/classes/CsdlPropertyRef.html",[0,0.654,2,0.276,3,0.167,4,0.146,5,0.146,6,0.124,8,0.105,9,0.359,15,0.905,18,0.202,22,0.457,26,0.23,28,0.125,29,0.015,30,0.197,31,0.118,32,0.704,33,0.204,46,0.583,84,0.218,100,1.251,105,1.197,169,0.009,170,0.012,171,0.009,173,1.434,179,1.352,181,1.093,233,2.571,234,3.94,235,2.714,236,3.975,237,3.48,238,4.58,239,4.901,240,4.58,241,3.076,242,3.076,250,2.119,251,2.218,252,1.157,253,3.082,254,2.571,255,3.425,256,3.06,257,3.275,258,3.752,259,2.564,382,4.948,383,4.948,384,4.948]],["title/classes/CsdlReference.html",[0,0.344,326,2.411]],["body/classes/CsdlReference.html",[0,0.615,2,0.286,3,0.173,4,0.151,5,0.151,6,0.129,8,0.109,9,0.298,15,0.911,18,0.228,22,0.44,26,0.252,28,0.13,29,0.015,30,0.13,31,0.129,32,0.99,33,0.2,46,0.605,84,0.205,105,1.225,169,0.01,170,0.012,171,0.01,173,1.495,206,3.421,208,3.891,210,3.356,216,2.817,217,2.669,231,2.199,232,3.667,250,2.199,259,1.778,318,4.63,319,3.667,320,1.852,325,3.176,326,3.952,327,5.198,328,5.836,329,5.836,330,4.63,331,3.667,332,3.667,385,5.135,386,5.135,387,5.135,388,5.135,389,5.135]],["title/classes/CsdlReferentialConstraint.html",[0,0.344,347,2.139]],["body/classes/CsdlReferentialConstraint.html",[0,0.657,2,0.28,3,0.169,4,0.148,5,0.148,6,0.125,8,0.107,9,0.295,15,0.917,18,0.148,22,0.459,26,0.232,28,0.128,29,0.015,30,0.183,31,0.135,33,0.207,84,0.219,105,1.21,113,0.981,169,0.009,170,0.012,171,0.009,173,1.442,181,1.06,196,1.607,197,2.198,198,1.486,199,1.814,200,1.814,201,1.814,221,2.483,237,2.364,241,2.154,242,2.154,251,3.239,252,1.689,253,3.114,341,3.111,342,4.005,343,3.111,344,3.111,345,3.111,346,3.329,347,3.781,348,3.46,357,2.923,358,4.602,390,5.03,391,5.03,392,5.03,393,5.03]],["title/classes/CsdlReturnType.html",[0,0.344,180,2.026]],["body/classes/CsdlReturnType.html",[0,0.648,2,0.246,3,0.149,4,0.13,5,0.13,6,0.131,8,0.094,9,0.271,15,0.928,18,0.23,22,0.451,26,0.252,28,0.164,29,0.015,30,0.186,31,0.136,32,1.017,33,0.205,84,0.216,113,1.134,169,0.008,170,0.011,171,0.008,172,2.177,173,1.514,174,2.154,175,2.563,176,3.369,177,3.369,178,2.861,180,3.574,181,1.092,182,3.365,189,2.177,190,2.563,191,2.177,192,2.727,193,2.861,194,2.419,195,2.177,196,1.409,197,2.166,198,2.166,199,2.645,200,2.645,201,2.645,394,4.409,395,4.409,396,4.409,397,4.409,398,4.409,399,4.409,400,4.409,401,4.409]],["title/classes/CsdlSchema.html",[0,0.344,402,2.784]],["body/classes/CsdlSchema.html",[0,0.37,2,0.233,3,0.141,4,0.123,5,0.123,6,0.136,8,0.089,9,0.261,15,0.921,18,0.239,22,0.338,26,0.264,28,0.106,29,0.015,30,0.106,31,0.137,32,1.102,33,0.19,46,0.852,84,0.123,85,2.065,105,1.073,169,0.008,170,0.01,171,0.008,172,3.466,173,1.565,174,1.188,189,3.466,196,1.337,206,3.166,208,3.649,210,3.147,214,3.852,217,2.174,219,3.852,231,1.792,232,2.988,233,3.649,234,2.295,250,3.094,254,3.649,259,2.431,260,4.647,261,1.875,297,4.342,320,2.43,321,3.628,325,2.587,402,3.997,403,3.628,404,6.088,405,7.021,406,7.021,407,6.088,408,7.021,409,7.021,410,4.081,411,7.021,412,7.021,413,4.647,414,4.184,415,4.184,416,4.184,417,4.184,418,4.184,419,4.184,420,4.184,421,4.184,422,4.184,423,4.184,424,4.184,425,4.184,426,3.628,427,2.065]],["title/classes/CsdlSingleton.html",[0,0.344,269,2.581]],["body/classes/CsdlSingleton.html",[0,0.492,2,0.311,3,0.188,4,0.164,5,0.164,6,0.132,8,0.119,9,0.314,15,0.896,18,0.213,22,0.406,26,0.252,28,0.141,29,0.015,30,0.194,31,0.138,32,0.793,33,0.201,46,0.657,84,0.164,169,0.01,170,0.013,171,0.01,173,1.53,179,1.522,250,2.386,252,1.303,269,4.446,282,4.738,288,2.498,289,4.344,428,4.831,429,7.662,430,5.572,431,5.572,432,5.572,433,5.572]],["title/classes/CsdlStructuralProperty.html",[0,0.344,342,2.266]],["body/classes/CsdlStructuralProperty.html",[0,0.653,2,0.274,3,0.165,4,0.145,5,0.145,6,0.128,8,0.105,9,0.29,15,0.918,18,0.201,22,0.456,26,0.241,28,0.125,29,0.015,30,0.194,31,0.138,32,0.699,33,0.206,84,0.218,105,1.191,113,0.97,169,0.009,170,0.012,171,0.009,173,1.475,179,1.341,181,1.104,196,1.569,197,2.312,198,1.45,199,1.771,200,1.771,201,1.771,221,2.424,237,2.308,241,2.103,242,2.103,251,3.312,252,1.148,253,3.067,341,3.037,342,4.163,343,3.037,344,3.037,345,3.037,346,3.25,347,3.409,348,3.409,357,2.854,358,3.037,434,4.911,435,4.911,436,4.911,437,4.911]],["title/classes/CsdlStructuredType.html",[0,0.344,236,2.266]],["body/classes/CsdlStructuredType.html",[0,0.636,2,0.252,3,0.152,4,0.133,5,0.133,6,0.132,8,0.096,9,0.366,15,0.913,18,0.231,22,0.446,26,0.253,28,0.115,29,0.015,30,0.193,31,0.13,32,1.025,33,0.202,46,0.532,84,0.212,100,1.141,105,1.129,169,0.008,170,0.011,171,0.008,173,1.522,179,1.234,181,1.128,233,2.347,234,4.182,235,2.477,236,4.034,237,3.622,238,4.767,239,5.102,240,4.767,241,3.22,242,3.22,250,1.934,251,2.024,252,1.056,253,2.906,254,2.347,255,3.23,256,2.793,257,2.989,258,3.23,259,1.564,294,3.915,302,3.915,304,3.915,305,3.915,438,4.515,439,4.515,440,4.515]],["title/classes/CsdlTerm.html",[0,0.344,219,2.139]],["body/classes/CsdlTerm.html",[0,0.608,2,0.246,3,0.149,4,0.13,5,0.13,6,0.136,8,0.094,9,0.271,15,0.923,18,0.237,22,0.416,26,0.263,28,0.112,29,0.015,30,0.181,31,0.138,32,1.08,33,0.208,84,0.203,105,0.847,113,1.119,169,0.008,170,0.011,171,0.008,173,1.569,179,1.207,181,0.98,197,2.111,198,2.111,199,2.579,200,2.579,201,2.579,206,2.728,207,2.925,208,3.016,210,2.906,213,2.925,214,2.424,215,2.424,216,3.184,217,2.297,218,2.925,219,3.184,220,4.732,221,3.529,222,4.732,441,4.419,442,4.419,443,4.419,444,4.419,445,4.419,446,4.419,447,4.419,448,4.419,449,4.419,450,4.419,451,4.419]],["title/classes/CsdlTypeDefinition.html",[0,0.344,413,2.581]],["body/classes/CsdlTypeDefinition.html",[0,0.423,2,0.267,3,0.161,4,0.141,5,0.141,6,0.135,8,0.102,9,0.285,15,0.917,18,0.235,22,0.369,26,0.262,28,0.121,29,0.015,30,0.186,31,0.14,32,1.067,33,0.202,46,0.564,84,0.141,105,1.172,113,1.132,169,0.009,170,0.011,171,0.009,173,1.555,179,1.307,181,1.01,198,2.165,199,2.644,200,2.644,201,2.644,206,3.334,208,3.81,210,3.286,217,2.487,231,2.049,232,3.417,250,2.049,325,2.959,357,4.26,413,4.045,452,4.149,453,7.33,454,4.785,455,4.785,456,4.785,457,4.785,458,4.785,459,4.785,460,4.785,461,4.785]],["title/classes/Field.html",[0,0.344,462,1.466]],["body/classes/Field.html",[0,0.372,2,0.156,3,0.094,4,0.083,5,0.083,6,0.097,8,0.108,9,0.197,10,3.521,11,5.878,15,0.757,18,0.083,22,0.169,26,0.17,28,0.071,29,0.016,30,0.161,31,0.114,33,0.171,35,0.516,46,0.863,54,0.631,55,2.186,58,1.318,84,0.083,85,2.079,99,3.085,100,0.709,105,0.538,106,3.092,124,1.742,169,0.005,170,0.008,171,0.005,172,1.384,174,1.436,176,1.63,177,1.63,178,1.384,179,0.766,180,1.457,182,1.457,189,1.384,190,1.63,191,1.384,193,2.079,194,1.539,195,1.384,196,1.616,197,0.828,198,0.828,199,1.012,200,1.012,201,1.012,210,1.257,213,1.856,214,1.539,215,1.539,216,1.539,218,2.788,219,1.539,220,1.856,221,1.384,222,1.856,233,1.457,234,1.539,237,1.318,238,1.734,240,1.734,241,1.201,242,1.201,251,1.257,252,1.315,254,1.457,255,1.539,256,1.734,258,1.539,259,0.971,260,1.856,261,1.888,268,1.856,269,1.856,277,1.457,278,2.788,280,3.652,281,2.431,282,1.734,288,1.257,289,2.186,293,1.856,297,1.734,299,2.186,300,2.186,318,1.734,320,1.012,325,2.605,326,2.605,327,2.003,330,1.734,331,2.003,332,2.003,343,1.734,344,1.734,345,1.734,347,1.539,348,1.539,357,1.63,358,1.734,402,3.008,407,2.431,413,1.856,426,2.431,427,1.384,462,1.902,463,2.186,464,6.101,465,2.804,466,4.212,467,7.239,468,1.804,469,2.003,470,2.431,471,3.652,472,2.431,473,2.431,474,2.804,475,2.804,476,2.804,477,2.804,478,2.804,479,2.804,480,2.804,481,2.804,482,2.804,483,2.804,484,2.804,485,2.804,486,1.318,487,2.804,488,2.804,489,2.804,490,2.804,491,2.804,492,2.804,493,2.804,494,2.804,495,2.804,496,2.804,497,2.804,498,2.804,499,2.804,500,2.804,501,1.856,502,2.804,503,2.804,504,2.804,505,2.804,506,2.804,507,2.804,508,2.804,509,2.804,510,2.804,511,2.804,512,2.804,513,2.804,514,2.804,515,2.804,516,2.804,517,2.804,518,2.804,519,2.804,520,3.652,521,2.804,522,5.488,523,2.804,524,2.804,525,2.804,526,2.804,527,2.804,528,2.804,529,2.804,530,2.804,531,2.804,532,2.804,533,2.804,534,2.804,535,2.804,536,2.804,537,2.804,538,2.804,539,2.804,540,2.804,541,2.804,542,2.804,543,2.804,544,2.804,545,2.804,546,2.804,547,2.804,548,2.804,549,2.804,550,2.804,551,2.804,552,2.804,553,2.804,554,2.804,555,2.804,556,2.804,557,2.804,558,2.804,559,2.804,560,2.804,561,2.804,562,2.804,563,2.431,564,1.457,565,2.804,566,2.804,567,1.149,568,4.212,569,4.385,570,2.804,571,2.804,572,2.804,573,2.804,574,2.804,575,2.804,576,5.622,577,4.212,578,2.804,579,2.804,580,2.804,581,2.804,582,2.804,583,7.32,584,2.804,585,4.212,586,2.804,587,4.212,588,2.804,589,1.63,590,2.804,591,2.804,592,2.804,593,2.804,594,2.804,595,2.804,596,2.804,597,2.804,598,2.804,599,2.804,600,2.804,601,2.804,602,2.804,603,2.804,604,3.652,605,2.776,606,2.804,607,1.63,608,3.128,609,2.605,610,2.804,611,2.431,612,2.804,613,2.804,614,5.058,615,4.212,616,4.212,617,2.804,618,2.804,619,5.058,620,2.804,621,2.431,622,2.804,623,2.804,624,2.804,625,2.804,626,2.804,627,2.804,628,2.804,629,1.149]],["title/classes/ODataAnnotations.html",[0,0.344,630,2.026]],["body/classes/ODataAnnotations.html",[0,0.544,2,0.189,3,0.114,4,0.1,5,0.1,6,0.13,8,0.103,9,0.304,10,2.898,16,2.242,18,0.181,20,1.087,22,0.205,26,0.251,28,0.156,29,0.016,30,0.184,31,0.132,33,0.205,35,1.039,45,1.33,46,0.399,54,0.762,84,0.181,98,1.746,100,1.222,105,1.082,106,2.726,113,0.876,120,2.273,124,1.601,169,0.006,170,0.009,171,0.006,174,1.374,252,1.131,277,2.932,410,3.279,629,1.387,630,3.767,631,2.242,632,4.028,633,4.028,634,4.028,635,3.439,636,3.201,637,2.513,638,4.073,639,3.387,640,1.981,641,3.387,642,3.387,643,3.387,644,3.387,645,3.387,646,4.647,647,3.387,648,2.242,649,2.991,650,3.387,651,3.454,652,3.387,653,3.387,654,3.387,655,3.387,656,3.387,657,3.387,658,3.387,659,2.811,660,2.991,661,2.991,662,3.489,663,2.991,664,2.991,665,2.991,666,2.991,667,2.991,668,2.991,669,2.991,670,2.991,671,3.489,672,2.991,673,2.095,674,2.095,675,1.858,676,2.419,677,4.394,678,5.521,679,2.419,680,2.419,681,2.242,682,2.419,683,2.419,684,2.419,685,2.419,686,2.242,687,2.419,688,4.028,689,3.454,690,3.454,691,2.419,692,2.168,693,1.518,694,2.419,695,3.454,696,4.028,697,2.419,698,2.419,699,2.242,700,2.273,701,1.858,702,2.419,703,2.419,704,2.419,705,2.419,706,2.419,707,2.991,708,2.419,709,2.419,710,3.454,711,2.653,712,2.419,713,1.968,714,2.419,715,1.968,716,2.419,717,2.419,718,2.419,719,2.419,720,2.419,721,3.454,722,3.454,723,2.419,724,2.419,725,2.419,726,2.419,727,2.419,728,2.419,729,2.419,730,2.419,731,2.419,732,2.653,733,2.419,734,1.592,735,2.419,736,2.419,737,2.419,738,2.419,739,2.419,740,1.858,741,4.479,742,4.028,743,2.419,744,3.454,745,1.858,746,2.419,747,1.858,748,2.419,749,2.419,750,2.419]],["title/classes/ODataBaseService.html",[0,0.344,751,2.581]],["body/classes/ODataBaseService.html",[0,0.437,2,0.275,3,0.166,4,0.146,5,0.146,6,0.134,8,0.105,9,0.291,10,3.356,15,0.878,18,0.184,20,1.402,22,0.298,26,0.259,28,0.158,29,0.016,30,0.158,31,0.135,32,0.704,33,0.192,34,2.8,35,1.258,45,1.478,46,0.806,52,3.731,53,4.227,54,1.111,58,3.212,84,0.146,98,1.478,100,1.249,169,0.009,170,0.012,171,0.009,261,3.318,648,3.271,675,2.711,751,4.129,752,4.285,753,3.218,754,3.218,755,3.529,756,6.237,757,4.941,758,4.941,759,4.941,760,4.941,761,4.524,762,5.328,763,4.752,764,4.941,765,4.227,766,4.129,767,4.285,768,4.862,769,4.862,770,4.941,771,4.941,772,2.711,773,2.568,774,4.941]],["title/classes/ODataBatch.html",[0,0.344,78,2.784]],["body/classes/ODataBatch.html",[0,0.29,2,0.183,3,0.111,4,0.097,5,0.097,6,0.134,8,0.15,9,0.221,10,3.368,11,5.552,13,4.806,18,0.197,20,1.063,22,0.198,26,0.259,28,0.17,29,0.016,30,0.17,31,0.133,33,0.206,34,2.743,35,1.233,45,1.492,46,0.557,54,0.738,55,2.558,65,3.958,67,3.958,70,3.958,71,3.958,76,3.958,78,4.331,82,5.259,83,1.543,84,0.097,92,4.806,98,1.492,99,3.596,106,2.983,113,1.006,122,1.703,124,1.063,136,2.846,153,2.846,168,1.778,169,0.006,170,0.009,171,0.006,609,4.732,629,1.345,713,2.748,775,2.846,776,7.864,777,5.543,778,4.729,779,4.729,780,4.729,781,4.729,782,4.729,783,6.065,784,6.065,785,4.729,786,4.729,787,3.282,788,5.259,789,3.282,790,3.282,791,4.1,792,3.282,793,3.282,794,4.1,795,3.282,796,4.1,797,3.282,798,4.729,799,7.063,800,5.543,801,3.282,802,4.729,803,4.729,804,3.282,805,4.729,806,4.729,807,3.282,808,4.729,809,4.729,810,3.282,811,6.065,812,4.729,813,3.282,814,2.846,815,3.282,816,3.282,817,3.282,818,4.729,819,3.282,820,3.282,821,3.282,822,4.729,823,3.282,824,4.729,825,3.282,826,3.282,827,3.282,828,3.282,829,5.543,830,3.282,831,5.543,832,5.543,833,3.282,834,4.729,835,3.282,836,3.282,837,6.065,838,3.282,839,3.282,840,5.259,841,3.282,842,3.282,843,3.282,844,3.282,845,3.282,846,2.558,847,3.282,848,4.729,849,3.282,850,3.282,851,4.729,852,3.282,853,3.282,854,3.282,855,3.282,856,3.282,857,3.282,858,3.282,859,3.282,860,3.282,861,3.282,862,3.282]],["title/classes/ODataCollection.html",[0,0.344,863,1.67]],["body/classes/ODataCollection.html",[0,0.23,2,0.145,3,0.088,4,0.077,5,0.077,6,0.133,8,0.056,9,0.186,15,0.542,18,0.195,19,3.034,20,0.896,22,0.157,25,5.015,26,0.258,28,0.167,29,0.016,30,0.167,31,0.125,32,0.771,33,0.167,34,1.068,35,1.133,45,1.54,46,0.688,50,3.301,51,1.169,61,1.563,62,1.726,63,1.862,77,5.553,80,3.202,84,0.077,98,1.711,106,1.819,109,2.26,113,0.94,120,1.873,122,1.486,124,1.485,169,0.005,170,0.007,171,0.005,174,0.74,178,2.674,181,0.567,196,0.833,215,2.972,259,0.903,486,1.873,605,3.161,607,2.316,609,4.586,629,1.068,630,3.328,635,2.674,637,2.071,640,1.982,649,1.612,732,2.186,734,2.743,740,2.186,745,2.186,747,2.186,754,1.786,761,4.371,765,3.35,766,1.726,768,2.032,769,2.032,863,2.32,864,2.26,865,2.638,866,4.838,867,4.195,868,4.838,869,4.195,870,4.838,871,2.514,872,3.107,873,3.107,874,4.697,875,3.455,876,3.202,877,5.417,878,4.223,879,4.838,880,4.195,881,4.195,882,3.985,883,2.607,884,3.586,885,2.607,886,5.553,887,2.607,888,2.607,889,2.607,890,3.985,891,2.607,892,2.169,893,2.607,894,3.455,895,2.607,896,2.607,897,2.607,898,3.455,899,2.607,900,3.985,901,2.607,902,3.985,903,2.607,904,3.985,905,4.991,906,2.607,907,3.985,908,2.607,909,2.607,910,2.607,911,2.607,912,2.607,913,2.607,914,2.607,915,2.607,916,2.26,917,2.607,918,2.26,919,2.607,920,3.985,921,4.395,922,3.455,923,2.846,924,2.812,925,2.654,926,2.654,927,2.992,928,3.202,929,1.116,930,2.26,931,2.26,932,4.838,933,3.985,934,3.985,935,3.985,936,3.985,937,2.26,938,4.838,939,2.26,940,4.235,941,2.26,942,2.607,943,2.26,944,6.476,945,3.455,946,3.455,947,5.061,948,2.26,949,4.195,950,2.607,951,2.607,952,2.607,953,2.607,954,3.455,955,3.985,956,4.838,957,3.985,958,5.836,959,3.985,960,3.985,961,3.985,962,3.985,963,3.985,964,2.607,965,2.607,966,2.607,967,3.455,968,2.607,969,2.607,970,2.607,971,2.607,972,2.607,973,3.985,974,2.607,975,2.607,976,2.607,977,2.607,978,3.985,979,6.476,980,2.26,981,3.455,982,3.455,983,3.455,984,3.455,985,2.607,986,3.985,987,2.607,988,3.985,989,2.607,990,3.985,991,2.607,992,2.607,993,2.607,994,2.071,995,3.985,996,2.607,997,3.985,998,2.607,999,2.607,1000,2.607,1001,2.26,1002,3.455,1003,2.26,1004,2.26,1005,2.26,1006,2.607,1007,2.607,1008,2.607,1009,2.607,1010,2.607,1011,2.607,1012,2.26,1013,2.26,1014,2.607,1015,2.607,1016,1.612,1017,2.607,1018,2.607,1019,2.607,1020,2.607,1021,2.26,1022,2.26,1023,2.607,1024,2.607,1025,1.612,1026,2.26]],["title/classes/ODataConfig.html",[0,0.344,1027,2.026]],["body/classes/ODataConfig.html",[0,0.521,2,0.131,3,0.079,4,0.069,5,0.069,6,0.132,8,0.05,9,0.172,15,0.879,18,0.226,20,0.827,22,0.142,26,0.257,28,0.189,29,0.016,30,0.197,31,0.139,33,0.207,35,0.433,45,1.419,46,0.727,50,1.105,51,1.054,54,0.827,61,0.922,83,1.105,84,0.174,98,1.542,106,1.704,113,0.524,122,0.722,124,1.475,131,2.487,137,2.41,143,2.487,168,0.884,169,0.004,170,0.007,171,0.004,181,0.974,298,1.007,320,2.303,427,2.238,462,0.884,468,3.054,486,2.13,564,2.356,567,2.418,589,2.138,605,1.161,640,1.507,700,2.41,753,2.862,754,1.054,772,2.019,863,2.383,871,1.222,892,2.298,929,2.383,1027,1.912,1028,1.367,1029,2.634,1030,2.634,1031,2.803,1032,2.813,1033,3.084,1034,3.19,1035,3.679,1036,2.531,1037,3.19,1038,3.679,1039,3.19,1040,3.679,1041,3.19,1042,3.679,1043,3.151,1044,3.679,1045,3.19,1046,3.679,1047,3.045,1048,2.011,1049,3.679,1050,2.138,1051,2.019,1052,2.138,1053,2.351,1054,2.032,1055,2.351,1056,2.351,1057,2.351,1058,2.351,1059,2.351,1060,2.42,1061,2.351,1062,2.351,1063,2.351,1064,2.138,1065,2.351,1066,2.275,1067,2.351,1068,2.351,1069,2.138,1070,2.351,1071,2.747,1072,3.053,1073,2.275,1074,2.351,1075,2.138,1076,2.351,1077,3.053,1078,2.275,1079,2.351,1080,2.138,1081,2.351,1082,2.275,1083,2.351,1084,2.275,1085,2.351,1086,2.942,1087,2.275,1088,2.351,1089,2.138,1090,2.351,1091,3.053,1092,2.275,1093,2.351,1094,2.032,1095,1.576,1096,1.649,1097,1.007,1098,1.649,1099,2.032,1100,2.019,1101,1.29,1102,1.105,1103,2.011,1104,2.138,1105,2.275,1106,1.454,1107,1.454,1108,1.454,1109,1.367,1110,1.367,1111,1.29,1112,1.454,1113,1.454,1114,2.747,1115,2.747,1116,1.454,1117,1.454,1118,1.454,1119,1.454,1120,1.454,1121,1.454,1122,1.454,1123,1.454,1124,1.729,1125,1.454,1126,1.454,1127,1.816,1128,1.454,1129,1.454,1130,1.454,1131,1.454,1132,1.454,1133,1.454,1134,1.454,1135,1.454,1136,1.454,1137,2.98,1138,2.138,1139,1.454,1140,1.367,1141,2.803,1142,1.454,1143,2.275,1144,1.454,1145,1.454,1146,1.454,1147,3.317,1148,2.803,1149,3.442,1150,2.803,1151,2.803,1152,3.171,1153,2.803,1154,1.454,1155,2.803,1156,2.803,1157,1.454,1158,1.454,1159,2.275,1160,1.454,1161,1.454,1162,1.29,1163,1.007,1164,1.367,1165,3.171,1166,1.454,1167,2.275,1168,1.454,1169,2.803,1170,1.454,1171,1.454,1172,1.454,1173,1.454,1174,1.454,1175,1.454,1176,1.454,1177,2.019,1178,1.454,1179,1.454,1180,2.747,1181,2.803,1182,2.803,1183,1.161,1184,1.454,1185,2.531,1186,2.531,1187,2.238,1188,1.454,1189,2.275,1190,2.138,1191,2.803,1192,2.803,1193,1.454,1194,1.161,1195,1.454,1196,1.454,1197,2.275,1198,2.275,1199,2.138,1200,2.196,1201,1.454,1202,1.454,1203,1.367,1204,1.454,1205,1.454,1206,1.454,1207,1.29,1208,2.275,1209,1.454,1210,1.454]],["title/classes/ODataContainer.html",[0,0.344,1207,2.139]],["body/classes/ODataContainer.html",[0,0.562,2,0.158,3,0.096,4,0.084,5,0.084,6,0.114,8,0.06,9,0.198,15,0.803,18,0.167,20,0.955,22,0.171,26,0.214,28,0.129,29,0.016,30,0.188,31,0.136,33,0.206,35,0.522,45,0.613,46,0.777,50,1.333,51,1.272,54,0.955,61,1.113,83,1.333,84,0.187,98,1.601,106,1.067,113,0.605,122,0.871,124,1.558,131,1.556,137,1.996,143,1.556,168,1.067,169,0.005,170,0.008,171,0.005,181,0.987,298,1.215,320,2.546,427,2.99,462,1.067,468,3.172,486,2.846,564,1.474,567,2.604,589,2.469,605,1.4,640,1.74,700,2.658,753,3.038,754,1.272,772,2.331,863,2.593,871,1.474,892,2.535,929,2.593,1027,1.474,1028,1.649,1029,1.649,1030,1.649,1031,1.754,1032,2.331,1033,3.097,1036,2.514,1043,3.138,1047,3.253,1048,1.667,1050,1.649,1051,1.556,1052,1.649,1054,1.904,1060,2.585,1064,1.649,1066,1.754,1069,1.649,1072,2.794,1073,1.754,1075,1.649,1077,2.794,1078,1.754,1080,1.649,1082,1.754,1084,1.754,1086,3.038,1087,1.754,1089,1.649,1091,2.794,1092,1.754,1094,2.283,1095,1.819,1096,1.904,1097,1.215,1098,1.904,1099,2.283,1100,2.331,1101,1.556,1102,1.333,1103,2.218,1104,2.469,1105,2.627,1106,1.754,1107,1.754,1108,1.754,1109,1.649,1110,1.649,1111,1.556,1112,1.754,1113,1.754,1114,2.99,1115,2.99,1116,1.754,1117,1.754,1118,1.754,1119,1.754,1120,1.754,1121,1.754,1122,1.754,1123,1.754,1124,1.996,1125,1.754,1126,1.754,1127,2.097,1128,1.754,1129,1.754,1130,1.754,1131,1.754,1132,1.754,1133,1.754,1134,1.754,1135,1.754,1136,1.754,1137,3.287,1138,2.469,1139,1.754,1140,1.649,1141,3.149,1142,1.754,1143,2.627,1144,1.754,1145,1.754,1146,1.754,1147,3.522,1148,3.149,1149,3.745,1150,3.149,1151,3.149,1152,3.497,1153,3.149,1154,1.754,1155,3.149,1156,3.149,1157,1.754,1158,1.754,1159,2.627,1160,1.754,1161,1.754,1162,1.556,1163,1.215,1164,1.649,1165,3.497,1166,1.754,1167,2.627,1168,1.754,1169,3.149,1170,1.754,1171,1.754,1172,1.754,1173,1.754,1174,1.754,1175,1.754,1176,1.754,1177,3.102,1178,1.754,1179,1.754,1180,3.138,1181,3.149,1182,3.149,1183,1.4,1184,1.754,1185,2.792,1186,2.792,1187,2.514,1188,1.754,1189,2.627,1190,2.469,1191,3.149,1192,3.149,1193,1.754,1194,1.4,1195,1.754,1196,1.754,1197,2.627,1198,2.627,1199,2.469,1200,2.422,1201,1.754,1202,1.754,1203,1.649,1204,1.754,1205,1.754,1206,1.754,1207,2.331,1208,2.627,1209,1.754,1210,1.754,1211,4.248,1212,2.837,1213,2.837,1214,2.837,1215,2.837,1216,1.333]],["title/classes/ODataEntitiesAnnotations.html",[0,0.344,732,2.139]],["body/classes/ODataEntitiesAnnotations.html",[0,0.534,2,0.182,3,0.11,4,0.096,5,0.096,6,0.126,8,0.1,9,0.258,10,3.02,16,2.16,18,0.178,20,1.059,26,0.259,28,0.153,29,0.016,30,0.182,31,0.129,33,0.205,35,0.867,45,1.445,46,0.385,54,0.734,84,0.178,98,1.741,100,1.19,105,1.16,106,2.702,113,0.861,120,2.213,124,1.586,169,0.006,170,0.009,171,0.006,174,1.337,231,2.95,252,1.101,277,2.871,410,1.896,629,1.337,630,3.996,631,2.16,632,3.945,633,3.945,634,3.945,635,3.601,636,4.004,637,2.447,638,3.117,646,4.772,648,3.117,649,2.912,651,3.363,659,2.737,660,2.912,661,2.912,662,3.417,663,2.912,664,2.912,665,2.912,666,2.912,667,2.912,668,2.912,669,2.912,670,2.912,671,3.417,672,2.912,673,2.018,674,2.018,675,1.79,676,2.33,677,4.32,678,5.492,679,2.33,680,2.33,681,2.16,682,2.33,683,2.33,684,2.33,685,2.33,686,2.16,687,2.33,688,3.945,689,3.363,690,3.363,691,2.33,692,2.111,693,1.463,694,2.33,695,3.363,696,3.945,697,2.33,698,2.33,699,2.16,700,2.213,701,1.79,702,2.33,703,2.33,704,2.33,705,2.33,706,2.33,707,2.912,708,2.33,709,2.33,710,3.363,711,2.583,712,2.33,713,1.896,714,2.33,715,1.896,716,2.33,717,2.33,718,2.33,719,2.33,720,2.33,721,4.32,722,3.363,723,2.33,724,2.33,725,2.33,726,2.33,727,2.33,728,2.33,729,2.33,730,2.33,731,2.33,732,3.519,733,2.33,734,2.596,735,2.33,736,3.945,737,2.33,738,3.945,739,2.33,740,3.031,741,4.423,742,3.945,743,2.33,744,3.363,745,3.031,746,2.33,747,3.031,748,2.33,749,2.33,750,2.33,1217,2.544,1218,2.544,1219,2.544,1220,3.263,1221,3.263,1222,2.544,1223,2.544,1224,2.544,1225,2.544,1226,2.829,1227,3.263,1228,3.263,1229,3.263,1230,3.263,1231,3.263,1232,3.263,1233,3.263,1234,3.263,1235,3.263,1236,3.263,1237,3.263,1238,3.263,1239,3.263]],["title/classes/ODataEntityAnnotations.html",[0,0.344,711,2.139]],["body/classes/ODataEntityAnnotations.html",[0,0.531,2,0.179,3,0.108,4,0.095,5,0.095,6,0.13,8,0.099,9,0.256,10,3.008,16,2.128,18,0.177,20,1.047,26,0.262,28,0.152,29,0.016,30,0.182,31,0.131,33,0.204,35,0.858,45,1.437,46,0.379,54,0.723,84,0.177,98,1.739,100,1.177,105,1.152,106,2.692,113,0.855,120,2.189,124,1.579,169,0.006,170,0.009,171,0.006,174,1.323,231,2.937,252,1.089,277,2.847,410,1.869,629,1.317,630,3.988,631,2.128,632,3.912,633,3.912,634,3.912,635,3.589,636,3.976,637,2.421,638,3.084,646,4.748,648,3.084,649,2.881,651,3.327,659,2.708,660,2.881,661,2.881,662,3.388,663,2.881,664,2.881,665,2.881,666,2.881,667,2.881,668,2.881,669,2.881,670,2.881,671,3.388,672,2.881,673,1.988,674,1.988,675,1.764,676,2.296,677,4.29,678,5.48,679,2.296,680,2.296,681,2.128,682,2.296,683,2.296,684,2.296,685,2.296,686,2.128,687,2.296,688,3.912,689,3.327,690,3.327,691,2.296,692,2.088,693,1.441,694,2.296,695,3.327,696,3.912,697,2.296,698,2.296,699,2.128,700,2.189,701,1.764,702,2.296,703,2.296,704,2.296,705,2.296,706,2.296,707,2.881,708,2.296,709,2.296,710,3.327,711,3.498,712,2.296,713,3.184,714,2.296,715,3.184,716,2.296,717,3.912,718,2.296,719,3.912,720,2.296,721,4.29,722,3.327,723,3.912,724,2.296,725,3.912,726,2.296,727,3.912,728,2.296,729,3.912,730,2.296,731,2.296,732,2.556,733,2.296,734,1.511,735,2.296,736,2.296,737,2.296,738,2.296,739,2.296,740,1.764,741,4.401,742,3.912,743,2.296,744,3.327,745,1.764,746,2.296,747,1.764,748,2.296,749,2.296,750,2.296,1217,2.506,1218,2.506,1219,2.506,1222,2.506,1223,2.506,1224,2.506,1225,2.506,1226,2.788,1240,3.215,1241,3.215,1242,2.506,1243,3.215,1244,3.215,1245,3.215,1246,3.215,1247,3.215,1248,3.215,1249,3.215,1250,3.215,1251,3.215,1252,3.215,1253,3.215,1254,3.215,1255,3.215,1256,3.215,1257,3.215,1258,3.215,1259,3.215,1260,3.215]],["title/classes/ODataEntityConfig.html",[0,0.344,1072,2.139]],["body/classes/ODataEntityConfig.html",[0,0.555,2,0.153,3,0.092,4,0.081,5,0.081,6,0.121,8,0.058,9,0.193,15,0.797,18,0.202,20,0.931,22,0.166,26,0.231,28,0.141,29,0.016,30,0.188,31,0.138,33,0.205,34,1.124,35,0.763,45,0.896,46,0.768,50,1.289,51,1.23,54,0.931,61,1.076,83,1.289,84,0.185,98,1.591,106,1.032,113,0.59,122,0.843,124,1.544,131,1.505,137,1.947,143,1.505,168,1.032,169,0.005,170,0.008,171,0.005,181,0.978,298,1.175,320,2.524,427,2.464,462,1.032,468,3.152,486,2.806,564,1.426,567,2.748,589,2.408,605,1.354,640,2.571,700,2.613,753,3.008,754,1.23,772,2.273,863,2.556,871,1.426,892,2.814,929,2.556,1027,1.426,1028,1.595,1029,1.595,1030,1.595,1031,1.697,1032,2.273,1033,3.063,1036,2.464,1043,3.099,1047,3.217,1048,1.625,1050,1.595,1051,1.505,1052,1.595,1054,1.857,1060,2.462,1064,1.595,1066,1.697,1069,1.595,1072,3.051,1073,1.697,1075,1.595,1077,2.738,1078,1.697,1080,1.595,1082,1.697,1084,1.697,1086,3.008,1087,1.697,1089,1.595,1091,2.738,1092,1.697,1094,2.493,1095,2.138,1096,1.857,1097,1.175,1098,2.493,1099,2.238,1100,2.273,1101,1.505,1102,1.289,1103,2.462,1104,2.408,1105,2.562,1106,1.697,1107,1.697,1108,1.697,1109,1.595,1110,1.595,1111,1.505,1112,1.697,1113,1.697,1114,2.947,1115,2.947,1116,1.697,1117,1.697,1118,1.697,1119,1.697,1120,1.697,1121,1.697,1122,1.697,1123,1.697,1124,1.947,1125,1.697,1126,1.697,1127,2.045,1128,1.697,1129,1.697,1130,1.697,1131,1.697,1132,1.697,1133,1.697,1134,1.697,1135,1.697,1136,1.697,1137,3.232,1138,2.408,1139,1.697,1140,1.595,1141,3.087,1142,1.697,1143,2.562,1144,1.697,1145,1.697,1146,1.697,1147,3.487,1148,3.087,1149,3.692,1150,3.087,1151,3.087,1152,3.439,1153,3.087,1154,1.697,1155,3.087,1156,3.087,1157,1.697,1158,1.697,1159,2.562,1160,1.697,1161,1.697,1162,1.505,1163,1.175,1164,1.595,1165,3.439,1166,1.697,1167,2.562,1168,1.697,1169,3.087,1170,1.697,1171,1.697,1172,1.697,1173,1.697,1174,1.697,1175,1.697,1176,1.697,1177,2.273,1178,1.697,1179,1.697,1180,3.099,1181,3.087,1182,3.087,1183,1.354,1184,1.697,1185,2.745,1186,2.745,1187,2.464,1188,1.697,1189,2.562,1190,2.408,1191,3.087,1192,3.087,1193,1.697,1194,1.354,1195,1.697,1196,2.562,1197,3.087,1198,3.087,1199,3.232,1200,2.688,1201,1.697,1202,1.697,1203,1.595,1204,1.697,1205,1.697,1206,1.697,1207,1.505,1208,2.562,1209,1.697,1210,1.697,1216,1.289,1261,4.143,1262,2.744,1263,2.744,1264,2.744,1265,2.744,1266,2.744,1267,2.744,1268,2.744,1269,1.816]],["title/classes/ODataEntityParser.html",[0,0.344,1094,1.748]],["body/classes/ODataEntityParser.html",[0,0.433,2,0.148,3,0.09,4,0.079,5,0.079,6,0.128,8,0.057,9,0.29,18,0.19,20,0.911,22,0.161,26,0.247,28,0.164,29,0.016,30,0.191,31,0.137,33,0.202,34,1.66,35,1.38,45,1.437,46,0.478,54,0.911,84,0.174,98,1.691,99,1.252,100,1.384,105,0.511,113,0.97,120,2.574,122,1.244,124,1.325,168,1.002,169,0.005,170,0.008,171,0.005,179,0.728,181,1.005,197,0.787,198,0.787,252,1.451,288,1.194,298,1.141,320,1.976,462,2.612,468,2.346,567,2.414,607,2.354,629,1.091,640,1.66,692,2.455,693,2.455,701,1.461,753,1.816,773,2.548,865,3.626,940,2.849,994,1.384,1033,2.769,1036,2,1043,2.704,1047,2,1048,1.045,1054,2.197,1060,1.045,1086,3.053,1094,2.892,1095,2.099,1096,1.816,1097,1.735,1098,2.455,1099,1.816,1102,1.252,1103,1.045,1114,3.185,1115,1.315,1124,1.252,1127,2,1163,2.099,1180,2.909,1183,1.315,1185,2.704,1186,2,1187,3.362,1194,1.315,1200,2.099,1216,1.252,1270,1.763,1271,3.501,1272,3.912,1273,4.432,1274,4.051,1275,2.222,1276,2.893,1277,4.051,1278,4.051,1279,2.664,1280,2.664,1281,2.664,1282,2.664,1283,2.664,1284,2.664,1285,2.664,1286,2.893,1287,2.664,1288,3.912,1289,2.893,1290,2.664,1291,2.31,1292,2.893,1293,2.664,1294,2.893,1295,3.387,1296,2.664,1297,3.626,1298,2.893,1299,2.893,1300,2.893,1301,2.664,1302,3.387,1303,3.626,1304,3.912,1305,3.912,1306,2.893,1307,2.893,1308,3.626,1309,2.893,1310,2.893,1311,1.384,1312,3.501,1313,1.763,1314,1.902,1315,1.902,1316,3.501,1317,1.902,1318,1.902,1319,3.501,1320,2.893,1321,1.902,1322,1.902,1323,3.501,1324,1.902,1325,1.902,1326,1.902,1327,1.902,1328,1.902,1329,2.548,1330,1.902,1331,1.902,1332,1.902,1333,1.763,1334,1.902,1335,1.902,1336,1.902,1337,1.902,1338,1.902,1339,1.902,1340,1.902,1341,2.681,1342,2.893,1343,1.902,1344,1.902,1345,1.902,1346,1.902,1347,1.902,1348,1.902,1349,1.902,1350,1.902,1351,1.902,1352,2.893,1353,1.902,1354,3.912,1355,1.902,1356,1.902,1357,3.9,1358,1.902,1359,4.208,1360,1.902,1361,1.902,1362,3.387,1363,2.893,1364,3.501,1365,4.507,1366,1.902,1367,2.893,1368,2.893,1369,1.902,1370,1.902,1371,1.902,1372,1.902,1373,1.902,1374,1.902,1375,1.902,1376,1.902,1377,1.902,1378,1.902,1379,1.902,1380,2.893,1381,1.902,1382,1.902,1383,1.902,1384,1.902,1385,2.354,1386,2.893,1387,1.902,1388,1.902,1389,1.763,1390,1.902,1391,1.902,1392,1.902,1393,1.902,1394,1.902,1395,1.902,1396,1.902,1397,1.902,1398,1.902]],["title/injectables/ODataEntityService.html",[1399,2.139,1400,2.581]],["body/injectables/ODataEntityService.html",[0,0.254,3,0.097,4,0.085,5,0.085,6,0.131,8,0.061,9,0.2,10,2.735,15,0.913,18,0.224,19,3.56,20,0.965,22,0.174,26,0.262,28,0.198,29,0.016,30,0.202,31,0.137,32,1.057,33,0.204,34,2.103,35,0.945,45,1.65,46,0.802,50,3.518,51,1.288,52,2.958,53,3.174,54,0.646,58,2.016,63,2.052,80,5.101,83,1.351,84,0.085,98,1.64,100,1.614,105,0.823,169,0.005,170,0.008,171,0.005,174,1.218,178,3.722,196,1.371,231,2.735,252,1.003,261,3.221,404,2.492,501,2.839,675,1.577,711,1.577,715,3.308,732,1.577,751,4.603,753,2.301,754,2.301,755,2.052,761,1.902,762,2.24,763,5.101,765,1.777,766,1.902,772,2.816,773,1.494,921,3.665,922,4.349,923,4.349,1071,2.81,1101,2.354,1399,2.354,1400,2.839,1401,2.052,1402,2.492,1403,3.72,1404,4.29,1405,4.29,1406,3.344,1407,3.72,1408,4.29,1409,4.29,1410,4.29,1411,4.29,1412,3.72,1413,3.72,1414,2.874,1415,4.29,1416,2.874,1417,5.692,1418,4.29,1419,5.346,1420,2.874,1421,4.29,1422,2.874,1423,4.29,1424,2.874,1425,4.29,1426,2.874,1427,4.29,1428,2.874,1429,4.29,1430,2.874,1431,4.29,1432,2.874,1433,4.29,1434,2.874,1435,4.29,1436,2.874,1437,4.29,1438,2.874,1439,4.29,1440,2.874,1441,3.344,1442,4.29,1443,2.874,1444,4.001,1445,4.29,1446,2.874,1447,4.29,1448,2.874,1449,2.492,1450,2.492,1451,2.492,1452,2.492,1453,2.492,1454,2.492,1455,1.67,1456,2.874,1457,2.874,1458,2.492,1459,2.874,1460,2.874,1461,2.874,1462,2.874,1463,2.874,1464,2.874,1465,4.29,1466,2.874,1467,2.874,1468,2.874,1469,5.133,1470,2.874,1471,2.874,1472,2.874,1473,2.492,1474,2.874,1475,2.874,1476,2.874,1477,2.874,1478,4.29,1479,2.874,1480,2.874,1481,2.874]],["title/classes/ODataEnumConfig.html",[0,0.344,1077,2.139]],["body/classes/ODataEnumConfig.html",[0,0.561,2,0.158,3,0.095,4,0.083,5,0.083,6,0.114,8,0.06,9,0.198,15,0.802,18,0.166,20,0.953,22,0.171,26,0.214,28,0.129,29,0.016,30,0.188,31,0.136,33,0.206,35,0.52,45,0.611,46,0.776,50,1.328,51,1.267,54,0.953,61,1.109,83,1.328,84,0.187,98,1.6,106,1.063,113,0.603,122,0.868,124,1.557,131,1.551,137,1.991,143,1.551,168,1.063,169,0.005,170,0.008,171,0.005,181,0.986,298,2.176,320,2.543,427,2.509,462,1.063,468,3.17,486,2.388,564,1.469,567,2.773,589,2.462,605,1.395,640,2.312,700,2.653,753,3.035,754,1.267,772,2.324,863,2.589,871,1.469,892,2.53,929,2.589,1027,1.469,1028,1.643,1029,1.643,1030,1.643,1031,1.748,1032,2.324,1033,3.094,1036,2.509,1043,3.134,1047,3.249,1048,1.662,1050,1.643,1051,1.551,1052,1.643,1054,1.899,1060,2.49,1064,1.643,1066,1.748,1069,1.643,1072,2.788,1073,1.748,1075,1.643,1077,3.097,1078,1.748,1080,1.643,1082,1.748,1084,1.748,1086,3.035,1087,1.748,1089,1.643,1091,2.788,1092,1.748,1094,2.278,1095,1.814,1096,2.278,1097,1.21,1098,1.899,1099,2.711,1100,2.324,1101,1.551,1102,1.328,1103,2.214,1104,2.462,1105,2.62,1106,1.748,1107,1.748,1108,1.748,1109,1.643,1110,1.643,1111,1.551,1112,1.748,1113,1.748,1114,2.985,1115,2.985,1116,1.748,1117,1.748,1118,1.748,1119,1.748,1120,1.748,1121,1.748,1122,1.748,1123,1.748,1124,1.991,1125,1.748,1126,1.748,1127,2.091,1128,1.748,1129,1.748,1130,1.748,1131,1.748,1132,1.748,1133,1.748,1134,1.748,1135,1.748,1136,1.748,1137,3.281,1138,2.462,1139,1.748,1140,1.643,1141,3.143,1142,1.748,1143,2.62,1144,1.748,1145,1.748,1146,1.748,1147,3.518,1148,3.143,1149,3.739,1150,3.143,1151,3.143,1152,3.491,1153,3.143,1154,1.748,1155,3.143,1156,3.143,1157,1.748,1158,1.748,1159,2.62,1160,1.748,1161,1.748,1162,1.551,1163,1.21,1164,1.643,1165,3.491,1166,1.748,1167,2.62,1168,1.748,1169,3.143,1170,1.748,1171,1.748,1172,1.748,1173,1.748,1174,1.748,1175,1.748,1176,1.748,1177,2.324,1178,1.748,1179,1.748,1180,3.134,1181,3.143,1182,3.143,1183,1.395,1184,1.748,1185,2.786,1186,2.786,1187,2.509,1188,1.748,1189,2.62,1190,2.462,1191,3.143,1192,3.143,1193,1.748,1194,1.395,1195,1.748,1196,1.748,1197,2.62,1198,2.62,1199,2.462,1200,2.417,1201,1.748,1202,1.748,1203,1.643,1204,1.748,1205,1.748,1206,1.748,1207,1.551,1208,2.62,1209,1.748,1210,1.748,1216,1.328,1482,4.237,1483,2.826,1484,2.826,1485,2.826,1486,2.826]],["title/classes/ODataEnumParser.html",[0,0.344,1096,1.748]],["body/classes/ODataEnumParser.html",[0,0.443,2,0.154,3,0.093,4,0.081,5,0.081,6,0.123,8,0.059,9,0.28,18,0.203,19,1.239,20,0.936,22,0.167,26,0.236,28,0.152,29,0.016,30,0.189,31,0.137,33,0.2,34,1.706,35,1.404,45,1.206,46,0.491,54,0.936,84,0.177,98,1.698,99,1.298,100,1.411,105,0.53,113,0.98,120,2.623,122,1.279,124,1.346,168,1.039,169,0.005,170,0.008,171,0.005,179,0.755,181,1.027,197,0.816,198,0.816,252,1.472,288,1.239,298,2.147,320,2.013,462,2.636,468,2.39,567,2.453,607,2.421,629,1.132,640,2.286,692,2.502,693,2.502,701,1.516,773,1.436,865,3.694,940,2.913,994,1.436,1033,3.07,1036,2.056,1043,2.755,1047,1.364,1048,1.084,1054,2.247,1060,1.084,1086,3.084,1094,2.684,1095,1.784,1096,2.247,1097,1.784,1098,1.867,1099,2.502,1102,1.298,1103,1.084,1114,3.225,1115,1.364,1124,1.298,1127,2.056,1163,2.147,1180,2.956,1183,1.364,1185,2.755,1186,2.056,1187,3.396,1194,1.364,1200,1.183,1216,1.298,1270,1.829,1271,1.973,1272,1.973,1273,3.58,1275,2.285,1276,2.974,1286,1.973,1288,2.974,1289,1.973,1292,1.973,1294,1.973,1295,2.576,1297,3.318,1298,1.973,1299,1.973,1300,1.973,1302,3.892,1303,3.963,1304,3.985,1305,3.985,1306,2.974,1307,2.974,1308,3.963,1309,2.974,1310,2.974,1311,1.436,1312,3.985,1313,3.318,1314,2.974,1315,1.973,1316,3.58,1317,1.973,1318,1.973,1319,3.58,1320,2.974,1321,1.973,1322,1.973,1323,3.58,1324,1.973,1325,1.973,1326,1.973,1327,1.973,1328,1.973,1329,2.605,1330,1.973,1331,1.973,1332,1.973,1333,1.829,1334,1.973,1335,1.973,1336,1.973,1337,1.973,1338,1.973,1339,1.973,1340,1.973,1341,2.757,1342,2.974,1343,1.973,1344,1.973,1345,1.973,1346,1.973,1347,1.973,1348,1.973,1349,1.973,1350,1.973,1351,1.973,1352,2.974,1353,1.973,1354,3.985,1355,1.973,1356,1.973,1357,3.963,1358,1.973,1359,4.276,1360,1.973,1361,1.973,1362,3.451,1363,2.974,1364,3.58,1365,4.554,1366,1.973,1367,2.974,1368,2.974,1369,1.973,1370,1.973,1371,1.973,1372,1.973,1373,1.973,1374,1.973,1375,1.973,1376,1.973,1377,1.973,1378,1.973,1379,1.973,1380,2.974,1381,1.973,1382,1.973,1383,1.973,1384,1.973,1385,2.421,1386,2.974,1387,1.973,1388,1.973,1389,1.829,1390,1.973,1391,1.973,1392,1.973,1393,1.973,1394,1.973,1395,1.973,1396,1.973,1397,1.973,1398,1.973,1487,4.165,1488,2.763,1489,2.763,1490,2.763,1491,2.763,1492,2.763,1493,2.763,1494,2.763,1495,2.763,1496,2.763]],["title/classes/ODataFieldParser.html",[0,0.344,1095,1.67]],["body/classes/ODataFieldParser.html",[0,0.424,2,0.143,3,0.087,4,0.076,5,0.076,6,0.132,8,0.055,9,0.271,18,0.228,19,1.152,20,0.886,22,0.155,26,0.257,28,0.155,29,0.016,30,0.189,31,0.137,33,0.2,34,2.202,35,1.397,45,1.457,46,0.465,54,0.886,84,0.171,98,1.685,99,1.208,100,1.547,105,0.493,113,0.979,120,2.527,122,1.211,124,1.304,168,0.966,169,0.005,170,0.007,171,0.005,179,1.077,181,1.068,197,1.416,198,1.416,252,1.431,288,2.149,298,1.1,320,1.422,462,2.781,468,2.302,567,2.693,607,2.291,629,1.053,640,1.615,692,2.41,693,2.41,701,1.41,773,1.335,865,3.559,940,2.787,994,2.492,1033,2.725,1036,1.946,1043,2.654,1047,1.268,1048,1.008,1054,2.149,1060,1.008,1086,3.021,1094,2.599,1095,2.053,1096,1.767,1097,1.688,1098,1.767,1099,1.767,1102,1.208,1103,1.881,1114,3.145,1115,1.268,1124,1.208,1127,1.946,1163,2.053,1180,2.862,1183,1.268,1185,2.654,1186,1.946,1187,3.327,1194,1.268,1200,1.1,1216,1.208,1270,1.701,1271,1.835,1272,1.835,1273,3.424,1275,2.162,1276,2.815,1286,1.835,1288,2.815,1289,1.835,1292,1.835,1294,1.835,1295,2.437,1297,3.173,1298,1.835,1299,1.835,1300,1.835,1302,3.784,1303,3.838,1304,3.839,1305,3.839,1306,2.815,1307,2.815,1308,3.838,1309,2.815,1310,2.815,1311,1.335,1312,3.839,1313,1.701,1314,1.835,1315,1.835,1316,3.424,1317,1.835,1318,1.835,1319,3.424,1320,2.815,1321,1.835,1322,1.835,1323,3.424,1324,1.835,1325,1.835,1326,1.835,1327,1.835,1328,1.835,1329,2.492,1330,1.835,1331,1.835,1332,1.835,1333,1.701,1334,2.815,1335,1.835,1336,1.835,1337,1.835,1338,1.835,1339,1.835,1340,1.835,1341,2.609,1342,2.815,1343,1.835,1344,1.835,1345,1.835,1346,3.839,1347,1.835,1348,3.839,1349,3.839,1350,3.839,1351,1.835,1352,2.815,1353,1.835,1354,3.839,1355,1.835,1356,1.835,1357,3.838,1358,1.835,1359,4.141,1360,1.835,1361,1.835,1362,3.325,1363,2.815,1364,3.424,1365,4.461,1366,1.835,1367,2.815,1368,2.815,1369,1.835,1370,1.835,1371,1.835,1372,1.835,1373,1.835,1374,1.835,1375,1.835,1376,1.835,1377,1.835,1378,1.835,1379,1.835,1380,2.815,1381,1.835,1382,1.835,1383,1.835,1384,1.835,1385,2.291,1386,2.815,1387,1.835,1388,1.835,1389,1.701,1390,1.835,1391,1.835,1392,1.835,1393,1.835,1394,1.835,1395,1.835,1396,1.835,1397,1.835,1398,1.835,1497,3.941,1498,3.941,1499,2.57,1500,2.57,1501,2.57,1502,2.57,1503,2.57,1504,2.57,1505,2.57,1506,2.57,1507,2.57,1508,2.57,1509,2.57,1510,2.57,1511,2.57,1512,2.57,1513,2.57,1514,2.57,1515,2.57,1516,2.57,1517,2.57]],["title/classes/ODataModel.html",[0,0.344,929,1.67]],["body/classes/ODataModel.html",[0,0.197,2,0.124,3,0.075,4,0.066,5,0.066,6,0.129,8,0.048,9,0.165,18,0.199,19,3.161,20,0.794,22,0.135,25,4.817,26,0.25,28,0.179,29,0.016,30,0.174,31,0.129,32,0.861,33,0.153,35,1.382,45,1.505,46,0.739,50,3.225,51,1.001,54,0.502,61,1.386,62,1.478,63,1.594,77,4.714,80,4.766,84,0.066,88,1.478,98,1.63,100,1.528,120,2.842,124,1.619,168,0.839,169,0.004,170,0.007,171,0.004,174,0.634,178,2.46,196,0.713,215,2.734,259,0.773,261,3.076,277,1.836,288,1.001,462,2.041,486,1.66,520,1.936,605,3.52,607,2.053,609,4.704,630,3.142,635,2.46,637,1.836,640,1.795,649,1.381,692,2.433,693,2.588,711,2.404,715,3.155,765,4.172,766,1.478,768,1.74,769,1.74,773,1.836,840,3.063,863,2.325,867,3.8,869,3.8,871,1.16,872,2.753,873,3.416,875,3.063,880,3.8,881,3.8,892,2.588,894,3.063,898,3.063,905,5.154,916,1.936,918,1.936,921,3.13,922,3.13,923,2.522,924,2.547,925,2.404,926,2.404,929,2.685,931,1.936,937,3.8,939,1.936,940,4.185,941,1.936,943,1.936,944,6.434,945,3.063,946,3.063,947,6.114,948,1.936,949,3.063,954,5.243,979,5.005,980,1.936,981,3.8,982,3.8,983,1.936,984,1.936,994,1.16,1001,1.936,1002,5.243,1003,1.936,1004,1.936,1005,1.936,1012,1.936,1013,1.936,1021,1.936,1022,1.936,1025,1.381,1026,1.936,1071,3.387,1095,2.685,1097,0.956,1103,1.386,1111,1.938,1200,0.956,1203,1.297,1291,3.063,1333,1.478,1357,4.002,1365,1.478,1385,3.514,1389,2.338,1406,3.416,1407,4.32,1412,3.8,1413,4.32,1419,3.13,1441,2.753,1444,2.753,1518,1.936,1519,4.383,1520,4.383,1521,3.532,1522,3.532,1523,4.983,1524,3.532,1525,2.232,1526,2.232,1527,2.232,1528,2.232,1529,2.232,1530,2.232,1531,2.232,1532,3.532,1533,3.532,1534,2.232,1535,3.532,1536,2.232,1537,2.232,1538,3.532,1539,2.232,1540,3.532,1541,2.232,1542,3.532,1543,2.232,1544,3.532,1545,2.232,1546,2.232,1547,4.983,1548,2.232,1549,2.232,1550,2.232,1551,3.532,1552,2.232,1553,2.232,1554,2.232,1555,2.232,1556,3.532,1557,2.232,1558,1.936,1559,1.936,1560,4.983,1561,2.232,1562,3.532,1563,3.532,1564,2.232,1565,2.232,1566,2.232,1567,4.383,1568,2.232,1569,2.232,1570,2.232,1571,4.383,1572,2.232,1573,4.983,1574,2.232,1575,1.74,1576,2.232,1577,2.232,1578,3.532,1579,5.348,1580,2.232,1581,3.532,1582,2.232,1583,2.232,1584,2.232,1585,2.232,1586,2.232,1587,3.532,1588,2.232,1589,2.232,1590,2.232,1591,3.532,1592,2.232,1593,2.232,1594,2.232,1595,2.232,1596,2.232,1597,2.232,1598,2.232,1599,2.232,1600,2.232,1601,2.232,1602,5.773,1603,5.773,1604,3.532,1605,4.383,1606,3.532,1607,2.232,1608,2.232,1609,3.532,1610,2.232,1611,2.232,1612,2.232,1613,2.232,1614,2.232,1615,2.232,1616,2.232,1617,2.232,1618,2.232,1619,2.232,1620,2.232,1621,2.232,1622,2.232,1623,2.232,1624,2.232,1625,2.232,1626,2.232,1627,2.232,1628,2.232,1629,2.232,1630,2.232,1631,4.383,1632,2.232,1633,2.232,1634,2.232,1635,3.532,1636,2.232,1637,2.232,1638,3.532]],["title/injectables/ODataModelService.html",[1399,2.139,1639,2.784]],["body/injectables/ODataModelService.html",[0,0.379,3,0.145,4,0.127,5,0.127,6,0.128,8,0.091,9,0.266,10,3.117,15,0.906,18,0.219,20,1.281,22,0.259,26,0.264,28,0.188,29,0.016,30,0.188,31,0.135,32,0.91,33,0.162,34,2.618,35,1.405,45,1.63,46,0.835,52,3.537,53,3.952,54,0.965,58,2.676,84,0.127,98,1.471,100,1.085,105,1.225,169,0.008,170,0.011,171,0.008,231,3.117,261,3.329,675,2.356,751,5.052,753,2.865,754,2.865,755,3.066,761,2.842,762,3.347,763,3.77,765,2.655,773,2.231,863,2.737,872,5.674,878,5.305,886,5.789,892,2.553,929,2.439,940,3.31,1103,2.234,1399,3.124,1401,3.066,1419,5.198,1449,3.723,1450,3.723,1451,3.723,1452,3.723,1453,3.723,1454,3.723,1455,2.495,1458,3.723,1639,4.067,1640,3.723,1641,4.293,1642,7.279,1643,4.293,1644,6.539,1645,4.293,1646,4.293,1647,5.695,1648,4.293,1649,5.695,1650,4.293,1651,4.293,1652,4.293,1653,4.293,1654,4.293]],["title/modules/ODataModule.html",[1655,2.784,1656,2.581]],["body/modules/ODataModule.html",[0,0.463,3,0.177,4,0.155,5,0.155,6,0.112,10,2.772,15,0.588,18,0.155,20,1.179,26,0.177,28,0.133,29,0.015,30,0.133,31,0.091,45,1.134,46,0.904,52,4.041,53,3.244,54,1.179,83,2.465,84,0.191,98,1.399,124,1.179,169,0.01,170,0.012,171,0.01,174,1.49,1048,2.955,1455,3.048,1655,3.745,1656,5.24,1657,4.088,1658,3.745,1659,4.548,1660,4.548,1661,4.548,1662,5.716,1663,4.548,1664,4.548,1665,4.548,1666,4.808,1667,5.613,1668,4.548,1669,4.548,1670,4.088,1671,5.245,1672,5.245,1673,5.245,1674,5.046,1675,7.022,1676,6.474,1677,6.089,1678,4.285,1679,5.245,1680,5.245,1681,5.474,1682,4.548,1683,5.245,1684,4.548,1685,5.245,1686,5.613,1687,5.245,1688,4.548,1689,4.088,1690,5.245]],["title/interfaces/ODataParser.html",[1086,1.748,1311,2.026]],["body/interfaces/ODataParser.html",[0,0.462,3,0.1,4,0.088,5,0.088,6,0.09,8,0.063,9,0.244,18,0.13,19,1.33,20,0.988,26,0.148,28,0.111,29,0.016,30,0.181,31,0.133,32,0.423,33,0.2,34,1.216,35,1.395,45,0.95,46,0.518,54,0.988,84,0.182,98,1.711,99,1.395,100,1.461,105,0.842,113,0.999,120,2.717,122,1.349,124,1.388,169,0.006,170,0.008,171,0.006,179,0.811,181,1.016,197,0.876,198,0.876,252,1.511,288,1.33,298,1.271,320,1.585,462,2.683,468,2.476,567,2.648,629,1.216,640,1.8,692,2.592,693,2.592,701,1.628,773,1.542,865,3.462,940,3.04,994,1.542,1033,2.901,1036,2.169,1043,2.854,1047,1.465,1048,1.164,1054,2.345,1060,1.164,1086,3.144,1094,2.767,1095,1.881,1096,1.969,1097,1.881,1098,1.969,1099,1.969,1102,1.395,1103,1.164,1114,3.301,1115,1.465,1124,1.395,1127,2.169,1163,2.24,1180,3.047,1183,1.465,1185,2.854,1186,2.169,1187,3.462,1194,1.465,1200,1.271,1216,1.395,1270,1.964,1271,2.119,1272,2.119,1273,3.735,1276,3.137,1286,2.119,1288,3.137,1289,2.119,1292,2.119,1294,2.119,1295,2.717,1297,3.462,1298,2.119,1299,2.119,1300,2.119,1302,3.997,1303,3.827,1304,4.129,1305,4.129,1306,3.137,1307,3.137,1308,3.827,1309,3.137,1310,3.137,1311,1.542,1312,4.129,1313,1.964,1314,2.119,1315,2.119,1316,3.735,1317,2.119,1318,2.119,1319,3.735,1320,3.137,1321,2.119,1322,2.119,1323,3.735,1324,2.119,1325,2.119,1326,2.119,1327,2.119,1328,2.119,1329,2.718,1330,2.119,1331,2.119,1332,2.119,1333,1.964,1334,2.119,1335,2.119,1336,2.119,1337,2.119,1338,2.119,1339,2.119,1340,2.119,1341,2.908,1342,3.137,1343,2.119,1344,2.119,1345,2.119,1346,2.119,1347,2.119,1348,2.119,1349,2.119,1350,2.119,1351,2.119,1352,3.137,1353,2.119,1354,4.129,1355,2.119,1356,2.119,1357,4.085,1358,2.119,1359,4.408,1360,2.119,1361,2.119,1362,3.576,1363,3.137,1364,3.735,1365,4.642,1366,2.119,1367,3.137,1368,3.137,1369,2.119,1370,2.119,1371,2.119,1372,2.119,1373,2.119,1374,2.119,1375,2.119,1376,2.119,1377,2.119,1378,2.119,1379,2.119,1380,3.137,1381,2.119,1382,2.119,1383,2.119,1384,2.119,1385,2.553,1386,3.137,1387,2.119,1388,2.119,1389,1.964,1390,2.119,1391,2.119,1392,2.119,1393,2.119,1394,2.119,1395,2.119,1396,2.119,1397,2.119,1398,2.119,1691,2.313,1692,2.967,1693,2.967]],["title/classes/ODataPathSegments.html",[0,0.344,56,2.581]],["body/classes/ODataPathSegments.html",[0,0.412,2,0.18,3,0.109,4,0.095,5,0.095,6,0.13,8,0.069,9,0.218,18,0.188,19,3.211,20,1.049,22,0.195,26,0.251,28,0.184,29,0.016,30,0.193,31,0.132,32,0.909,33,0.206,34,1.32,35,1.225,45,1.572,46,0.784,54,1.496,56,3.631,57,2.302,58,3.74,59,4.558,61,1.831,64,2.886,84,0.177,85,2.304,98,1.668,99,1.515,100,1.735,122,0.99,124,1.352,168,1.212,169,0.006,170,0.009,171,0.006,174,1.325,181,0.459,193,2.304,196,1.491,252,1.091,259,1.9,278,3.089,469,3.333,501,3.089,608,2.886,609,3.393,629,2.726,635,2.969,734,2.193,876,3.089,1016,1.993,1025,2.886,1071,1.591,1138,2.712,1147,1.675,1269,3.089,1275,3.299,1329,2.425,1694,4.975,1695,2.133,1696,5.215,1697,6.307,1698,4.295,1699,4.046,1700,5.584,1701,4.667,1702,3.223,1703,4.046,1704,3.223,1705,3.333,1706,3.223,1707,3.223,1708,4.558,1709,3.223,1710,4.046,1711,3.223,1712,4.046,1713,3.223,1714,3.223,1715,3.223,1716,3.223,1717,4.558,1718,2.302,1719,3.089,1720,3.631,1721,1.993,1722,2.133,1723,2.302,1724,1.993,1725,2.302,1726,3.638,1727,2.512,1728,2.794,1729,4.046,1730,2.794,1731,2.794,1732,2.794,1733,4.046,1734,5.215,1735,2.794,1736,2.794,1737,5.534,1738,5.534,1739,2.794,1740,4.757,1741,2.794,1742,2.794,1743,4.757,1744,2.794,1745,2.794,1746,2.794,1747,2.794,1748,2.794,1749,2.794,1750,2.794,1751,2.794,1752,2.794,1753,2.794,1754,2.794,1755,2.794,1756,2.794,1757,2.794,1758,2.794,1759,2.794,1760,2.794,1761,4.046,1762,2.794,1763,2.794,1764,2.794,1765,4.757,1766,2.794,1767,2.794,1768,2.794,1769,2.794,1770,2.133,1771,2.302,1772,2.794,1773,2.794,1774,4.046,1775,2.794,1776,4.046,1777,2.794,1778,2.302,1779,2.302,1780,2.794,1781,2.302,1782,2.794,1783,2.302,1784,1.993]],["title/classes/ODataQueryOptions.html",[0,0.344,60,2.581]],["body/classes/ODataQueryOptions.html",[0,0.416,2,0.182,3,0.11,4,0.096,5,0.096,6,0.13,8,0.07,9,0.22,18,0.208,19,3.221,20,1.059,22,0.197,26,0.252,28,0.175,29,0.016,30,0.187,31,0.122,32,0.671,33,0.182,35,1.387,45,1.577,46,0.756,54,1.059,60,3.659,61,2.374,62,2.162,84,0.163,85,1.612,88,3.119,98,1.663,100,1.191,106,2.078,113,0.465,122,1.698,124,1.059,137,3.238,168,2.078,169,0.006,170,0.009,171,0.006,181,0.465,259,2.315,635,2.987,692,2.112,693,2.112,740,2.585,745,2.585,747,2.585,876,3.119,884,2.162,924,3.212,925,2.585,926,2.585,927,2.914,928,3.119,1016,2.914,1025,3.418,1060,1.848,1071,3.482,1269,4.005,1275,3.52,1362,3.742,1385,1.898,1575,2.546,1579,3.673,1698,4.321,1705,3.947,1717,3.365,1719,3.119,1720,4.89,1721,2.02,1722,2.162,1723,2.332,1724,2.914,1770,2.162,1771,3.947,1778,3.947,1779,2.332,1781,2.332,1783,2.332,1784,2.02,1785,5.38,1786,2.162,1787,5.796,1788,4.712,1789,4.085,1790,4.712,1791,3.266,1792,3.266,1793,3.266,1794,5.959,1795,3.266,1796,3.266,1797,3.266,1798,4.085,1799,4.085,1800,3.266,1801,3.266,1802,3.266,1803,3.266,1804,3.266,1805,3.266,1806,2.332,1807,2.832,1808,3.673,1809,4.774,1810,2.832,1811,2.832,1812,2.832,1813,2.832,1814,2.832,1815,2.832,1816,2.832,1817,2.832,1818,2.832,1819,2.832,1820,2.546,1821,2.832,1822,2.832,1823,2.832,1824,2.832,1825,2.832,1826,2.832,1827,2.832,1828,2.832,1829,2.832,1830,2.832,1831,2.832,1832,2.832,1833,2.832,1834,2.832,1835,2.832,1836,2.832,1837,2.832,1838,2.832,1839,2.832,1840,2.832,1841,2.832,1842,2.832,1843,2.832,1844,2.832,1845,2.832,1846,6.406,1847,2.546,1848,2.832,1849,5.247,1850,2.832,1851,2.832,1852,2.832,1853,2.832,1854,2.832,1855,2.546,1856,2.832,1857,4.085,1858,4.085,1859,2.832,1860,2.832,1861,2.832,1862,2.832,1863,2.832,1864,2.832,1865,2.832,1866,2.832,1867,2.832,1868,2.832,1869,2.832,1870,4.085,1871,2.832,1872,2.832,1873,2.832,1874,2.832,1875,2.832,1876,2.832,1877,2.832,1878,2.832]],["title/classes/ODataSchema.html",[0,0.344,1162,2.139]],["body/classes/ODataSchema.html",[0,0.56,2,0.157,3,0.095,4,0.083,5,0.083,6,0.117,8,0.06,9,0.197,15,0.802,18,0.199,20,0.951,22,0.17,26,0.222,28,0.129,29,0.016,30,0.184,31,0.135,33,0.205,35,0.519,45,0.609,46,0.775,50,1.325,51,1.263,54,0.951,61,1.106,83,1.325,84,0.187,98,1.599,106,1.06,113,0.602,122,0.866,124,1.555,131,1.546,137,1.987,143,1.546,168,1.06,169,0.005,170,0.008,171,0.005,181,0.985,298,1.207,320,2.542,427,2.504,462,1.06,468,3.218,486,2.384,564,1.465,567,2.598,589,2.457,605,1.391,637,2.197,640,1.732,700,2.649,753,3.032,754,2.274,772,2.319,863,2.586,871,1.465,892,2.527,929,2.586,1027,1.465,1028,1.638,1029,1.638,1030,1.638,1031,1.743,1032,2.319,1033,3.091,1036,2.504,1043,3.13,1047,3.246,1048,1.658,1050,1.638,1051,1.546,1052,1.638,1054,1.895,1060,2.714,1064,1.638,1066,1.743,1069,1.638,1072,2.783,1073,1.743,1075,1.638,1077,2.783,1078,1.743,1080,1.638,1082,1.743,1084,1.743,1086,3.032,1087,1.743,1089,1.638,1091,2.783,1092,1.743,1094,2.274,1095,1.81,1096,1.895,1097,1.207,1098,1.895,1099,2.274,1100,2.319,1101,1.546,1102,1.325,1103,2.211,1104,2.457,1105,2.614,1106,1.743,1107,1.743,1108,1.743,1109,1.638,1110,1.638,1111,1.546,1112,1.743,1113,1.743,1114,2.981,1115,2.981,1116,1.743,1117,1.743,1118,1.743,1119,1.743,1120,1.743,1121,1.743,1122,1.743,1123,1.743,1124,1.987,1125,1.743,1126,1.743,1127,2.087,1128,1.743,1129,1.743,1130,1.743,1131,1.743,1132,1.743,1133,1.743,1134,1.743,1135,1.743,1136,1.743,1137,3.276,1138,2.457,1139,1.743,1140,1.638,1141,3.137,1142,1.743,1143,2.614,1144,1.743,1145,1.743,1146,1.743,1147,3.515,1148,3.137,1149,3.735,1150,3.137,1151,3.137,1152,3.486,1153,3.137,1154,1.743,1155,3.137,1156,3.137,1157,1.743,1158,1.743,1159,2.614,1160,1.743,1161,1.743,1162,2.319,1163,2.173,1164,2.948,1165,3.486,1166,1.743,1167,2.614,1168,1.743,1169,3.137,1170,1.743,1171,1.743,1172,1.743,1173,1.743,1174,1.743,1175,1.743,1176,1.743,1177,3.092,1178,1.743,1179,1.743,1180,3.13,1181,3.137,1182,3.137,1183,1.391,1184,1.743,1185,2.782,1186,2.782,1187,2.504,1188,1.743,1189,2.614,1190,2.457,1191,3.137,1192,3.137,1193,1.743,1194,1.391,1195,1.743,1196,1.743,1197,2.614,1198,2.614,1199,2.457,1200,2.414,1201,1.743,1202,1.743,1203,1.638,1204,1.743,1205,1.743,1206,1.743,1207,1.546,1208,2.614,1209,1.743,1210,1.743,1216,1.325,1879,4.227,1880,2.818,1881,2.818,1882,2.818,1883,2.818,1884,2.818,1885,2.818]],["title/classes/ODataServiceConfig.html",[0,0.344,1091,2.139]],["body/classes/ODataServiceConfig.html",[0,0.563,2,0.159,3,0.096,4,0.084,5,0.084,6,0.11,8,0.061,9,0.199,15,0.804,18,0.126,20,0.96,22,0.173,26,0.205,28,0.13,29,0.016,30,0.188,31,0.136,33,0.206,35,0.526,45,0.618,46,0.779,50,1.343,51,1.281,54,0.96,61,1.121,83,1.343,84,0.188,98,1.603,106,1.074,113,0.608,122,0.878,124,1.561,131,1.568,137,2.007,143,1.568,168,1.074,169,0.005,170,0.008,171,0.005,181,0.989,298,1.224,320,2.55,427,2.525,462,1.074,468,3.176,486,2.855,564,1.485,567,2.611,589,2.482,605,1.41,640,1.75,700,2.667,753,3.045,754,1.281,772,2.343,863,2.601,871,1.485,892,2.544,929,2.601,1027,1.485,1028,1.661,1029,1.661,1030,1.661,1031,1.767,1032,2.343,1033,3.105,1036,2.525,1043,3.146,1047,3.261,1048,1.676,1050,1.661,1051,1.568,1052,1.661,1054,1.915,1060,2.5,1064,1.661,1066,1.767,1069,1.661,1072,2.806,1073,1.767,1075,1.661,1077,2.806,1078,1.767,1080,1.661,1082,1.767,1084,1.767,1086,3.045,1087,1.767,1089,1.661,1091,3.114,1092,1.767,1094,2.293,1095,1.829,1096,1.915,1097,1.224,1098,1.915,1099,2.293,1100,3.114,1101,1.568,1102,1.343,1103,2.226,1104,2.482,1105,2.641,1106,1.767,1107,1.767,1108,1.767,1109,1.661,1110,1.661,1111,1.568,1112,1.767,1113,1.767,1114,2.999,1115,2.999,1116,1.767,1117,1.767,1118,1.767,1119,1.767,1120,1.767,1121,1.767,1122,1.767,1123,1.767,1124,2.007,1125,1.767,1126,1.767,1127,2.108,1128,1.767,1129,1.767,1130,1.767,1131,1.767,1132,1.767,1133,1.767,1134,1.767,1135,1.767,1136,1.767,1137,3.298,1138,2.482,1139,1.767,1140,1.661,1141,3.163,1142,1.767,1143,2.641,1144,1.767,1145,1.767,1146,1.767,1147,3.53,1148,3.163,1149,3.757,1150,3.163,1151,3.163,1152,3.51,1153,3.163,1154,1.767,1155,3.163,1156,3.163,1157,1.767,1158,1.767,1159,2.641,1160,1.767,1161,1.767,1162,1.568,1163,1.224,1164,1.661,1165,3.51,1166,1.767,1167,2.641,1168,1.767,1169,3.163,1170,1.767,1171,1.767,1172,1.767,1173,1.767,1174,1.767,1175,1.767,1176,1.767,1177,2.343,1178,1.767,1179,1.767,1180,3.146,1181,3.163,1182,3.163,1183,1.41,1184,1.767,1185,2.802,1186,2.802,1187,2.525,1188,1.767,1189,2.641,1190,2.482,1191,3.163,1192,3.163,1193,1.767,1194,1.41,1195,1.767,1196,1.767,1197,2.641,1198,2.641,1199,2.482,1200,2.43,1201,1.767,1202,1.767,1203,1.661,1204,1.767,1205,1.767,1206,1.767,1207,1.568,1208,2.641,1209,1.767,1210,1.767,1216,1.343,1886,4.271,1887,2.857,1888,2.857,1889,2.857]],["title/injectables/ODataServiceFactory.html",[1399,2.139,1666,2.411]],["body/injectables/ODataServiceFactory.html",[0,0.612,3,0.172,4,0.15,5,0.15,6,0.125,8,0.108,10,3.108,18,0.204,20,1.43,22,0.308,26,0.233,28,0.189,29,0.015,30,0.176,31,0.139,32,0.905,33,0.203,45,1.375,46,0.881,52,3.772,53,4.287,58,3.58,84,0.15,98,1.375,105,1.329,124,1.43,169,0.01,170,0.012,171,0.01,261,3.107,675,2.795,755,3.639,863,2.182,878,3.972,886,3.972,892,2.284,929,2.182,1071,3.139,1399,3.488,1400,4.804,1401,3.639,1455,2.961,1639,5.183,1644,5.513,1666,3.932,1890,4.418,1891,6.358,1892,6.931,1893,5.095,1894,6.358,1895,5.095,1896,5.095,1897,5.095,1898,6.358,1899,5.095]],["title/classes/ODataSettings.html",[0,0.344,1678,2.581]],["body/classes/ODataSettings.html",[0,0.337,2,0.212,3,0.128,4,0.112,5,0.112,6,0.132,8,0.081,9,0.245,15,0.902,18,0.224,20,1.181,22,0.23,26,0.254,28,0.193,29,0.016,30,0.199,31,0.134,32,0.543,33,0.204,35,1.252,45,1.519,46,0.801,54,1.352,84,0.112,98,1.629,122,2.254,124,1.181,169,0.007,170,0.01,171,0.007,605,3.469,753,3.338,863,2.25,884,4.499,892,1.708,929,2.25,967,5.894,1027,1.98,1034,4.555,1037,4.555,1039,4.555,1041,4.555,1045,4.555,1048,2.667,1060,2.061,1064,3.053,1069,3.053,1071,2.593,1075,3.053,1080,3.053,1089,3.053,1102,1.791,1103,1.495,1140,2.215,1147,2.73,1473,3.304,1674,5.299,1678,3.477,1798,3.304,1855,5.299,1900,3.304,1901,5.253,1902,5.253,1903,3.81,1904,5.253,1905,3.81,1906,5.253,1907,3.81,1908,5.253,1909,3.81,1910,3.81,1911,3.81,1912,5.253,1913,3.81,1914,3.81,1915,3.81,1916,3.81,1917,3.81,1918,3.81,1919,3.81,1920,6.012,1921,3.81,1922,3.81,1923,7.027,1924,7.027,1925,3.81,1926,3.81,1927,3.81,1928,5.253,1929,5.253,1930,3.81,1931,3.81,1932,3.81,1933,3.81,1934,3.81,1935,6.798,1936,3.81,1937,6.798,1938,6.798,1939,6.798,1940,6.798,1941,3.81,1942,3.81,1943,3.81,1944,3.81]],["title/classes/ODataValueAnnotations.html",[0,0.344,707,2.411]],["body/classes/ODataValueAnnotations.html",[0,0.542,2,0.188,3,0.113,4,0.099,5,0.099,6,0.106,8,0.102,9,0.262,10,3.045,16,2.226,18,0.181,20,1.082,26,0.247,28,0.156,29,0.016,30,0.184,31,0.132,33,0.205,35,0.886,45,1.46,46,0.396,54,0.756,84,0.181,98,1.745,100,1.216,105,1.176,106,2.722,113,0.873,120,2.262,124,1.599,169,0.006,170,0.009,171,0.006,174,1.367,231,2.977,252,1.125,277,2.92,410,1.955,629,1.378,630,4.014,631,2.226,632,4.013,633,4.013,634,4.013,635,3.625,636,4.06,637,2.501,638,3.185,646,4.821,648,3.185,649,2.976,651,3.437,659,2.797,660,2.976,661,2.976,662,3.475,663,2.976,664,2.976,665,2.976,666,2.976,667,2.976,668,2.976,669,2.976,670,2.976,671,3.475,672,2.976,673,2.08,674,2.08,675,1.845,676,2.402,677,4.38,678,5.516,679,2.402,680,2.402,681,2.226,682,2.402,683,2.402,684,2.402,685,2.402,686,2.226,687,2.402,688,4.013,689,3.437,690,3.437,691,2.402,692,2.157,693,1.508,694,2.402,695,3.437,696,4.013,697,2.402,698,2.402,699,2.226,700,2.262,701,1.845,702,2.402,703,2.402,704,2.402,705,2.402,706,2.402,707,4.014,708,2.402,709,2.402,710,3.437,711,2.64,712,2.402,713,1.955,714,2.402,715,1.955,716,2.402,717,2.402,718,2.402,719,2.402,720,2.402,721,3.437,722,3.437,723,2.402,724,2.402,725,2.402,726,2.402,727,2.402,728,2.402,729,2.402,730,2.402,731,2.402,732,2.64,733,2.402,734,1.581,735,2.402,736,2.402,737,2.402,738,2.402,739,2.402,740,1.845,741,4.469,742,4.013,743,2.402,744,3.437,745,1.845,746,2.402,747,1.845,748,2.402,749,2.402,750,2.402,1217,2.622,1218,2.622,1219,2.622,1222,2.622,1223,2.622,1224,2.622,1225,2.622,1242,2.622,1945,3.364,1946,3.364,1947,3.364]],["title/classes/OptionHandler.html",[0,0.344,1724,2.411]],["body/classes/OptionHandler.html",[0,0.406,2,0.176,3,0.106,4,0.093,5,0.093,6,0.132,8,0.098,18,0.21,19,2.96,20,1.032,22,0.19,26,0.256,28,0.181,29,0.016,30,0.195,31,0.123,33,0.191,35,1.423,45,1.618,46,0.746,54,1.032,60,2.085,61,2.334,62,2.085,84,0.16,85,1.555,88,3.038,98,1.654,100,1.16,106,2.563,113,0.771,122,1.663,124,1.032,137,2.796,168,2.483,169,0.006,170,0.009,171,0.006,181,0.449,259,1.875,277,2.386,635,1.555,637,2.386,692,2.058,693,2.058,740,2.518,745,2.518,747,2.518,876,3.038,884,3.038,924,3.148,925,2.518,926,2.518,927,2.839,928,3.038,1016,2.839,1025,2.839,1060,2.125,1071,3.66,1269,3.038,1275,3.47,1362,3.68,1385,1.831,1403,3.98,1575,2.456,1579,3.578,1698,2.25,1705,3.867,1717,3.278,1719,3.038,1720,4.908,1721,1.948,1722,2.085,1723,2.25,1724,2.839,1770,2.085,1771,3.867,1778,2.25,1779,2.25,1781,2.25,1783,2.25,1784,1.948,1785,5.463,1786,2.085,1787,5.725,1789,2.732,1794,5.552,1799,2.732,1806,2.25,1807,2.732,1808,3.578,1809,4.715,1810,2.732,1811,2.732,1812,2.732,1813,2.732,1814,2.732,1815,2.732,1816,2.732,1817,2.732,1818,2.732,1819,2.732,1820,2.456,1821,2.732,1822,2.732,1823,2.732,1824,2.732,1825,2.732,1826,2.732,1827,2.732,1828,2.732,1829,2.732,1830,2.732,1831,2.732,1832,2.732,1833,2.732,1834,2.732,1835,2.732,1836,2.732,1837,2.732,1838,2.732,1839,2.732,1840,2.732,1841,2.732,1842,2.732,1843,3.98,1844,4.696,1845,2.732,1846,6.358,1847,2.456,1848,5.159,1849,5.159,1850,2.732,1851,3.98,1852,2.732,1853,3.98,1854,2.732,1855,2.456,1856,2.732,1857,3.98,1858,3.98,1859,3.98,1860,2.732,1861,2.732,1862,5.159,1863,2.732,1864,2.732,1865,2.732,1866,2.732,1867,2.732,1868,2.732,1869,3.98,1870,3.98,1871,3.98,1872,2.732,1873,3.98,1874,2.732,1875,2.732,1876,2.732,1877,3.98,1878,2.732,1948,4.59,1949,4.59,1950,3.151,1951,3.151,1952,3.151,1953,3.151,1954,3.151,1955,3.151,1956,3.151,1957,3.151,1958,3.151,1959,3.151,1960,3.151,1961,3.151,1962,3.151,1963,3.151,1964,3.151,1965,2.732,1966,3.151]],["title/interfaces/Parser.html",[567,1.597,1311,2.026]],["body/interfaces/Parser.html",[3,0.1,4,0.087,5,0.087,6,0.09,8,0.123,9,0.244,11,2.109,18,0.129,20,0.984,26,0.147,28,0.111,29,0.016,30,0.174,31,0.136,33,0.2,34,1.21,35,1.312,45,0.946,46,0.615,50,2.058,51,1.324,59,2.109,61,1.159,64,2.708,65,2.109,66,2.303,67,2.109,68,2.303,69,3.413,70,2.109,71,2.109,72,2.303,73,2.303,74,2.303,75,2.303,76,2.109,81,3.796,83,1.388,84,0.242,98,0.639,99,3.828,100,1.557,113,0.821,122,1.772,124,0.664,131,2.402,137,1.388,143,1.621,169,0.008,170,0.008,171,0.008,181,0.951,197,0.872,198,0.872,252,1.22,261,3.195,288,1.963,298,1.265,320,1.066,427,1.458,462,1.962,468,1.875,486,3.032,522,2.561,563,2.561,564,1.535,567,2.363,569,2.561,604,2.561,607,2.545,608,2.708,621,2.561,630,1.535,638,1.955,659,1.717,660,1.827,661,1.827,662,1.827,663,1.827,664,1.827,665,1.827,666,1.827,667,1.827,668,1.827,669,1.827,670,1.827,671,1.827,672,1.827,673,1.827,674,1.827,681,1.955,692,2.339,693,2.339,699,2.898,700,1.388,713,3.353,715,2.545,734,2.452,741,1.955,754,2.586,763,1.955,773,1.535,788,5.002,791,2.561,794,2.561,796,2.561,814,2.561,874,2.561,884,2.898,892,1.324,925,1.621,926,1.621,994,2.711,1029,1.717,1030,1.717,1032,1.621,1033,1.388,1048,1.159,1050,1.717,1051,1.621,1052,1.717,1054,1.324,1060,2.748,1071,3.185,1097,1.265,1098,1.324,1099,1.324,1100,1.621,1101,2.402,1103,2.531,1104,3.032,1109,1.717,1163,1.265,1164,1.717,1177,1.621,1190,2.545,1200,1.265,1216,1.388,1275,2.402,1295,2.708,1302,2.708,1303,2.898,1308,2.898,1311,1.535,1313,1.955,1329,1.535,1341,2.898,1419,4.12,1441,4.066,1455,1.717,1681,2.303,1691,2.303,1721,2.708,1725,2.109,1806,2.109,1820,3.413,1847,2.303,1967,2.303,1968,2.954,1969,2.954,1970,2.954,1971,5.217,1972,2.954,1973,4.378,1974,5.217,1975,2.561,1976,4.378,1977,2.954,1978,4.378,1979,4.378,1980,7.005,1981,4.378,1982,2.954,1983,2.954,1984,2.954,1985,5.217,1986,4.378,1987,4.378,1988,6.858,1989,5.217,1990,4.378,1991,4.378,1992,4.378,1993,2.954,1994,2.954,1995,2.954,1996,4.378,1997,2.954,1998,2.954,1999,2.954,2000,2.561,2001,2.561,2002,4.378,2003,2.954,2004,4.378,2005,2.954,2006,2.954,2007,4.378,2008,2.954,2009,2.561,2010,2.561,2011,6.16,2012,2.954,2013,2.561,2014,4.378,2015,4.378,2016,4.378,2017,2.954,2018,4.378,2019,2.561,2020,2.954,2021,2.954,2022,2.561,2023,2.954,2024,2.954,2025,2.954,2026,2.954,2027,2.561,2028,2.561,2029,2.561,2030,2.561,2031,2.561,2032,4.378,2033,4.378,2034,4.378,2035,2.561,2036,2.954,2037,2.954,2038,2.954,2039,2.954,2040,3.796,2041,3.796,2042,3.796,2043,2.954,2044,2.954,2045,2.954]],["title/classes/SegmentHandler.html",[0,0.344,1708,2.784]],["body/classes/SegmentHandler.html",[0,0.423,2,0.186,3,0.113,4,0.099,5,0.099,6,0.127,8,0.071,9,0.224,18,0.205,19,3.327,20,1.077,22,0.202,26,0.243,28,0.188,29,0.016,30,0.193,31,0.135,32,0.682,33,0.202,34,1.369,35,1.35,45,1.322,46,0.794,54,1.259,56,2.211,57,2.386,58,3.645,59,3.42,61,1.879,64,2.962,84,0.18,85,2.364,98,1.677,99,1.57,100,1.754,122,1.026,124,1.375,168,1.801,169,0.006,170,0.009,171,0.006,174,1.36,193,2.364,196,1.53,252,1.12,259,2.332,278,3.17,469,3.42,501,3.17,608,2.962,609,2.066,629,2.76,635,1.649,637,2.489,734,2.251,1016,2.066,1025,3.462,1071,3.018,1147,1.736,1242,2.604,1269,4.047,1275,1.833,1329,2.489,1694,4.853,1695,2.211,1696,2.897,1697,6.265,1698,2.386,1699,2.897,1700,5.532,1703,2.897,1705,2.386,1708,4.367,1710,2.897,1712,2.897,1717,4.622,1718,2.386,1719,3.17,1720,4.047,1721,2.066,1722,2.211,1723,2.386,1724,2.066,1725,2.386,1726,4.766,1727,2.604,1728,2.897,1729,4.153,1730,2.897,1731,2.897,1732,2.897,1733,4.153,1734,5.302,1735,2.897,1736,2.897,1737,5.613,1738,5.613,1739,2.897,1740,4.854,1741,2.897,1742,2.897,1743,4.854,1744,2.897,1745,2.897,1746,2.897,1747,2.897,1748,2.897,1749,2.897,1750,2.897,1751,2.897,1752,2.897,1753,2.897,1754,2.897,1755,2.897,1756,2.897,1757,2.897,1758,2.897,1759,2.897,1760,2.897,1761,4.153,1762,2.897,1763,2.897,1764,2.897,1765,4.854,1766,2.897,1767,2.897,1768,2.897,1769,2.897,1770,2.211,1771,2.386,1772,2.897,1773,2.897,1774,4.153,1775,4.153,1776,4.153,1777,4.153,1778,3.998,1779,2.386,1780,4.153,1781,2.386,1782,2.897,1783,2.386,1784,2.066,1965,2.897,2046,4.789,2047,4.789,2048,3.341,2049,4.789,2050,3.341,2051,3.341,2052,3.341,2053,3.341,2054,3.341,2055,3.341,2056,3.341,2057,3.341]],["title/coverage.html",[2058,4.627]],["body/coverage.html",[0,0.718,1,1.729,5,0.065,6,0.144,7,2.74,25,1.584,29,0.015,31,0.061,35,0.647,52,1.153,54,0.499,56,1.468,60,1.468,64,1.372,65,1.584,66,1.729,67,1.584,68,1.729,69,1.729,70,1.584,71,1.584,72,1.729,73,1.729,74,1.729,75,1.729,76,1.584,78,1.584,85,1.735,104,1.924,107,1.729,124,0.499,169,0.004,170,0.007,171,0.004,172,1.095,173,1.548,174,2.092,175,3.346,180,1.153,182,1.153,189,1.095,191,1.095,195,1.095,206,1.043,207,3.287,210,0.994,214,1.217,219,1.217,233,1.153,234,2.969,235,3.309,236,1.289,241,0.95,242,0.95,251,2.426,252,0.519,254,1.153,255,1.217,258,1.217,259,0.768,260,1.468,261,1.576,262,1.924,268,1.468,269,1.468,279,1.924,282,1.372,288,0.994,293,1.468,297,1.372,318,1.372,319,3.117,326,1.372,330,1.372,341,3.347,342,1.289,347,1.217,348,1.217,359,1.924,402,1.584,403,1.924,413,1.468,428,1.924,452,1.924,462,0.834,463,2.74,472,1.924,567,0.909,608,1.372,629,3.402,630,1.827,631,3.287,659,1.289,660,1.372,661,1.372,662,1.372,663,1.372,664,1.372,665,1.372,666,1.372,667,1.372,668,1.372,669,1.372,670,1.372,671,1.372,672,1.372,673,1.372,674,1.372,707,1.372,711,1.217,713,1.289,732,1.217,734,1.043,751,1.468,752,1.924,761,1.468,765,1.372,775,1.924,863,0.95,864,1.924,921,1.584,922,1.584,923,1.584,929,0.95,994,1.153,1027,1.153,1028,3.346,1072,1.217,1077,1.217,1086,0.994,1091,1.217,1094,0.994,1095,0.95,1096,0.994,1097,0.95,1162,1.217,1163,0.95,1207,1.217,1270,3.582,1311,1.827,1329,1.153,1399,2.724,1400,1.468,1402,1.924,1444,1.729,1518,1.924,1639,1.584,1640,1.924,1666,1.372,1670,1.729,1678,1.468,1681,1.729,1689,1.729,1694,2.889,1695,2.889,1708,1.584,1718,1.584,1722,1.468,1724,1.372,1725,1.584,1727,1.729,1785,2.51,1786,2.326,1806,1.584,1890,1.924,1900,1.924,1967,6.24,2001,1.924,2009,1.924,2019,1.924,2022,1.924,2027,1.924,2028,1.924,2029,1.924,2030,1.924,2031,1.924,2035,1.924,2058,1.924,2059,2.218,2060,2.218,2061,2.218,2062,2.218,2063,2.218,2064,3.515,2065,2.218,2066,5.412,2067,5.757,2068,5.412,2069,4.365,2070,8.168,2071,3.515,2072,2.218,2073,4.965,2074,8.119,2075,5.38,2076,1.924,2077,1.924,2078,1.924,2079,1.924,2080,1.924,2081,1.924,2082,1.924,2083,3.047,2084,1.924,2085,1.924,2086,1.924,2087,2.218,2088,2.218,2089,2.218,2090,2.218,2091,2.218,2092,2.218,2093,1.924,2094,2.218,2095,4.365,2096,2.218,2097,3.515,2098,4.965,2099,2.218,2100,2.218,2101,2.218,2102,2.218,2103,2.218,2104,3.515,2105,2.218,2106,2.218,2107,2.218,2108,2.218,2109,2.218,2110,2.218,2111,2.218,2112,2.218,2113,2.218,2114,2.218,2115,2.218,2116,2.218,2117,2.218,2118,2.218,2119,2.218,2120,2.218,2121,2.218,2122,2.218,2123,2.218,2124,2.218,2125,2.218,2126,2.218,2127,2.218,2128,2.218,2129,6.442,2130,5.412,2131,2.218,2132,5.757,2133,2.218,2134,2.218,2135,2.218,2136,3.515,2137,2.218,2138,2.218,2139,2.218,2140,2.218,2141,2.218,2142,2.218]],["title/dependencies.html",[1658,3.352,2143,3.248]],["body/dependencies.html",[29,0.015,51,2.722,169,0.011,170,0.013,171,0.011,1455,3.529,1658,4.336,2144,6.071,2145,8.059,2146,6.071,2147,6.071,2148,6.071,2149,7.068,2150,6.128,2151,6.071,2152,6.071,2153,6.071,2154,6.071,2155,6.071,2156,6.071,2157,6.071]],["title/miscellaneous/enumerations.html",[2158,2.009,2159,4.07]],["body/miscellaneous/enumerations.html",[6,0.129,7,3.956,8,0.108,19,2.275,24,5.5,28,0.161,29,0.015,31,0.11,35,1.525,57,4.53,64,3.923,86,4.401,87,4.401,88,3.359,89,4.401,90,4.401,100,1.603,169,0.009,170,0.012,171,0.009,174,1.802,193,3.131,196,2.027,252,1.483,278,4.199,463,3.956,464,5.5,469,4.53,470,4.401,471,4.401,501,4.199,608,3.923,734,2.981,740,3.48,745,3.48,747,3.48,924,3.687,925,3.48,926,3.48,927,3.923,928,4.199,1016,3.923,1694,3.359,1695,4.58,1726,4.945,1785,3.625,1786,4.199,1794,4.945,1808,4.945,1809,4.53,2075,3.625,2158,3.139,2159,4.401,2160,5.075,2161,5.5,2162,5.075,2163,5.075,2164,6.343,2165,3.956,2166,6.343,2167,6.343,2168,6.343,2169,6.343,2170,6.343]],["title/miscellaneous/functions.html",[410,2.728,2158,2.009]],["body/miscellaneous/functions.html",[6,0.111,8,0.111,18,0.237,28,0.204,29,0.015,30,0.204,32,0.741,33,0.194,35,0.958,45,1.655,58,2.445,137,3.028,169,0.01,170,0.012,171,0.01,174,1.83,410,3.024,927,3.218,1670,4.056,1674,4.056,1682,4.512,1689,5.022,1784,4.522,2075,3.716,2076,5.586,2077,5.586,2078,5.586,2079,5.586,2080,5.586,2081,5.586,2082,5.586,2083,5.586,2084,5.586,2085,5.586,2086,6.067,2158,3.218,2165,6.236,2171,5.203,2172,5.203,2173,4.512,2174,5.203,2175,5.203,2176,5.203,2177,6.442,2178,5.203,2179,5.203,2180,4.512,2181,5.203,2182,6.442,2183,5.203,2184,5.203,2185,5.203,2186,5.203,2187,5.203,2188,5.203,2189,5.203,2190,5.203]],["title/index.html",[8,0.069,2191,3.248,2192,3.248]],["body/index.html",[0,0.59,4,0.129,10,2.231,29,0.016,30,0.132,31,0.125,33,0.186,46,0.936,47,2.556,49,2.556,52,2.272,54,0.663,58,1.385,61,2.044,84,0.213,98,0.637,99,2.054,100,1.105,105,0.565,113,0.622,122,1.6,124,0.663,154,2.556,169,0.005,170,0.008,171,0.005,174,1.241,197,1.702,261,2.335,277,1.532,288,2.335,320,1.063,473,2.556,486,3.03,564,2.272,611,2.556,636,4.074,659,1.713,686,1.951,734,1.385,753,1.321,754,1.959,766,1.951,767,2.556,846,2.297,871,2.707,873,4.061,876,2.893,905,5.703,924,3.028,925,3.162,926,2.398,994,1.532,1032,2.858,1048,2.044,1051,1.617,1103,2.261,1110,1.713,1111,3.377,1124,2.708,1137,1.713,1163,1.262,1177,2.858,1199,4.14,1200,1.262,1216,1.385,1297,2.893,1311,1.532,1399,2.398,1400,2.893,1406,2.297,1455,3.879,1655,3.72,1656,4.074,1662,3.407,1666,2.703,1677,5.943,1678,3.448,1684,4.997,1686,2.556,1688,2.556,1719,2.893,1721,4.711,1770,2.893,1809,3.121,1975,5.59,2000,2.556,2010,2.556,2013,2.556,2193,7.459,2194,2.947,2195,4.371,2196,2.947,2197,2.947,2198,2.947,2199,2.947,2200,5.21,2201,5.21,2202,2.947,2203,4.371,2204,2.947,2205,2.947,2206,4.371,2207,4.371,2208,2.947,2209,5.763,2210,2.947,2211,4.371,2212,2.947,2213,2.947,2214,2.947,2215,5.21,2216,5.763,2217,2.947,2218,4.371,2219,4.371,2220,5.763,2221,4.371,2222,4.371,2223,4.371,2224,4.371,2225,4.371,2226,4.371,2227,4.371,2228,4.371,2229,5.763,2230,2.947,2231,2.947,2232,2.947,2233,2.947,2234,6.447,2235,2.947,2236,2.947,2237,2.947,2238,2.947,2239,2.947,2240,2.947,2241,6.155,2242,2.947,2243,5.763,2244,5.763,2245,2.947,2246,2.947,2247,2.947,2248,2.947,2249,2.947,2250,2.947,2251,2.947,2252,4.371,2253,2.947,2254,4.371,2255,4.371,2256,5.21,2257,2.947,2258,4.371,2259,2.947,2260,5.21,2261,2.947,2262,2.947,2263,6.447,2264,5.21,2265,6.155,2266,2.947,2267,2.947,2268,2.947,2269,2.947,2270,2.947,2271,4.371,2272,2.947,2273,5.21,2274,2.947,2275,2.947,2276,4.371,2277,2.947,2278,4.371,2279,2.947,2280,6.155,2281,2.947,2282,4.371,2283,2.947,2284,6.447,2285,5.21,2286,4.371,2287,4.371,2288,4.371,2289,4.371,2290,4.371,2291,5.21,2292,2.947,2293,2.947,2294,4.371,2295,2.947,2296,2.947,2297,2.947,2298,4.371,2299,2.947,2300,4.371,2301,2.947,2302,4.371,2303,2.947,2304,2.947,2305,4.371,2306,2.947,2307,5.21,2308,2.947,2309,2.947,2310,2.947,2311,2.556,2312,4.371,2313,2.947,2314,2.947,2315,2.947,2316,2.947,2317,2.947,2318,2.947,2319,2.947,2320,2.947,2321,2.947,2322,2.947,2323,2.947,2324,2.947,2325,2.947,2326,2.947,2327,2.947,2328,4.371,2329,2.947,2330,2.947,2331,2.947,2332,2.947,2333,2.947,2334,2.947,2335,2.947,2336,2.947,2337,2.947,2338,2.947]],["title/modules.html",[1657,4.16]],["body/modules.html",[29,0.014,169,0.012,170,0.014,171,0.012,1656,4.221,1657,4.971,2150,5.529,2339,6.377,2340,6.377,2341,6.377]],["title/overview.html",[2342,4.627]],["body/overview.html",[2,0.339,29,0.014,52,3.888,122,1.868,169,0.011,170,0.013,171,0.011,846,4.74,1401,4.343,1655,5.052,1656,5.254,1658,4.343,1659,5.273,1660,5.273,1661,5.273,1662,4.74,1663,5.273,1664,5.273,1665,5.273,1666,4.627,1667,6.134,1668,5.273,1669,5.273,1691,4.74,2311,5.273,2342,5.273,2343,6.081]],["title/miscellaneous/typealiases.html",[2158,2.009,2344,4.693]],["body/miscellaneous/typealiases.html",[6,0.122,8,0.101,29,0.015,31,0.141,33,0.193,35,1.12,80,4.026,107,5.231,113,0.866,169,0.009,170,0.011,171,0.009,181,0.676,259,2.324,427,3.003,462,2.287,468,2.605,640,3.334,763,4.026,924,3.535,925,3.337,926,3.337,927,3.762,928,4.026,930,5.274,1048,2.386,1054,2.129,1060,2.984,1098,2.727,1099,2.727,1100,3.337,1295,3.762,1302,4.15,1329,3.487,1558,5.274,1559,5.274,1694,3.144,1695,4.026,1700,4.742,1718,4.792,1720,4.442,1784,2.938,1786,4.841,1967,3.703,2040,5.274,2041,5.274,2042,5.274,2075,3.392,2093,5.818,2158,2.938,2161,4.119,2165,6.317,2173,5.274,2180,5.274,2345,7.976,2346,6.083,2347,7.075,2348,6.71,2349,6.71,2350,6.083,2351,4.75]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":629,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueAnnotations.html":{},"classes/SegmentHandler.html":{},"coverage.html":{}}}],["0.10.2",{"_index":2157,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2070,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2067,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2069,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2095,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2071,"title":{},"body":{"coverage.html":{}}}],["0/150",{"_index":2063,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2064,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2072,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2065,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2073,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":2127,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":2104,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":2125,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":2101,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":2116,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":2119,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":2097,"title":{},"body":{"coverage.html":{}}}],["0/44",{"_index":2122,"title":{},"body":{"coverage.html":{}}}],["0/49",{"_index":2106,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["0/52",{"_index":2108,"title":{},"body":{"coverage.html":{}}}],["0/55",{"_index":2114,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2068,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2066,"title":{},"body":{"coverage.html":{}}}],["0/74",{"_index":2110,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["0/85",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2098,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":122,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{},"overview.html":{}}}],["1).split",{"_index":683,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["1.10.0",{"_index":2155,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":846,"title":{},"body":{"classes/ODataBatch.html":{},"index.html":{},"overview.html":{}}}],["3",{"_index":686,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"index.html":{}}}],["4",{"_index":2311,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.0",{"_index":621,"title":{},"body":{"classes/Field.html":{},"interfaces/Parser.html":{}}}],["404",{"_index":1477,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["5",{"_index":2313,"title":{},"body":{"index.html":{}}}],["6.5.4",{"_index":2153,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2343,"title":{},"body":{"overview.html":{}}}],["9.1.9",{"_index":2145,"title":{},"body":{"dependencies.html":{}}}],["9a",{"_index":1737,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["_annotations",{"_index":867,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_context",{"_index":632,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["_entity",{"_index":1519,"title":{},"body":{"classes/ODataModel.html":{}}}],["_functions",{"_index":633,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["_models",{"_index":868,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_parse",{"_index":1361,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["_parse(obj",{"_index":1369,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["_parse(objs",{"_index":1370,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["_properties",{"_index":634,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["_query",{"_index":881,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_relations",{"_index":1520,"title":{},"body":{"classes/ODataModel.html":{}}}],["_resource",{"_index":869,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_segments",{"_index":880,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_state",{"_index":870,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_tojson",{"_index":1372,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["_tojson(obj",{"_index":1374,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["_tojson(objs",{"_index":1375,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["abstract",{"_index":237,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["acc",{"_index":700,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["acc[name",{"_index":701,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataValueAnnotations.html":{}}}],["accept",{"_index":69,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["acceptmetadata",{"_index":1029,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["accessors",{"_index":637,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["action",{"_index":196,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["action(key",{"_index":1415,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["action(name",{"_index":1004,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["action.ts",{"_index":175,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"coverage.html":{}}}],["action.ts:1",{"_index":306,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:12",{"_index":183,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:14",{"_index":186,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:15",{"_index":188,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:16",{"_index":185,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:17",{"_index":184,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:18",{"_index":187,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:22",{"_index":313,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:24",{"_index":317,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:25",{"_index":315,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:26",{"_index":314,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:27",{"_index":316,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:3",{"_index":310,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:31",{"_index":202,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:33",{"_index":205,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:34",{"_index":203,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:35",{"_index":204,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:39",{"_index":367,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:4",{"_index":312,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:41",{"_index":369,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:42",{"_index":374,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:43",{"_index":370,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:44",{"_index":368,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:45",{"_index":371,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:46",{"_index":372,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:47",{"_index":373,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:5",{"_index":308,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:51",{"_index":395,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:53",{"_index":401,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:54",{"_index":397,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:55",{"_index":396,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:56",{"_index":398,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:57",{"_index":399,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:58",{"_index":400,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:6",{"_index":307,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:7",{"_index":309,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:8",{"_index":311,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["actionimport",{"_index":516,"title":{},"body":{"classes/Field.html":{}}}],["actionimports",{"_index":263,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["actions",{"_index":404,"title":{},"body":{"classes/CsdlSchema.html":{},"injectables/ODataEntityService.html":{}}}],["add",{"_index":871,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"index.html":{}}}],["add(method",{"_index":127,"title":{},"body":{"classes/BatchRequest.html":{}}}],["add(model",{"_index":890,"title":{},"body":{"classes/ODataCollection.html":{}}}],["addition",{"_index":2012,"title":{},"body":{"interfaces/Parser.html":{}}}],["additionalitems",{"_index":1345,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["addressinfo",{"_index":2264,"title":{},"body":{"index.html":{}}}],["advanced",{"_index":2271,"title":{},"body":{"index.html":{}}}],["aggregate",{"_index":2173,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["airport",{"_index":2245,"title":{},"body":{"index.html":{}}}],["airport.get",{"_index":2247,"title":{},"body":{"index.html":{}}}],["airports",{"_index":2236,"title":{},"body":{"index.html":{}}}],["airports.all",{"_index":2238,"title":{},"body":{"index.html":{}}}],["airports.entity(\"cyyz",{"_index":2246,"title":{},"body":{"index.html":{}}}],["airports.filter().clear",{"_index":2259,"title":{},"body":{"index.html":{}}}],["airports.filter().push({location",{"_index":2257,"title":{},"body":{"index.html":{}}}],["airports.filter({location",{"_index":2251,"title":{},"body":{"index.html":{}}}],["airports.get",{"_index":2256,"title":{},"body":{"index.html":{}}}],["airports.get({withcount",{"_index":2242,"title":{},"body":{"index.html":{}}}],["airportsservice",{"_index":2232,"title":{},"body":{"index.html":{}}}],["airportsservice.entities",{"_index":2237,"title":{},"body":{"index.html":{}}}],["alias",{"_index":259,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["alias(name",{"_index":1025,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["aliases",{"_index":1784,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["all(options",{"_index":1466,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["angular",{"_index":2193,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2144,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2146,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":83,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"modules/ODataModule.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["angular/compiler",{"_index":2147,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1455,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Parser.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":2148,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2149,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2152,"title":{},"body":{"dependencies.html":{}}}],["angularodataentity",{"_index":2207,"title":{},"body":{"index.html":{}}}],["angularodatamodel",{"_index":2208,"title":{},"body":{"index.html":{}}}],["annotation",{"_index":325,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["annotation.ts",{"_index":207,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"coverage.html":{}}}],["annotation.ts:1",{"_index":211,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:15",{"_index":224,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:17",{"_index":226,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:18",{"_index":225,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:2",{"_index":212,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:22",{"_index":441,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:24",{"_index":446,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:25",{"_index":451,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:26",{"_index":443,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:27",{"_index":444,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:28",{"_index":442,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:29",{"_index":447,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:30",{"_index":445,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:31",{"_index":448,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:32",{"_index":449,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:33",{"_index":450,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:5",{"_index":228,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:7",{"_index":230,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:9",{"_index":229,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotationlist",{"_index":208,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["annotations",{"_index":486,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["annotationslist",{"_index":405,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["annots",{"_index":905,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"index.html":{}}}],["annots.count",{"_index":962,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.skip",{"_index":957,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.skiptoken",{"_index":960,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.top",{"_index":955,"title":{},"body":{"classes/ODataCollection.html":{}}}],["api",{"_index":2195,"title":{},"body":{"index.html":{}}}],["apis",{"_index":1924,"title":{},"body":{"classes/ODataSettings.html":{}}}],["aport",{"_index":2250,"title":{},"body":{"index.html":{}}}],["aports",{"_index":2241,"title":{},"body":{"index.html":{}}}],["app",{"_index":2222,"title":{},"body":{"index.html":{}}}],["app.component.css",{"_index":2227,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":2225,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":2228,"title":{},"body":{"index.html":{}}}],["application/http",{"_index":2021,"title":{},"body":{"interfaces/Parser.html":{}}}],["application/json",{"_index":2020,"title":{},"body":{"interfaces/Parser.html":{}}}],["application_http",{"_index":74,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["application_json",{"_index":66,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["appliesto",{"_index":222,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["appmodule",{"_index":2216,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":2017,"title":{},"body":{"interfaces/Parser.html":{}}}],["arr",{"_index":1864,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.find(v",{"_index":1866,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.push(obj",{"_index":1868,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["array",{"_index":1060,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(objs",{"_index":1367,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["array.isarray(value",{"_index":1304,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["assertarray",{"_index":1848,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assertobject",{"_index":1862,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assign",{"_index":1403,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/OptionHandler.html":{}}}],["assign(entity",{"_index":1418,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["assign(values",{"_index":1877,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["at(index",{"_index":1859,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["attach",{"_index":872,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{}}}],["attach(resource",{"_index":894,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["attach(value",{"_index":1642,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["attr",{"_index":616,"title":{},"body":{"classes/Field.html":{}}}],["attr.nodevalue",{"_index":620,"title":{},"body":{"classes/Field.html":{}}}],["attribute",{"_index":470,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["attribute_abstract",{"_index":557,"title":{},"body":{"classes/Field.html":{}}}],["attribute_action",{"_index":554,"title":{},"body":{"classes/Field.html":{}}}],["attribute_alias",{"_index":524,"title":{},"body":{"classes/Field.html":{}}}],["attribute_applies_to",{"_index":562,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_term",{"_index":561,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_type",{"_index":532,"title":{},"body":{"classes/Field.html":{}}}],["attribute_contains_target",{"_index":546,"title":{},"body":{"classes/Field.html":{}}}],["attribute_default_value",{"_index":541,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set",{"_index":555,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set_path",{"_index":548,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_type",{"_index":550,"title":{},"body":{"classes/Field.html":{}}}],["attribute_extends",{"_index":560,"title":{},"body":{"classes/Field.html":{}}}],["attribute_function",{"_index":553,"title":{},"body":{"classes/Field.html":{}}}],["attribute_has_stream",{"_index":545,"title":{},"body":{"classes/Field.html":{}}}],["attribute_include_in_service_document",{"_index":556,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_bound",{"_index":547,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_composable",{"_index":549,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_flags",{"_index":559,"title":{},"body":{"classes/Field.html":{}}}],["attribute_max_length",{"_index":536,"title":{},"body":{"classes/Field.html":{}}}],["attribute_name",{"_index":530,"title":{},"body":{"classes/Field.html":{}}}],["attribute_namespace",{"_index":525,"title":{},"body":{"classes/Field.html":{}}}],["attribute_nullable",{"_index":535,"title":{},"body":{"classes/Field.html":{}}}],["attribute_open_type",{"_index":533,"title":{},"body":{"classes/Field.html":{}}}],["attribute_partner",{"_index":542,"title":{},"body":{"classes/Field.html":{}}}],["attribute_path",{"_index":551,"title":{},"body":{"classes/Field.html":{}}}],["attribute_precision",{"_index":537,"title":{},"body":{"classes/Field.html":{}}}],["attribute_property",{"_index":543,"title":{},"body":{"classes/Field.html":{}}}],["attribute_qualifier",{"_index":527,"title":{},"body":{"classes/Field.html":{}}}],["attribute_referenced_property",{"_index":544,"title":{},"body":{"classes/Field.html":{}}}],["attribute_scale",{"_index":538,"title":{},"body":{"classes/Field.html":{}}}],["attribute_srid",{"_index":540,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target",{"_index":552,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target_namespace",{"_index":528,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term",{"_index":529,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term_namespace",{"_index":526,"title":{},"body":{"classes/Field.html":{}}}],["attribute_type",{"_index":534,"title":{},"body":{"classes/Field.html":{}}}],["attribute_underlying_type",{"_index":558,"title":{},"body":{"classes/Field.html":{}}}],["attribute_unicode",{"_index":539,"title":{},"body":{"classes/Field.html":{}}}],["attribute_uri",{"_index":523,"title":{},"body":{"classes/Field.html":{}}}],["attribute_value",{"_index":531,"title":{},"body":{"classes/Field.html":{}}}],["attribute_version",{"_index":521,"title":{},"body":{"classes/Field.html":{}}}],["attributes",{"_index":520,"title":{},"body":{"classes/Field.html":{},"classes/ODataModel.html":{}}}],["attributes.getnameditem('version",{"_index":617,"title":{},"body":{"classes/Field.html":{}}}],["attrs",{"_index":1291,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{}}}],["average",{"_index":2169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backward",{"_index":1758,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["base",{"_index":773,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}}}],["baseterm",{"_index":220,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["basetype",{"_index":238,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["batch",{"_index":64,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["batch_",{"_index":36,"title":{},"body":{"classes/BatchRequest.html":{}}}],["batch_prefix",{"_index":12,"title":{},"body":{"classes/BatchRequest.html":{}}}],["batchbody",{"_index":826,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchbody.split(odatabatch.newline",{"_index":828,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchbodyline",{"_index":837,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchbodylines",{"_index":802,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchbodylines[index",{"_index":853,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchbodylines[index].split",{"_index":855,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchboundary",{"_index":110,"title":{},"body":{"classes/BatchRequest.html":{}}}],["batchpartendindex",{"_index":800,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchpartstartindex",{"_index":799,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchrequest",{"_index":1,"title":{"classes/BatchRequest.html":{}},"body":{"classes/BatchRequest.html":{},"coverage.html":{}}}],["batchrequest(method",{"_index":129,"title":{},"body":{"classes/BatchRequest.html":{}}}],["batchrequest.batch_prefix",{"_index":118,"title":{},"body":{"classes/BatchRequest.html":{}}}],["batchrequest.boundary_prefix_suffix",{"_index":158,"title":{},"body":{"classes/BatchRequest.html":{}}}],["batchrequest.changeset_prefix",{"_index":159,"title":{},"body":{"classes/BatchRequest.html":{}}}],["between",{"_index":1999,"title":{},"body":{"interfaces/Parser.html":{}}}],["binary",{"_index":107,"title":{},"body":{"classes/BatchRequest.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["binding",{"_index":289,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["binding.ts",{"_index":359,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{},"coverage.html":{}}}],["binding.ts:1",{"_index":361,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:3",{"_index":362,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:4",{"_index":363,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["body",{"_index":91,"title":{},"body":{"classes/BatchRequest.html":{}}}],["boolean",{"_index":181,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["boolean_functions",{"_index":2087,"title":{},"body":{"coverage.html":{}}}],["bootstrap",{"_index":1661,"title":{},"body":{"modules/ODataModule.html":{},"overview.html":{}}}],["boundary",{"_index":153,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{}}}],["boundary.split('=')[1",{"_index":849,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundary_prefix_suffix",{"_index":13,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{}}}],["boundarydelimiter",{"_index":811,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundarydelimiter.length",{"_index":850,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundarydelimiterbatch",{"_index":822,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundarydelimitercs",{"_index":831,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundaryend",{"_index":851,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundaryendbatch",{"_index":824,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundaryendcs",{"_index":832,"title":{},"body":{"classes/ODataBatch.html":{}}}],["break",{"_index":1205,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["browse",{"_index":2341,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2150,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":767,"title":{},"body":{"classes/ODataBaseService.html":{},"index.html":{}}}],["buildaggregate",{"_index":2076,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildaggregate(aggregate",{"_index":2172,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builder",{"_index":1719,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["buildexpand",{"_index":2077,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildexpand(expands",{"_index":2174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter",{"_index":2078,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildfilter(filters",{"_index":2176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby",{"_index":2079,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildgroupby(groupby",{"_index":2179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby",{"_index":2080,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildorderby(orderby",{"_index":2181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildquery",{"_index":1717,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["buildquery(options",{"_index":1823,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["buildtransforms",{"_index":2081,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildtransforms(transforms",{"_index":2183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl",{"_index":2082,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildurl(path",{"_index":2185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["built",{"_index":2332,"title":{},"body":{"index.html":{}}}],["builtfilters",{"_index":2189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["c",{"_index":1644,"title":{},"body":{"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{}}}],["c.name",{"_index":1931,"title":{},"body":{"classes/ODataSettings.html":{}}}],["c.schemas.some(s",{"_index":1932,"title":{},"body":{"classes/ODataSettings.html":{}}}],["california",{"_index":2258,"title":{},"body":{"index.html":{}}}],["call",{"_index":1001,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["case",{"_index":1730,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["catch",{"_index":603,"title":{},"body":{"classes/Field.html":{}}}],["catcherror",{"_index":1457,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["changes",{"_index":1984,"title":{},"body":{"interfaces/Parser.html":{}}}],["changeset",{"_index":152,"title":{},"body":{"classes/BatchRequest.html":{}}}],["changeset_",{"_index":39,"title":{},"body":{"classes/BatchRequest.html":{}}}],["changeset_prefix",{"_index":14,"title":{},"body":{"classes/BatchRequest.html":{}}}],["changesetboundary",{"_index":111,"title":{},"body":{"classes/BatchRequest.html":{}}}],["changesetid",{"_index":112,"title":{},"body":{"classes/BatchRequest.html":{}}}],["check",{"_index":611,"title":{},"body":{"classes/Field.html":{},"index.html":{}}}],["checkversion(document",{"_index":610,"title":{},"body":{"classes/Field.html":{}}}],["children",{"_index":626,"title":{},"body":{"classes/Field.html":{}}}],["choose",{"_index":2326,"title":{},"body":{"index.html":{}}}],["chunks",{"_index":1745,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["chunks.join(path_separator",{"_index":1747,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["city",{"_index":2252,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"overview.html":{}}}],["clear",{"_index":1787,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["client",{"_index":53,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{}}}],["clone",{"_index":635,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["close",{"_index":155,"title":{},"body":{"classes/BatchRequest.html":{}}}],["cluster_odatamodule",{"_index":1664,"title":{},"body":{"modules/ODataModule.html":{},"overview.html":{}}}],["cluster_odatamodule_providers",{"_index":1665,"title":{},"body":{"modules/ODataModule.html":{},"overview.html":{}}}],["collection",{"_index":1103,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["collection(models",{"_index":1647,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["collection_operators",{"_index":2088,"title":{},"body":{"coverage.html":{}}}],["collectionaction",{"_index":1404,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["collectionaction(name",{"_index":1421,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["collectionforname",{"_index":1034,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataSettings.html":{}}}],["collectionforname(name",{"_index":1064,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["collectionfortype",{"_index":1035,"title":{},"body":{"classes/ODataConfig.html":{}}}],["collectionfortype(type",{"_index":1066,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["collectionfunction",{"_index":1405,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["collectionfunction(name",{"_index":1423,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["comparison_operators",{"_index":2089,"title":{},"body":{"coverage.html":{}}}],["complexes",{"_index":1582,"title":{},"body":{"classes/ODataModel.html":{}}}],["complextype",{"_index":494,"title":{},"body":{"classes/Field.html":{}}}],["complextypes",{"_index":406,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["compliant",{"_index":2336,"title":{},"body":{"index.html":{}}}],["component",{"_index":2220,"title":{},"body":{"index.html":{}}}],["concurrency",{"_index":2290,"title":{},"body":{"index.html":{}}}],["config",{"_index":753,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"injectables/ODataModelService.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"index.html":{}}}],["config(name",{"_index":1906,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.acceptmetadata",{"_index":1126,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.annotations",{"_index":1192,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.base",{"_index":1353,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["config.collection",{"_index":1151,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.collectionforname(name)).filter(e",{"_index":1944,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.configure",{"_index":1927,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.configure(settings",{"_index":1182,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.containers",{"_index":1174,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.creation",{"_index":1130,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.entities",{"_index":1171,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.entityconfigforname(name)).filter(e",{"_index":1941,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.enumconfigforname(name)).filter(e",{"_index":1936,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.enums",{"_index":1168,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.expand",{"_index":1380,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["config.headers",{"_index":1119,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.members",{"_index":1184,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.model",{"_index":1150,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.modelforname(name)).filter(e",{"_index":1943,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.name",{"_index":1115,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.namespace",{"_index":1166,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.params",{"_index":1117,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.parser",{"_index":1161,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.schemas",{"_index":1131,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.select",{"_index":1381,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["config.select).indexof(f.name",{"_index":1382,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["config.serviceconfigforname(name)).filter(e",{"_index":1942,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.servicerooturl",{"_index":1106,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.servicerooturl}$metadata",{"_index":1121,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.services",{"_index":1209,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.stringasenum",{"_index":1128,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.withcredentials",{"_index":1123,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["configfortype",{"_index":1901,"title":{},"body":{"classes/ODataSettings.html":{}}}],["configfortype(type",{"_index":1908,"title":{},"body":{"classes/ODataSettings.html":{}}}],["configs",{"_index":1674,"title":{},"body":{"modules/ODataModule.html":{},"classes/ODataSettings.html":{},"miscellaneous/functions.html":{}}}],["configs.map(config",{"_index":1918,"title":{},"body":{"classes/ODataSettings.html":{}}}],["configuration",{"_index":1048,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"interfaces/Parser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["configure",{"_index":1036,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["configure(settings",{"_index":1180,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["console.log(\"airport",{"_index":2249,"title":{},"body":{"index.html":{}}}],["console.log(\"airports",{"_index":2244,"title":{},"body":{"index.html":{}}}],["console.log(\"all",{"_index":2240,"title":{},"body":{"index.html":{}}}],["console.log(\"people",{"_index":2268,"title":{},"body":{"index.html":{}}}],["const",{"_index":99,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataBatch.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["constructor(...configs",{"_index":1916,"title":{},"body":{"classes/ODataSettings.html":{}}}],["constructor(action",{"_index":364,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["constructor(annotationlist",{"_index":209,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["constructor(client",{"_index":755,"title":{},"body":{"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{}}}],["constructor(config",{"_index":1047,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["constructor(configs",{"_index":1903,"title":{},"body":{"classes/ODataSettings.html":{}}}],["constructor(entity",{"_index":1524,"title":{},"body":{"classes/ODataModel.html":{}}}],["constructor(httpresponse",{"_index":785,"title":{},"body":{"classes/ODataBatch.html":{}}}],["constructor(meta",{"_index":1314,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["constructor(method",{"_index":23,"title":{},"body":{"classes/BatchRequest.html":{}}}],["constructor(name",{"_index":179,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["constructor(namespace",{"_index":321,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlSchema.html":{}}}],["constructor(o",{"_index":1950,"title":{},"body":{"classes/OptionHandler.html":{}}}],["constructor(options",{"_index":1789,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["constructor(path",{"_index":360,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["constructor(private",{"_index":1770,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["constructor(property",{"_index":390,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["constructor(propertyrefs",{"_index":338,"title":{},"body":{"classes/CsdlKey.html":{}}}],["constructor(protected",{"_index":675,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataValueAnnotations.html":{}}}],["constructor(public",{"_index":213,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["constructor(segment",{"_index":2048,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["constructor(segments",{"_index":1699,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["constructor(service",{"_index":114,"title":{},"body":{"classes/BatchRequest.html":{}}}],["constructor(target",{"_index":227,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["constructor(term",{"_index":223,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["constructor(termnamespace",{"_index":333,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["constructor(type",{"_index":394,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["constructor(uri",{"_index":385,"title":{},"body":{"classes/CsdlReference.html":{}}}],["constructor(value",{"_index":639,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["constructor(values",{"_index":882,"title":{},"body":{"classes/ODataCollection.html":{}}}],["constructor(xml",{"_index":565,"title":{},"body":{"classes/Field.html":{}}}],["contain",{"_index":1109,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["container",{"_index":427,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["container.services",{"_index":1179,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["container.ts",{"_index":262,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"coverage.html":{}}}],["container.ts:10",{"_index":276,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:11",{"_index":274,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:12",{"_index":271,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:5",{"_index":270,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:7",{"_index":275,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:8",{"_index":273,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:9",{"_index":272,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["containers",{"_index":1164,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["containing",{"_index":2003,"title":{},"body":{"interfaces/Parser.html":{}}}],["containstarget",{"_index":343,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["content",{"_index":788,"title":{},"body":{"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["content_id",{"_index":76,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["content_transfer_encoding",{"_index":75,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["content_type",{"_index":65,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["contentid",{"_index":830,"title":{},"body":{"classes/ODataBatch.html":{}}}],["contenttype",{"_index":808,"title":{},"body":{"classes/ODataBatch.html":{}}}],["contenttype.split",{"_index":844,"title":{},"body":{"classes/ODataBatch.html":{}}}],["contenttype.split(';')[1].trim",{"_index":847,"title":{},"body":{"classes/ODataBatch.html":{}}}],["contenttypeparts",{"_index":843,"title":{},"body":{"classes/ODataBatch.html":{}}}],["contenttypeparts.length",{"_index":845,"title":{},"body":{"classes/ODataBatch.html":{}}}],["context",{"_index":638,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["corresponding",{"_index":2275,"title":{},"body":{"index.html":{}}}],["count",{"_index":734,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["countdistinct",{"_index":2170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["countryregion",{"_index":2253,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":2058,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1406,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"index.html":{}}}],["create(entity",{"_index":1425,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["create(options",{"_index":1533,"title":{},"body":{"classes/ODataModel.html":{}}}],["created",{"_index":2272,"title":{},"body":{"index.html":{}}}],["createentityservice",{"_index":1891,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["createentityservice(path",{"_index":1894,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["createmodelservice",{"_index":1892,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["createmodelservice(path",{"_index":1896,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["createodataresponse",{"_index":778,"title":{},"body":{"classes/ODataBatch.html":{}}}],["createodataresponse(batchbodylines",{"_index":798,"title":{},"body":{"classes/ODataBatch.html":{}}}],["createsettings",{"_index":1689,"title":{},"body":{"modules/ODataModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createsettings(configs",{"_index":1682,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":2197,"title":{},"body":{"index.html":{}}}],["creation",{"_index":1030,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["credits",{"_index":2331,"title":{},"body":{"index.html":{}}}],["csdl",{"_index":250,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdl/csdl",{"_index":467,"title":{},"body":{"classes/Field.html":{}}}],["csdlaction",{"_index":172,"title":{"classes/CsdlAction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlactionimport",{"_index":195,"title":{"classes/CsdlActionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlannotable",{"_index":206,"title":{"classes/CsdlAnnotable.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"coverage.html":{}}}],["csdlannotable:2",{"_index":232,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotation",{"_index":210,"title":{"classes/CsdlAnnotation.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlannotations",{"_index":214,"title":{"classes/CsdlAnnotations.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlcomplextype",{"_index":233,"title":{"classes/CsdlComplexType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlentitycontainer",{"_index":260,"title":{"classes/CsdlEntityContainer.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlentityset",{"_index":268,"title":{"classes/CsdlEntitySet.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlentitytype",{"_index":254,"title":{"classes/CsdlEntityType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlenummember",{"_index":293,"title":{"classes/CsdlEnumMember.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlenumtype",{"_index":297,"title":{"classes/CsdlEnumType.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlfunction",{"_index":189,"title":{"classes/CsdlFunction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlfunctionimport",{"_index":191,"title":{"classes/CsdlFunctionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlinclude",{"_index":318,"title":{"classes/CsdlInclude.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlincludeannotations",{"_index":330,"title":{"classes/CsdlIncludeAnnotations.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlkey",{"_index":255,"title":{"classes/CsdlKey.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlnavigationproperty",{"_index":242,"title":{"classes/CsdlNavigationProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlnavigationpropertybinding",{"_index":282,"title":{"classes/CsdlNavigationPropertyBinding.html":{}},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlondelete",{"_index":348,"title":{"classes/CsdlOnDelete.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlparameter",{"_index":182,"title":{"classes/CsdlParameter.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlproperty",{"_index":241,"title":{"classes/CsdlProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlpropertyref",{"_index":258,"title":{"classes/CsdlPropertyRef.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlreference",{"_index":326,"title":{"classes/CsdlReference.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlreferentialconstraint",{"_index":347,"title":{"classes/CsdlReferentialConstraint.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlreturntype",{"_index":180,"title":{"classes/CsdlReturnType.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlschema",{"_index":402,"title":{"classes/CsdlSchema.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlsingleton",{"_index":269,"title":{"classes/CsdlSingleton.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdlstructuralproperty",{"_index":342,"title":{"classes/CsdlStructuralProperty.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"coverage.html":{}}}],["csdlstructuralproperty:3",{"_index":354,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:4",{"_index":356,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:5",{"_index":355,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuredtype",{"_index":236,"title":{"classes/CsdlStructuredType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"coverage.html":{}}}],["csdlstructuredtype:10",{"_index":244,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:5",{"_index":246,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:6",{"_index":249,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:7",{"_index":247,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:8",{"_index":245,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:9",{"_index":248,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlterm",{"_index":219,"title":{"classes/CsdlTerm.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"coverage.html":{}}}],["csdltypedefinition",{"_index":413,"title":{"classes/CsdlTypeDefinition.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"coverage.html":{}}}],["ctor",{"_index":768,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["ctor(this.models",{"_index":971,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ctor(this.toentity",{"_index":1601,"title":{},"body":{"classes/ODataModel.html":{}}}],["ctor.entity",{"_index":771,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["custom",{"_index":1809,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["customizations",{"_index":2330,"title":{},"body":{"index.html":{}}}],["data",{"_index":648,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["dataservices",{"_index":586,"title":{},"body":{"classes/Field.html":{}}}],["date",{"_index":1054,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["date(v",{"_index":1306,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["date(value",{"_index":1307,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["declarations",{"_index":1660,"title":{},"body":{"modules/ODataModule.html":{},"overview.html":{}}}],["decodeuricomponent(this.value[odata_deltalink",{"_index":739,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["decodeuricomponent(this.value[odata_editlink",{"_index":724,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["decodeuricomponent(this.value[odata_media_editlink",{"_index":728,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["decodeuricomponent(this.value[odata_media_etag",{"_index":718,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["decodeuricomponent(this.value[odata_media_readlink",{"_index":726,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["decodeuricomponent(this.value[odata_nextlink",{"_index":737,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["decodeuricomponent(this.value[odata_readlink",{"_index":722,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["deep",{"_index":2329,"title":{},"body":{"index.html":{}}}],["default",{"_index":34,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["defaultvalue",{"_index":221,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["definition",{"_index":426,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["definition.ts",{"_index":452,"title":{},"body":{"classes/CsdlTypeDefinition.html":{},"coverage.html":{}}}],["definition.ts:10",{"_index":461,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:11",{"_index":459,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:3",{"_index":454,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:5",{"_index":456,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:6",{"_index":460,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:7",{"_index":455,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:8",{"_index":457,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:9",{"_index":458,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definitions",{"_index":2274,"title":{},"body":{"index.html":{}}}],["delete",{"_index":88,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["delete(options",{"_index":1472,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["deleting",{"_index":2199,"title":{},"body":{"index.html":{}}}],["delta",{"_index":1982,"title":{},"body":{"interfaces/Parser.html":{}}}],["deltalink",{"_index":738,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["dependencies",{"_index":1658,"title":{"dependencies.html":{}},"body":{"modules/ODataModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":1690,"title":{},"body":{"modules/ODataModule.html":{}}}],["describe",{"_index":1997,"title":{},"body":{"interfaces/Parser.html":{}}}],["description",{"_index":1298,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["deserialize",{"_index":1319,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["destroy",{"_index":1407,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["destroy(entity",{"_index":1427,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["destroy(options",{"_index":1535,"title":{},"body":{"classes/ODataModel.html":{}}}],["determined",{"_index":2006,"title":{},"body":{"interfaces/Parser.html":{}}}],["document",{"_index":569,"title":{},"body":{"classes/Field.html":{},"interfaces/Parser.html":{}}}],["document.documentelement.attributes",{"_index":577,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.getelementsbytagname(odatametadata.tag_data_services)[0",{"_index":588,"title":{},"body":{"classes/Field.html":{}}}],["documentation",{"_index":2059,"title":{},"body":{"coverage.html":{}}}],["domparser",{"_index":568,"title":{},"body":{"classes/Field.html":{}}}],["done",{"_index":975,"title":{},"body":{"classes/ODataCollection.html":{}}}],["down",{"_index":1856,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["dynamic",{"_index":2151,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1937,"title":{},"body":{"classes/ODataSettings.html":{}}}],["e.name",{"_index":1156,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["e.type",{"_index":1143,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["edit",{"_index":1990,"title":{},"body":{"interfaces/Parser.html":{}}}],["edit/update",{"_index":1992,"title":{},"body":{"interfaces/Parser.html":{}}}],["editlink",{"_index":723,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["edmx:dataservices",{"_index":477,"title":{},"body":{"classes/Field.html":{}}}],["edmx:edmx",{"_index":475,"title":{},"body":{"classes/Field.html":{}}}],["edmx:include",{"_index":481,"title":{},"body":{"classes/Field.html":{}}}],["edmx:includeannotations",{"_index":483,"title":{},"body":{"classes/Field.html":{}}}],["edmx:reference",{"_index":479,"title":{},"body":{"classes/Field.html":{}}}],["element",{"_index":587,"title":{},"body":{"classes/Field.html":{}}}],["emails",{"_index":2288,"title":{},"body":{"index.html":{}}}],["empty",{"_index":920,"title":{},"body":{"classes/ODataCollection.html":{}}}],["encoding",{"_index":2026,"title":{},"body":{"interfaces/Parser.html":{}}}],["endregion",{"_index":1152,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["entities",{"_index":754,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"injectables/ODataModelService.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["entity",{"_index":261,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Parser.html":{},"coverage.html":{},"index.html":{}}}],["entity(key",{"_index":762,"title":{},"body":{"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["entity[value.field.name",{"_index":1617,"title":{},"body":{"classes/ODataModel.html":{}}}],["entityattributes",{"_index":2035,"title":{},"body":{"interfaces/Parser.html":{},"coverage.html":{}}}],["entityconfig",{"_index":1098,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["entityconfig;2",{"_index":2297,"title":{},"body":{"index.html":{}}}],["entityconfigforname",{"_index":1037,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataSettings.html":{}}}],["entityconfigforname(name",{"_index":1069,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["entityconfigfortype",{"_index":1038,"title":{},"body":{"classes/ODataConfig.html":{}}}],["entityconfigfortype(type",{"_index":1073,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["entitycontainer",{"_index":407,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["entitykey",{"_index":763,"title":{},"body":{"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["entityset",{"_index":193,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["entitysetpath",{"_index":176,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["entitysets",{"_index":264,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["entitytype",{"_index":280,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["entitytypes",{"_index":408,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["entries",{"_index":1573,"title":{},"body":{"classes/ODataModel.html":{}}}],["enum",{"_index":85,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"coverage.html":{}}}],["enumconfig",{"_index":1099,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["enumconfigforname",{"_index":1039,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataSettings.html":{}}}],["enumconfigforname(name",{"_index":1075,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["enumconfigfortype",{"_index":1040,"title":{},"body":{"classes/ODataConfig.html":{}}}],["enumconfigfortype(type",{"_index":1078,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["enumerations",{"_index":2159,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1163,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"coverage.html":{},"index.html":{}}}],["enums.join",{"_index":1328,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enums.keys(this.members",{"_index":1331,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enums.map(e",{"_index":1326,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enums.toenum(this.members",{"_index":1325,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enums.toenums(this.members",{"_index":1324,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enums.toflags(this.members",{"_index":1321,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enums.tovalue(this.members",{"_index":1322,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enumtype",{"_index":490,"title":{},"body":{"classes/Field.html":{}}}],["enumtypes",{"_index":409,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["error",{"_index":604,"title":{},"body":{"classes/Field.html":{},"interfaces/Parser.html":{}}}],["error(\"multiple",{"_index":1923,"title":{},"body":{"classes/ODataSettings.html":{}}}],["error(\"not",{"_index":983,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["error(\"the",{"_index":1108,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["error('odata",{"_index":614,"title":{},"body":{"classes/Field.html":{}}}],["error('unable",{"_index":606,"title":{},"body":{"classes/Field.html":{}}}],["error(`can't",{"_index":947,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["error.status",{"_index":1476,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["errorhandler",{"_index":2044,"title":{},"body":{"interfaces/Parser.html":{}}}],["escapeillegalchars",{"_index":2083,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["escapeillegalchars(string",{"_index":2186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etag",{"_index":715,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["examples",{"_index":2205,"title":{},"body":{"index.html":{}}}],["execute(options",{"_index":130,"title":{},"body":{"classes/BatchRequest.html":{}}}],["expand",{"_index":925,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["expand(expand",{"_index":1021,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["expandoptions",{"_index":2346,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expands",{"_index":2175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":84,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["exports",{"_index":1663,"title":{},"body":{"modules/ODataModule.html":{},"overview.html":{}}}],["extend",{"_index":265,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["extends",{"_index":105,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataValueAnnotations.html":{},"index.html":{}}}],["extra",{"_index":1112,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["f",{"_index":1357,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{}}}],["f.collection",{"_index":1587,"title":{},"body":{"classes/ODataModel.html":{}}}],["f.configure(settings",{"_index":1378,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.iscomplextype",{"_index":1578,"title":{},"body":{"classes/ODataModel.html":{}}}],["f.isnavigation",{"_index":1577,"title":{},"body":{"classes/ODataModel.html":{}}}],["f.key",{"_index":1392,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.name",{"_index":1365,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{}}}],["f.navigation",{"_index":1379,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.nullable).map(f",{"_index":1387,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.parse(obj[f.name",{"_index":1366,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.resolve(attrs",{"_index":1394,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.tojson(obj[f.name",{"_index":1373,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.tojsonschema(config[f.name",{"_index":1384,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f]{12}$/.test(key",{"_index":1741,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["f]{4",{"_index":1740,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["f]{8",{"_index":1739,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["fa",{"_index":1738,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["factory",{"_index":636,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"index.html":{}}}],["factory(data",{"_index":646,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["factory(service",{"_index":123,"title":{},"body":{"classes/BatchRequest.html":{}}}],["false",{"_index":1124,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"index.html":{}}}],["fetch",{"_index":873,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"index.html":{}}}],["fetch(options",{"_index":898,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["fetchall",{"_index":1408,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchall(options",{"_index":1429,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchcollection",{"_index":1409,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchcollection(options",{"_index":1431,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchone",{"_index":1410,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchone(key",{"_index":1433,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchorcreate",{"_index":1411,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchorcreate(entity",{"_index":1435,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["field",{"_index":462,"title":{"classes/Field.html":{}},"body":{"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["field(odatametadata.attribute_alias",{"_index":593,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_namespace",{"_index":592,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_uri",{"_index":581,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_version",{"_index":575,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_action",{"_index":598,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotation",{"_index":585,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotations",{"_index":602,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_complex_type",{"_index":595,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_container",{"_index":599,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_type",{"_index":596,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_enum_type",{"_index":594,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_function",{"_index":597,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include",{"_index":582,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include_annotations",{"_index":584,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_term",{"_index":601,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_type_definition",{"_index":600,"title":{},"body":{"classes/Field.html":{}}}],["field.collection",{"_index":1631,"title":{},"body":{"classes/ODataModel.html":{}}}],["field.name",{"_index":1567,"title":{},"body":{"classes/ODataModel.html":{}}}],["field.navigation",{"_index":1203,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["field.type",{"_index":1389,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{}}}],["fieldnames",{"_index":624,"title":{},"body":{"classes/Field.html":{}}}],["fields",{"_index":1200,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["fields(opts",{"_index":1196,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["fields.find(f",{"_index":1576,"title":{},"body":{"classes/ODataModel.html":{}}}],["fieldtype",{"_index":464,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["fieldtype.attribute",{"_index":576,"title":{},"body":{"classes/Field.html":{}}}],["fieldtype.tag",{"_index":583,"title":{},"body":{"classes/Field.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{}}}],["filter",{"_index":924,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["filter(([key",{"_index":1595,"title":{},"body":{"classes/ODataModel.html":{}}}],["filter((k",{"_index":1840,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["filter((value",{"_index":1612,"title":{},"body":{"classes/ODataModel.html":{}}}],["filter(f",{"_index":1364,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["filter(field",{"_index":1564,"title":{},"body":{"classes/ODataModel.html":{}}}],["filter(filter",{"_index":1014,"title":{},"body":{"classes/ODataCollection.html":{}}}],["filter(k",{"_index":690,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["filter(key",{"_index":1820,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{}}}],["filters",{"_index":2178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["find",{"_index":1138,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["find(e",{"_index":1155,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["find(name",{"_index":1703,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["findconfigfortypes",{"_index":1902,"title":{},"body":{"classes/ODataSettings.html":{}}}],["findconfigfortypes(types",{"_index":1912,"title":{},"body":{"classes/ODataSettings.html":{}}}],["first",{"_index":1562,"title":{},"body":{"classes/ODataModel.html":{}}}],["firstname",{"_index":2286,"title":{},"body":{"index.html":{}}}],["flags",{"_index":1313,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}}}],["fluent",{"_index":2194,"title":{},"body":{"index.html":{}}}],["following",{"_index":2013,"title":{},"body":{"interfaces/Parser.html":{},"index.html":{}}}],["foreach(config",{"_index":1181,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["foreach(field",{"_index":1565,"title":{},"body":{"classes/ODataModel.html":{}}}],["foreach(schmea",{"_index":1134,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["forkjoin",{"_index":1555,"title":{},"body":{"classes/ODataModel.html":{}}}],["forkjoin(rels).pipe",{"_index":1621,"title":{},"body":{"classes/ODataModel.html":{}}}],["format",{"_index":1808,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["forroot",{"_index":1671,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(...configs",{"_index":1685,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(configs",{"_index":1672,"title":{},"body":{"modules/ODataModule.html":{}}}],["found",{"_index":1939,"title":{},"body":{"classes/ODataSettings.html":{}}}],["friends",{"_index":2263,"title":{},"body":{"index.html":{}}}],["fromodataresponse",{"_index":779,"title":{},"body":{"classes/ODataBatch.html":{}}}],["fromodataresponse(odataresponse",{"_index":803,"title":{},"body":{"classes/ODataBatch.html":{}}}],["full",{"_index":1051,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["func",{"_index":1733,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["function",{"_index":174,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueAnnotations.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["function(key",{"_index":1437,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["function(name",{"_index":649,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataModel.html":{},"classes/ODataValueAnnotations.html":{}}}],["function(undefined",{"_index":2190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function_regex",{"_index":2090,"title":{},"body":{"coverage.html":{}}}],["functionimport",{"_index":514,"title":{},"body":{"classes/Field.html":{}}}],["functionimports",{"_index":266,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["functionname",{"_index":192,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["functions",{"_index":410,"title":{"miscellaneous/functions.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"miscellaneous/functions.html":{}}}],["gender",{"_index":2289,"title":{},"body":{"index.html":{}}}],["generate",{"_index":2334,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2327,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2201,"title":{},"body":{"index.html":{}}}],["get(name",{"_index":1871,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["get(options",{"_index":1465,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["get_query",{"_index":918,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["get_segments",{"_index":916,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["getbody",{"_index":147,"title":{},"body":{"classes/BatchRequest.html":{}}}],["getboundarydelimiter",{"_index":780,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getboundarydelimiter(contenttype",{"_index":806,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getboundaryend",{"_index":781,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getboundaryend(boundarydelimiter",{"_index":809,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getcontext",{"_index":653,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["getcount",{"_index":1228,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getdeltalink",{"_index":1232,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["geteditlink",{"_index":1253,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getetag",{"_index":1246,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getfunctions",{"_index":655,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["getheaders",{"_index":21,"title":{},"body":{"classes/BatchRequest.html":{}}}],["getheaders(method",{"_index":43,"title":{},"body":{"classes/BatchRequest.html":{}}}],["getheadervalue",{"_index":782,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getheadervalue(header",{"_index":812,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getid",{"_index":1244,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediacontenttype",{"_index":1259,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediaeditlink",{"_index":1257,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediaetag",{"_index":1248,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediareadlink",{"_index":1255,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmetadataetag",{"_index":1250,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmodels",{"_index":912,"title":{},"body":{"classes/ODataCollection.html":{}}}],["getname",{"_index":1965,"title":{},"body":{"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["getnavigationproperty",{"_index":1521,"title":{},"body":{"classes/ODataModel.html":{}}}],["getnavigationproperty(field",{"_index":1538,"title":{},"body":{"classes/ODataModel.html":{}}}],["getnextlink",{"_index":1230,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getobjects(parentelement",{"_index":623,"title":{},"body":{"classes/Field.html":{}}}],["getodataresponses",{"_index":783,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getpath",{"_index":2056,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["getproperties",{"_index":657,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["getreadlink",{"_index":1226,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{}}}],["getrequests",{"_index":166,"title":{},"body":{"classes/BatchRequest.html":{}}}],["getservices",{"_index":1884,"title":{},"body":{"classes/ODataSchema.html":{}}}],["getskip",{"_index":1236,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getskiptoken",{"_index":1238,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getstate",{"_index":914,"title":{},"body":{"classes/ODataCollection.html":{}}}],["getting",{"_index":2191,"title":{"index.html":{}},"body":{}}],["gettop",{"_index":1234,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["gettype",{"_index":1242,"title":{},"body":{"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"classes/SegmentHandler.html":{}}}],["groupby",{"_index":2180,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guid",{"_index":1718,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["guid(key",{"_index":1742,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["handler",{"_index":1779,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["handlevalue",{"_index":2084,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handlevalue(value",{"_index":2187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["has(name",{"_index":1705,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["hash",{"_index":1861,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["hasstream",{"_index":256,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["head",{"_index":89,"title":{},"body":{"classes/BatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["header",{"_index":814,"title":{},"body":{"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["header.split(';')[0].trim",{"_index":841,"title":{},"body":{"classes/ODataBatch.html":{}}}],["headers",{"_index":131,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["heuristically",{"_index":2005,"title":{},"body":{"interfaces/Parser.html":{}}}],["htmlcollection",{"_index":627,"title":{},"body":{"classes/Field.html":{}}}],["http",{"_index":81,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{}}}],["http/1.1",{"_index":791,"title":{},"body":{"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["http11",{"_index":70,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["httpclientmodule",{"_index":1676,"title":{},"body":{"modules/ODataModule.html":{}}}],["httpentitiesoptions",{"_index":930,"title":{},"body":{"classes/ODataCollection.html":{},"miscellaneous/typealiases.html":{}}}],["httpentityoptions",{"_index":1559,"title":{},"body":{"classes/ODataModel.html":{},"miscellaneous/typealiases.html":{}}}],["httperrorresponse",{"_index":1101,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["httpheaders",{"_index":82,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{}}}],["httpheaders).getall(key",{"_index":103,"title":{},"body":{"classes/BatchRequest.html":{}}}],["httpheaders).keys",{"_index":102,"title":{},"body":{"classes/BatchRequest.html":{}}}],["httpoptions",{"_index":80,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"miscellaneous/typealiases.html":{}}}],["httpresponse",{"_index":776,"title":{},"body":{"classes/ODataBatch.html":{}}}],["https://services.odata.org/v4/(s(4m0tuxtnhcfctl4gzem3gr10))/trippinservicerw",{"_index":2215,"title":{},"body":{"index.html":{}}}],["httpvalueoptions",{"_index":1558,"title":{},"body":{"classes/ODataModel.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":713,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBatch.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["identifier",{"_index":2060,"title":{},"body":{"coverage.html":{}}}],["if_match_header",{"_index":2019,"title":{},"body":{"interfaces/Parser.html":{},"coverage.html":{}}}],["implements",{"_index":865,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["import",{"_index":46,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["imports",{"_index":1684,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["include_navigation",{"_index":1198,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["include_parents",{"_index":1197,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["includeannotations",{"_index":329,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["includeinservicedocument",{"_index":194,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["includes",{"_index":328,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indexof_regex",{"_index":2091,"title":{},"body":{"coverage.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["inherited",{"_index":231,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"classes/ODataValueAnnotations.html":{}}}],["inject",{"_index":2219,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":1399,"title":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{}},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{},"coverage.html":{},"index.html":{}}}],["injectables",{"_index":1401,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1970,"title":{},"body":{"interfaces/Parser.html":{}}}],["injectiontoken('odata.configuraions",{"_index":2045,"title":{},"body":{"interfaces/Parser.html":{}}}],["install",{"_index":2202,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":940,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{}}}],["interface",{"_index":1311,"title":{"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":1691,"title":{},"body":{"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"overview.html":{}}}],["isbound",{"_index":177,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["iscomplex",{"_index":1272,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["iscomplextype",{"_index":1350,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["iscomposable",{"_index":190,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["isentitytype",{"_index":1349,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["isenumtype",{"_index":1348,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["isflags",{"_index":300,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["isnavigation",{"_index":1346,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["iso_regex",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["isostringtodate",{"_index":1722,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"coverage.html":{}}}],["isostringtodate(json.parse(json.stringify(segment.options",{"_index":1754,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["isostringtodate(json.parse(json.stringify(this.options",{"_index":1830,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["items",{"_index":1344,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["iterable",{"_index":866,"title":{},"body":{"classes/ODataCollection.html":{}}}],["iteratorresult",{"_index":974,"title":{},"body":{"classes/ODataCollection.html":{}}}],["javascript",{"_index":2338,"title":{},"body":{"index.html":{}}}],["join",{"_index":1829,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["json",{"_index":1329,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["json.options",{"_index":1756,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.stringify(body",{"_index":164,"title":{},"body":{"classes/BatchRequest.html":{}}}],["jsonschemaconfig",{"_index":1295,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpand",{"_index":2042,"title":{},"body":{"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpandoptions",{"_index":1302,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaorder",{"_index":2041,"title":{},"body":{"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaselect",{"_index":2040,"title":{},"body":{"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["k",{"_index":1579,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["k.indexof(odata_annotation_prefix",{"_index":697,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["k.startswith(odata_function_prefix",{"_index":691,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["keep",{"_index":1788,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["keep(...names",{"_index":1838,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["keep(names",{"_index":1796,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["key",{"_index":100,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["key.indexof(odata_annotation_prefix",{"_index":699,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["key.startswith(\"_",{"_index":1596,"title":{},"body":{"classes/ODataModel.html":{}}}],["key.startswith(odata_function_prefix",{"_index":2033,"title":{},"body":{"interfaces/Parser.html":{}}}],["key.substr(0",{"_index":698,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["key.substr(1",{"_index":694,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["key.substr(key.indexof(odata_annotation_prefix",{"_index":703,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["keyof",{"_index":1971,"title":{},"body":{"interfaces/Parser.html":{}}}],["keys",{"_index":1273,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["key}=${value",{"_index":1828,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["last",{"_index":1696,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["lastname",{"_index":2287,"title":{},"body":{"index.html":{}}}],["legend",{"_index":1659,"title":{},"body":{"modules/ODataModule.html":{},"overview.html":{}}}],["library",{"_index":2206,"title":{},"body":{"index.html":{}}}],["link",{"_index":1980,"title":{},"body":{"interfaces/Parser.html":{}}}],["literal",{"_index":640,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["location",{"_index":2278,"title":{},"body":{"index.html":{}}}],["location.entity",{"_index":2279,"title":{},"body":{"index.html":{}}}],["locationconfig",{"_index":2300,"title":{},"body":{"index.html":{}}}],["logical_operators",{"_index":2092,"title":{},"body":{"coverage.html":{}}}],["m",{"_index":886,"title":{},"body":{"classes/ODataCollection.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{}}}],["map",{"_index":62,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["map(([entities",{"_index":985,"title":{},"body":{"classes/ODataCollection.html":{}}}],["map(([entity",{"_index":1604,"title":{},"body":{"classes/ODataModel.html":{}}}],["map(([key",{"_index":1575,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["map(([name",{"_index":1356,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["map((value",{"_index":1615,"title":{},"body":{"classes/ODataModel.html":{}}}],["map(({name",{"_index":1744,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["map(config",{"_index":1169,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["map(container",{"_index":1175,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["map(entities",{"_index":991,"title":{},"body":{"classes/ODataCollection.html":{}}}],["map(f",{"_index":1383,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["map(pathsegmentsbuilder",{"_index":1746,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["map(schema",{"_index":1132,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["match",{"_index":741,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["match(/\\$skip=(\\d",{"_index":746,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["match(/\\$skiptoken=([\\d\\w\\s",{"_index":748,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["match(/\\$top=(\\d",{"_index":743,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["match[1",{"_index":749,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["matching",{"_index":170,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["math.ceil(this._state.records",{"_index":965,"title":{},"body":{"classes/ODataCollection.html":{}}}],["max",{"_index":2168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["maxlength",{"_index":198,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}}}],["media",{"_index":2010,"title":{},"body":{"interfaces/Parser.html":{},"index.html":{}}}],["media.blob().subscribe(console.log",{"_index":2325,"title":{},"body":{"index.html":{}}}],["mediacontenttype",{"_index":729,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["mediaeditlink",{"_index":727,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["mediaetag",{"_index":717,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["mediareadlink",{"_index":725,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["member",{"_index":492,"title":{},"body":{"classes/Field.html":{}}}],["members",{"_index":298,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["meta",{"_index":1488,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["meta.flags",{"_index":1317,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["meta.members",{"_index":1318,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["meta.name",{"_index":1315,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["metadata",{"_index":608,"title":{},"body":{"classes/Field.html":{},"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["metadataetag",{"_index":719,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["metadataurl",{"_index":1031,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["method",{"_index":16,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["methods",{"_index":20,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["microsoft.odata.sampleservice.models.trippin",{"_index":2308,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.location",{"_index":2292,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.people",{"_index":2310,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.person",{"_index":2294,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.persongender",{"_index":2293,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.photo",{"_index":2296,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.trip",{"_index":2295,"title":{},"body":{"index.html":{}}}],["microsoft/odata/sampleservice/models/trippin/location.entity.config",{"_index":2301,"title":{},"body":{"index.html":{}}}],["microsoft/odata/sampleservice/models/trippin/person.entity.config",{"_index":2304,"title":{},"body":{"index.html":{}}}],["microsoft/odata/sampleservice/models/trippin/persongender.enum.config",{"_index":2299,"title":{},"body":{"index.html":{}}}],["microsoft/odata/sampleservice/models/trippin/photo.entity.config",{"_index":2303,"title":{},"body":{"index.html":{}}}],["microsoft/odata/sampleservice/models/trippin/trip.entity.config",{"_index":2306,"title":{},"body":{"index.html":{}}}],["min",{"_index":2167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":1050,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["miscellaneous",{"_index":2158,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mo",{"_index":1532,"title":{},"body":{"classes/ODataModel.html":{}}}],["mode",{"_index":2211,"title":{},"body":{"index.html":{}}}],["model",{"_index":892,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"interfaces/Parser.html":{}}}],["model(entity",{"_index":1649,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["model.destroy",{"_index":998,"title":{},"body":{"classes/ODataCollection.html":{}}}],["model.save",{"_index":993,"title":{},"body":{"classes/ODataCollection.html":{}}}],["model.target().type",{"_index":1638,"title":{},"body":{"classes/ODataModel.html":{}}}],["model.toentity",{"_index":970,"title":{},"body":{"classes/ODataCollection.html":{}}}],["modelforname",{"_index":1041,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataSettings.html":{}}}],["modelforname(name",{"_index":1080,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["modelfortype",{"_index":1042,"title":{},"body":{"classes/ODataConfig.html":{}}}],["modelfortype(type",{"_index":1082,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["models",{"_index":878,"title":{},"body":{"classes/ODataCollection.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{}}}],["models.length",{"_index":976,"title":{},"body":{"classes/ODataCollection.html":{}}}],["models/settings",{"_index":1679,"title":{},"body":{"modules/ODataModule.html":{}}}],["models[pointer",{"_index":977,"title":{},"body":{"classes/ODataCollection.html":{}}}],["module",{"_index":1655,"title":{"modules/ODataModule.html":{}},"body":{"modules/ODataModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":1657,"title":{"modules.html":{}},"body":{"modules/ODataModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":1675,"title":{},"body":{"modules/ODataModule.html":{}}}],["more",{"_index":1938,"title":{},"body":{"classes/ODataSettings.html":{}}}],["multipart/mixed",{"_index":794,"title":{},"body":{"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["multipart/mixed;boundary",{"_index":2024,"title":{},"body":{"interfaces/Parser.html":{}}}],["multipart_mixed",{"_index":71,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["multipart_mixed_boundary",{"_index":72,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["mutate",{"_index":992,"title":{},"body":{"classes/ODataCollection.html":{}}}],["n",{"_index":1844,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["name",{"_index":30,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["namednodemap",{"_index":612,"title":{},"body":{"classes/Field.html":{}}}],["names",{"_index":1798,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataSettings.html":{}}}],["names.foreach(name",{"_index":1836,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["names.indexof(k",{"_index":1841,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["namespace",{"_index":320,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["namespace}.${this.name",{"_index":1186,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["nav",{"_index":1629,"title":{},"body":{"classes/ODataModel.html":{}}}],["nav.tocollection(object.assign(base",{"_index":1633,"title":{},"body":{"classes/ODataModel.html":{}}}],["nav.tomodel(object.assign(base",{"_index":1634,"title":{},"body":{"classes/ODataModel.html":{}}}],["navigation",{"_index":288,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"coverage.html":{},"index.html":{}}}],["navigationproperties",{"_index":239,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["navigationproperty",{"_index":501,"title":{},"body":{"classes/Field.html":{},"injectables/ODataEntityService.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["navigationproperty(key",{"_index":1439,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["navigationproperty(name",{"_index":1626,"title":{},"body":{"classes/ODataModel.html":{}}}],["navigationpropertybinding",{"_index":281,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["navigationpropertybindings",{"_index":429,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["needs",{"_index":1925,"title":{},"body":{"classes/ODataSettings.html":{}}}],["nestedexpandoptions",{"_index":2348,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":124,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"index.html":{}}}],["new(...any",{"_index":1190,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["newline",{"_index":67,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["next",{"_index":874,"title":{},"body":{"classes/ODataCollection.html":{},"interfaces/Parser.html":{}}}],["next(options",{"_index":900,"title":{},"body":{"classes/ODataCollection.html":{}}}],["nextlink",{"_index":736,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["ngmodule",{"_index":1677,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["none",{"_index":1052,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["npm",{"_index":2203,"title":{},"body":{"index.html":{}}}],["null",{"_index":120,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataValueAnnotations.html":{}}}],["nullable",{"_index":197,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["number",{"_index":113,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["number(match[1",{"_index":744,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["number(v",{"_index":1309,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["number(value",{"_index":1310,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["o",{"_index":1843,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["obj",{"_index":1362,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object",{"_index":1341,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}}}],["object.assign",{"_index":937,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["object.assign(acc",{"_index":693,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{}}}],["object.assign(acc[name",{"_index":702,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["object.assign(attrs",{"_index":1581,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.assign(obj",{"_index":1363,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["object.assign(params",{"_index":1826,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.assign(this",{"_index":1333,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{}}}],["object.assign(this.assertobject",{"_index":1878,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.assign({responsetype",{"_index":982,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["object.defineproperty(this",{"_index":1566,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries",{"_index":1593,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(config.fields",{"_index":1355,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["object.entries(entity",{"_index":1574,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(this",{"_index":1594,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(this._relations).reduce((acc",{"_index":1597,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(this.params",{"_index":1827,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(key).length",{"_index":1395,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["object.keys(this.options",{"_index":1839,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(this.value",{"_index":689,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["object.keys(value",{"_index":2032,"title":{},"body":{"interfaces/Parser.html":{}}}],["object.values(key)[0",{"_index":1396,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["object.values(this._relations",{"_index":1611,"title":{},"body":{"classes/ODataModel.html":{}}}],["objects",{"_index":625,"title":{},"body":{"classes/Field.html":{}}}],["objs",{"_index":1288,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["objs.map(obj",{"_index":1368,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["obs",{"_index":979,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["obs$.pipe",{"_index":984,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["obs$.pipe(map",{"_index":997,"title":{},"body":{"classes/ODataCollection.html":{}}}],["observable",{"_index":50,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["observe",{"_index":135,"title":{},"body":{"classes/BatchRequest.html":{}}}],["obtained",{"_index":2212,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":1983,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata",{"_index":1721,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["odata.associationlink",{"_index":1996,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.context",{"_index":1973,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.count",{"_index":1976,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.deltalink",{"_index":1981,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.editlink",{"_index":1991,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.etag",{"_index":1986,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.id",{"_index":1985,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.mediacontenttype",{"_index":2018,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.mediaeditlink",{"_index":2015,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.mediaetag",{"_index":2016,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.mediareadlink",{"_index":2014,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.metadataetag",{"_index":1995,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.navigationlink",{"_index":2007,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.nextlink",{"_index":1979,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.readlink",{"_index":1987,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.type",{"_index":2002,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/client.ts",{"_index":2062,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/models/collection.ts",{"_index":864,"title":{},"body":{"classes/ODataCollection.html":{},"coverage.html":{}}}],["odata/src/lib/models/collection.ts:105",{"_index":910,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:109",{"_index":896,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:115",{"_index":911,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:129",{"_index":899,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:146",{"_index":901,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:158",{"_index":893,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:172",{"_index":891,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:185",{"_index":908,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:199",{"_index":897,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:203",{"_index":917,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:216",{"_index":919,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:27",{"_index":888,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:28",{"_index":885,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:30",{"_index":887,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:31",{"_index":913,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:35",{"_index":889,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:44",{"_index":915,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:46",{"_index":883,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:54",{"_index":895,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:61",{"_index":909,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:65",{"_index":903,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:76",{"_index":906,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/config.ts",{"_index":1028,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"coverage.html":{}}}],["odata/src/lib/models/config.ts:10",{"_index":1058,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:100",{"_index":1090,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:106",{"_index":1081,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:11",{"_index":1061,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:112",{"_index":1065,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:12",{"_index":1059,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:120",{"_index":1085,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:128",{"_index":1882,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/models/config.ts:129",{"_index":1881,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/models/config.ts:13",{"_index":1056,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:130",{"_index":1880,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/models/config.ts:131",{"_index":1879,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/models/config.ts:14",{"_index":1057,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:140",{"_index":1885,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/models/config.ts:144",{"_index":1883,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/models/config.ts:15",{"_index":1063,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:153",{"_index":1483,"title":{},"body":{"classes/ODataEnumConfig.html":{}}}],["odata/src/lib/models/config.ts:154",{"_index":1485,"title":{},"body":{"classes/ODataEnumConfig.html":{}}}],["odata/src/lib/models/config.ts:155",{"_index":1484,"title":{},"body":{"classes/ODataEnumConfig.html":{}}}],["odata/src/lib/models/config.ts:156",{"_index":1482,"title":{},"body":{"classes/ODataEnumConfig.html":{}}}],["odata/src/lib/models/config.ts:16",{"_index":1053,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:164",{"_index":1486,"title":{},"body":{"classes/ODataEnumConfig.html":{}}}],["odata/src/lib/models/config.ts:17",{"_index":1062,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:170",{"_index":1265,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:171",{"_index":1266,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:172",{"_index":1262,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:173",{"_index":1264,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:174",{"_index":1263,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:175",{"_index":1261,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:18",{"_index":1055,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:186",{"_index":1267,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:19",{"_index":1049,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:190",{"_index":1268,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:210",{"_index":1213,"title":{},"body":{"classes/ODataContainer.html":{}}}],["odata/src/lib/models/config.ts:211",{"_index":1214,"title":{},"body":{"classes/ODataContainer.html":{}}}],["odata/src/lib/models/config.ts:212",{"_index":1212,"title":{},"body":{"classes/ODataContainer.html":{}}}],["odata/src/lib/models/config.ts:213",{"_index":1211,"title":{},"body":{"classes/ODataContainer.html":{}}}],["odata/src/lib/models/config.ts:221",{"_index":1215,"title":{},"body":{"classes/ODataContainer.html":{}}}],["odata/src/lib/models/config.ts:228",{"_index":1887,"title":{},"body":{"classes/ODataServiceConfig.html":{}}}],["odata/src/lib/models/config.ts:229",{"_index":1888,"title":{},"body":{"classes/ODataServiceConfig.html":{}}}],["odata/src/lib/models/config.ts:230",{"_index":1886,"title":{},"body":{"classes/ODataServiceConfig.html":{}}}],["odata/src/lib/models/config.ts:237",{"_index":1889,"title":{},"body":{"classes/ODataServiceConfig.html":{}}}],["odata/src/lib/models/config.ts:39",{"_index":1068,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:49",{"_index":1088,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:55",{"_index":1079,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:61",{"_index":1074,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:67",{"_index":1093,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:75",{"_index":1083,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:81",{"_index":1067,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:90",{"_index":1076,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:95",{"_index":1070,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/model.ts",{"_index":1518,"title":{},"body":{"classes/ODataModel.html":{},"coverage.html":{}}}],["odata/src/lib/models/model.ts:106",{"_index":1550,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:123",{"_index":1531,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:128",{"_index":1537,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:151",{"_index":1534,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:159",{"_index":1552,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:183",{"_index":1545,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:191",{"_index":1536,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:202",{"_index":1553,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:221",{"_index":1554,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:240",{"_index":1539,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:253",{"_index":1548,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:27",{"_index":1529,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:28",{"_index":1527,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:29",{"_index":1526,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:30",{"_index":1528,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:33",{"_index":1525,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:41",{"_index":1530,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:65",{"_index":1549,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:69",{"_index":1541,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:98",{"_index":1543,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/settings.ts",{"_index":1900,"title":{},"body":{"classes/ODataSettings.html":{},"coverage.html":{}}}],["odata/src/lib/models/settings.ts:17",{"_index":1907,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:24",{"_index":1913,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:31",{"_index":1909,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:36",{"_index":1911,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:43",{"_index":1910,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:50",{"_index":1915,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:57",{"_index":1914,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:64",{"_index":1905,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:8",{"_index":1904,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/module.ts",{"_index":1670,"title":{},"body":{"modules/ODataModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["odata/src/lib/module.ts:18",{"_index":1673,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata/src/lib/parsers.ts",{"_index":1270,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"coverage.html":{}}}],["odata/src/lib/parsers.ts:106",{"_index":1515,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:111",{"_index":1514,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:117",{"_index":1516,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:122",{"_index":1509,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:129",{"_index":1517,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:145",{"_index":1513,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:149",{"_index":1512,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:153",{"_index":1511,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:157",{"_index":1510,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:163",{"_index":1280,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:164",{"_index":1282,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:165",{"_index":1279,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:166",{"_index":1281,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:167",{"_index":1278,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:178",{"_index":1287,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:192",{"_index":1293,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:204",{"_index":1283,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:212",{"_index":1296,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:226",{"_index":1301,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:234",{"_index":1285,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:239",{"_index":1290,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:248",{"_index":1284,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:34",{"_index":1692,"title":{},"body":{"interfaces/ODataParser.html":{}}}],["odata/src/lib/parsers.ts:35",{"_index":1693,"title":{},"body":{"interfaces/ODataParser.html":{}}}],["odata/src/lib/parsers.ts:39",{"_index":1490,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:40",{"_index":1492,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:41",{"_index":1489,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:42",{"_index":1491,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:43",{"_index":1487,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:53",{"_index":1494,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:62",{"_index":1495,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:74",{"_index":1496,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:83",{"_index":1493,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:89",{"_index":1504,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:90",{"_index":1508,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:91",{"_index":1507,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:92",{"_index":1500,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:93",{"_index":1503,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:94",{"_index":1502,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:95",{"_index":1499,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:96",{"_index":1506,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:97",{"_index":1505,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:98",{"_index":1501,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:99",{"_index":1498,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/resources/builder.ts",{"_index":2075,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/http",{"_index":2351,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/path",{"_index":1694,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/query",{"_index":1785,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/requests/action.ts",{"_index":2096,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/requests/batch.ts",{"_index":7,"title":{},"body":{"classes/BatchRequest.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/requests/batch.ts:26",{"_index":38,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/batch.ts:27",{"_index":37,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/batch.ts:28",{"_index":27,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/batch.ts:31",{"_index":40,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/batch.ts:32",{"_index":41,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/batch.ts:33",{"_index":42,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/batch.ts:35",{"_index":44,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/callable.ts",{"_index":2099,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/requests/count.ts",{"_index":2102,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/requests/entity.ts",{"_index":2105,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/requests/entityset.ts",{"_index":2107,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/requests/function.ts",{"_index":2109,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/requests/metadata.ts",{"_index":2111,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/requests/navigationproperty.ts",{"_index":2113,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/requests/property.ts",{"_index":2115,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/requests/reference.ts",{"_index":2117,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/requests/singleton.ts",{"_index":2120,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/requests/value.ts",{"_index":2123,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/resource.ts",{"_index":2126,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/resources/responses/annotations.ts",{"_index":631,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"coverage.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:104",{"_index":1240,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:108",{"_index":1243,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:114",{"_index":1245,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:119",{"_index":1247,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:124",{"_index":1249,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:129",{"_index":1251,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:134",{"_index":1252,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:139",{"_index":1254,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:144",{"_index":1256,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:149",{"_index":1258,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:154",{"_index":1260,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:159",{"_index":1241,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:165",{"_index":1220,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:169",{"_index":1227,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:174",{"_index":1229,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:179",{"_index":1231,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:184",{"_index":1233,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:189",{"_index":1235,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:194",{"_index":1237,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:199",{"_index":1239,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:204",{"_index":1221,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:21",{"_index":641,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:24",{"_index":647,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:29",{"_index":642,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:30",{"_index":654,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:45",{"_index":643,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:46",{"_index":656,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:55",{"_index":644,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:56",{"_index":658,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:73",{"_index":645,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:77",{"_index":652,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:81",{"_index":650,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:88",{"_index":1945,"title":{},"body":{"classes/ODataValueAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:92",{"_index":1946,"title":{},"body":{"classes/ODataValueAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:96",{"_index":1947,"title":{},"body":{"classes/ODataValueAnnotations.html":{}}}],["odata/src/lib/resources/responses/batch.ts",{"_index":775,"title":{},"body":{"classes/ODataBatch.html":{},"coverage.html":{}}}],["odata/src/lib/resources/responses/batch.ts:10",{"_index":797,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:109",{"_index":810,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:11",{"_index":795,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:117",{"_index":801,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:13",{"_index":793,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:14",{"_index":786,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:22",{"_index":815,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:26",{"_index":804,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:30",{"_index":816,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:6",{"_index":790,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:7",{"_index":789,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:8",{"_index":792,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:9",{"_index":787,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:92",{"_index":813,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:98",{"_index":807,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/csdl/csdl",{"_index":173,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"coverage.html":{}}}],["odata/src/lib/resources/responses/metadata.ts",{"_index":463,"title":{},"body":{"classes/Field.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:19",{"_index":465,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:20",{"_index":466,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/services/base.ts",{"_index":752,"title":{},"body":{"classes/ODataBaseService.html":{},"coverage.html":{}}}],["odata/src/lib/services/base.ts:13",{"_index":760,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:18",{"_index":764,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:24",{"_index":759,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:6",{"_index":757,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:7",{"_index":758,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:8",{"_index":756,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/entity.ts",{"_index":1402,"title":{},"body":{"injectables/ODataEntityService.html":{},"coverage.html":{}}}],["odata/src/lib/services/entity.ts:21",{"_index":1414,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:24",{"_index":1440,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:28",{"_index":1443,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:32",{"_index":1416,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:36",{"_index":1422,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:40",{"_index":1438,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:44",{"_index":1424,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:49",{"_index":1432,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:54",{"_index":1430,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:59",{"_index":1434,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:64",{"_index":1426,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:69",{"_index":1448,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:74",{"_index":1420,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:79",{"_index":1428,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:85",{"_index":1436,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:95",{"_index":1446,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/factory.ts",{"_index":1890,"title":{},"body":{"injectables/ODataServiceFactory.html":{},"coverage.html":{}}}],["odata/src/lib/services/factory.ts:12",{"_index":1895,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:19",{"_index":1897,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:9",{"_index":1893,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/model.ts",{"_index":1640,"title":{},"body":{"injectables/ODataModelService.html":{},"coverage.html":{}}}],["odata/src/lib/services/model.ts:10",{"_index":1641,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/services/model.ts:14",{"_index":1650,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/services/model.ts:19",{"_index":1648,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/services/model.ts:23",{"_index":1643,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/services/model.ts:24",{"_index":1645,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/services/model.ts:25",{"_index":1646,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/types.ts",{"_index":1967,"title":{},"body":{"interfaces/Parser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/types.ts:127",{"_index":1968,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:128",{"_index":1969,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/utils/dates.ts",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/utils/enums.ts",{"_index":2138,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/utils/types.ts",{"_index":2139,"title":{},"body":{"coverage.html":{}}}],["odata/src/lib/utils/urls.ts",{"_index":2140,"title":{},"body":{"coverage.html":{}}}],["odata_alias_prefix",{"_index":2031,"title":{},"body":{"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_annotation_prefix",{"_index":674,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_associationlink",{"_index":2001,"title":{},"body":{"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_configurations",{"_index":1681,"title":{},"body":{"modules/ODataModule.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_context",{"_index":669,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_count",{"_index":660,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_deltalink",{"_index":663,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_editlink",{"_index":672,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_etag",{"_index":659,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{},"index.html":{}}}],["odata_function_prefix",{"_index":673,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_id",{"_index":670,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_media_contenttype",{"_index":668,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_media_editlink",{"_index":665,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_media_etag",{"_index":666,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_media_readlink",{"_index":667,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_metadataetag",{"_index":664,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_navigationlink",{"_index":2009,"title":{},"body":{"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_nextlink",{"_index":661,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_param_prefix",{"_index":2030,"title":{},"body":{"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_readlink",{"_index":671,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_type",{"_index":662,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odata_version",{"_index":68,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odataactionresource",{"_index":923,"title":{},"body":{"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"coverage.html":{}}}],["odataannotations",{"_index":630,"title":{"classes/ODataAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataModel.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["odataannotations(odataannotations(data",{"_index":676,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations(this.value",{"_index":704,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:24",{"_index":1223,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:29",{"_index":1217,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:45",{"_index":1218,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:55",{"_index":1219,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:73",{"_index":1222,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:77",{"_index":1225,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:81",{"_index":1224,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odatabaseservice",{"_index":751,"title":{"classes/ODataBaseService.html":{}},"body":{"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"coverage.html":{}}}],["odatabaseservice:13",{"_index":1450,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabaseservice:18",{"_index":1451,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabaseservice:24",{"_index":1449,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabaseservice:6",{"_index":1453,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabaseservice:7",{"_index":1454,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabaseservice:8",{"_index":1452,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabatch",{"_index":78,"title":{"classes/ODataBatch.html":{}},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"coverage.html":{}}}],["odatabatch(odataresponse",{"_index":820,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odatabatch(resp",{"_index":146,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odatabatch.boundary_prefix_suffix",{"_index":848,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odatabatchresource",{"_index":104,"title":{},"body":{"classes/BatchRequest.html":{},"coverage.html":{}}}],["odatabatchresource(service",{"_index":126,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odatabatchresource.binary",{"_index":160,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odatacallableresource",{"_index":2100,"title":{},"body":{"coverage.html":{}}}],["odataclient",{"_index":52,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["odatacollection",{"_index":863,"title":{"classes/ODataCollection.html":{}},"body":{"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"coverage.html":{}}}],["odatacollection>(path",{"_index":1899,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odataconfig",{"_index":1027,"title":{"classes/ODataConfig.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"coverage.html":{}}}],["odataconfig(config",{"_index":1919,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odatacontainer",{"_index":1207,"title":{"classes/ODataContainer.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"coverage.html":{}}}],["odatacontainer(container",{"_index":1176,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odatacountresource",{"_index":2103,"title":{},"body":{"coverage.html":{}}}],["odatademo",{"_index":2204,"title":{},"body":{"index.html":{}}}],["odataentitiesannotations",{"_index":732,"title":{"classes/ODataEntitiesAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"classes/ODataValueAnnotations.html":{},"coverage.html":{}}}],["odataentitiesannotations(odataannotations(data",{"_index":750,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataentitiesannotations(this.value",{"_index":733,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataentityannotations",{"_index":711,"title":{"classes/ODataEntityAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataValueAnnotations.html":{},"coverage.html":{}}}],["odataentityannotations(odataannotations(data",{"_index":731,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataentityannotations(this.value",{"_index":712,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataentityconfig",{"_index":1072,"title":{"classes/ODataEntityConfig.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"coverage.html":{}}}],["odataentityconfig(config",{"_index":1172,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataentityparser",{"_index":1094,"title":{"classes/ODataEntityParser.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"coverage.html":{}}}],["odataentityparser(config",{"_index":1195,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataentityresource",{"_index":765,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"coverage.html":{}}}],["odataentityresource).property(f.name",{"_index":1585,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityservice",{"_index":1400,"title":{"injectables/ODataEntityService.html":{}},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{},"coverage.html":{},"index.html":{}}}],["odataentitysetresource",{"_index":761,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"coverage.html":{}}}],["odataentitysetresource).count().get",{"_index":1000,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataenumconfig",{"_index":1077,"title":{"classes/ODataEnumConfig.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"coverage.html":{}}}],["odataenumconfig(config",{"_index":1170,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataenumparser",{"_index":1096,"title":{"classes/ODataEnumParser.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"coverage.html":{}}}],["odataenumparser(config",{"_index":1188,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odatafieldparser",{"_index":1095,"title":{"classes/ODataFieldParser.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"coverage.html":{}}}],["odatafieldparser(name",{"_index":1358,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["odatafunctionresource",{"_index":922,"title":{},"body":{"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"coverage.html":{}}}],["odatametadata",{"_index":472,"title":{},"body":{"classes/Field.html":{},"coverage.html":{}}}],["odatametadata.tag_reference",{"_index":580,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_schema",{"_index":591,"title":{},"body":{"classes/Field.html":{}}}],["odatametadataresource",{"_index":2112,"title":{},"body":{"coverage.html":{}}}],["odatamodel",{"_index":929,"title":{"classes/ODataModel.html":{}},"body":{"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"coverage.html":{}}}],["odatamodelservice",{"_index":1639,"title":{"injectables/ODataModelService.html":{}},"body":{"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{},"coverage.html":{}}}],["odatamodule",{"_index":1656,"title":{"modules/ODataModule.html":{}},"body":{"modules/ODataModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["odatamodule.forroot",{"_index":2214,"title":{},"body":{"index.html":{}}}],["odatamodule.forroot(trippinconfig",{"_index":2312,"title":{},"body":{"index.html":{}}}],["odatanavigationpropertyresource",{"_index":921,"title":{},"body":{"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"coverage.html":{}}}],["odataparser",{"_index":1086,"title":{"interfaces/ODataParser.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"coverage.html":{}}}],["odataparser).tojsonschema(options",{"_index":1340,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["odatapathsegments",{"_index":56,"title":{"classes/ODataPathSegments.html":{}},"body":{"classes/BatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"coverage.html":{}}}],["odatapathsegments(this.tojson",{"_index":1757,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["odatapropertyresource",{"_index":1444,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"coverage.html":{}}}],["odataquery",{"_index":17,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odataqueryoptions",{"_index":60,"title":{"classes/ODataQueryOptions.html":{}},"body":{"classes/BatchRequest.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"coverage.html":{}}}],["odataqueryoptions(this.tojson",{"_index":1831,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["odatareferenceresource",{"_index":2118,"title":{},"body":{"coverage.html":{}}}],["odataresource",{"_index":25,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"coverage.html":{}}}],["odataresponse",{"_index":805,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odataresponsecs",{"_index":829,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odataresponsecs[contentid",{"_index":835,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odataresponses",{"_index":777,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odataschema",{"_index":1162,"title":{"classes/ODataSchema.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"coverage.html":{}}}],["odataschema(schema",{"_index":1133,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odatasegment",{"_index":1700,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["odataserviceconfig",{"_index":1091,"title":{"classes/ODataServiceConfig.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"coverage.html":{}}}],["odataserviceconfig(config",{"_index":1210,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataservicefactory",{"_index":1666,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["odatasettings",{"_index":1678,"title":{"classes/ODataSettings.html":{}},"body":{"modules/ODataModule.html":{},"classes/ODataSettings.html":{},"coverage.html":{},"index.html":{}}}],["odatasettings(...configs",{"_index":1683,"title":{},"body":{"modules/ODataModule.html":{}}}],["odatasingletonresource",{"_index":2121,"title":{},"body":{"coverage.html":{}}}],["odatavalueannotations",{"_index":707,"title":{"classes/ODataValueAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"coverage.html":{}}}],["odatavalueannotations(odataannotations(data",{"_index":709,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odatavalueannotations(this.value",{"_index":708,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odatavalueresource",{"_index":2124,"title":{},"body":{"coverage.html":{}}}],["odataversion",{"_index":619,"title":{},"body":{"classes/Field.html":{}}}],["ondelete",{"_index":344,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["one",{"_index":1855,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{}}}],["open",{"_index":154,"title":{},"body":{"classes/BatchRequest.html":{},"index.html":{}}}],["opentype",{"_index":240,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["option",{"_index":1778,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["option(name",{"_index":1799,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["option(type",{"_index":1780,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["optional",{"_index":18,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":2213,"title":{},"body":{"index.html":{}}}],["optionhandler",{"_index":1724,"title":{"classes/OptionHandler.html":{}},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"coverage.html":{}}}],["optionhandler(this.options",{"_index":1783,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["options",{"_index":19,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["options).pipe(map(([entity",{"_index":1608,"title":{},"body":{"classes/ODataModel.html":{}}}],["options.annotations",{"_index":943,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["options.params",{"_index":138,"title":{},"body":{"classes/BatchRequest.html":{}}}],["options.reportprogress",{"_index":140,"title":{},"body":{"classes/BatchRequest.html":{}}}],["options.resource",{"_index":939,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["options.ts",{"_index":1786,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.ts:100",{"_index":1792,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:105",{"_index":1951,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:108",{"_index":1966,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:112",{"_index":1962,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:117",{"_index":1964,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:122",{"_index":1952,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:128",{"_index":1959,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:132",{"_index":1960,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:139",{"_index":1955,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:144",{"_index":1953,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:157",{"_index":1961,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:161",{"_index":1957,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:167",{"_index":1963,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:176",{"_index":1958,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:180",{"_index":1954,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:184",{"_index":1956,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:25",{"_index":1790,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:32",{"_index":1801,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:57",{"_index":1805,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:64",{"_index":1804,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:68",{"_index":1793,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:73",{"_index":1800,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:80",{"_index":1795,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:84",{"_index":1803,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:88",{"_index":1797,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:95",{"_index":1791,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.withcredentials",{"_index":144,"title":{},"body":{"classes/BatchRequest.html":{}}}],["opts",{"_index":1269,"title":{},"body":{"classes/ODataEntityConfig.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["opts.include_navigation",{"_index":1202,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["opts.include_parents",{"_index":1204,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["order",{"_index":2043,"title":{},"body":{"interfaces/Parser.html":{}}}],["orderby",{"_index":927,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["orderby(orderby",{"_index":1019,"title":{},"body":{"classes/ODataCollection.html":{}}}],["orderbyoptions",{"_index":2349,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["others",{"_index":1580,"title":{},"body":{"classes/ODataModel.html":{}}}],["out",{"_index":1669,"title":{},"body":{"modules/ODataModule.html":{},"overview.html":{}}}],["overview",{"_index":2342,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1441,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"interfaces/Parser.html":{}}}],["package",{"_index":2143,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":935,"title":{},"body":{"classes/ODataCollection.html":{}}}],["pages",{"_index":936,"title":{},"body":{"classes/ODataCollection.html":{}}}],["param",{"_index":1104,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["param.indexof(value_separator",{"_index":2037,"title":{},"body":{"interfaces/Parser.html":{}}}],["param.substr(0",{"_index":2038,"title":{},"body":{"interfaces/Parser.html":{}}}],["param.substr(index",{"_index":2039,"title":{},"body":{"interfaces/Parser.html":{}}}],["param_separator",{"_index":2028,"title":{},"body":{"interfaces/Parser.html":{},"coverage.html":{}}}],["parameter",{"_index":508,"title":{},"body":{"classes/Field.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":137,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":1271,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["parentelement.children",{"_index":628,"title":{},"body":{"classes/Field.html":{}}}],["parse",{"_index":607,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/Parser.html":{}}}],["parse(entity",{"_index":1540,"title":{},"body":{"classes/ODataModel.html":{}}}],["parse(objs",{"_index":1286,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["parse(value",{"_index":1303,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}}}],["parse(values",{"_index":902,"title":{},"body":{"classes/ODataCollection.html":{}}}],["parsenot",{"_index":2085,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsenot(builtfilters",{"_index":2188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsequery",{"_index":1806,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["parsequery(query.substr(1",{"_index":1824,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["parser",{"_index":567,"title":{"interfaces/Parser.html":{}},"body":{"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["parser.fields.filter(field",{"_index":1201,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["parser.parent",{"_index":1206,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["parser.parsefromstring(xml",{"_index":570,"title":{},"body":{"classes/Field.html":{}}}],["parseresponses",{"_index":784,"title":{},"body":{"classes/ODataBatch.html":{}}}],["parserfortype",{"_index":1043,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["parserfortype(type",{"_index":1084,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["parsers",{"_index":1097,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["parsers[this.type",{"_index":1338,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["partial",{"_index":1419,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/Parser.html":{}}}],["partner",{"_index":345,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["parts",{"_index":681,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["parts.length",{"_index":685,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["parts[0",{"_index":684,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["parts[1",{"_index":687,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["patch",{"_index":90,"title":{},"body":{"classes/BatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["patch(entity",{"_index":1471,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["path",{"_index":58,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/Field.html":{},"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"classes/ODataPathSegments.html":{},"injectables/ODataServiceFactory.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["path_separator",{"_index":1725,"title":{},"body":{"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{}}}],["pathsegmentnames",{"_index":57,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["pathsegmentnames.function",{"_index":1731,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathsegmentsbuilder",{"_index":1727,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"coverage.html":{}}}],["peop",{"_index":2269,"title":{},"body":{"index.html":{}}}],["people",{"_index":2260,"title":{},"body":{"index.html":{}}}],["people.expand",{"_index":2262,"title":{},"body":{"index.html":{}}}],["people.expand().clear",{"_index":2270,"title":{},"body":{"index.html":{}}}],["people.get({withcount",{"_index":2266,"title":{},"body":{"index.html":{}}}],["peopleservice",{"_index":2234,"title":{},"body":{"index.html":{}}}],["peopleservice.entities",{"_index":2261,"title":{},"body":{"index.html":{}}}],["person",{"_index":2284,"title":{},"body":{"index.html":{}}}],["person.entity",{"_index":2309,"title":{},"body":{"index.html":{}}}],["person.expand",{"_index":2317,"title":{},"body":{"index.html":{}}}],["person.get",{"_index":2320,"title":{},"body":{"index.html":{}}}],["person.photo",{"_index":2323,"title":{},"body":{"index.html":{}}}],["personconfig",{"_index":2291,"title":{},"body":{"index.html":{}}}],["persongender",{"_index":2276,"title":{},"body":{"index.html":{}}}],["persongender.enum",{"_index":2277,"title":{},"body":{"index.html":{}}}],["persongenderconfig",{"_index":2298,"title":{},"body":{"index.html":{}}}],["photo",{"_index":2280,"title":{},"body":{"index.html":{}}}],["photo.entity",{"_index":2281,"title":{},"body":{"index.html":{}}}],["photoconfig",{"_index":2302,"title":{},"body":{"index.html":{}}}],["photos",{"_index":2318,"title":{},"body":{"index.html":{}}}],["pipe(catcherror((error",{"_index":1475,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["pipe(map(resp",{"_index":145,"title":{},"body":{"classes/BatchRequest.html":{}}}],["plainobject",{"_index":1720,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["planitems",{"_index":2319,"title":{},"body":{"index.html":{}}}],["please",{"_index":1110,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"index.html":{}}}],["pm",{"_index":1547,"title":{},"body":{"classes/ODataModel.html":{}}}],["pointer",{"_index":973,"title":{},"body":{"classes/ODataCollection.html":{}}}],["populate",{"_index":875,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["populate(entity",{"_index":1542,"title":{},"body":{"classes/ODataModel.html":{}}}],["populate(values",{"_index":904,"title":{},"body":{"classes/ODataCollection.html":{}}}],["post",{"_index":86,"title":{},"body":{"classes/BatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["post(entity",{"_index":1468,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["precision",{"_index":199,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["prefix",{"_index":2182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["primitive",{"_index":1847,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{}}}],["private",{"_index":106,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{}}}],["project",{"_index":2200,"title":{},"body":{"index.html":{}}}],["projects",{"_index":2333,"title":{},"body":{"index.html":{}}}],["projects/.../batch.ts",{"_index":2163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../builder.ts",{"_index":2165,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../http",{"_index":2347,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../metadata.ts",{"_index":2160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../module.ts",{"_index":2171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../path",{"_index":2161,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../query",{"_index":2162,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../types.ts",{"_index":2345,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["prop",{"_index":1584,"title":{},"body":{"classes/ODataModel.html":{}}}],["prop.tocollection(object.assign(base",{"_index":1589,"title":{},"body":{"classes/ODataModel.html":{}}}],["prop.tomodel(object.assign(base",{"_index":1590,"title":{},"body":{"classes/ODataModel.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["property",{"_index":252,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["property(key",{"_index":1442,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["property(name",{"_index":651,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["property.enum",{"_index":1330,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["property.maxlength",{"_index":1343,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["property.ts",{"_index":341,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"coverage.html":{}}}],["property.ts:1",{"_index":434,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:14",{"_index":377,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:15",{"_index":378,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:16",{"_index":379,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:17",{"_index":381,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:18",{"_index":380,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:19",{"_index":376,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:25",{"_index":349,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:3",{"_index":435,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:30",{"_index":352,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:31",{"_index":350,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:32",{"_index":353,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:33",{"_index":351,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:39",{"_index":391,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:4",{"_index":437,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:41",{"_index":392,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:42",{"_index":393,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:46",{"_index":365,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:48",{"_index":366,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:5",{"_index":436,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:9",{"_index":375,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["propertyref",{"_index":499,"title":{},"body":{"classes/Field.html":{}}}],["propertyrefs",{"_index":257,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["propprefix",{"_index":2177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["protected",{"_index":609,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["provide",{"_index":1686,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["providers",{"_index":1662,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{},"overview.html":{}}}],["public",{"_index":15,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["push",{"_index":1948,"title":{},"body":{"classes/OptionHandler.html":{}}}],["push(value",{"_index":1851,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["put",{"_index":87,"title":{},"body":{"classes/BatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["put(entity",{"_index":1470,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["qualifier",{"_index":216,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["queries",{"_index":2231,"title":{},"body":{"index.html":{}}}],["query",{"_index":61,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["query.split(param_separator",{"_index":2036,"title":{},"body":{"interfaces/Parser.html":{}}}],["query_separator",{"_index":2027,"title":{},"body":{"interfaces/Parser.html":{},"coverage.html":{}}}],["querying",{"_index":2196,"title":{},"body":{"index.html":{}}}],["queryoptionnames",{"_index":1794,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["queryoptionnames.expand",{"_index":1818,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.filter",{"_index":1811,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.format",{"_index":1819,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.orderby",{"_index":1814,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.search",{"_index":1812,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.select",{"_index":1810,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skip",{"_index":1816,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skiptoken",{"_index":1817,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.top",{"_index":1815,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.transform",{"_index":1813,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptions",{"_index":2350,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["r",{"_index":1417,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["r\\n",{"_index":796,"title":{},"body":{"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["raw",{"_index":2093,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["read",{"_index":1989,"title":{},"body":{"interfaces/Parser.html":{}}}],["readlink",{"_index":721,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["readonly",{"_index":11,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["reattach",{"_index":948,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["records",{"_index":933,"title":{},"body":{"classes/ODataCollection.html":{}}}],["reduce((acc",{"_index":692,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{}}}],["ref",{"_index":994,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"coverage.html":{},"index.html":{}}}],["ref.add(model.target",{"_index":996,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ref.remove(model.target",{"_index":999,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ref.set(value.rel.target",{"_index":1619,"title":{},"body":{"classes/ODataModel.html":{}}}],["ref.unset({etag",{"_index":1620,"title":{},"body":{"classes/ODataModel.html":{}}}],["reference",{"_index":469,"title":{},"body":{"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["reference.ts",{"_index":319,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"coverage.html":{}}}],["reference.ts:14",{"_index":322,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:16",{"_index":324,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:17",{"_index":323,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:21",{"_index":334,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:23",{"_index":337,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:24",{"_index":335,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:25",{"_index":336,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:3",{"_index":386,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:5",{"_index":389,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:6",{"_index":388,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:7",{"_index":387,"title":{},"body":{"classes/CsdlReference.html":{}}}],["referencedproperty",{"_index":358,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["references",{"_index":563,"title":{},"body":{"classes/Field.html":{},"interfaces/Parser.html":{}}}],["referentialconstraint",{"_index":503,"title":{},"body":{"classes/Field.html":{}}}],["referentialconstraints",{"_index":346,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["region",{"_index":1137,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"index.html":{}}}],["rel",{"_index":1560,"title":{},"body":{"classes/ODataModel.html":{}}}],["related",{"_index":2000,"title":{},"body":{"interfaces/Parser.html":{},"index.html":{}}}],["relationship",{"_index":1998,"title":{},"body":{"interfaces/Parser.html":{}}}],["rels",{"_index":1610,"title":{},"body":{"classes/ODataModel.html":{}}}],["remove",{"_index":876,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"index.html":{}}}],["remove(...names",{"_index":1835,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["remove(model",{"_index":907,"title":{},"body":{"classes/ODataCollection.html":{}}}],["remove(name",{"_index":1710,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["remove(names",{"_index":1802,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["remove(value",{"_index":1853,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["reportprogress",{"_index":139,"title":{},"body":{"classes/BatchRequest.html":{}}}],["represent",{"_index":1994,"title":{},"body":{"interfaces/Parser.html":{}}}],["request",{"_index":148,"title":{},"body":{"classes/BatchRequest.html":{}}}],["request.getheaders(method",{"_index":162,"title":{},"body":{"classes/BatchRequest.html":{}}}],["request.method",{"_index":149,"title":{},"body":{"classes/BatchRequest.html":{}}}],["request.odataquery",{"_index":150,"title":{},"body":{"classes/BatchRequest.html":{}}}],["request.options.body",{"_index":151,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requested",{"_index":1978,"title":{},"body":{"interfaces/Parser.html":{}}}],["requestmethod",{"_index":24,"title":{},"body":{"classes/BatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["requestmethod.delete",{"_index":163,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requestmethod.get",{"_index":156,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requestmethod.patch",{"_index":94,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requestmethod.post",{"_index":93,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requestmethod.put",{"_index":95,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requestmethod[method",{"_index":161,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requests",{"_index":109,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{}}}],["required",{"_index":1299,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["res",{"_index":92,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{}}}],["res.length",{"_index":165,"title":{},"body":{"classes/BatchRequest.html":{}}}],["res.split(':')[1].trim",{"_index":842,"title":{},"body":{"classes/ODataBatch.html":{}}}],["reset",{"_index":1668,"title":{},"body":{"modules/ODataModule.html":{},"overview.html":{}}}],["resolve",{"_index":1497,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["resolve(value",{"_index":1334,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["resolvekey",{"_index":1274,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["resolvekey(attrs",{"_index":1289,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["resource",{"_index":77,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resource.action(name",{"_index":1005,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resource.alias(name",{"_index":1026,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resource.clone().tomodel(value",{"_index":953,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.entity",{"_index":950,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.expand(expand",{"_index":1022,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resource.filter(filter",{"_index":1015,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.function(name",{"_index":1003,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resource.key(value",{"_index":952,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.navigationproperty(name",{"_index":1627,"title":{},"body":{"classes/ODataModel.html":{}}}],["resource.orderby(orderby",{"_index":1020,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.put(entity",{"_index":1622,"title":{},"body":{"classes/ODataModel.html":{}}}],["resource.search(search",{"_index":1018,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.select(select",{"_index":1013,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resource.skip(skip",{"_index":1009,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.skiptoken(skiptoken",{"_index":1011,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.top(top",{"_index":1007,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.transform(transform",{"_index":1024,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.type",{"_index":946,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resources",{"_index":766,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"index.html":{}}}],["resources/http",{"_index":931,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resources/requests/navigationproperty",{"_index":1557,"title":{},"body":{"classes/ODataModel.html":{}}}],["response",{"_index":136,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{}}}],["responses",{"_index":79,"title":{},"body":{"classes/BatchRequest.html":{}}}],["responsetype",{"_index":141,"title":{},"body":{"classes/BatchRequest.html":{}}}],["result",{"_index":169,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":171,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["retrieve",{"_index":2008,"title":{},"body":{"interfaces/Parser.html":{}}}],["return",{"_index":98,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["returns",{"_index":45,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":178,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["rfc",{"_index":2335,"title":{},"body":{"index.html":{}}}],["root",{"_index":2223,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":51,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":63,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["s",{"_index":1769,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.name",{"_index":1760,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.path",{"_index":1762,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.type",{"_index":1146,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["s.type).filter(t",{"_index":1749,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["save",{"_index":1412,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["save(entity",{"_index":1445,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["save(options",{"_index":1544,"title":{},"body":{"classes/ODataModel.html":{}}}],["scale",{"_index":200,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["schema",{"_index":468,"title":{},"body":{"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["schema.entities",{"_index":1157,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schema.entities.find(e",{"_index":1144,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schema.enums",{"_index":1154,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schema.enums.find(e",{"_index":1142,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schema.services",{"_index":1158,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schema.services.find(s",{"_index":1145,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schema.ts",{"_index":403,"title":{},"body":{"classes/CsdlSchema.html":{},"coverage.html":{}}}],["schema.ts:10",{"_index":423,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:11",{"_index":416,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:12",{"_index":421,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:13",{"_index":418,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:14",{"_index":420,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:15",{"_index":422,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:16",{"_index":415,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:17",{"_index":419,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:18",{"_index":425,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:19",{"_index":424,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:20",{"_index":417,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:8",{"_index":414,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schemafortype",{"_index":1044,"title":{},"body":{"classes/ODataConfig.html":{}}}],["schemafortype(type",{"_index":1087,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schemas",{"_index":564,"title":{},"body":{"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["schmea.configure",{"_index":1135,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["search",{"_index":1016,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["search(search",{"_index":1017,"title":{},"body":{"classes/ODataCollection.html":{}}}],["segment",{"_index":1697,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment(name",{"_index":1712,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.name",{"_index":1729,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.options[segmentoptionnames.key",{"_index":1736,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.options[segmentoptionnames.parameters",{"_index":1732,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.path",{"_index":1734,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.type",{"_index":1753,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler",{"_index":1708,"title":{"classes/SegmentHandler.html":{}},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"coverage.html":{}}}],["segmenthandler(segment",{"_index":1767,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(this.segments[this.segments.length",{"_index":1764,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmentoptionnames",{"_index":1726,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["segments",{"_index":59,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["segments.segment(pathsegmentnames.batch",{"_index":125,"title":{},"body":{"classes/BatchRequest.html":{}}}],["segments.ts",{"_index":1695,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["segments.ts:101",{"_index":1713,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:111",{"_index":1706,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:115",{"_index":1711,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:122",{"_index":2049,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:127",{"_index":2054,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:131",{"_index":2055,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:135",{"_index":2053,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:139",{"_index":2057,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:143",{"_index":2052,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:148",{"_index":2051,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:155",{"_index":2050,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:55",{"_index":1701,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:61",{"_index":1709,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:67",{"_index":1716,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:71",{"_index":1715,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:75",{"_index":1714,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:85",{"_index":1702,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:89",{"_index":1704,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:96",{"_index":1707,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["select",{"_index":926,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["select(select",{"_index":1012,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["selector",{"_index":2221,"title":{},"body":{"index.html":{}}}],["serialize",{"_index":1323,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["service",{"_index":1975,"title":{},"body":{"interfaces/Parser.html":{},"index.html":{}}}],["serviceconfig",{"_index":1100,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["serviceconfigforname",{"_index":1045,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataSettings.html":{}}}],["serviceconfigforname(name",{"_index":1089,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["serviceconfigfortype",{"_index":1046,"title":{},"body":{"classes/ODataConfig.html":{}}}],["serviceconfigfortype(type",{"_index":1092,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["servicerooturl",{"_index":1032,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["services",{"_index":1177,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["services/factory",{"_index":1680,"title":{},"body":{"modules/ODataModule.html":{}}}],["set",{"_index":277,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataModel.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"index.html":{}}}],["set(model",{"_index":1569,"title":{},"body":{"classes/ODataModel.html":{}}}],["set(name",{"_index":1869,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["set.ts",{"_index":279,"title":{},"body":{"classes/CsdlEntitySet.html":{},"coverage.html":{}}}],["set.ts:3",{"_index":283,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:5",{"_index":286,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:6",{"_index":284,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:7",{"_index":287,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:8",{"_index":285,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["setbatchboundary(batchboundary",{"_index":167,"title":{},"body":{"classes/BatchRequest.html":{}}}],["setnavigationproperty",{"_index":1522,"title":{},"body":{"classes/ODataModel.html":{}}}],["setnavigationproperty(field",{"_index":1546,"title":{},"body":{"classes/ODataModel.html":{}}}],["setnavigationproperty>(field",{"_index":1637,"title":{},"body":{"classes/ODataModel.html":{}}}],["setpath",{"_index":2046,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["setpath(value",{"_index":1777,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["settings",{"_index":1216,"title":{},"body":{"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["settings.parserfortype(this.base",{"_index":1376,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["settings.parserfortype(this.type",{"_index":1339,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["settings.stringasenum",{"_index":1332,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["settingsfactory",{"_index":2218,"title":{},"body":{"index.html":{}}}],["settype",{"_index":2047,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["settype(value",{"_index":1775,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["shortcuts",{"_index":1473,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataSettings.html":{}}}],["show(name",{"_index":2315,"title":{},"body":{"index.html":{}}}],["simple",{"_index":2210,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":278,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["singleton.ts",{"_index":428,"title":{},"body":{"classes/CsdlSingleton.html":{},"coverage.html":{}}}],["singleton.ts:3",{"_index":430,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:5",{"_index":431,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:6",{"_index":433,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:7",{"_index":432,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singletons",{"_index":267,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["size",{"_index":934,"title":{},"body":{"classes/ODataCollection.html":{}}}],["skip",{"_index":745,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["skip(skip",{"_index":1008,"title":{},"body":{"classes/ODataCollection.html":{}}}],["skiptoken",{"_index":747,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["skiptoken(skiptoken",{"_index":1010,"title":{},"body":{"classes/ODataCollection.html":{}}}],["slice(1",{"_index":1735,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["specified",{"_index":615,"title":{},"body":{"classes/Field.html":{}}}],["srid",{"_index":201,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["standardaggregatemethods",{"_index":2164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["started",{"_index":2192,"title":{"index.html":{}},"body":{}}],["state",{"_index":879,"title":{},"body":{"classes/ODataCollection.html":{}}}],["statements",{"_index":2061,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2255,"title":{},"body":{"index.html":{}}}],["static",{"_index":10,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataValueAnnotations.html":{},"index.html":{}}}],["status",{"_index":856,"title":{},"body":{"classes/ODataBatch.html":{}}}],["status.length",{"_index":860,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statusline",{"_index":852,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statusline.indexof(status",{"_index":859,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statusline.substring(statustextindex",{"_index":862,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statuslineparts",{"_index":854,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statuslineparts[1",{"_index":857,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statustext",{"_index":861,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statustextindex",{"_index":858,"title":{},"body":{"classes/ODataBatch.html":{}}}],["stream",{"_index":2011,"title":{},"body":{"interfaces/Parser.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stringasenum",{"_index":1033,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["structural",{"_index":251,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["structured",{"_index":234,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"coverage.html":{}}}],["styleurls",{"_index":2226,"title":{},"body":{"index.html":{}}}],["subscribe(([aport",{"_index":2248,"title":{},"body":{"index.html":{}}}],["subscribe(([aports",{"_index":2243,"title":{},"body":{"index.html":{}}}],["subscribe(([peop",{"_index":2267,"title":{},"body":{"index.html":{}}}],["subscribe(([person",{"_index":2321,"title":{},"body":{"index.html":{}}}],["subscribe(aports",{"_index":2239,"title":{},"body":{"index.html":{}}}],["sum",{"_index":2166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super(annotationlist",{"_index":217,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["super(client",{"_index":1458,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["super(name",{"_index":253,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{}}}],["super(service",{"_index":115,"title":{},"body":{"classes/BatchRequest.html":{}}}],["support",{"_index":2339,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":622,"title":{},"body":{"classes/Field.html":{}}}],["supported_expand_properties",{"_index":2094,"title":{},"body":{"coverage.html":{}}}],["svg",{"_index":2340,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1728,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["switchmap",{"_index":1556,"title":{},"body":{"classes/ODataModel.html":{}}}],["symbol.iterator",{"_index":972,"title":{},"body":{"classes/ODataCollection.html":{}}}],["system",{"_index":1807,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["t",{"_index":1071,"title":{},"body":{"classes/ODataConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["t[]).map(value",{"_index":951,"title":{},"body":{"classes/ODataCollection.html":{}}}],["t[p",{"_index":1972,"title":{},"body":{"interfaces/Parser.html":{}}}],["table",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2141,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":471,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["tag_action",{"_index":509,"title":{},"body":{"classes/Field.html":{}}}],["tag_action_import",{"_index":515,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotation",{"_index":487,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotations",{"_index":485,"title":{},"body":{"classes/Field.html":{}}}],["tag_complex_type",{"_index":493,"title":{},"body":{"classes/Field.html":{}}}],["tag_data_services",{"_index":476,"title":{},"body":{"classes/Field.html":{}}}],["tag_edmx",{"_index":474,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_container",{"_index":510,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_set",{"_index":511,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_type",{"_index":495,"title":{},"body":{"classes/Field.html":{}}}],["tag_enum_type",{"_index":489,"title":{},"body":{"classes/Field.html":{}}}],["tag_function",{"_index":505,"title":{},"body":{"classes/Field.html":{}}}],["tag_function_import",{"_index":513,"title":{},"body":{"classes/Field.html":{}}}],["tag_include",{"_index":480,"title":{},"body":{"classes/Field.html":{}}}],["tag_include_annotations",{"_index":482,"title":{},"body":{"classes/Field.html":{}}}],["tag_key",{"_index":497,"title":{},"body":{"classes/Field.html":{}}}],["tag_member",{"_index":491,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property",{"_index":500,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property_binding",{"_index":517,"title":{},"body":{"classes/Field.html":{}}}],["tag_on_delete",{"_index":504,"title":{},"body":{"classes/Field.html":{}}}],["tag_parameter",{"_index":507,"title":{},"body":{"classes/Field.html":{}}}],["tag_property",{"_index":496,"title":{},"body":{"classes/Field.html":{}}}],["tag_property_ref",{"_index":498,"title":{},"body":{"classes/Field.html":{}}}],["tag_reference",{"_index":478,"title":{},"body":{"classes/Field.html":{}}}],["tag_referential_constraint",{"_index":502,"title":{},"body":{"classes/Field.html":{}}}],["tag_return_type",{"_index":506,"title":{},"body":{"classes/Field.html":{}}}],["tag_schema",{"_index":488,"title":{},"body":{"classes/Field.html":{}}}],["tag_singleton",{"_index":512,"title":{},"body":{"classes/Field.html":{}}}],["tag_term",{"_index":484,"title":{},"body":{"classes/Field.html":{}}}],["tag_type_definition",{"_index":518,"title":{},"body":{"classes/Field.html":{}}}],["tags",{"_index":473,"title":{},"body":{"classes/Field.html":{},"index.html":{}}}],["target",{"_index":215,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["targeted",{"_index":2004,"title":{},"body":{"interfaces/Parser.html":{}}}],["targetnamespace",{"_index":332,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["templateurl",{"_index":2224,"title":{},"body":{"index.html":{}}}],["term",{"_index":218,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["termnamespace",{"_index":331,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["terms",{"_index":411,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["text",{"_index":142,"title":{},"body":{"classes/BatchRequest.html":{}}}],["text/plain",{"_index":2023,"title":{},"body":{"interfaces/Parser.html":{}}}],["text/xml",{"_index":571,"title":{},"body":{"classes/Field.html":{}}}],["text_plain",{"_index":2022,"title":{},"body":{"interfaces/Parser.html":{},"coverage.html":{}}}],["this._annotations",{"_index":954,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._annotations.etag",{"_index":1609,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._annotations.property(f.name",{"_index":1588,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._annotations.property(field.name",{"_index":1632,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._context",{"_index":677,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this._entity",{"_index":1571,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._entity[f.name",{"_index":1583,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._entity[field.name",{"_index":1628,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._functions",{"_index":688,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this._models",{"_index":932,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._models.map(model",{"_index":969,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._properties",{"_index":696,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this._query.skip(this._state.skip",{"_index":987,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._query.skiptoken(this._state.skiptoken",{"_index":989,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._relations",{"_index":1591,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._relations[field.name",{"_index":1635,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._relations[field.name].rel",{"_index":1636,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource",{"_index":944,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.all",{"_index":990,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._resource.clone",{"_index":949,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.config().fields",{"_index":1563,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.delete(object.assign",{"_index":1625,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.get",{"_index":981,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.get(options",{"_index":980,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.haskey",{"_index":1603,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.key(this",{"_index":1602,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.post(entity",{"_index":1607,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.reference",{"_index":995,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._resource.type",{"_index":945,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._segments.navigationproperty(field.name",{"_index":1630,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._segments.navigationproperty(value.field.name).reference",{"_index":1616,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._state",{"_index":938,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.page",{"_index":966,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.pages",{"_index":964,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.records",{"_index":963,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.size",{"_index":958,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.skip",{"_index":959,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.skiptoken",{"_index":961,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.top",{"_index":956,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.acceptmetadata",{"_index":1125,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.annotations",{"_index":1191,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.assertarray",{"_index":1865,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().filter(v",{"_index":1854,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().push(value",{"_index":1852,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray()[index",{"_index":1860,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertobject()[name",{"_index":1870,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.attach(options.resource",{"_index":941,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this.base",{"_index":1352,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.batchboundary",{"_index":117,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.changesetboundary",{"_index":119,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.changesetid",{"_index":121,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.checkversion(document",{"_index":572,"title":{},"body":{"classes/Field.html":{}}}],["this.client",{"_index":1898,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["this.client.entityset(ctor.path",{"_index":770,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["this.client.mergehttpheaders(options.headers",{"_index":132,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.client.post(this",{"_index":133,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.client.serviceconfigfortype(ctor.type",{"_index":774,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["this.collection",{"_index":1194,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.configs",{"_index":1917,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.configs.find(c",{"_index":1929,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.configs.foreach(config",{"_index":1926,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.configs.length",{"_index":1920,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.configs.map(config",{"_index":1935,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.configs.some(c",{"_index":1921,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.configs[0",{"_index":1928,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.constructor",{"_index":769,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this.containers",{"_index":1173,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.containers.reduce((acc",{"_index":1178,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.create(entity",{"_index":1478,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.create(options",{"_index":1624,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.createodataresponse(batchbodylines",{"_index":833,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.creation",{"_index":1129,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.entities",{"_index":772,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.entities().action(name",{"_index":1462,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entities().function(name",{"_index":1464,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entities().tocollection({[value",{"_index":1652,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["this.entity(entity",{"_index":1469,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entity(entity).haskey",{"_index":1480,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entity(entity).tomodel(entity",{"_index":1651,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["this.entity(key",{"_index":1467,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entity(key).action(name",{"_index":1461,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entity(key).function(name",{"_index":1463,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entity(key).navigationproperty(name",{"_index":1459,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entity(key).property(name",{"_index":1460,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entityconfigforname(name",{"_index":1159,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.entityconfigfortype(type",{"_index":1148,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.enumconfigfortype(type",{"_index":1160,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.enums",{"_index":1167,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.factory.createentityservice(\"airports",{"_index":2233,"title":{},"body":{"index.html":{}}}],["this.factory.createentityservice(\"people",{"_index":2235,"title":{},"body":{"index.html":{}}}],["this.fetch(options",{"_index":988,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.fetchone(entity",{"_index":1474,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.fields",{"_index":1354,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.fields.filter(f",{"_index":1386,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.fields.find(f",{"_index":1388,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.fields.foreach(f",{"_index":1377,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.find(name",{"_index":1765,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.findconfigfortypes([type",{"_index":1934,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.flags",{"_index":1316,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.functions[name",{"_index":706,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.get(name",{"_index":1876,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.getbody",{"_index":134,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.getboundarydelimiter(contenttype",{"_index":823,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.getboundaryend(boundarydelimiterbatch",{"_index":825,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.getfieldvaluebyattribute",{"_index":574,"title":{},"body":{"classes/Field.html":{}}}],["this.getnavigationproperty(field",{"_index":1568,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.getobjects(dataservices",{"_index":590,"title":{},"body":{"classes/Field.html":{}}}],["this.getobjects(document.documentelement",{"_index":579,"title":{},"body":{"classes/Field.html":{}}}],["this.headers",{"_index":1118,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.httpresponse",{"_index":817,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.httpresponse.body",{"_index":827,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.httpresponse.headers.get(odatabatch.content_type",{"_index":821,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.keys",{"_index":1393,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.keys().length",{"_index":1398,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.maxlength",{"_index":1342,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.members",{"_index":1183,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.metadataurl",{"_index":1120,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.model",{"_index":1193,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.n",{"_index":1845,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.name",{"_index":1114,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.namespace",{"_index":1165,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.navigation",{"_index":1347,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.nextlink",{"_index":742,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.o[this.n",{"_index":1846,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].filter(v",{"_index":1874,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].length",{"_index":1857,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n][0",{"_index":1858,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n][name",{"_index":1872,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.odataresponses",{"_index":818,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.odataresponses.push(odataresponse",{"_index":836,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.odataresponses.push(response",{"_index":839,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.option(name).clear",{"_index":1837,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options",{"_index":1771,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.options.headers",{"_index":101,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.options[k",{"_index":1842,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[key",{"_index":1822,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[name",{"_index":1832,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[queryoptionnames.custom",{"_index":1825,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[type",{"_index":1782,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.params",{"_index":1116,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.parent",{"_index":1359,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parent.keys",{"_index":1391,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parent.parse(objs",{"_index":1360,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parent.tojson(objs",{"_index":1371,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parent.typefor(name",{"_index":1390,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parse(this._entity",{"_index":1592,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.parse(values",{"_index":968,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.parser",{"_index":1187,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.parser.configure(settings",{"_index":1189,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.parser.iscomplex",{"_index":1351,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parser.parse(value",{"_index":1336,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parser.tojson(value",{"_index":1337,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parseresponses",{"_index":819,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.parserfortype(type",{"_index":1136,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.path",{"_index":1751,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.people.entity({username",{"_index":2316,"title":{},"body":{"index.html":{}}}],["this.person",{"_index":2322,"title":{},"body":{"index.html":{}}}],["this.photos.entity(person.photo).media",{"_index":2324,"title":{},"body":{"index.html":{}}}],["this.populate((entity",{"_index":1561,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.populate((values",{"_index":942,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.populate(entities",{"_index":986,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.populate(entity",{"_index":1605,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.populate(this._entity",{"_index":1572,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.properties[name",{"_index":705,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.queries",{"_index":2230,"title":{},"body":{"index.html":{}}}],["this.ref.split('/').reduce((acc",{"_index":1335,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.references",{"_index":578,"title":{},"body":{"classes/Field.html":{}}}],["this.requests",{"_index":116,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.requests.push(new",{"_index":128,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.schemafortype(type",{"_index":1141,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.schemas",{"_index":589,"title":{},"body":{"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.schemas.find(s",{"_index":1139,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.schemas.reduce((acc",{"_index":1153,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.segment.name",{"_index":1773,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.options",{"_index":1772,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.path",{"_index":1776,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.type",{"_index":1774,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments",{"_index":1743,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.filter(s",{"_index":1768,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.length",{"_index":1763,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.map(s",{"_index":1748,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.map(segment",{"_index":1752,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.push(segment",{"_index":1766,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments].reverse().find(s",{"_index":1759,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.servicerooturl",{"_index":1105,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.servicerooturl.endswith",{"_index":1113,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.servicerooturl.indexof",{"_index":1107,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.services",{"_index":1208,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.setnavigationproperty(field",{"_index":1570,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.show('scottketchum",{"_index":2314,"title":{},"body":{"index.html":{}}}],["this.stringasenum",{"_index":1127,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.toentity",{"_index":1606,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.type",{"_index":1185,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.type}'${e",{"_index":1327,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.update(entity",{"_index":1481,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.update(options",{"_index":1623,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.value",{"_index":678,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[key",{"_index":695,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_context",{"_index":679,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_count",{"_index":735,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_etag",{"_index":716,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_id",{"_index":714,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_media_contenttype",{"_index":730,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_metadataetag",{"_index":720,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_type].substr(1",{"_index":710,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.version",{"_index":573,"title":{},"body":{"classes/Field.html":{}}}],["this.withcredentials",{"_index":1122,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["through",{"_index":2217,"title":{},"body":{"index.html":{}}}],["throw",{"_index":605,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["throwerror",{"_index":1456,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["throwerror(error",{"_index":1479,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["title",{"_index":1297,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"index.html":{}}}],["toentities",{"_index":877,"title":{},"body":{"classes/ODataCollection.html":{}}}],["toentity",{"_index":1523,"title":{},"body":{"classes/ODataModel.html":{}}}],["tojson",{"_index":1275,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["tojson(objs",{"_index":1292,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["tojson(value",{"_index":1308,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}}}],["tojsonschema",{"_index":1276,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["tojsonschema(config",{"_index":1294,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["tojsonschema(options",{"_index":1312,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["tools",{"_index":1833,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["top",{"_index":740,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["top(top",{"_index":1006,"title":{},"body":{"classes/ODataCollection.html":{}}}],["tostring",{"_index":1698,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["total",{"_index":1977,"title":{},"body":{"interfaces/Parser.html":{}}}],["transfer",{"_index":2025,"title":{},"body":{"interfaces/Parser.html":{}}}],["transform",{"_index":928,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transform(transform",{"_index":1023,"title":{},"body":{"classes/ODataCollection.html":{}}}],["transforms",{"_index":2184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trip",{"_index":2282,"title":{},"body":{"index.html":{}}}],["trip.entity",{"_index":2283,"title":{},"body":{"index.html":{}}}],["tripconfig",{"_index":2305,"title":{},"body":{"index.html":{}}}],["trippin",{"_index":2229,"title":{},"body":{"index.html":{}}}],["trippinconfig",{"_index":2307,"title":{},"body":{"index.html":{}}}],["trippinmodule",{"_index":2328,"title":{},"body":{"index.html":{}}}],["trips",{"_index":2265,"title":{},"body":{"index.html":{}}}],["true",{"_index":1199,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"index.html":{}}}],["try",{"_index":566,"title":{},"body":{"classes/Field.html":{}}}],["tslib",{"_index":2154,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":31,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["type.startswith(s.namespace",{"_index":1140,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["type.ts",{"_index":235,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"coverage.html":{}}}],["type.ts:1",{"_index":301,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:10",{"_index":294,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:12",{"_index":295,"title":{},"body":{"classes/CsdlEnumMember.html":{}}}],["type.ts:13",{"_index":296,"title":{},"body":{"classes/CsdlEnumMember.html":{}}}],["type.ts:14",{"_index":243,"title":{},"body":{"classes/CsdlComplexType.html":{}}}],["type.ts:27",{"_index":290,"title":{},"body":{"classes/CsdlEntityType.html":{}}}],["type.ts:3",{"_index":304,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:30",{"_index":292,"title":{},"body":{"classes/CsdlEntityType.html":{}}}],["type.ts:36",{"_index":291,"title":{},"body":{"classes/CsdlEntityType.html":{}}}],["type.ts:4",{"_index":303,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:42",{"_index":339,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:44",{"_index":340,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:48",{"_index":382,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:5",{"_index":305,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:50",{"_index":384,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:51",{"_index":383,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:6",{"_index":302,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:7",{"_index":439,"title":{},"body":{"classes/CsdlStructuredType.html":{}}}],["type.ts:8",{"_index":438,"title":{},"body":{"classes/CsdlStructuredType.html":{}}}],["type.ts:9",{"_index":440,"title":{},"body":{"classes/CsdlStructuredType.html":{}}}],["typealiases",{"_index":2344,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedefinition",{"_index":519,"title":{},"body":{"classes/Field.html":{}}}],["typedefinitions",{"_index":412,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["typefor",{"_index":1277,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["typefor(name",{"_index":1300,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["typeof",{"_index":1147,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/SegmentHandler.html":{}}}],["typeof(value",{"_index":1320,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["types",{"_index":54,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"index.html":{}}}],["types.isarray(this.o[this.n",{"_index":1849,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(key",{"_index":1397,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["types.isempty(options",{"_index":1755,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isempty(this.options[key",{"_index":1821,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(v",{"_index":1875,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isnullorundefined(attr",{"_index":618,"title":{},"body":{"classes/Field.html":{}}}],["types.isnullorundefined(attributes",{"_index":613,"title":{},"body":{"classes/Field.html":{}}}],["types.isnullorundefined(odataresponsecs",{"_index":834,"title":{},"body":{"classes/ODataBatch.html":{}}}],["types.isnullorundefined(response",{"_index":838,"title":{},"body":{"classes/ODataBatch.html":{}}}],["types.isnullorundefined(t",{"_index":1750,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isnullorundefined(this.changesetboundary",{"_index":157,"title":{},"body":{"classes/BatchRequest.html":{}}}],["types.isnullorundefined(this.options",{"_index":96,"title":{},"body":{"classes/BatchRequest.html":{}}}],["types.isnullorundefined(this.options.headers",{"_index":97,"title":{},"body":{"classes/BatchRequest.html":{}}}],["types.isobject(this.o[this.n",{"_index":1863,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isobject(v",{"_index":1867,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isundefined(c.name",{"_index":1922,"title":{},"body":{"classes/ODataSettings.html":{}}}],["types.isundefined(config",{"_index":1149,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["types.isundefined(name",{"_index":1930,"title":{},"body":{"classes/ODataSettings.html":{}}}],["types.isundefined(opts",{"_index":1781,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["types.isundefined(path",{"_index":1761,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isundefined(this.o[this.n",{"_index":1850,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isundefined(this.options[name",{"_index":1834,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.some(type",{"_index":1933,"title":{},"body":{"classes/ODataSettings.html":{}}}],["undefined",{"_index":840,"title":{},"body":{"classes/ODataBatch.html":{},"classes/ODataModel.html":{}}}],["underlayingtype",{"_index":453,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["underlyingtype",{"_index":299,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["unicode",{"_index":357,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["united",{"_index":2254,"title":{},"body":{"index.html":{}}}],["unnamed",{"_index":2086,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["unset",{"_index":1949,"title":{},"body":{"classes/OptionHandler.html":{}}}],["unset(name",{"_index":1873,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["updatable",{"_index":1993,"title":{},"body":{"interfaces/Parser.html":{}}}],["update",{"_index":1413,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["update(entity",{"_index":1447,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["update(options",{"_index":1551,"title":{},"body":{"classes/ODataModel.html":{}}}],["updating",{"_index":2198,"title":{},"body":{"index.html":{}}}],["uri",{"_index":327,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["url",{"_index":1974,"title":{},"body":{"interfaces/Parser.html":{}}}],["usage",{"_index":2209,"title":{},"body":{"index.html":{}}}],["use",{"_index":1111,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"index.html":{}}}],["used",{"_index":1988,"title":{},"body":{"interfaces/Parser.html":{}}}],["usefactory",{"_index":1688,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["username",{"_index":2285,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":1687,"title":{},"body":{"modules/ODataModule.html":{}}}],["using",{"_index":2273,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1102,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["utils/index",{"_index":1723,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["utils/types",{"_index":55,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataBatch.html":{}}}],["uuid",{"_index":49,"title":{},"body":{"classes/BatchRequest.html":{},"index.html":{}}}],["uuids",{"_index":2337,"title":{},"body":{"index.html":{}}}],["uuidv4",{"_index":48,"title":{},"body":{"classes/BatchRequest.html":{}}}],["v",{"_index":1385,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["v.rel",{"_index":1598,"title":{},"body":{"classes/ODataModel.html":{}}}],["v4",{"_index":47,"title":{},"body":{"classes/BatchRequest.html":{},"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["value.attach(this.entities",{"_index":1654,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["value.attach(this.entities().entity(value.toentity",{"_index":1653,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["value.field.collection",{"_index":1614,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.field.navigation",{"_index":1613,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.lastindexof",{"_index":680,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["value.map(v",{"_index":1305,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["value.rel",{"_index":1618,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.substr(index",{"_index":682,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["value.toentities",{"_index":1600,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.toentity",{"_index":1599,"title":{},"body":{"classes/ODataModel.html":{}}}],["value[key",{"_index":2034,"title":{},"body":{"interfaces/Parser.html":{}}}],["value_separator",{"_index":2029,"title":{},"body":{"interfaces/Parser.html":{},"coverage.html":{}}}],["values",{"_index":884,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{}}}],["values.length",{"_index":967,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataSettings.html":{}}}],["values[0",{"_index":1940,"title":{},"body":{"classes/ODataSettings.html":{}}}],["var",{"_index":1586,"title":{},"body":{"classes/ODataModel.html":{}}}],["variable",{"_index":2074,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":108,"title":{},"body":{"classes/BatchRequest.html":{}}}],["version",{"_index":522,"title":{},"body":{"classes/Field.html":{},"interfaces/Parser.html":{}}}],["version_4_0",{"_index":73,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{},"coverage.html":{}}}],["void",{"_index":168,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["withcount",{"_index":978,"title":{},"body":{"classes/ODataCollection.html":{}}}],["withcredentials",{"_index":143,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["without",{"_index":1002,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["yes",{"_index":32,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":2156,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1667,"title":{},"body":{"modules/ODataModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BatchRequest.html":{"url":"classes/BatchRequest.html","title":"class - BatchRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BatchRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/requests/batch.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                BATCH_PREFIX\n                            \n                            \n                                    Static\n                                    Readonly\n                                BOUNDARY_PREFIX_SUFFIX\n                            \n                            \n                                    Static\n                                    Readonly\n                                CHANGESET_PREFIX\n                            \n                            \n                                    Public\n                                method\n                            \n                            \n                                    Public\n                                odataQuery\n                            \n                            \n                                    Public\n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(method: RequestMethod, odataQuery: ODataResource, options?)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        RequestMethod\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        odataQuery\n                                                  \n                                                        \n                                                                        ODataResource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            BATCH_PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'batch_'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            BOUNDARY_PREFIX_SUFFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '--'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CHANGESET_PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'changeset_'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestMethod\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            odataQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            options\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:33\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHeaders\n                        \n                        \n                    \n                \n            \n            \n                \ngetHeaders(method: RequestMethod)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { v4 as uuidv4 } from 'uuid';\nimport { Observable } from 'rxjs';\n\nimport { ODataClient } from '../../client';\nimport { Types } from '../../utils/types';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataQueryOptions } from '../query-options';\nimport { map } from 'rxjs/operators';\nimport { $BATCH, CONTENT_TYPE, APPLICATION_JSON, NEWLINE, ODATA_VERSION, ACCEPT, HTTP11, MULTIPART_MIXED, MULTIPART_MIXED_BOUNDARY, VERSION_4_0, APPLICATION_HTTP, CONTENT_TRANSFER_ENCODING, CONTENT_ID } from '../../types';\nimport { ODataResource } from '../resource';\nimport { ODataBatch } from '../responses';\nimport { HttpOptions } from '../http-options';\nimport { HttpHeaders } from '@angular/common/http';\n\nexport enum RequestMethod {\n  Get,\n  Post,\n  Put,\n  Delete,\n  Options,\n  Head,\n  Patch\n}\n\nclass BatchRequest {\n  public static readonly BOUNDARY_PREFIX_SUFFIX = '--';\n  public static readonly BATCH_PREFIX = 'batch_';\n  public static readonly CHANGESET_PREFIX = 'changeset_';\n\n  constructor(\n    public method: RequestMethod,\n    public odataQuery: ODataResource,\n    public options?: HttpOptions & { body?: any }) { }\n\n  getHeaders(method: RequestMethod): string {\n    let res = '';\n\n    if (method === RequestMethod.Post || method === RequestMethod.Patch || method === RequestMethod.Put) {\n      res += CONTENT_TYPE + ': ' + APPLICATION_JSON + NEWLINE;\n    }\n\n    if (Types.isNullOrUndefined(this.options) || Types.isNullOrUndefined(this.options.headers)) {\n      return res;\n    }\n\n    for (const key of (this.options.headers as HttpHeaders).keys()) {\n      res += key + ': ' + (this.options.headers as HttpHeaders).getAll(key) + NEWLINE;\n    }\n\n    return res;\n  }\n}\n\nexport class ODataBatchResource extends ODataResource {\n  private static readonly BINARY = 'binary';\n\n  // VARIABLES\n  private requests: BatchRequest[];\n  private batchBoundary: string;\n  private changesetBoundary: string;\n  private changesetID: number;\n\n  constructor(service: ODataClient, segments?: ODataPathSegments, options?: ODataQueryOptions) {\n    super(service, segments, options);\n    this.requests = [];\n    this.batchBoundary = BatchRequest.BATCH_PREFIX + uuidv4();\n    this.changesetBoundary = null;\n    this.changesetID = 1;\n  }\n\n  static factory(service: ODataClient) {\n    let segments = new ODataPathSegments();\n    segments.segment(PathSegmentNames.batch, $BATCH);\n    return new ODataBatchResource(service, segments);\n  }\n\n  add(method: RequestMethod, query: ODataResource, options?: HttpOptions & { body?: any }): ODataBatchResource {\n    this.requests.push(new BatchRequest(method, query, options));\n    return this;\n  }\n\n  execute(options: HttpOptions = {}): Observable {\n\n    let headers = this.client.mergeHttpHeaders(options.headers, {\n      [ODATA_VERSION]: VERSION_4_0,\n      [CONTENT_TYPE]: MULTIPART_MIXED_BOUNDARY + this.batchBoundary,\n      [ACCEPT]: MULTIPART_MIXED\n    });\n\n    return this.client.post(this, this.getBody(), {\n      headers: headers,\n      observe: 'response',\n      params: options.params,\n      reportProgress: options.reportProgress,\n      responseType: 'text',\n      withCredentials: options.withCredentials\n    }).pipe(map(resp => new ODataBatch(resp)));\n  }\n\n  getBody(): string {\n    let res = '';\n\n    for (const request of this.requests) {\n      const method: RequestMethod = request.method;\n      const odataQuery: ODataResource = request.odataQuery;\n      const body: any = request.options.body;\n\n      // if method is GET and there is a changeset boundary open then close it\n      if (method === RequestMethod.Get && !Types.isNullOrUndefined(this.changesetBoundary)) {\n        res += BatchRequest.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + BatchRequest.BOUNDARY_PREFIX_SUFFIX + NEWLINE;\n        this.changesetBoundary = null;\n      }\n\n      // if there is no changeset boundary open then open a batch boundary\n      if (Types.isNullOrUndefined(this.changesetBoundary)) {\n        res += BatchRequest.BOUNDARY_PREFIX_SUFFIX + this.batchBoundary + NEWLINE;\n      }\n\n      // if method is not GET and there is no changeset boundary open then open a changeset boundary\n      if (method !== RequestMethod.Get) {\n        if (Types.isNullOrUndefined(this.changesetBoundary)) {\n          this.changesetBoundary = BatchRequest.CHANGESET_PREFIX + uuidv4();\n          res += CONTENT_TYPE + ': ' + MULTIPART_MIXED_BOUNDARY + this.changesetBoundary + NEWLINE;\n          res += NEWLINE;\n        }\n        res += BatchRequest.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + NEWLINE;\n      }\n\n      res += CONTENT_TYPE + ': ' + APPLICATION_HTTP + NEWLINE;\n      res += CONTENT_TRANSFER_ENCODING + ': ' + ODataBatchResource.BINARY + NEWLINE;\n\n      if (method !== RequestMethod.Get) {\n        res += CONTENT_ID + ': ' + this.changesetID++ + NEWLINE;\n      }\n\n      res += NEWLINE;\n      res += RequestMethod[method] + ' ' + odataQuery + ' ' + HTTP11 + NEWLINE;\n\n      res += request.getHeaders(method);\n\n      res += NEWLINE;\n      if (method === RequestMethod.Get || method === RequestMethod.Delete) {\n        res += NEWLINE;\n      } else {\n        res += JSON.stringify(body) + NEWLINE;\n      }\n    }\n\n    if (res.length) {\n      if (!Types.isNullOrUndefined(this.changesetBoundary)) {\n        res += BatchRequest.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + BatchRequest.BOUNDARY_PREFIX_SUFFIX + NEWLINE;\n        this.changesetBoundary = null;\n      }\n      res += BatchRequest.BOUNDARY_PREFIX_SUFFIX + this.batchBoundary + BatchRequest.BOUNDARY_PREFIX_SUFFIX;\n    }\n\n    return res;\n  }\n\n  getRequests(): BatchRequest[] {\n    return this.requests;\n  }\n\n  setBatchBoundary(batchBoundary: string): void {\n    this.batchBoundary = batchBoundary;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAction.html":{"url":"classes/CsdlAction.html","title":"class - CsdlAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                    Optional\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType?: CsdlReturnType, isBound?: boolean, entitySetPath?: string, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlActionImport.html":{"url":"classes/CsdlActionImport.html","title":"class - CsdlActionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlActionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, action: string, entitySet?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotable.html":{"url":"classes/CsdlAnnotable.html","title":"class - CsdlAnnotable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotation.html":{"url":"classes/CsdlAnnotation.html","title":"class - CsdlAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                term\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(term: string, qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            term\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotations.html":{"url":"classes/CsdlAnnotations.html","title":"class - CsdlAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                target\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(target: string, annotationList: CsdlAnnotation[], qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlComplexType.html":{"url":"classes/CsdlComplexType.html","title":"class - CsdlComplexType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlComplexType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityContainer.html":{"url":"classes/CsdlEntityContainer.html","title":"class - CsdlEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actionImports\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySets\n                            \n                            \n                                    Public\n                                    Optional\n                                extend\n                            \n                            \n                                    Public\n                                    Optional\n                                functionImports\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                singletons\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, extend?: string, entitySets?: CsdlEntitySet[], singletons?: CsdlSingleton[], functionImports?: CsdlFunctionImport[], actionImports?: CsdlActionImport[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extend\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySets\n                                                  \n                                                        \n                                                                        CsdlEntitySet[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        singletons\n                                                  \n                                                        \n                                                                        CsdlSingleton[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionImports\n                                                  \n                                                        \n                                                                    CsdlFunctionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionImports\n                                                  \n                                                        \n                                                                    CsdlActionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlActionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntitySet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            extend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlFunctionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            singletons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlSingleton[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlEntitySet } from './csdl-entity-set';\nimport { CsdlSingleton } from './csdl-singleton';\nimport { CsdlFunctionImport, CsdlActionImport } from './csdl-function-action';\n\nexport class CsdlEntityContainer {\n    constructor(\n        public name: string,\n        public extend?: string,\n        public entitySets?: CsdlEntitySet[],\n        public singletons?: CsdlSingleton[],\n        public functionImports?: CsdlFunctionImport[],\n        public actionImports?: CsdlActionImport[]\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntitySet.html":{"url":"classes/CsdlEntitySet.html","title":"class - CsdlEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entityType\n                            \n                            \n                                    Public\n                                    Optional\n                                includeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBinding\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, entityType: string, navigationPropertyBinding?: CsdlNavigationPropertyBinding[], includeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBinding\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBinding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlEntitySet {\n    constructor(\n        public name: string,\n        public entityType: string,\n        public navigationPropertyBinding?: CsdlNavigationPropertyBinding[],\n        public includeInServiceDocument?: boolean\n    ) {\n\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityType.html":{"url":"classes/CsdlEntityType.html","title":"class - CsdlEntityType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                hasStream\n                            \n                            \n                                    Public\n                                    Optional\n                                key\n                            \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, key?: CsdlKey, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean, hasStream?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        CsdlKey\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        hasStream\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            hasStream\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlKey\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumMember.html":{"url":"classes/CsdlEnumMember.html","title":"class - CsdlEnumMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value?: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumType.html":{"url":"classes/CsdlEnumType.html","title":"class - CsdlEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                isFlags\n                            \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                underlyingType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, members: CsdlEnumMember[], underlyingType?: string, isFlags?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        members\n                                                  \n                                                        \n                                                                        CsdlEnumMember[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlyingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isFlags\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isFlags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumMember[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            underlyingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunction.html":{"url":"classes/CsdlFunction.html","title":"class - CsdlFunction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                    Optional\n                                isComposable\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType: CsdlReturnType, isBound?: boolean, entitySetPath?: string, isComposable?: boolean, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isComposable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isComposable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunctionImport.html":{"url":"classes/CsdlFunctionImport.html","title":"class - CsdlFunctionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunctionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                functionName\n                            \n                            \n                                    Public\n                                    Optional\n                                IncludeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, functionName: string, entitySet?: string, IncludeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        IncludeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            functionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            IncludeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlInclude.html":{"url":"classes/CsdlInclude.html","title":"class - CsdlInclude","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlInclude\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                namespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlIncludeAnnotations.html":{"url":"classes/CsdlIncludeAnnotations.html","title":"class - CsdlIncludeAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlIncludeAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                    Optional\n                                targetNamespace\n                            \n                            \n                                    Public\n                                termNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(termNamespace: string, qualifier?: string, targetNamespace?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        termNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            targetNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            termNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlKey.html":{"url":"classes/CsdlKey.html","title":"class - CsdlKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                propertyRefs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(propertyRefs: CsdlPropertyRef[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyRefs\n                                                  \n                                                        \n                                                                    CsdlPropertyRef[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propertyRefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlPropertyRef[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationProperty.html":{"url":"classes/CsdlNavigationProperty.html","title":"class - CsdlNavigationProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                containsTarget\n                            \n                            \n                                    Public\n                                    Optional\n                                onDelete\n                            \n                            \n                                    Public\n                                    Optional\n                                partner\n                            \n                            \n                                    Public\n                                    Optional\n                                referentialConstraints\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, partner?: string, containsTarget?: boolean, referentialConstraints?: CsdlReferentialConstraint[], onDelete?: CsdlOnDelete)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        partner\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        containsTarget\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        referentialConstraints\n                                                  \n                                                        \n                                                                        CsdlReferentialConstraint[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        onDelete\n                                                  \n                                                        \n                                                                        CsdlOnDelete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            containsTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDelete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlOnDelete\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            partner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            referentialConstraints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReferentialConstraint[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationPropertyBinding.html":{"url":"classes/CsdlNavigationPropertyBinding.html","title":"class - CsdlNavigationPropertyBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationPropertyBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(path: string, target: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlNavigationPropertyBinding {\n    constructor(\n        public path: string,\n        public target: string,\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlOnDelete.html":{"url":"classes/CsdlOnDelete.html","title":"class - CsdlOnDelete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlOnDelete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlParameter.html":{"url":"classes/CsdlParameter.html","title":"class - CsdlParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlProperty.html":{"url":"classes/CsdlProperty.html","title":"class - CsdlProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, defaultValue?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlPropertyRef.html":{"url":"classes/CsdlPropertyRef.html","title":"class - CsdlPropertyRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlPropertyRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReference.html":{"url":"classes/CsdlReference.html","title":"class - CsdlReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                includeAnnotations\n                            \n                            \n                                    Public\n                                    Optional\n                                includes\n                            \n                            \n                                    Public\n                                uri\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uri: string, includes?: CsdlInclude[], includeAnnotations?: CsdlIncludeAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        includes\n                                                  \n                                                        \n                                                                        CsdlInclude[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeAnnotations\n                                                  \n                                                        \n                                                                    CsdlIncludeAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeAnnotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlIncludeAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlInclude[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReferentialConstraint.html":{"url":"classes/CsdlReferentialConstraint.html","title":"class - CsdlReferentialConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReferentialConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                property\n                            \n                            \n                                    Public\n                                referencedProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, referencedProperty: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referencedProperty\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            property\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referencedProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReturnType.html":{"url":"classes/CsdlReturnType.html","title":"class - CsdlReturnType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReturnType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSchema.html":{"url":"classes/CsdlSchema.html","title":"class - CsdlSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actions\n                            \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationsList\n                            \n                            \n                                    Public\n                                    Optional\n                                complexTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                entityContainer\n                            \n                            \n                                    Public\n                                    Optional\n                                entityTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                enumTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                functions\n                            \n                            \n                                    Public\n                                namespace\n                            \n                            \n                                    Public\n                                    Optional\n                                terms\n                            \n                            \n                                    Public\n                                    Optional\n                                typeDefinitions\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string, enumTypes?: CsdlEnumType[], complexTypes?: CsdlComplexType[], entityTypes?: CsdlEntityType[], functions?: CsdlFunction[], actions?: CsdlAction[], entityContainer?: CsdlEntityContainer, typeDefinitions?: CsdlTypeDefinition[], terms?: CsdlTerm[], annotationsList?: CsdlAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        enumTypes\n                                                  \n                                                        \n                                                                        CsdlEnumType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        complexTypes\n                                                  \n                                                        \n                                                                        CsdlComplexType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityTypes\n                                                  \n                                                        \n                                                                        CsdlEntityType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functions\n                                                  \n                                                        \n                                                                        CsdlFunction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                        CsdlAction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityContainer\n                                                  \n                                                        \n                                                                        CsdlEntityContainer\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeDefinitions\n                                                  \n                                                        \n                                                                        CsdlTypeDefinition[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        terms\n                                                  \n                                                        \n                                                                        CsdlTerm[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationsList\n                                                  \n                                                        \n                                                                    CsdlAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            complexTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlComplexType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            enumTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlFunction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            terms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTerm[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            typeDefinitions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTypeDefinition[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotation, CsdlAnnotable, CsdlTerm, CsdlAnnotations } from './csdl-annotation';\nimport { CsdlTypeDefinition } from './csdl-type-definition';\nimport { CsdlEnumType } from './csdl-enum-type';\nimport { CsdlEntityType, CsdlComplexType } from './csdl-structured-type';\nimport { CsdlFunction, CsdlAction } from './csdl-function-action';\nimport { CsdlEntityContainer } from './csdl-entity-container';\n\nexport class CsdlSchema extends CsdlAnnotable {\n    constructor(\n        public namespace: string,\n        public alias?: string,\n        public enumTypes?: CsdlEnumType[],\n        public complexTypes?: CsdlComplexType[],\n        public entityTypes?: CsdlEntityType[],\n        public functions?: CsdlFunction[],\n        public actions?: CsdlAction[],\n        public entityContainer?: CsdlEntityContainer,\n        public typeDefinitions?: CsdlTypeDefinition[],\n        public terms?: CsdlTerm[],\n        public annotationsList?: CsdlAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSingleton.html":{"url":"classes/CsdlSingleton.html","title":"class - CsdlSingleton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSingleton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBindings\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, navigationPropertyBindings?: CsdlNavigationPropertyBinding[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBindings\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBindings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlSingleton {\n    constructor(\n        public name: string,\n        public type: string,\n        public navigationPropertyBindings?: CsdlNavigationPropertyBinding[]\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuralProperty.html":{"url":"classes/CsdlStructuralProperty.html","title":"class - CsdlStructuralProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuralProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuredType.html":{"url":"classes/CsdlStructuredType.html","title":"class - CsdlStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTerm.html":{"url":"classes/CsdlTerm.html","title":"class - CsdlTerm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTerm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appliesTo\n                            \n                            \n                                    Public\n                                    Optional\n                                baseTerm\n                            \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, baseTerm?: string, defaultValue?: string, appliesTo?: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseTerm\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        appliesTo\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appliesTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseTerm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTypeDefinition.html":{"url":"classes/CsdlTypeDefinition.html","title":"class - CsdlTypeDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTypeDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                underlayingType\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, underlayingType: string, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlayingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            underlayingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlTypeDefinition extends CsdlAnnotable {\n    constructor(\n        public name: string,\n        public underlayingType: string,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        annotationList?: CsdlAnnotation[]) {\n        super(annotationList);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/metadata.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldType\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, fieldType: FieldType)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fieldType\n                                                  \n                                                        \n                                                                        FieldType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlTypeDefinition } from './csdl/csdl-type-definition';\nimport { CsdlSchema } from './csdl/csdl-schema';\nimport { Types } from '../../utils/types';\nimport { CsdlEnumType, CsdlEnumMember } from './csdl/csdl-enum-type';\nimport { CsdlEntityType, CsdlPropertyRef, CsdlKey, CsdlComplexType } from './csdl/csdl-structured-type';\nimport { CsdlFunction, CsdlParameter, CsdlFunctionImport, CsdlActionImport, CsdlReturnType, CsdlAction } from './csdl/csdl-function-action';\nimport { CsdlProperty, CsdlNavigationProperty, CsdlReferentialConstraint, CsdlOnDelete } from './csdl/csdl-structural-property';\nimport { CsdlEntitySet } from './csdl/csdl-entity-set';\nimport { CsdlSingleton } from './csdl/csdl-singleton';\nimport { CsdlEntityContainer } from './csdl/csdl-entity-container';\nimport { CsdlReference, CsdlInclude, CsdlIncludeAnnotations } from './csdl/csdl-reference';\nimport { CsdlAnnotation, CsdlTerm, CsdlAnnotations } from './csdl/csdl-annotation';\nimport { CsdlNavigationPropertyBinding } from './csdl/csdl-navigation-property-binding';\n\nenum FieldType {\n    ATTRIBUTE, TAG\n}\n\nclass Field {\n    constructor(public name: string, public fieldType: FieldType) { }\n}\n\nexport class ODataMetadata {\n    // TAGS\n    private static readonly TAG_EDMX = 'edmx:Edmx';\n    private static readonly TAG_DATA_SERVICES = 'edmx:DataServices';\n    private static readonly TAG_REFERENCE = 'edmx:Reference';\n    private static readonly TAG_INCLUDE = 'edmx:Include';\n    private static readonly TAG_INCLUDE_ANNOTATIONS = 'edmx:IncludeAnnotations';\n    private static readonly TAG_TERM = 'Term';\n    private static readonly TAG_ANNOTATIONS = 'Annotations';\n    private static readonly TAG_ANNOTATION = 'Annotation';\n    private static readonly TAG_SCHEMA = 'Schema';\n    private static readonly TAG_ENUM_TYPE = 'EnumType';\n    private static readonly TAG_MEMBER = 'Member';\n    private static readonly TAG_COMPLEX_TYPE = 'ComplexType';\n    private static readonly TAG_ENTITY_TYPE = 'EntityType';\n    private static readonly TAG_PROPERTY = 'Property';\n    private static readonly TAG_KEY = 'Key';\n    private static readonly TAG_PROPERTY_REF = 'PropertyRef';\n    private static readonly TAG_NAVIGATION_PROPERTY = 'NavigationProperty';\n    private static readonly TAG_REFERENTIAL_CONSTRAINT = 'ReferentialConstraint';\n    private static readonly TAG_ON_DELETE = 'OnDelete';\n    private static readonly TAG_FUNCTION = 'Function';\n    private static readonly TAG_RETURN_TYPE = 'ReturnType';\n    private static readonly TAG_PARAMETER = 'Parameter';\n    private static readonly TAG_ACTION = 'Action';\n    private static readonly TAG_ENTITY_CONTAINER = 'EntityContainer';\n    private static readonly TAG_ENTITY_SET = 'EntitySet';\n    private static readonly TAG_SINGLETON = 'Singleton';\n    private static readonly TAG_FUNCTION_IMPORT = 'FunctionImport';\n    private static readonly TAG_ACTION_IMPORT = 'ActionImport';\n    private static readonly TAG_NAVIGATION_PROPERTY_BINDING = 'NavigationPropertyBinding';\n    private static readonly TAG_TYPE_DEFINITION = 'TypeDefinition';\n\n    // ATTRIBUTES\n    private static readonly ATTRIBUTE_VERSION = 'Version';\n    private static readonly ATTRIBUTE_URI = 'Uri';\n    private static readonly ATTRIBUTE_ALIAS = 'Alias';\n    private static readonly ATTRIBUTE_NAMESPACE = 'Namespace';\n    private static readonly ATTRIBUTE_TERM_NAMESPACE = 'TermNamespace';\n    private static readonly ATTRIBUTE_QUALIFIER = 'Qualifier';\n    private static readonly ATTRIBUTE_TARGET_NAMESPACE = 'TargetNamespace';\n    private static readonly ATTRIBUTE_TERM = 'Term';\n    private static readonly ATTRIBUTE_NAME = 'Name';\n    private static readonly ATTRIBUTE_VALUE = 'Value';\n    private static readonly ATTRIBUTE_BASE_TYPE = 'BaseType';\n    private static readonly ATTRIBUTE_OPEN_TYPE = 'OpenType';\n    private static readonly ATTRIBUTE_TYPE = 'Type';\n    private static readonly ATTRIBUTE_NULLABLE = 'Nullable';\n    private static readonly ATTRIBUTE_MAX_LENGTH = 'MaxLength';\n    private static readonly ATTRIBUTE_PRECISION = 'Precision';\n    private static readonly ATTRIBUTE_SCALE = 'Scale';\n    private static readonly ATTRIBUTE_UNICODE = 'Unicode';\n    private static readonly ATTRIBUTE_SRID = 'SRID';\n    private static readonly ATTRIBUTE_DEFAULT_VALUE = 'DefaultValue';\n    private static readonly ATTRIBUTE_PARTNER = 'Partner';\n    private static readonly ATTRIBUTE_PROPERTY = 'Property';\n    private static readonly ATTRIBUTE_REFERENCED_PROPERTY = 'ReferencedProperty';\n    private static readonly ATTRIBUTE_HAS_STREAM = 'HasStream';\n    private static readonly ATTRIBUTE_CONTAINS_TARGET = 'ContainsTarget';\n    private static readonly ATTRIBUTE_IS_BOUND = 'IsBound';\n    private static readonly ATTRIBUTE_ENTITY_SET_PATH = 'EntitySetPath';\n    private static readonly ATTRIBUTE_IS_COMPOSABLE = 'IsComposable';\n    private static readonly ATTRIBUTE_ENTITY_TYPE = 'EntityType';\n    private static readonly ATTRIBUTE_PATH = 'Path';\n    private static readonly ATTRIBUTE_TARGET = 'Target';\n    private static readonly ATTRIBUTE_FUNCTION = 'Function';\n    private static readonly ATTRIBUTE_ACTION = 'Action';\n    private static readonly ATTRIBUTE_ENTITY_SET = 'EntitySet';\n    private static readonly ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT = 'IncludeInServiceDocument';\n    private static readonly ATTRIBUTE_ABSTRACT = 'Abstract';\n    private static readonly ATTRIBUTE_UNDERLYING_TYPE = 'UnderlyingType';\n    private static readonly ATTRIBUTE_IS_FLAGS = 'IsFlags';\n    private static readonly ATTRIBUTE_EXTENDS = 'Extends';\n    private static readonly ATTRIBUTE_BASE_TERM = 'BaseTerm';\n    private static readonly ATTRIBUTE_APPLIES_TO = 'AppliesTo';\n\n    public readonly version: string;\n    public readonly references: CsdlReference[];\n    public readonly schemas: CsdlSchema[];\n\n    constructor(xml: string) {\n        try {\n            const parser: DOMParser = new DOMParser();\n            const document: Document = parser.parseFromString(xml, 'text/xml');\n\n            this.checkVersion(document);\n\n            this.version = this.getFieldValueByAttribute(\n                new Field(ODataMetadata.ATTRIBUTE_VERSION, FieldType.ATTRIBUTE),\n                document.documentElement.attributes);\n\n            this.references = this.getObjects(document.documentElement, ODataMetadata.TAG_REFERENCE, [\n                new Field(ODataMetadata.ATTRIBUTE_URI, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.TAG_INCLUDE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_INCLUDE_ANNOTATIONS, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n\n            const dataServices: Element = document.documentElement.getElementsByTagName(ODataMetadata.TAG_DATA_SERVICES)[0];\n            this.schemas = this.getObjects(dataServices, ODataMetadata.TAG_SCHEMA, [\n                new Field(ODataMetadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.TAG_ENUM_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_COMPLEX_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ENTITY_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_FUNCTION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ACTION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ENTITY_CONTAINER, FieldType.TAG),\n                new Field(ODataMetadata.TAG_TYPE_DEFINITION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_TERM, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATIONS, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n        } catch (error) {\n            throw new Error('Unable to parse metadata, ' + error);\n        }\n    }\n\n    protected checkVersion(document: Document) {\n        // check version\n        const attributes: NamedNodeMap = document.documentElement.attributes;\n        if (Types.isNullOrUndefined(attributes)) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const attr: Attr = attributes.getNamedItem('Version');\n        if (Types.isNullOrUndefined(attr)) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const odataVersion: string = attr.nodeValue;\n        if (odataVersion !== '4.0') {\n            throw new Error('OData version \"' + odataVersion + '\" is not supported');\n        }\n    }\n\n    protected getObjects(parentElement: Element, tag: string, fieldNames: Field[]): any[] {\n        let objects: any[];\n\n        const children: HTMLCollection = parentElement.children;\n        for (let index = 0; index \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataAnnotations.html":{"url":"classes/ODataAnnotations.html","title":"class - ODataAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _properties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                function\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    context\n                                \n                                \n                                    functions\n                                \n                                \n                                    properties\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:55\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n\n                \n                    \n                        getcontext()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:30\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:46\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        properties\n                    \n                \n\n                \n                    \n                        getproperties()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:56\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { \n  ODATA_ETAG, \n  ODATA_COUNT, \n  ODATA_NEXTLINK, \n  ODATA_TYPE, \n  ODATA_DELTALINK, \n  ODATA_METADATAETAG, \n  ODATA_MEDIA_EDITLINK, \n  ODATA_MEDIA_ETAG, \n  ODATA_MEDIA_READLINK, \n  ODATA_MEDIA_CONTENTTYPE, \n  ODATA_CONTEXT, \n  ODATA_ID, \n  ODATA_READLINK, \n  ODATA_EDITLINK, \n  ODATA_FUNCTION_PREFIX, \n  ODATA_ANNOTATION_PREFIX,\n  odataAnnotations\n} from '../../types';\n\nexport class ODataAnnotations {\n  constructor(protected value: { [name: string]: any }) { }\n\n  static factory(data: any) {\n    return new ODataAnnotations(odataAnnotations(data));\n  }\n\n  // Context\n  private _context: any;\n  get context(): { set: string, type: string | null } {\n    if (!this._context) {\n      this._context = {};\n      if (ODATA_CONTEXT in this.value) {\n        let value = this.value[ODATA_CONTEXT];\n        let index = value.lastIndexOf(\"#\");\n        let parts = value.substr(index + 1).split(\"/\");\n        let set = parts[0];\n        let type = parts.length > 3 ? parts[1] : null;\n        this._context = { set, type };\n      }\n    }\n    return this._context;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = Object.keys(this.value)\n        .filter(k => k.startsWith(ODATA_FUNCTION_PREFIX))\n        .reduce((acc, key) => Object.assign(acc, { [key.substr(1)]: this.value[key] }), {});\n    }\n    return this._functions;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = Object.keys(this.value)\n        .filter(k => k.indexOf(ODATA_ANNOTATION_PREFIX) > 0)\n        .reduce((acc, key) => {\n          let name = key.substr(0, key.indexOf(ODATA_ANNOTATION_PREFIX));\n          if (!(name in acc)) {\n            acc[name] = {};\n          }\n          Object.assign(acc[name], { [key.substr(key.indexOf(ODATA_ANNOTATION_PREFIX))]: this.value[key] });\n          return acc;\n        }, {});\n    }\n    return this._properties;\n  }\n\n  // Method\n  clone(): ODataAnnotations {\n    return new ODataAnnotations(this.value);\n  };\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n\n}\n\nexport class ODataValueAnnotations extends ODataAnnotations {\n  clone(): ODataValueAnnotations {\n    return new ODataValueAnnotations(this.value);\n  };\n\n  static factory(data: any) {\n    return new ODataValueAnnotations(odataAnnotations(data));\n  }\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations(this.value);\n  };\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n\n  get id() {\n    if (ODATA_ID in this.value)\n      return this.value[ODATA_ID] as string;\n  }\n\n  get etag() {\n    if (ODATA_ETAG in this.value)\n      return this.value[ODATA_ETAG] as string;\n  }\n\n  get mediaEtag(): string {\n    if (ODATA_MEDIA_ETAG in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_ETAG] as string);\n  }\n\n  get metadataEtag() {\n    if (ODATA_METADATAETAG in this.value)\n      return this.value[ODATA_METADATAETAG] as string;\n  }\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get editLink(): string {\n    if (ODATA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_EDITLINK] as string);\n  }\n\n  get mediaReadLink(): string {\n    if (ODATA_MEDIA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_READLINK] as string);\n  }\n\n  get mediaEditLink(): string {\n    if (ODATA_MEDIA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_EDITLINK] as string);\n  }\n\n  get mediaContentType(): string {\n    if (ODATA_MEDIA_CONTENTTYPE in this.value)\n      return this.value[ODATA_MEDIA_CONTENTTYPE] as string;\n  }\n\n  static factory(data: any) {\n    return new ODataEntityAnnotations(odataAnnotations(data));\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations(this.value);\n  };\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get count(): number {\n    if (ODATA_COUNT in this.value)\n      return this.value[ODATA_COUNT] as number;\n  }\n\n  get nextLink(): string {\n    if (ODATA_NEXTLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_NEXTLINK] as string);\n  }\n\n  get deltaLink(): string {\n    if (ODATA_DELTALINK in this.value)\n      return decodeURIComponent(this.value[ODATA_DELTALINK] as string);\n  }\n\n  get top(): number {\n    let match = (this.nextLink || \"\").match(/\\$top=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skip(): number {\n    let match = (this.nextLink || \"\").match(/\\$skip=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skiptoken(): string {\n    let match = (this.nextLink || \"\").match(/\\$skiptoken=([\\d\\w\\s]+)/);\n    if (match) return match[1];\n  }\n\n  static factory(data: any) {\n    return new ODataEntitiesAnnotations(odataAnnotations(data));\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBaseService.html":{"url":"classes/ODataBaseService.html","title":"class - ODataBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                entity\n                            \n                            \n                                    Static\n                                path\n                            \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Public\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/base.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/services/base.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/services/base.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/services/base.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            config\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    config()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitySetResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataEntitySetResource, ODataEntityResource } from '../resources';\nimport { ODataClient } from \"../client\";\nimport { EntityKey } from '../types';\n\nexport class ODataBaseService {\n  static path: string = \"\";\n  static type: string = \"\";\n  static entity: string = \"\";\n\n  constructor(protected client: ODataClient) { }\n\n  // Build resources\n  public entities(): ODataEntitySetResource {\n    let Ctor = this.constructor;\n    return this.client.entitySet(Ctor.path, Ctor.entity);\n  }\n\n  public entity(key?: EntityKey): ODataEntityResource {\n    return this.entities()\n      .entity(key);\n  }\n\n  // Get base type data\n  public config() {\n    let Ctor = this.constructor;\n    return this.client.serviceConfigForType(Ctor.type);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBatch.html":{"url":"classes/ODataBatch.html","title":"class - ODataBatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/batch.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                BOUNDARY_PREFIX_SUFFIX\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                CONTENT_ID\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                CONTENT_TYPE\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                HTTP11\n                            \n                            \n                                    Private\n                                httpResponse\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                MULTIPART_MIXED\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                NEWLINE\n                            \n                            \n                                    Private\n                                odataResponses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createODataResponse\n                            \n                            \n                                    Static\n                                fromODataResponse\n                            \n                            \n                                    Protected\n                                getBoundaryDelimiter\n                            \n                            \n                                    Protected\n                                getBoundaryEnd\n                            \n                            \n                                    Protected\n                                getHeaderValue\n                            \n                            \n                                getODataResponses\n                            \n                            \n                                    Protected\n                                parseResponses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpResponse: HttpResponse)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpResponse\n                                                  \n                                                        \n                                                                    HttpResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            BOUNDARY_PREFIX_SUFFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '--'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            CONTENT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Content-ID'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            CONTENT_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Content-Type'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            HTTP11\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'HTTP/1.1'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpResponse\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HttpResponse\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            MULTIPART_MIXED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'multipart/mixed'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            NEWLINE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\r\\n'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            odataResponses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HttpResponse[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createODataResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createODataResponse(batchBodyLines: string[], batchPartStartIndex: number, batchPartEndIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    batchBodyLines\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    batchPartStartIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    batchPartEndIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromODataResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromODataResponse(odataResponse: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    odataResponse\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataBatch\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getBoundaryDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoundaryDelimiter(contentType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getBoundaryEnd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoundaryEnd(boundaryDelimiter: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    boundaryDelimiter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getHeaderValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHeaderValue(header: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getODataResponses\n                        \n                        \n                    \n                \n            \n            \n                \ngetODataResponses()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HttpResponse[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            parseResponses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseResponses()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpHeaders, HttpResponse } from '@angular/common/http';\n\nimport { Types } from '../../utils/types';\n\nexport class ODataBatch {\n    private static readonly CONTENT_TYPE = 'Content-Type';\n    private static readonly CONTENT_ID = 'Content-ID';\n    private static readonly HTTP11 = 'HTTP/1.1';\n    private static readonly BOUNDARY_PREFIX_SUFFIX = '--';\n    private static readonly NEWLINE = '\\r\\n';\n    private static readonly MULTIPART_MIXED = 'multipart/mixed';\n\n    private httpResponse: HttpResponse;\n    private odataResponses: HttpResponse[];\n\n    constructor(httpResponse: HttpResponse) {\n        this.httpResponse = httpResponse;\n        this.odataResponses = [];\n        this.parseResponses();\n    }\n\n    getODataResponses(): HttpResponse[] {\n        return this.odataResponses;\n    }\n\n    static fromODataResponse(odataResponse: HttpResponse): ODataBatch {\n        return new ODataBatch(odataResponse);\n    }\n\n    protected parseResponses(): void {\n        const contentType: string = this.httpResponse.headers.get(ODataBatch.CONTENT_TYPE);\n        const boundaryDelimiterBatch: string = this.getBoundaryDelimiter(contentType);\n        const boundaryEndBatch: string = this.getBoundaryEnd(boundaryDelimiterBatch);\n\n        const batchBody: string = this.httpResponse.body;\n        const batchBodyLines: string[] = batchBody.split(ODataBatch.NEWLINE);\n\n        let odataResponseCS: HttpResponse[];\n        let contentId: number;\n        let boundaryDelimiterCS;\n        let boundaryEndCS;\n        let batchPartStartIndex;\n        for (let index = 0; index  = this.createODataResponse(batchBodyLines, batchPartStartIndex, index - 1);\n                if (!Types.isNullOrUndefined(odataResponseCS)) {\n                    odataResponseCS[contentId] = odataResponse;\n                } else {\n                    this.odataResponses.push(odataResponse);\n                }\n\n                if (batchBodyLine === boundaryDelimiterBatch || batchBodyLine === boundaryDelimiterCS) {\n                    batchPartStartIndex = index + 1;\n                } else if (batchBodyLine === boundaryEndBatch || batchBodyLine === boundaryEndCS) {\n                    if (!Types.isNullOrUndefined(odataResponseCS)) {\n                        for (const response of odataResponseCS) {\n                            if (!Types.isNullOrUndefined(response)) {\n                                this.odataResponses.push(response);\n                            }\n                        }\n                    }\n                    odataResponseCS = undefined;\n                    boundaryDelimiterCS = undefined;\n                    boundaryEndCS = undefined;\n                    batchPartStartIndex = undefined;\n                }\n            }\n        }\n    }\n\n    protected getHeaderValue(header: string): string {\n        let res: string = header.split(';')[0].trim();\n        res = res.split(':')[1].trim();\n        return res;\n    }\n\n    protected getBoundaryDelimiter(contentType: string): string {\n        const contentTypeParts: string[] = contentType.split(';');\n        if (contentTypeParts.length === 2) {\n            const boundary: string = contentType.split(';')[1].trim();\n            const boundaryDelimiter: string = ODataBatch.BOUNDARY_PREFIX_SUFFIX + boundary.split('=')[1];\n            return boundaryDelimiter;\n        } else {\n            return '';\n        }\n    }\n\n    protected getBoundaryEnd(boundaryDelimiter: string): string {\n        if (!boundaryDelimiter.length) {\n            return '';\n        }\n        const boundaryEnd: string = boundaryDelimiter + ODataBatch.BOUNDARY_PREFIX_SUFFIX;\n        return boundaryEnd;\n    }\n\n    protected createODataResponse(batchBodyLines: string[], batchPartStartIndex: number, batchPartEndIndex: number): HttpResponse {\n        let index: number = batchPartStartIndex;\n        const statusLine: string = batchBodyLines[index];\n        const statusLineParts: string[] = batchBodyLines[index].split(' ');\n        const status: string = statusLineParts[1];\n        const statusTextIndex = statusLine.indexOf(status) + status.length + 1;\n        const statusText: string = statusLine.substring(statusTextIndex);\n\n        let httpHeaders: HttpHeaders = new HttpHeaders();\n        for (++index; index \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCollection.html":{"url":"classes/ODataCollection.html","title":"class - ODataCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/collection.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Iterable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _annotations\n                            \n                            \n                                    Protected\n                                _models\n                            \n                            \n                                    Protected\n                                _resource\n                            \n                            \n                                    Private\n                                _state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                all\n                            \n                            \n                                attach\n                            \n                            \n                                clone\n                            \n                            \n                                count\n                            \n                            \n                                fetch\n                            \n                            \n                                next\n                            \n                            \n                                    Protected\n                                parse\n                            \n                            \n                                    Protected\n                                populate\n                            \n                            \n                                remove\n                            \n                            \n                                target\n                            \n                            \n                                toEntities\n                            \n                            \n                                    Public\n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    models\n                                \n                                \n                                    state\n                                \n                                \n                                    _segments\n                                \n                                \n                                    _query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(values?: any[], options: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/collection.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotations\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     M[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:35\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(model: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            all\n                        \n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \nattach(resource: ODataResource)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataCollection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            next\n                        \n                        \n                    \n                \n            \n            \n                \nnext(options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(values: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            populate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populate(values: any[], annots?: ODataAnnotations)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    annots\n                                    \n                                                ODataAnnotations\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(model: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            target\n                        \n                        \n                    \n                \n            \n            \n                \ntarget()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toEntities\n                        \n                        \n                    \n                \n            \n            \n                \ntoEntities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { next(): any; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        models\n                    \n                \n\n                \n                    \n                        getmodels()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _segments\n                    \n                \n\n                \n                    \n                        get_segments()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:203\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _query\n                    \n                \n\n                \n                    \n                        get_query()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:216\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { map } from 'rxjs/operators';\nimport { Observable, EMPTY } from 'rxjs';\n\nimport {\n  ODataResource,\n  ODataEntitySetResource,\n  ODataEntityResource,\n  ODataNavigationPropertyResource,\n  ODataFunctionResource,\n  ODataActionResource,\n  ODataAnnotations,\n  ODataEntitiesAnnotations,\n  Filter,\n  Expand,\n  Select,\n  OrderBy,\n  Transform\n} from '../resources';\n\nimport { ODataModel } from './model';\nimport {\n  HttpOptions,\n  HttpEntitiesOptions\n} from '../resources/http-options';\n\nexport class ODataCollection> implements Iterable {\n  protected _resource: ODataResource;\n  protected _annotations: ODataAnnotations;\n\n  protected _models: M[];\n  get models() {\n    return [...this._models];\n  }\n\n  private _state: {\n    records?: number,\n    skip?: number,\n    top?: number,\n    skiptoken?: string,\n    size?: number,\n    page?: number,\n    pages?: number\n  } = {};\n  get state() {\n    return Object.assign({}, this._state);\n  }\n\n  constructor(values?: any[], options: { resource?: ODataResource, annotations?: ODataAnnotations } = {}) {\n    if (options.resource instanceof ODataResource)\n      this.attach(options.resource);\n    this.populate((values || []) as M[], options.annotations || null);\n  }\n\n  attach(resource: ODataResource) {\n    if (this._resource && this._resource.type() !== resource.type())\n      throw new Error(`Can't reattach ${resource.type()} with ${this._resource.type()}`);\n    this._resource = resource;\n    return this;\n  }\n\n  target() {\n    return this._resource.clone() as ODataResource;\n  }\n\n  protected parse(values: any[]): M[] {\n    let resource = this._resource ? this._resource.clone() : null;\n    if (resource instanceof ODataEntitySetResource)\n      resource = resource.entity();\n    return (values as T[]).map(value => {\n      if (resource instanceof ODataEntityResource || resource instanceof ODataNavigationPropertyResource)\n        resource.key(value);\n      return (resource ? resource.clone().toModel(value) : value) as M;\n    });\n  }\n\n  protected populate(values: any[], annots?: ODataAnnotations): this {\n    this._annotations = annots;\n\n    if (annots instanceof ODataEntitiesAnnotations) {\n      this._state = {}; \n      if (annots.top)\n        this._state.top = annots.top;\n      if (annots.skip)\n        this._state.size = this._state.skip = annots.skip;\n      if (annots.skiptoken)\n        this._state.skiptoken = annots.skiptoken;\n      if (annots.count) {\n        this._state.records = annots.count;\n      if (this._state.records && this._state.size)\n        this._state.pages = Math.ceil(this._state.records / this._state.size);\n      if (this._state.top && this._state.size)\n        this._state.page = (this._state.top / this._state.size) + 1;\n      }\n    } else {\n      this._state = {\n        records: values.length, size: values.length,\n        page: 1, pages: 1\n      };\n    }\n\n    this._models = this.parse(values);\n    return this;\n  }\n\n  toEntities() {\n    return this._models.map(model => model.toEntity());\n  }\n\n  clone() {\n    let Ctor = this.constructor;\n    return (new Ctor(this.models, { resource: this._resource.clone(), annotations: this._annotations })) as ODataCollection>;\n  }\n\n  // Iterable\n  public [Symbol.iterator]() {\n    let pointer = 0;\n    let models = this._models;\n    return {\n      next(): IteratorResult {\n        return {\n          done: pointer === models.length,\n          value: models[pointer++]\n        };\n      }\n    }\n  }\n\n  // Requests\n  fetch(options?: HttpOptions & {withCount?: boolean}): Observable {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = this._resource.get(options);\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      obs$ = this._resource.get(\n        Object.assign({responseType: 'entities'}, options || {}));\n    } else if (this._resource instanceof ODataFunctionResource) {\n      obs$ = this._resource.get(\n        Object.assign({responseType: 'entities'}, options || {}));\n    }\n    if (!obs$)\n      throw new Error(\"Not Yet!\");\n    return obs$.pipe(\n      map(([entities, annots]) => this.populate(entities, annots)));\n  }\n\n  next(options?: HttpOptions & {withCount?: boolean}) {\n    if (this._state.skip) {\n      this._query.skip(this._state.skip);\n      return this.fetch(options);\n    }\n    else if (this._state.skiptoken) {\n      this._query.skiptoken(this._state.skiptoken);\n      return this.fetch(options);\n    }\n    return EMPTY;\n  }\n\n  all(): Observable {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = this._resource.all();\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      obs$ = this._resource.all();\n    }\n    if (!obs$)\n      throw new Error(\"Not Yet!\");\n    return obs$.pipe(\n      map(entities => this.populate(entities)));\n  }\n\n  // Mutate\n  add(model: M): Observable {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = model.save();\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      let ref = this._resource.reference();\n      obs$ = ref.add(model.target() as ODataEntityResource);\n    }\n    if (!obs$)\n      throw new Error(`Can't add`);\n    return obs$.pipe(map(() => this));\n  }\n\n  remove(model: M) {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = model.destroy();\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      let ref = this._resource.reference();\n      obs$ = ref.remove(model.target() as ODataEntityResource);\n    }\n    if (!obs$)\n      throw new Error(`Can't remove`);\n    return obs$.pipe(map(() => this));\n  }\n\n  // Count\n  count() {\n    return (this._resource as ODataEntitySetResource).count().get();\n  }\n\n  protected get _segments() {\n    if (!this._resource)\n      throw new Error(`Can't call without ODataResource`);\n    let resource = this._resource as ODataEntitySetResource;\n    return {\n      // Function\n      function(name: string, returnType?: string): ODataFunctionResource { return resource.function(name, returnType); },\n      // Action\n      action(name: string, returnType?: string): ODataActionResource { return resource.action(name, returnType); },\n    };\n  }\n\n  // Query options\n  get _query() {\n    if (!this._resource)\n      throw new Error(`Can't query without ODataResource`);\n    let resource = this._resource as ODataEntitySetResource;\n    return {\n      // Top\n      top(top?: number) { return resource.top(top); },\n      // Skip\n      skip(skip?: number) { return resource.skip(skip); },\n      // Skiptoken\n      skiptoken(skiptoken?: string) { return resource.skiptoken(skiptoken); },\n      // Select\n      select(select?: Select) { return resource.select(select); },\n      // Filter\n      filter(filter?: Filter) { return resource.filter(filter); },\n      // Search\n      search(search?: string) { return resource.search(search); },\n      // OrderBy\n      orderBy(orderBy?: OrderBy) { return resource.orderBy(orderBy); },\n      // Expand\n      expand(expand?: Expand) { return resource.expand(expand); },\n      // Transform\n      transform(transform?: Transform) { return resource.transform(transform); },\n      // Alias value\n      alias(name: string, value?: any) { return resource.alias(name, value); }\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataConfig.html":{"url":"classes/ODataConfig.html","title":"class - ODataConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                acceptMetadata\n                            \n                            \n                                    Optional\n                                creation\n                            \n                            \n                                headers\n                            \n                            \n                                    Optional\n                                metadataUrl\n                            \n                            \n                                name\n                            \n                            \n                                params\n                            \n                            \n                                    Optional\n                                schemas\n                            \n                            \n                                serviceRootUrl\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                collectionForName\n                            \n                            \n                                    Public\n                                collectionForType\n                            \n                            \n                                configure\n                            \n                            \n                                    Public\n                                entityConfigForName\n                            \n                            \n                                    Public\n                                entityConfigForType\n                            \n                            \n                                    Public\n                                enumConfigForName\n                            \n                            \n                                    Public\n                                enumConfigForType\n                            \n                            \n                                    Public\n                                modelForName\n                            \n                            \n                                    Public\n                                modelForType\n                            \n                            \n                                    Public\n                                parserForType\n                            \n                            \n                                    Private\n                                schemaForType\n                            \n                            \n                                    Public\n                                serviceConfigForName\n                            \n                            \n                                    Public\n                                serviceConfigForType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Configuration)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/config.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Configuration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            acceptMetadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"minimal\" | \"full\" | \"none\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            creation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            metadataUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            schemas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceRootUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entityConfigForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entityConfigForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:95\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entityConfigForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entityConfigForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:61\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enumConfigForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enumConfigForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:90\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEnumConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enumConfigForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enumConfigForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:55\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEnumConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            parserForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parserForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:120\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ODataParser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            schemaForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    schemaForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            serviceConfigForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serviceConfigForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataServiceConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            serviceConfigForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serviceConfigForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataServiceConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataEntityParser, ODataFieldParser, ODataParser, ODataEnumParser } from '../parsers';\nimport { EntityConfig, EnumConfig, ServiceConfig, Schema, Container, Parser, Configuration, Field } from '../types';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Types } from '../utils';\nimport { ODataModel } from './model';\nimport { ODataCollection } from './collection';\n\nexport class ODataConfig {\n  name: string;\n  serviceRootUrl: string;\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  metadataUrl?: string;\n  withCredentials?: boolean;\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean;\n  creation?: Date;\n  schemas?: Array;\n\n  constructor(config: Configuration) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.name = config.name;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.withCredentials = config.withCredentials || false;\n    this.acceptMetadata = config.acceptMetadata;\n    this.stringAsEnum = config.stringAsEnum || false;\n    this.creation = config.creation || new Date();\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema));\n  }\n  \n  configure() {\n    this.schemas\n      .forEach(schmea => schmea.configure({\n        stringAsEnum: this.stringAsEnum,\n        parserForType: (type: string) => this.parserForType(type)\n      })\n    );\n  }\n\n  //#region Find Config for Type\n  private schemaForType(type: string) {\n    let schema = this.schemas.find(s => type.startsWith(s.namespace));\n    if (schema)\n      return schema;\n  }\n\n  public enumConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.enums.find(e => e.type === type) as ODataEnumConfig;\n  }\n\n  public entityConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.entities.find(e => e.type === type) as ODataEntityConfig;\n  }\n\n  public serviceConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema) {\n      return schema.services.find(s => s.type === type) as ODataServiceConfig;\n    }\n  }\n\n  //#region Model and Collection for type\n  public modelForType(type: string): typeof ODataModel {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForType(type: string): typeof ODataCollection {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public enumConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name) as ODataEnumConfig;\n  }\n\n  public entityConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name) as ODataEntityConfig;\n  }\n\n  public serviceConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.services], [])\n      .find(e => e.name === name) as ODataServiceConfig;\n  }\n\n  //#region Model and Collection for type\n  public modelForName(name: string): typeof ODataModel {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  public parserForType(type: string): ODataParser {\n    let config = this.enumConfigForType(type) || this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.parser as ODataParser;\n  }\n}\n\nexport class ODataSchema {\n  namespace: string;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array;\n\n  constructor(config: Schema) {\n    this.namespace = config.namespace;\n    this.enums = (config.enums || []).map(config => new ODataEnumConfig(config, this.namespace));\n    this.entities = (config.entities || []).map(config => new ODataEntityConfig(config, this.namespace));\n    this.containers = (config.containers || []).map(container => new ODataContainer(container, this.namespace));\n  }\n\n  get services(): Array {\n    return this.containers.reduce((acc, container) => [...acc, ...container.services], []);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.enums\n      .forEach(config => config.configure(settings));\n    this.entities\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataEnumConfig {\n  name: string;\n  type: string;\n  parser?: ODataEnumParser;\n  members: {[name: string]: number} | {[value: number]: string};\n  constructor(config: EnumConfig, namespace: string) {\n    this.name = config.name;\n    this.members = config.members;\n    this.type = `${namespace}.${this.name}`;\n    this.parser = new ODataEnumParser(config as EnumConfig, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n}\n\nexport class ODataEntityConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  parser?: ODataEntityParser;\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = {include_navigation: true, include_parents: true}): ODataFieldParser[] {\n    let parser = this.parser as ODataEntityParser;\n    let fields = []>[];\n    while (parser) {\n      fields = [\n        ...parser.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parser = parser.parent;\n    }\n    return fields;\n  }\n}\n\nexport class ODataContainer {\n  name: string;\n  type: string;\n  annotations: any[];\n  services?: Array;\n  constructor(config: Container, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.services = (config.services || []).map(config => new ODataServiceConfig(config, namespace));\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.services\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataServiceConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  constructor(config: ServiceConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataContainer.html":{"url":"classes/ODataContainer.html","title":"class - ODataContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                services\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Container, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/config.ts:213\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Container\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:212\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:210\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:213\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:211\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataEntityParser, ODataFieldParser, ODataParser, ODataEnumParser } from '../parsers';\nimport { EntityConfig, EnumConfig, ServiceConfig, Schema, Container, Parser, Configuration, Field } from '../types';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Types } from '../utils';\nimport { ODataModel } from './model';\nimport { ODataCollection } from './collection';\n\nexport class ODataConfig {\n  name: string;\n  serviceRootUrl: string;\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  metadataUrl?: string;\n  withCredentials?: boolean;\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean;\n  creation?: Date;\n  schemas?: Array;\n\n  constructor(config: Configuration) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.name = config.name;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.withCredentials = config.withCredentials || false;\n    this.acceptMetadata = config.acceptMetadata;\n    this.stringAsEnum = config.stringAsEnum || false;\n    this.creation = config.creation || new Date();\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema));\n  }\n  \n  configure() {\n    this.schemas\n      .forEach(schmea => schmea.configure({\n        stringAsEnum: this.stringAsEnum,\n        parserForType: (type: string) => this.parserForType(type)\n      })\n    );\n  }\n\n  //#region Find Config for Type\n  private schemaForType(type: string) {\n    let schema = this.schemas.find(s => type.startsWith(s.namespace));\n    if (schema)\n      return schema;\n  }\n\n  public enumConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.enums.find(e => e.type === type) as ODataEnumConfig;\n  }\n\n  public entityConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.entities.find(e => e.type === type) as ODataEntityConfig;\n  }\n\n  public serviceConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema) {\n      return schema.services.find(s => s.type === type) as ODataServiceConfig;\n    }\n  }\n\n  //#region Model and Collection for type\n  public modelForType(type: string): typeof ODataModel {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForType(type: string): typeof ODataCollection {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public enumConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name) as ODataEnumConfig;\n  }\n\n  public entityConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name) as ODataEntityConfig;\n  }\n\n  public serviceConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.services], [])\n      .find(e => e.name === name) as ODataServiceConfig;\n  }\n\n  //#region Model and Collection for type\n  public modelForName(name: string): typeof ODataModel {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  public parserForType(type: string): ODataParser {\n    let config = this.enumConfigForType(type) || this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.parser as ODataParser;\n  }\n}\n\nexport class ODataSchema {\n  namespace: string;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array;\n\n  constructor(config: Schema) {\n    this.namespace = config.namespace;\n    this.enums = (config.enums || []).map(config => new ODataEnumConfig(config, this.namespace));\n    this.entities = (config.entities || []).map(config => new ODataEntityConfig(config, this.namespace));\n    this.containers = (config.containers || []).map(container => new ODataContainer(container, this.namespace));\n  }\n\n  get services(): Array {\n    return this.containers.reduce((acc, container) => [...acc, ...container.services], []);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.enums\n      .forEach(config => config.configure(settings));\n    this.entities\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataEnumConfig {\n  name: string;\n  type: string;\n  parser?: ODataEnumParser;\n  members: {[name: string]: number} | {[value: number]: string};\n  constructor(config: EnumConfig, namespace: string) {\n    this.name = config.name;\n    this.members = config.members;\n    this.type = `${namespace}.${this.name}`;\n    this.parser = new ODataEnumParser(config as EnumConfig, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n}\n\nexport class ODataEntityConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  parser?: ODataEntityParser;\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = {include_navigation: true, include_parents: true}): ODataFieldParser[] {\n    let parser = this.parser as ODataEntityParser;\n    let fields = []>[];\n    while (parser) {\n      fields = [\n        ...parser.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parser = parser.parent;\n    }\n    return fields;\n  }\n}\n\nexport class ODataContainer {\n  name: string;\n  type: string;\n  annotations: any[];\n  services?: Array;\n  constructor(config: Container, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.services = (config.services || []).map(config => new ODataServiceConfig(config, namespace));\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.services\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataServiceConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  constructor(config: ServiceConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitiesAnnotations.html":{"url":"classes/ODataEntitiesAnnotations.html","title":"class - ODataEntitiesAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitiesAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataAnnotations\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _properties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                function\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    readLink\n                                \n                                \n                                    count\n                                \n                                \n                                    nextLink\n                                \n                                \n                                    deltaLink\n                                \n                                \n                                    top\n                                \n                                \n                                    skip\n                                \n                                \n                                    skiptoken\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:45\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:55\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitiesAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntitiesAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:73\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:81\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:169\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        count\n                    \n                \n\n                \n                    \n                        getcount()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:174\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextLink\n                    \n                \n\n                \n                    \n                        getnextLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:179\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deltaLink\n                    \n                \n\n                \n                    \n                        getdeltaLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:184\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n\n                \n                    \n                        gettop()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:189\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:194\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skiptoken\n                    \n                \n\n                \n                    \n                        getskiptoken()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:199\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { \n  ODATA_ETAG, \n  ODATA_COUNT, \n  ODATA_NEXTLINK, \n  ODATA_TYPE, \n  ODATA_DELTALINK, \n  ODATA_METADATAETAG, \n  ODATA_MEDIA_EDITLINK, \n  ODATA_MEDIA_ETAG, \n  ODATA_MEDIA_READLINK, \n  ODATA_MEDIA_CONTENTTYPE, \n  ODATA_CONTEXT, \n  ODATA_ID, \n  ODATA_READLINK, \n  ODATA_EDITLINK, \n  ODATA_FUNCTION_PREFIX, \n  ODATA_ANNOTATION_PREFIX,\n  odataAnnotations\n} from '../../types';\n\nexport class ODataAnnotations {\n  constructor(protected value: { [name: string]: any }) { }\n\n  static factory(data: any) {\n    return new ODataAnnotations(odataAnnotations(data));\n  }\n\n  // Context\n  private _context: any;\n  get context(): { set: string, type: string | null } {\n    if (!this._context) {\n      this._context = {};\n      if (ODATA_CONTEXT in this.value) {\n        let value = this.value[ODATA_CONTEXT];\n        let index = value.lastIndexOf(\"#\");\n        let parts = value.substr(index + 1).split(\"/\");\n        let set = parts[0];\n        let type = parts.length > 3 ? parts[1] : null;\n        this._context = { set, type };\n      }\n    }\n    return this._context;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = Object.keys(this.value)\n        .filter(k => k.startsWith(ODATA_FUNCTION_PREFIX))\n        .reduce((acc, key) => Object.assign(acc, { [key.substr(1)]: this.value[key] }), {});\n    }\n    return this._functions;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = Object.keys(this.value)\n        .filter(k => k.indexOf(ODATA_ANNOTATION_PREFIX) > 0)\n        .reduce((acc, key) => {\n          let name = key.substr(0, key.indexOf(ODATA_ANNOTATION_PREFIX));\n          if (!(name in acc)) {\n            acc[name] = {};\n          }\n          Object.assign(acc[name], { [key.substr(key.indexOf(ODATA_ANNOTATION_PREFIX))]: this.value[key] });\n          return acc;\n        }, {});\n    }\n    return this._properties;\n  }\n\n  // Method\n  clone(): ODataAnnotations {\n    return new ODataAnnotations(this.value);\n  };\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n\n}\n\nexport class ODataValueAnnotations extends ODataAnnotations {\n  clone(): ODataValueAnnotations {\n    return new ODataValueAnnotations(this.value);\n  };\n\n  static factory(data: any) {\n    return new ODataValueAnnotations(odataAnnotations(data));\n  }\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations(this.value);\n  };\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n\n  get id() {\n    if (ODATA_ID in this.value)\n      return this.value[ODATA_ID] as string;\n  }\n\n  get etag() {\n    if (ODATA_ETAG in this.value)\n      return this.value[ODATA_ETAG] as string;\n  }\n\n  get mediaEtag(): string {\n    if (ODATA_MEDIA_ETAG in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_ETAG] as string);\n  }\n\n  get metadataEtag() {\n    if (ODATA_METADATAETAG in this.value)\n      return this.value[ODATA_METADATAETAG] as string;\n  }\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get editLink(): string {\n    if (ODATA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_EDITLINK] as string);\n  }\n\n  get mediaReadLink(): string {\n    if (ODATA_MEDIA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_READLINK] as string);\n  }\n\n  get mediaEditLink(): string {\n    if (ODATA_MEDIA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_EDITLINK] as string);\n  }\n\n  get mediaContentType(): string {\n    if (ODATA_MEDIA_CONTENTTYPE in this.value)\n      return this.value[ODATA_MEDIA_CONTENTTYPE] as string;\n  }\n\n  static factory(data: any) {\n    return new ODataEntityAnnotations(odataAnnotations(data));\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations(this.value);\n  };\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get count(): number {\n    if (ODATA_COUNT in this.value)\n      return this.value[ODATA_COUNT] as number;\n  }\n\n  get nextLink(): string {\n    if (ODATA_NEXTLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_NEXTLINK] as string);\n  }\n\n  get deltaLink(): string {\n    if (ODATA_DELTALINK in this.value)\n      return decodeURIComponent(this.value[ODATA_DELTALINK] as string);\n  }\n\n  get top(): number {\n    let match = (this.nextLink || \"\").match(/\\$top=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skip(): number {\n    let match = (this.nextLink || \"\").match(/\\$skip=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skiptoken(): string {\n    let match = (this.nextLink || \"\").match(/\\$skiptoken=([\\d\\w\\s]+)/);\n    if (match) return match[1];\n  }\n\n  static factory(data: any) {\n    return new ODataEntitiesAnnotations(odataAnnotations(data));\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityAnnotations.html":{"url":"classes/ODataEntityAnnotations.html","title":"class - ODataEntityAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataAnnotations\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _properties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                function\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                                \n                                    id\n                                \n                                \n                                    etag\n                                \n                                \n                                    mediaEtag\n                                \n                                \n                                    metadataEtag\n                                \n                                \n                                    readLink\n                                \n                                \n                                    editLink\n                                \n                                \n                                    mediaReadLink\n                                \n                                \n                                    mediaEditLink\n                                \n                                \n                                    mediaContentType\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:45\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:55\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntityAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:73\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:81\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:108\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:114\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        etag\n                    \n                \n\n                \n                    \n                        getetag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:119\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEtag\n                    \n                \n\n                \n                    \n                        getmediaEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:124\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        metadataEtag\n                    \n                \n\n                \n                    \n                        getmetadataEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:129\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:134\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        editLink\n                    \n                \n\n                \n                    \n                        geteditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:139\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaReadLink\n                    \n                \n\n                \n                    \n                        getmediaReadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:144\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEditLink\n                    \n                \n\n                \n                    \n                        getmediaEditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:149\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaContentType\n                    \n                \n\n                \n                    \n                        getmediaContentType()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:154\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { \n  ODATA_ETAG, \n  ODATA_COUNT, \n  ODATA_NEXTLINK, \n  ODATA_TYPE, \n  ODATA_DELTALINK, \n  ODATA_METADATAETAG, \n  ODATA_MEDIA_EDITLINK, \n  ODATA_MEDIA_ETAG, \n  ODATA_MEDIA_READLINK, \n  ODATA_MEDIA_CONTENTTYPE, \n  ODATA_CONTEXT, \n  ODATA_ID, \n  ODATA_READLINK, \n  ODATA_EDITLINK, \n  ODATA_FUNCTION_PREFIX, \n  ODATA_ANNOTATION_PREFIX,\n  odataAnnotations\n} from '../../types';\n\nexport class ODataAnnotations {\n  constructor(protected value: { [name: string]: any }) { }\n\n  static factory(data: any) {\n    return new ODataAnnotations(odataAnnotations(data));\n  }\n\n  // Context\n  private _context: any;\n  get context(): { set: string, type: string | null } {\n    if (!this._context) {\n      this._context = {};\n      if (ODATA_CONTEXT in this.value) {\n        let value = this.value[ODATA_CONTEXT];\n        let index = value.lastIndexOf(\"#\");\n        let parts = value.substr(index + 1).split(\"/\");\n        let set = parts[0];\n        let type = parts.length > 3 ? parts[1] : null;\n        this._context = { set, type };\n      }\n    }\n    return this._context;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = Object.keys(this.value)\n        .filter(k => k.startsWith(ODATA_FUNCTION_PREFIX))\n        .reduce((acc, key) => Object.assign(acc, { [key.substr(1)]: this.value[key] }), {});\n    }\n    return this._functions;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = Object.keys(this.value)\n        .filter(k => k.indexOf(ODATA_ANNOTATION_PREFIX) > 0)\n        .reduce((acc, key) => {\n          let name = key.substr(0, key.indexOf(ODATA_ANNOTATION_PREFIX));\n          if (!(name in acc)) {\n            acc[name] = {};\n          }\n          Object.assign(acc[name], { [key.substr(key.indexOf(ODATA_ANNOTATION_PREFIX))]: this.value[key] });\n          return acc;\n        }, {});\n    }\n    return this._properties;\n  }\n\n  // Method\n  clone(): ODataAnnotations {\n    return new ODataAnnotations(this.value);\n  };\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n\n}\n\nexport class ODataValueAnnotations extends ODataAnnotations {\n  clone(): ODataValueAnnotations {\n    return new ODataValueAnnotations(this.value);\n  };\n\n  static factory(data: any) {\n    return new ODataValueAnnotations(odataAnnotations(data));\n  }\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations(this.value);\n  };\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n\n  get id() {\n    if (ODATA_ID in this.value)\n      return this.value[ODATA_ID] as string;\n  }\n\n  get etag() {\n    if (ODATA_ETAG in this.value)\n      return this.value[ODATA_ETAG] as string;\n  }\n\n  get mediaEtag(): string {\n    if (ODATA_MEDIA_ETAG in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_ETAG] as string);\n  }\n\n  get metadataEtag() {\n    if (ODATA_METADATAETAG in this.value)\n      return this.value[ODATA_METADATAETAG] as string;\n  }\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get editLink(): string {\n    if (ODATA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_EDITLINK] as string);\n  }\n\n  get mediaReadLink(): string {\n    if (ODATA_MEDIA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_READLINK] as string);\n  }\n\n  get mediaEditLink(): string {\n    if (ODATA_MEDIA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_EDITLINK] as string);\n  }\n\n  get mediaContentType(): string {\n    if (ODATA_MEDIA_CONTENTTYPE in this.value)\n      return this.value[ODATA_MEDIA_CONTENTTYPE] as string;\n  }\n\n  static factory(data: any) {\n    return new ODataEntityAnnotations(odataAnnotations(data));\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations(this.value);\n  };\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get count(): number {\n    if (ODATA_COUNT in this.value)\n      return this.value[ODATA_COUNT] as number;\n  }\n\n  get nextLink(): string {\n    if (ODATA_NEXTLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_NEXTLINK] as string);\n  }\n\n  get deltaLink(): string {\n    if (ODATA_DELTALINK in this.value)\n      return decodeURIComponent(this.value[ODATA_DELTALINK] as string);\n  }\n\n  get top(): number {\n    let match = (this.nextLink || \"\").match(/\\$top=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skip(): number {\n    let match = (this.nextLink || \"\").match(/\\$skip=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skiptoken(): string {\n    let match = (this.nextLink || \"\").match(/\\$skiptoken=([\\d\\w\\s]+)/);\n    if (match) return match[1];\n  }\n\n  static factory(data: any) {\n    return new ODataEntitiesAnnotations(odataAnnotations(data));\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityConfig.html":{"url":"classes/ODataEntityConfig.html","title":"class - ODataEntityConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                    Optional\n                                model\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                parser\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                fields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntityConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/config.ts:175\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntityConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:172\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:174\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:173\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:170\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:175\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:171\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fields\n                        \n                        \n                    \n                \n            \n            \n                \nfields(opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {include_navigation: true, include_parents: true}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataFieldParser[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataEntityParser, ODataFieldParser, ODataParser, ODataEnumParser } from '../parsers';\nimport { EntityConfig, EnumConfig, ServiceConfig, Schema, Container, Parser, Configuration, Field } from '../types';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Types } from '../utils';\nimport { ODataModel } from './model';\nimport { ODataCollection } from './collection';\n\nexport class ODataConfig {\n  name: string;\n  serviceRootUrl: string;\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  metadataUrl?: string;\n  withCredentials?: boolean;\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean;\n  creation?: Date;\n  schemas?: Array;\n\n  constructor(config: Configuration) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.name = config.name;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.withCredentials = config.withCredentials || false;\n    this.acceptMetadata = config.acceptMetadata;\n    this.stringAsEnum = config.stringAsEnum || false;\n    this.creation = config.creation || new Date();\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema));\n  }\n  \n  configure() {\n    this.schemas\n      .forEach(schmea => schmea.configure({\n        stringAsEnum: this.stringAsEnum,\n        parserForType: (type: string) => this.parserForType(type)\n      })\n    );\n  }\n\n  //#region Find Config for Type\n  private schemaForType(type: string) {\n    let schema = this.schemas.find(s => type.startsWith(s.namespace));\n    if (schema)\n      return schema;\n  }\n\n  public enumConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.enums.find(e => e.type === type) as ODataEnumConfig;\n  }\n\n  public entityConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.entities.find(e => e.type === type) as ODataEntityConfig;\n  }\n\n  public serviceConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema) {\n      return schema.services.find(s => s.type === type) as ODataServiceConfig;\n    }\n  }\n\n  //#region Model and Collection for type\n  public modelForType(type: string): typeof ODataModel {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForType(type: string): typeof ODataCollection {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public enumConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name) as ODataEnumConfig;\n  }\n\n  public entityConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name) as ODataEntityConfig;\n  }\n\n  public serviceConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.services], [])\n      .find(e => e.name === name) as ODataServiceConfig;\n  }\n\n  //#region Model and Collection for type\n  public modelForName(name: string): typeof ODataModel {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  public parserForType(type: string): ODataParser {\n    let config = this.enumConfigForType(type) || this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.parser as ODataParser;\n  }\n}\n\nexport class ODataSchema {\n  namespace: string;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array;\n\n  constructor(config: Schema) {\n    this.namespace = config.namespace;\n    this.enums = (config.enums || []).map(config => new ODataEnumConfig(config, this.namespace));\n    this.entities = (config.entities || []).map(config => new ODataEntityConfig(config, this.namespace));\n    this.containers = (config.containers || []).map(container => new ODataContainer(container, this.namespace));\n  }\n\n  get services(): Array {\n    return this.containers.reduce((acc, container) => [...acc, ...container.services], []);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.enums\n      .forEach(config => config.configure(settings));\n    this.entities\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataEnumConfig {\n  name: string;\n  type: string;\n  parser?: ODataEnumParser;\n  members: {[name: string]: number} | {[value: number]: string};\n  constructor(config: EnumConfig, namespace: string) {\n    this.name = config.name;\n    this.members = config.members;\n    this.type = `${namespace}.${this.name}`;\n    this.parser = new ODataEnumParser(config as EnumConfig, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n}\n\nexport class ODataEntityConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  parser?: ODataEntityParser;\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = {include_navigation: true, include_parents: true}): ODataFieldParser[] {\n    let parser = this.parser as ODataEntityParser;\n    let fields = []>[];\n    while (parser) {\n      fields = [\n        ...parser.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parser = parser.parent;\n    }\n    return fields;\n  }\n}\n\nexport class ODataContainer {\n  name: string;\n  type: string;\n  annotations: any[];\n  services?: Array;\n  constructor(config: Container, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.services = (config.services || []).map(config => new ODataServiceConfig(config, namespace));\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.services\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataServiceConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  constructor(config: ServiceConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityParser.html":{"url":"classes/ODataEntityParser.html","title":"class - ODataEntityParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ODataParser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base\n                            \n                            \n                                fields\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                isComplex\n                            \n                            \n                                keys\n                            \n                            \n                                parse\n                            \n                            \n                                resolveKey\n                            \n                            \n                                toJSON\n                            \n                            \n                                toJsonSchema\n                            \n                            \n                                typeFor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntityConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers.ts:167\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntityConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:165\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataFieldParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:167\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:163\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:166\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:164\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplex\n                        \n                        \n                    \n                \n            \n            \n                \nisComplex()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keys\n                        \n                        \n                    \n                \n            \n            \n                \nkeys()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(objs: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Type | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveKey\n                        \n                        \n                    \n                \n            \n            \n                \nresolveKey(attrs: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON(objs: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(config: JsonSchemaConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            JsonSchemaConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { title: string; type: string; description: string; properties: any; required: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeFor\n                        \n                        \n                    \n                \n            \n            \n                \ntypeFor(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types, Enums } from './utils';\nimport { Parser, Field, JsonSchemaExpandOptions, JsonSchemaConfig, EntityConfig, EnumConfig } from './types';\n\nexport const PARSERS: {[name: string]: Parser} = {\n  'Date': >{\n    type: 'Date',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    },\n    toJSON(value: Date) { \n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    }\n  },\n  'number': >{\n    type: 'number',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    },\n    toJSON(value: number) { \n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    }\n  }\n};\n\nexport interface ODataParser extends Parser { \n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser});\n  toJsonSchema(options?: JsonSchemaExpandOptions);\n}\n\nexport class ODataEnumParser implements ODataParser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  stringAsEnum?: boolean;\n  members: {[name: string]: number} | {[value: number]: string};\n\n  constructor(meta: EnumConfig, namespace: string) {\n    this.name = meta.name;\n    this.type = `${namespace}.${this.name}`;\n    this.flags = meta.flags;\n    this.members = meta.members;\n  }\n\n  // Deserialize\n  parse(value: any) {\n    // String to number\n    if (value === null || typeof(value) === 'number') return value;\n    return this.flags ?\n      Enums.toFlags(this.members, value) :\n      Enums.toValue(this.members, value);\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    // Number to string\n    if (value === null || typeof(value) === 'string') return value;\n    let enums = this.flags ?\n      Enums.toEnums(this.members, value) :\n      [Enums.toEnum(this.members, value)];\n    if (!this.stringAsEnum)\n      enums = enums.map(e => `${this.type}'${e}'`);\n    return enums.join(\", \");\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = {\n      title: `The ${this.name} field`,\n      type: \"string\"\n    };\n    property.enum = Enums.keys(this.members);\n    return property;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.stringAsEnum = settings.stringAsEnum;\n  }\n}\n\nexport class ODataFieldParser implements ODataParser {\n  name: string;\n  type: string;\n  parser?: Parser;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  ref?: string;\n\n  constructor(name: string, field: Field) {\n    this.name = name;\n    Object.assign(this, field);\n  }\n\n  resolve(value: any) {\n    return this.ref.split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  parse(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.parse(value) : value;\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.toJSON(value) : value;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser = (this.type in PARSERS) ? \n      PARSERS[this.type] : \n      settings.parserForType(this.type);\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = this.parser ? (this.parser as ODataParser).toJsonSchema(options) : {\n      title: `The ${this.name} field`,\n      type: this.parser ? \"object\" : this.type\n    };\n    if (this.maxLength)\n      property.maxLength = this.maxLength;\n    if (this.collection)\n      property = {\n        type: \"array\", \n        items: property,\n        additionalItems: false\n      };\n    return property;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumParser;\n  }\n\n  isEntityType() {\n    return this.parser instanceof ODataEntityParser;\n  }\n\n  isComplexType() {\n    return this.parser instanceof ODataEntityParser && this.parser.isComplex();\n  }\n}\n\nexport class ODataEntityParser implements ODataParser {\n  name: string;\n  type: string;\n  base: string;\n  parent: ODataEntityParser;\n  fields: ODataFieldParser[];\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.type = `${namespace}.${this.name}`;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataFieldParser(name, f as Field));\n  }\n\n  // Deserialize\n  parse(objs: any): Type | Type[] {\n    if (this.parent)\n      objs = this.parent.parse(objs);\n    let _parse = (obj) =>\n      Object.assign(obj, this.fields\n        .filter(f => f.name in obj)\n        .reduce((acc, f) => Object.assign(acc, { [f.name]: f.parse(obj[f.name]) }), {})\n      );\n    return Array.isArray(objs) ?\n      objs.map(obj => _parse(obj)) :\n      _parse(objs);\n  }\n\n  // Serialize\n  toJSON(objs: any): any {\n    if (this.parent)\n      objs = this.parent.toJSON(objs);\n    let _toJSON = (obj) => Object.assign(obj, this.fields\n      .filter(f => f.name in obj)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.toJSON(obj[f.name]) }), {})\n    );\n    return Array.isArray(objs) ? \n      objs.map(obj => _toJSON(obj)) :\n      _toJSON(objs);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    if (this.base) {\n      this.parent = settings.parserForType(this.base) as ODataEntityParser;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(config: JsonSchemaConfig = {}) {\n    let properties = this.fields\n      .filter(f => (!f.navigation || (config.expand && f.name in config.expand)) && (!config.select || (config.select).indexOf(f.name) !== -1))\n      .map(f => ({[f.name]: f.toJsonSchema(config[f.name])}))\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    return {\n      title: `The ${this.name} schema`,\n      type: \"object\",\n      description: `The ${this.name} configuration`,\n      properties: properties,\n      required: this.fields.filter(f => !f.nullable).map(f => f.name)\n    };\n  }\n\n  typeFor(name: string): string {\n    let field = this.fields.find(f => f.name === name);\n    if (field)\n      return field.type;\n    else if (this.parent) \n      return this.parent.typeFor(name);\n  }\n\n  keys() { \n    let keys = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {});\n    if (Object.keys(key).length === 1)\n      key = Object.values(key)[0];\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplex() {\n    return this.keys().length === 0;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ODataEntityService.html":{"url":"injectables/ODataEntityService.html","title":"injectable - ODataEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ODataEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                entity\n                            \n                            \n                                    Static\n                                path\n                            \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                assign\n                            \n                            \n                                    Public\n                                collectionAction\n                            \n                            \n                                    Public\n                                collectionFunction\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                fetchAll\n                            \n                            \n                                    Public\n                                fetchCollection\n                            \n                            \n                                    Public\n                                fetchOne\n                            \n                            \n                                    Public\n                                fetchOrCreate\n                            \n                            \n                                    Public\n                                function\n                            \n                            \n                                    Public\n                                navigationProperty\n                            \n                            \n                                    Public\n                                property\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Public\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/entity.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            action\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    action(key: EntityKey, name: string, returnType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    returnType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataActionResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assign(entity: Partial, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionAction(name: string, returnType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:36\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    returnType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataActionResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionFunction(name: string, returnType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    returnType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataFunctionResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(entity: T, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAll(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchCollection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchCollection(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchOne(key: EntityKey, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchOrCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchOrCreate(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            function\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    function(key: EntityKey, name: string, returnType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:40\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    returnType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataFunctionResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            navigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigationProperty(key: EntityKey, name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:24\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataNavigationPropertyResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            property\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    property(key: EntityKey, name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:28\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataPropertyResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(entity: Partial, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(entity: Partial, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            config\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    config()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entities()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitySetResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataBaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataBaseService:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataBaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataBaseService:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataBaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataBaseService:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { \n  ODataNavigationPropertyResource, \n  ODataPropertyResource, \n  ODataActionResource, \n  ODataFunctionResource, \n  ODataEntitiesAnnotations, \n  ODataEntityAnnotations, \n  HttpOptions\n} from '../resources';\nimport { EntityKey } from '../types';\nimport { ODataClient } from '../client';\n\nimport { ODataBaseService } from './base';\n\n@Injectable()\nexport class ODataEntityService extends ODataBaseService {\n  constructor(protected client: ODataClient) { super(client); }\n\n  public navigationProperty(key: EntityKey, name: string): ODataNavigationPropertyResource {\n    return this.entity(key).navigationProperty(name);\n  }\n\n  public property(key: EntityKey, name: string): ODataPropertyResource {\n    return this.entity(key).property(name);\n  }\n\n  public action(key: EntityKey, name: string, returnType?: string): ODataActionResource {\n    return this.entity(key).action(name, returnType);\n  }\n\n  public collectionAction(name: string, returnType?: string): ODataActionResource {\n    return this.entities().action(name, returnType);\n  }\n\n  public function(key: EntityKey, name: string, returnType?: string): ODataFunctionResource {\n    return this.entity(key).function(name, returnType);\n  }\n\n  public collectionFunction(name: string, returnType?: string): ODataFunctionResource {\n    return this.entities().function(name, returnType);\n  }\n\n  // Entity Actions\n  public fetchCollection(options?: HttpOptions): Observable {\n    return this.entities()\n      .get(options);\n  }\n\n  public fetchAll(options?: HttpOptions): Observable {\n    return this.entities()\n      .all(options);\n  }\n\n  public fetchOne(key: EntityKey, options?: HttpOptions): Observable {\n    return this.entity(key)\n      .get(options);\n  }\n\n  public create(entity: Partial, options?: HttpOptions): Observable {\n    return this.entities()\n      .post(entity, options);\n  }\n\n  public update(entity: Partial, options?: HttpOptions & { etag?: string }): Observable {\n    return this.entity(entity)\n      .put(entity, options);\n  }\n\n  public assign(entity: Partial, options?: HttpOptions & { etag?: string }): Observable {\n    return this.entity(entity as EntityKey)\n      .patch(entity, options);\n  }\n\n  public destroy(entity: T, options?: HttpOptions & { etag?: string }) {\n    return this.entity(entity)\n      .delete(options);\n  }\n\n  // Shortcuts\n  public fetchOrCreate(entity: Partial, options?: HttpOptions): Observable {\n    return this.fetchOne(entity as EntityKey, options)\n      .pipe(catchError((error: HttpErrorResponse) => {\n        if (error.status === 404)\n          return this.create(entity as T, options);\n        else\n          return throwError(error);\n      }));\n  }\n\n  public save(entity: Partial, options?: HttpOptions & {etag?: string}) {\n    return this.entity(entity).hasKey() ? this.update(entity, options) : this.create(entity, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumConfig.html":{"url":"classes/ODataEnumConfig.html","title":"class - ODataEnumConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                parser\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/config.ts:156\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:156\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:153\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:155\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:154\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataEntityParser, ODataFieldParser, ODataParser, ODataEnumParser } from '../parsers';\nimport { EntityConfig, EnumConfig, ServiceConfig, Schema, Container, Parser, Configuration, Field } from '../types';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Types } from '../utils';\nimport { ODataModel } from './model';\nimport { ODataCollection } from './collection';\n\nexport class ODataConfig {\n  name: string;\n  serviceRootUrl: string;\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  metadataUrl?: string;\n  withCredentials?: boolean;\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean;\n  creation?: Date;\n  schemas?: Array;\n\n  constructor(config: Configuration) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.name = config.name;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.withCredentials = config.withCredentials || false;\n    this.acceptMetadata = config.acceptMetadata;\n    this.stringAsEnum = config.stringAsEnum || false;\n    this.creation = config.creation || new Date();\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema));\n  }\n  \n  configure() {\n    this.schemas\n      .forEach(schmea => schmea.configure({\n        stringAsEnum: this.stringAsEnum,\n        parserForType: (type: string) => this.parserForType(type)\n      })\n    );\n  }\n\n  //#region Find Config for Type\n  private schemaForType(type: string) {\n    let schema = this.schemas.find(s => type.startsWith(s.namespace));\n    if (schema)\n      return schema;\n  }\n\n  public enumConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.enums.find(e => e.type === type) as ODataEnumConfig;\n  }\n\n  public entityConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.entities.find(e => e.type === type) as ODataEntityConfig;\n  }\n\n  public serviceConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema) {\n      return schema.services.find(s => s.type === type) as ODataServiceConfig;\n    }\n  }\n\n  //#region Model and Collection for type\n  public modelForType(type: string): typeof ODataModel {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForType(type: string): typeof ODataCollection {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public enumConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name) as ODataEnumConfig;\n  }\n\n  public entityConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name) as ODataEntityConfig;\n  }\n\n  public serviceConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.services], [])\n      .find(e => e.name === name) as ODataServiceConfig;\n  }\n\n  //#region Model and Collection for type\n  public modelForName(name: string): typeof ODataModel {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  public parserForType(type: string): ODataParser {\n    let config = this.enumConfigForType(type) || this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.parser as ODataParser;\n  }\n}\n\nexport class ODataSchema {\n  namespace: string;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array;\n\n  constructor(config: Schema) {\n    this.namespace = config.namespace;\n    this.enums = (config.enums || []).map(config => new ODataEnumConfig(config, this.namespace));\n    this.entities = (config.entities || []).map(config => new ODataEntityConfig(config, this.namespace));\n    this.containers = (config.containers || []).map(container => new ODataContainer(container, this.namespace));\n  }\n\n  get services(): Array {\n    return this.containers.reduce((acc, container) => [...acc, ...container.services], []);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.enums\n      .forEach(config => config.configure(settings));\n    this.entities\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataEnumConfig {\n  name: string;\n  type: string;\n  parser?: ODataEnumParser;\n  members: {[name: string]: number} | {[value: number]: string};\n  constructor(config: EnumConfig, namespace: string) {\n    this.name = config.name;\n    this.members = config.members;\n    this.type = `${namespace}.${this.name}`;\n    this.parser = new ODataEnumParser(config as EnumConfig, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n}\n\nexport class ODataEntityConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  parser?: ODataEntityParser;\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = {include_navigation: true, include_parents: true}): ODataFieldParser[] {\n    let parser = this.parser as ODataEntityParser;\n    let fields = []>[];\n    while (parser) {\n      fields = [\n        ...parser.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parser = parser.parent;\n    }\n    return fields;\n  }\n}\n\nexport class ODataContainer {\n  name: string;\n  type: string;\n  annotations: any[];\n  services?: Array;\n  constructor(config: Container, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.services = (config.services || []).map(config => new ODataServiceConfig(config, namespace));\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.services\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataServiceConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  constructor(config: ServiceConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumParser.html":{"url":"classes/ODataEnumParser.html","title":"class - ODataEnumParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ODataParser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                flags\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                parse\n                            \n                            \n                                toJSON\n                            \n                            \n                                toJsonSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(meta: EnumConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        EnumConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            flags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaExpandOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            JsonSchemaExpandOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types, Enums } from './utils';\nimport { Parser, Field, JsonSchemaExpandOptions, JsonSchemaConfig, EntityConfig, EnumConfig } from './types';\n\nexport const PARSERS: {[name: string]: Parser} = {\n  'Date': >{\n    type: 'Date',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    },\n    toJSON(value: Date) { \n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    }\n  },\n  'number': >{\n    type: 'number',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    },\n    toJSON(value: number) { \n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    }\n  }\n};\n\nexport interface ODataParser extends Parser { \n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser});\n  toJsonSchema(options?: JsonSchemaExpandOptions);\n}\n\nexport class ODataEnumParser implements ODataParser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  stringAsEnum?: boolean;\n  members: {[name: string]: number} | {[value: number]: string};\n\n  constructor(meta: EnumConfig, namespace: string) {\n    this.name = meta.name;\n    this.type = `${namespace}.${this.name}`;\n    this.flags = meta.flags;\n    this.members = meta.members;\n  }\n\n  // Deserialize\n  parse(value: any) {\n    // String to number\n    if (value === null || typeof(value) === 'number') return value;\n    return this.flags ?\n      Enums.toFlags(this.members, value) :\n      Enums.toValue(this.members, value);\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    // Number to string\n    if (value === null || typeof(value) === 'string') return value;\n    let enums = this.flags ?\n      Enums.toEnums(this.members, value) :\n      [Enums.toEnum(this.members, value)];\n    if (!this.stringAsEnum)\n      enums = enums.map(e => `${this.type}'${e}'`);\n    return enums.join(\", \");\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = {\n      title: `The ${this.name} field`,\n      type: \"string\"\n    };\n    property.enum = Enums.keys(this.members);\n    return property;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.stringAsEnum = settings.stringAsEnum;\n  }\n}\n\nexport class ODataFieldParser implements ODataParser {\n  name: string;\n  type: string;\n  parser?: Parser;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  ref?: string;\n\n  constructor(name: string, field: Field) {\n    this.name = name;\n    Object.assign(this, field);\n  }\n\n  resolve(value: any) {\n    return this.ref.split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  parse(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.parse(value) : value;\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.toJSON(value) : value;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser = (this.type in PARSERS) ? \n      PARSERS[this.type] : \n      settings.parserForType(this.type);\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = this.parser ? (this.parser as ODataParser).toJsonSchema(options) : {\n      title: `The ${this.name} field`,\n      type: this.parser ? \"object\" : this.type\n    };\n    if (this.maxLength)\n      property.maxLength = this.maxLength;\n    if (this.collection)\n      property = {\n        type: \"array\", \n        items: property,\n        additionalItems: false\n      };\n    return property;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumParser;\n  }\n\n  isEntityType() {\n    return this.parser instanceof ODataEntityParser;\n  }\n\n  isComplexType() {\n    return this.parser instanceof ODataEntityParser && this.parser.isComplex();\n  }\n}\n\nexport class ODataEntityParser implements ODataParser {\n  name: string;\n  type: string;\n  base: string;\n  parent: ODataEntityParser;\n  fields: ODataFieldParser[];\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.type = `${namespace}.${this.name}`;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataFieldParser(name, f as Field));\n  }\n\n  // Deserialize\n  parse(objs: any): Type | Type[] {\n    if (this.parent)\n      objs = this.parent.parse(objs);\n    let _parse = (obj) =>\n      Object.assign(obj, this.fields\n        .filter(f => f.name in obj)\n        .reduce((acc, f) => Object.assign(acc, { [f.name]: f.parse(obj[f.name]) }), {})\n      );\n    return Array.isArray(objs) ?\n      objs.map(obj => _parse(obj)) :\n      _parse(objs);\n  }\n\n  // Serialize\n  toJSON(objs: any): any {\n    if (this.parent)\n      objs = this.parent.toJSON(objs);\n    let _toJSON = (obj) => Object.assign(obj, this.fields\n      .filter(f => f.name in obj)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.toJSON(obj[f.name]) }), {})\n    );\n    return Array.isArray(objs) ? \n      objs.map(obj => _toJSON(obj)) :\n      _toJSON(objs);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    if (this.base) {\n      this.parent = settings.parserForType(this.base) as ODataEntityParser;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(config: JsonSchemaConfig = {}) {\n    let properties = this.fields\n      .filter(f => (!f.navigation || (config.expand && f.name in config.expand)) && (!config.select || (config.select).indexOf(f.name) !== -1))\n      .map(f => ({[f.name]: f.toJsonSchema(config[f.name])}))\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    return {\n      title: `The ${this.name} schema`,\n      type: \"object\",\n      description: `The ${this.name} configuration`,\n      properties: properties,\n      required: this.fields.filter(f => !f.nullable).map(f => f.name)\n    };\n  }\n\n  typeFor(name: string): string {\n    let field = this.fields.find(f => f.name === name);\n    if (field)\n      return field.type;\n    else if (this.parent) \n      return this.parent.typeFor(name);\n  }\n\n  keys() { \n    let keys = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {});\n    if (Object.keys(key).length === 1)\n      key = Object.values(key)[0];\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplex() {\n    return this.keys().length === 0;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataFieldParser.html":{"url":"classes/ODataFieldParser.html","title":"class - ODataFieldParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataFieldParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ODataParser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                    Optional\n                                default\n                            \n                            \n                                    Optional\n                                field\n                            \n                            \n                                    Optional\n                                key\n                            \n                            \n                                    Optional\n                                maxLength\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                navigation\n                            \n                            \n                                    Optional\n                                nullable\n                            \n                            \n                                    Optional\n                                parser\n                            \n                            \n                                    Optional\n                                ref\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                isComplexType\n                            \n                            \n                                isEntityType\n                            \n                            \n                                isEnumType\n                            \n                            \n                                isNavigation\n                            \n                            \n                                parse\n                            \n                            \n                                resolve\n                            \n                            \n                                toJSON\n                            \n                            \n                                toJsonSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, field: Field)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers.ts:99\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        Field\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            default\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            navigation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ref\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:90\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplexType\n                        \n                        \n                    \n                \n            \n            \n                \nisComplexType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEntityType\n                        \n                        \n                    \n                \n            \n            \n                \nisEntityType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnumType\n                        \n                        \n                    \n                \n            \n            \n                \nisEnumType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNavigation\n                        \n                        \n                    \n                \n            \n            \n                \nisNavigation()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaExpandOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            JsonSchemaExpandOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types, Enums } from './utils';\nimport { Parser, Field, JsonSchemaExpandOptions, JsonSchemaConfig, EntityConfig, EnumConfig } from './types';\n\nexport const PARSERS: {[name: string]: Parser} = {\n  'Date': >{\n    type: 'Date',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    },\n    toJSON(value: Date) { \n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    }\n  },\n  'number': >{\n    type: 'number',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    },\n    toJSON(value: number) { \n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    }\n  }\n};\n\nexport interface ODataParser extends Parser { \n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser});\n  toJsonSchema(options?: JsonSchemaExpandOptions);\n}\n\nexport class ODataEnumParser implements ODataParser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  stringAsEnum?: boolean;\n  members: {[name: string]: number} | {[value: number]: string};\n\n  constructor(meta: EnumConfig, namespace: string) {\n    this.name = meta.name;\n    this.type = `${namespace}.${this.name}`;\n    this.flags = meta.flags;\n    this.members = meta.members;\n  }\n\n  // Deserialize\n  parse(value: any) {\n    // String to number\n    if (value === null || typeof(value) === 'number') return value;\n    return this.flags ?\n      Enums.toFlags(this.members, value) :\n      Enums.toValue(this.members, value);\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    // Number to string\n    if (value === null || typeof(value) === 'string') return value;\n    let enums = this.flags ?\n      Enums.toEnums(this.members, value) :\n      [Enums.toEnum(this.members, value)];\n    if (!this.stringAsEnum)\n      enums = enums.map(e => `${this.type}'${e}'`);\n    return enums.join(\", \");\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = {\n      title: `The ${this.name} field`,\n      type: \"string\"\n    };\n    property.enum = Enums.keys(this.members);\n    return property;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.stringAsEnum = settings.stringAsEnum;\n  }\n}\n\nexport class ODataFieldParser implements ODataParser {\n  name: string;\n  type: string;\n  parser?: Parser;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  ref?: string;\n\n  constructor(name: string, field: Field) {\n    this.name = name;\n    Object.assign(this, field);\n  }\n\n  resolve(value: any) {\n    return this.ref.split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  parse(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.parse(value) : value;\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.toJSON(value) : value;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser = (this.type in PARSERS) ? \n      PARSERS[this.type] : \n      settings.parserForType(this.type);\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = this.parser ? (this.parser as ODataParser).toJsonSchema(options) : {\n      title: `The ${this.name} field`,\n      type: this.parser ? \"object\" : this.type\n    };\n    if (this.maxLength)\n      property.maxLength = this.maxLength;\n    if (this.collection)\n      property = {\n        type: \"array\", \n        items: property,\n        additionalItems: false\n      };\n    return property;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumParser;\n  }\n\n  isEntityType() {\n    return this.parser instanceof ODataEntityParser;\n  }\n\n  isComplexType() {\n    return this.parser instanceof ODataEntityParser && this.parser.isComplex();\n  }\n}\n\nexport class ODataEntityParser implements ODataParser {\n  name: string;\n  type: string;\n  base: string;\n  parent: ODataEntityParser;\n  fields: ODataFieldParser[];\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.type = `${namespace}.${this.name}`;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataFieldParser(name, f as Field));\n  }\n\n  // Deserialize\n  parse(objs: any): Type | Type[] {\n    if (this.parent)\n      objs = this.parent.parse(objs);\n    let _parse = (obj) =>\n      Object.assign(obj, this.fields\n        .filter(f => f.name in obj)\n        .reduce((acc, f) => Object.assign(acc, { [f.name]: f.parse(obj[f.name]) }), {})\n      );\n    return Array.isArray(objs) ?\n      objs.map(obj => _parse(obj)) :\n      _parse(objs);\n  }\n\n  // Serialize\n  toJSON(objs: any): any {\n    if (this.parent)\n      objs = this.parent.toJSON(objs);\n    let _toJSON = (obj) => Object.assign(obj, this.fields\n      .filter(f => f.name in obj)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.toJSON(obj[f.name]) }), {})\n    );\n    return Array.isArray(objs) ? \n      objs.map(obj => _toJSON(obj)) :\n      _toJSON(objs);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    if (this.base) {\n      this.parent = settings.parserForType(this.base) as ODataEntityParser;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(config: JsonSchemaConfig = {}) {\n    let properties = this.fields\n      .filter(f => (!f.navigation || (config.expand && f.name in config.expand)) && (!config.select || (config.select).indexOf(f.name) !== -1))\n      .map(f => ({[f.name]: f.toJsonSchema(config[f.name])}))\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    return {\n      title: `The ${this.name} schema`,\n      type: \"object\",\n      description: `The ${this.name} configuration`,\n      properties: properties,\n      required: this.fields.filter(f => !f.nullable).map(f => f.name)\n    };\n  }\n\n  typeFor(name: string): string {\n    let field = this.fields.find(f => f.name === name);\n    if (field)\n      return field.type;\n    else if (this.parent) \n      return this.parent.typeFor(name);\n  }\n\n  keys() { \n    let keys = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {});\n    if (Object.keys(key).length === 1)\n      key = Object.values(key)[0];\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplex() {\n    return this.keys().length === 0;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataModel.html":{"url":"classes/ODataModel.html","title":"class - ODataModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _annotations\n                            \n                            \n                                    Protected\n                                _entity\n                            \n                            \n                                    Protected\n                                _relations\n                            \n                            \n                                    Protected\n                                _resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attach\n                            \n                            \n                                clone\n                            \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                fetch\n                            \n                            \n                                    Protected\n                                getNavigationProperty\n                            \n                            \n                                    Protected\n                                parse\n                            \n                            \n                                    Protected\n                                populate\n                            \n                            \n                                save\n                            \n                            \n                                    Protected\n                                setNavigationProperty\n                            \n                            \n                                target\n                            \n                            \n                                toEntity\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _segments\n                                \n                                \n                                    _query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity?: Partial, options: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/model.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotations\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _relations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \nattach(resource: ODataResource)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:123\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        Mo\n                    \n                \n            \n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNavigationProperty(field: ODataFieldParser)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:240\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                ODataFieldParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ODataModel | ODataCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            populate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populate(entity: T, annots?: ODataAnnotations)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    annots\n                                    \n                                                ODataAnnotations\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setNavigationProperty(field: ODataFieldParser, model: Pm | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:253\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        Pm\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                ODataFieldParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                            Pm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            target\n                        \n                        \n                    \n                \n            \n            \n                \ntarget()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toEntity\n                        \n                        \n                    \n                \n            \n            \n                \ntoEntity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _segments\n                    \n                \n\n                \n                    \n                        get_segments()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:202\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _query\n                    \n                \n\n                \n                    \n                        get_query()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:221\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable, forkJoin } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport {\n  ODataResource,\n  ODataEntityResource,\n  ODataPropertyResource,\n  ODataFunctionResource,\n  ODataActionResource,\n  ODataAnnotations,\n  ODataEntityAnnotations,\n  Expand,\n  Select\n} from '../resources';\n\nimport { ODataCollection } from './collection';\nimport { ODataNavigationPropertyResource } from '../resources/requests/navigationproperty';\nimport {\n  HttpOptions,\n  HttpValueOptions,\n  HttpEntityOptions\n} from '../resources/http-options';\nimport { VALUE } from '../types';\nimport { ODataFieldParser } from '../parsers';\n\nexport class ODataModel {\n  protected _resource: ODataResource;\n  protected _entity: T;\n  protected _annotations: ODataAnnotations;\n  protected _relations: { [name: string]: { \n    rel: ODataModel | ODataCollection> | null,\n    field: ODataFieldParser\n  }}\n\n  constructor(entity?: Partial, options: { resource?: ODataResource, annotations?: ODataAnnotations } = {}) {\n    if (options.resource instanceof ODataResource)\n      this.attach(options.resource);\n    this.populate((entity || {}) as T, options.annotations);\n  }\n\n  attach(resource: ODataResource) {\n    if (this._resource && this._resource.type() !== resource.type())\n      throw new Error(`Can't reattach ${resource.type()} with ${this._resource.type()}`);\n    let first = !this._resource;\n    this._resource = resource;\n    if (first) {\n      this._resource.config().fields()\n        .filter(field => field.navigation)\n        .forEach(field => {\n          Object.defineProperty(this, field.name, {\n            get() {\n              return this.getNavigationProperty(field);\n            },\n            set(model: ODataModel | null) {\n              this.setNavigationProperty(field, model);\n            }\n          });\n        });\n      if (this._entity)\n        this.populate(this._entity, this._annotations);\n    }\n    return this;\n  }\n\n  target() {\n    return this._resource.clone() as ODataResource;\n  }\n\n  protected parse(entity: T) {\n    let fields = this._resource ? this._resource.config().fields() : [];\n    let entries = Object.entries(entity)\n      .map(([key, value]) => [key, value, fields.find(f => f.name === key)]);\n    //Attributes\n    let attrs = Object.assign({}, entries\n      .filter(([, , f]) => f && !(f.isNavigation() || f.isComplexType()))\n      .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v }), {}));\n    //Others\n    Object.assign(attrs, entries\n      .filter(([, , f]) => !f)\n      .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v }), {}));\n    //Complexes\n    Object.assign(attrs, entries\n      .filter(([, , f]) => f && f.isComplexType())\n      .reduce((acc, [k, , f]) => {\n        let value = this._entity[f.name];\n        if (value) {\n          let prop = (this._resource as ODataEntityResource).property(f.name);\n          var base = f.collection && this._annotations.property(f.name) || {};\n          value = f.collection ? \n            prop.toCollection(Object.assign(base, { [VALUE]: value || [] })) : \n            prop.toModel(Object.assign(base, value || {}));\n        }\n        return Object.assign(acc, { [k]: value });\n      }, {}));\n    return attrs;\n  }\n\n  protected populate(entity: T, annots?: ODataAnnotations) {\n    this._entity = entity;\n    this._annotations = annots;\n    this._relations = {};\n    Object.assign(this, this.parse(this._entity));\n    return this;\n  }\n\n  toEntity(): T {\n    return Object.entries(\n      Object.assign({}, \n        this._entity, \n        Object.entries(this)\n          .filter(([key, ]) => !(key.startsWith(\"_\")))\n          .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v }), {}),\n        Object.entries(this._relations).reduce((acc, [k, v]) => Object.assign(acc, {[k]: v.rel}), {})\n      )\n    ).reduce((acc, [k, value]) => \n      Object.assign(acc, { [k]: (value instanceof ODataModel) ? \n        value.toEntity() : \n        (value instanceof ODataCollection) ?\n        value.toEntities() : value }), \n      {}) as T;\n  }\n\n  clone>() {\n    let Ctor = this.constructor;\n    return (new Ctor(this.toEntity(), { resource: this._resource.clone(), annotations: this._annotations })) as Mo;\n  }\n\n  fetch(options?: HttpOptions): Observable {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.key(this);\n      if (!this._resource.hasKey())\n        throw new Error(`Can't fetch entity without key`);\n      obs$ = this._resource.get(options);\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      obs$ = this._resource.get(\n        Object.assign({responseType: 'entity'}, options || {}));\n    } else if (this._resource instanceof ODataPropertyResource) {\n      obs$ = this._resource.get(\n        Object.assign({responseType: 'value'}, options || {}));\n    } else if (this._resource instanceof ODataFunctionResource) {\n      obs$ = this._resource.get(\n        Object.assign({responseType: 'entity'}, options || {}));\n    }\n    if (!obs$)\n      throw new Error(\"Not Yet!\");\n    return obs$.pipe(\n      map(([entity, annots]) => entity ? this.populate(entity, annots) : null));\n  }\n\n  create(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      let entity = this.toEntity(); \n      return this._resource.post(entity, options).pipe(map(([entity, annots]) => this.populate(entity, annots)));\n    }\n    throw new Error(`Can't create`);\n  }\n\n  update(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.key(this);\n      if (!this._resource.hasKey())\n        throw new Error(`Can't update entity without key`);\n      let resource = this._resource;\n      let etag = (this._annotations && this._annotations instanceof ODataEntityAnnotations) ? this._annotations.etag : undefined;\n      let entity = this.toEntity(); \n      let rels = Object.values(this._relations)\n            .filter((value) => value.field.navigation && !value.field.collection)\n            .map((value) => {\n              let ref = this._segments.navigationProperty(value.field.name).reference();\n              delete entity[value.field.name];\n              return value.rel != null ? \n                ref.set(value.rel.target() as ODataEntityResource, {etag}) : \n                ref.unset({etag})\n            });\n      return forkJoin(rels).pipe(\n        switchMap(() => resource.put(entity, Object.assign({ etag }, options || {}))),\n        map(([entity, annots]) => this.populate(entity, annots)));\n    }\n    throw new Error(`Can't update`);\n  }\n\n  save(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.key(this);\n      return this._resource.hasKey() ? this.update(options) : this.create(options);\n    }\n    throw new Error(`Can't save`);\n  }\n\n  destroy(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      let etag = (this._annotations && this._annotations instanceof ODataEntityAnnotations) ? this._annotations.etag : undefined;\n      this._resource.key(this);\n      if (!this._resource.hasKey())\n        throw new Error(`Can't destroy entity without key`);\n      return this._resource.delete(Object.assign({ etag }, options || {}));\n    }\n    throw new Error(`Can't destroy`);\n  }\n\n  protected get _segments() {\n    if (!this._resource)\n      throw new Error(`Can't call without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.key(this);\n      if (!this._resource.hasKey())\n        throw new Error(`Can't use without key`);\n    }\n    let resource = this._resource as ODataEntityResource;\n    return {\n      // Function\n      function(name: string, returnType?: string): ODataFunctionResource { return resource.function(name, returnType); },\n      // Action\n      action(name: string, returnType?: string): ODataActionResource { return resource.action(name, returnType); },\n      // Navigation\n      navigationProperty(name: string): ODataNavigationPropertyResource { return resource.navigationProperty(name); }\n    };\n  }\n\n  get _query() {\n    if (!this._resource)\n      throw new Error(`Can't query without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.key(this);\n      if (!this._resource.hasKey())\n        throw new Error(`Can't query without key`);\n    }\n    let resource = this._resource as ODataEntityResource;\n    return {\n      // Select\n      select(select?: Select) { return resource.select(select); },\n      // Expand\n      expand(expand?: Expand) { return resource.expand(expand); },\n      // Alias value\n      alias(name: string, value?: any) { return resource.alias(name, value); }\n    };\n  }\n\n  protected getNavigationProperty(field: ODataFieldParser): ODataModel | ODataCollection> {\n    if (!(field.name in this._relations)) {\n      let value = this._entity[field.name];\n      let nav = this._segments.navigationProperty(field.name);\n      let base = field.collection && this._annotations.property(field.name) || {};\n      let rel = field.collection ? \n        nav.toCollection(Object.assign(base, { [VALUE]: value || [] })) : \n        nav.toModel(Object.assign(base, value || {}));\n      this._relations[field.name] = {field, rel};\n    }\n    return this._relations[field.name].rel;\n  }\n\n  protected setNavigationProperty>(field: ODataFieldParser, model: Pm | null) {\n    if (field.collection)\n      throw new Error(`Can't set ${field.name} to collection, use add`);\n    if (model instanceof ODataModel && model.target().type() !== field.type)\n      throw new Error(`Can't set ${model.target().type()} to ${field.type}`);\n    this._relations[field.name] = {rel: model, field};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ODataModelService.html":{"url":"injectables/ODataModelService.html","title":"injectable - ODataModelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ODataModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                entity\n                            \n                            \n                                    Static\n                                path\n                            \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                collection\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Public\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/model.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/model.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collection(models?: Partial[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/model.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    models\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            model\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    model(entity?: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/model.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            config\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    config()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entities()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitySetResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataBaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataBaseService:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataBaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataBaseService:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataBaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataBaseService:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ODataClient } from \"../client\";\nimport { VALUE } from '../types';\nimport { ODataModel, ODataCollection } from '../models';\n\nimport { ODataBaseService } from './base';\n\n@Injectable()\nexport class ODataModelService, C extends ODataCollection> extends ODataBaseService {\n  constructor(protected client: ODataClient) { super(client); }\n\n  // Models\n  public model(entity?: Partial): M {\n    entity = entity || {};\n    return this.entity(entity).toModel(entity);\n  }\n\n  public collection(models?: Partial[]): C {\n    return this.entities().toCollection({[VALUE]: models || []});\n  }\n\n  public attach(value: M): M;\n  public attach(value: C): C;\n  public attach(value: any): any {\n    if (value instanceof ODataModel) {\n      return value.attach(this.entities().entity(value.toEntity()));\n    } else if (value instanceof ODataCollection) {\n      return value.attach(this.entities());\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ODataModule.html":{"url":"modules/ODataModule.html","title":"module - ODataModule","body":"\n                   \n\n\n\n\n    Modules\n    ODataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ODataModule\n\n\n\ncluster_ODataModule_providers\n\n\n\n\nODataClient\n\nODataClient\n\n\n\nODataModule\n\nODataModule\n\nODataModule -->\n\nODataClient->ODataModule\n\n\n\n\n\nODataServiceFactory\n\nODataServiceFactory\n\nODataModule -->\n\nODataServiceFactory->ODataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-odata/src/lib/module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ODataClient\n                        \n                        \n                            ODataServiceFactory\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(configs: Configuration[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                Configuration[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ODataSettings } from './models/settings';\nimport { ODataClient } from './client';\nimport { ODataServiceFactory } from './services/factory';\nimport { Configuration, ODATA_CONFIGURATIONS } from './types';\n\nexport function createSettings(configs: Configuration[]) {\n  return new ODataSettings(...configs);\n}\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [ODataClient, ODataServiceFactory]\n})\nexport class ODataModule {\n  public static forRoot(...configs: Configuration[]): ModuleWithProviders {\n    return {\n      ngModule: ODataModule,\n      providers: [\n        { provide: ODATA_CONFIGURATIONS, useValue: configs },\n        { \n          provide: ODataSettings, \n          useFactory: createSettings,\n          deps: [ODATA_CONFIGURATIONS]\n        },\n        ODataClient,\n        ODataServiceFactory\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ODataParser.html":{"url":"interfaces/ODataParser.html","title":"interface - ODataParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ODataParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Parser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    configure\n                                \n                                \n                                    toJsonSchema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options?: JsonSchemaExpandOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            JsonSchemaExpandOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Types, Enums } from './utils';\nimport { Parser, Field, JsonSchemaExpandOptions, JsonSchemaConfig, EntityConfig, EnumConfig } from './types';\n\nexport const PARSERS: {[name: string]: Parser} = {\n  'Date': >{\n    type: 'Date',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    },\n    toJSON(value: Date) { \n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    }\n  },\n  'number': >{\n    type: 'number',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    },\n    toJSON(value: number) { \n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    }\n  }\n};\n\nexport interface ODataParser extends Parser { \n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser});\n  toJsonSchema(options?: JsonSchemaExpandOptions);\n}\n\nexport class ODataEnumParser implements ODataParser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  stringAsEnum?: boolean;\n  members: {[name: string]: number} | {[value: number]: string};\n\n  constructor(meta: EnumConfig, namespace: string) {\n    this.name = meta.name;\n    this.type = `${namespace}.${this.name}`;\n    this.flags = meta.flags;\n    this.members = meta.members;\n  }\n\n  // Deserialize\n  parse(value: any) {\n    // String to number\n    if (value === null || typeof(value) === 'number') return value;\n    return this.flags ?\n      Enums.toFlags(this.members, value) :\n      Enums.toValue(this.members, value);\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    // Number to string\n    if (value === null || typeof(value) === 'string') return value;\n    let enums = this.flags ?\n      Enums.toEnums(this.members, value) :\n      [Enums.toEnum(this.members, value)];\n    if (!this.stringAsEnum)\n      enums = enums.map(e => `${this.type}'${e}'`);\n    return enums.join(\", \");\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = {\n      title: `The ${this.name} field`,\n      type: \"string\"\n    };\n    property.enum = Enums.keys(this.members);\n    return property;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.stringAsEnum = settings.stringAsEnum;\n  }\n}\n\nexport class ODataFieldParser implements ODataParser {\n  name: string;\n  type: string;\n  parser?: Parser;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  ref?: string;\n\n  constructor(name: string, field: Field) {\n    this.name = name;\n    Object.assign(this, field);\n  }\n\n  resolve(value: any) {\n    return this.ref.split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  parse(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.parse(value) : value;\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.toJSON(value) : value;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser = (this.type in PARSERS) ? \n      PARSERS[this.type] : \n      settings.parserForType(this.type);\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = this.parser ? (this.parser as ODataParser).toJsonSchema(options) : {\n      title: `The ${this.name} field`,\n      type: this.parser ? \"object\" : this.type\n    };\n    if (this.maxLength)\n      property.maxLength = this.maxLength;\n    if (this.collection)\n      property = {\n        type: \"array\", \n        items: property,\n        additionalItems: false\n      };\n    return property;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumParser;\n  }\n\n  isEntityType() {\n    return this.parser instanceof ODataEntityParser;\n  }\n\n  isComplexType() {\n    return this.parser instanceof ODataEntityParser && this.parser.isComplex();\n  }\n}\n\nexport class ODataEntityParser implements ODataParser {\n  name: string;\n  type: string;\n  base: string;\n  parent: ODataEntityParser;\n  fields: ODataFieldParser[];\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.type = `${namespace}.${this.name}`;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataFieldParser(name, f as Field));\n  }\n\n  // Deserialize\n  parse(objs: any): Type | Type[] {\n    if (this.parent)\n      objs = this.parent.parse(objs);\n    let _parse = (obj) =>\n      Object.assign(obj, this.fields\n        .filter(f => f.name in obj)\n        .reduce((acc, f) => Object.assign(acc, { [f.name]: f.parse(obj[f.name]) }), {})\n      );\n    return Array.isArray(objs) ?\n      objs.map(obj => _parse(obj)) :\n      _parse(objs);\n  }\n\n  // Serialize\n  toJSON(objs: any): any {\n    if (this.parent)\n      objs = this.parent.toJSON(objs);\n    let _toJSON = (obj) => Object.assign(obj, this.fields\n      .filter(f => f.name in obj)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.toJSON(obj[f.name]) }), {})\n    );\n    return Array.isArray(objs) ? \n      objs.map(obj => _toJSON(obj)) :\n      _toJSON(objs);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    if (this.base) {\n      this.parent = settings.parserForType(this.base) as ODataEntityParser;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(config: JsonSchemaConfig = {}) {\n    let properties = this.fields\n      .filter(f => (!f.navigation || (config.expand && f.name in config.expand)) && (!config.select || (config.select).indexOf(f.name) !== -1))\n      .map(f => ({[f.name]: f.toJsonSchema(config[f.name])}))\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    return {\n      title: `The ${this.name} schema`,\n      type: \"object\",\n      description: `The ${this.name} configuration`,\n      properties: properties,\n      required: this.fields.filter(f => !f.nullable).map(f => f.name)\n    };\n  }\n\n  typeFor(name: string): string {\n    let field = this.fields.find(f => f.name === name);\n    if (field)\n      return field.type;\n    else if (this.parent) \n      return this.parent.typeFor(name);\n  }\n\n  keys() { \n    let keys = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {});\n    if (Object.keys(key).length === 1)\n      key = Object.values(key)[0];\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplex() {\n    return this.keys().length === 0;\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPathSegments.html":{"url":"classes/ODataPathSegments.html","title":"class - ODataPathSegments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPathSegments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                find\n                            \n                            \n                                has\n                            \n                            \n                                last\n                            \n                            \n                                path\n                            \n                            \n                                remove\n                            \n                            \n                                segment\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segments?: ODataSegment[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataSegment[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            segments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSegment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:55\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPathSegments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            last\n                        \n                        \n                    \n                \n            \n            \n                \nlast()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SegmentHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            path\n                        \n                        \n                    \n                \n            \n            \n                \npath()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            segment\n                        \n                        \n                    \n                \n            \n            \n                \nsegment(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SegmentHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import buildQuery, { guid, Alias, alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { Types, isoStringToDate } from '../utils/index';\n\nimport { OptionHandler } from './query-options';\nimport { PATH_SEPARATOR } from '../types';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action'\n}\n\nexport enum SegmentOptionNames {\n  key = 'key',\n  parameters = 'parameters'\n}\n\nexport type ODataSegment = {\n  name: string;\n  path: string;\n  type: string;\n  options: PlainObject;\n}\n\nconst pathSegmentsBuilder = (segment: ODataSegment): string => {\n  switch (segment.name) {\n    case PathSegmentNames.function:\n      let parameters = segment.options[SegmentOptionNames.parameters];\n      return (parameters ?\n        buildQuery({ func: { [segment.path]: parameters }}) :\n        buildQuery({ func: segment.path})\n      ).slice(1);\n    default:\n      let key = segment.options[SegmentOptionNames.key];\n      if (typeof (key) === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(key)) {\n        key = guid(key);\n      }\n      return segment.path + (key ? buildQuery({ key }) : \"\");\n  }\n}\n\nexport class ODataPathSegments {\n  protected segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this.segments = (segments || []).map(({name, path, type, options}) => ({name, path, type, options: options || {}}));\n  }\n\n  path(): string {\n    let chunks = this.segments\n      .map(pathSegmentsBuilder);\n    return chunks.join(PATH_SEPARATOR);\n  }\n\n  types(): string[] {\n    return this.segments.map(s => s.type).filter(t => !Types.isNullOrUndefined(t));\n  }\n\n  toString(): string {\n    return this.path();\n  }\n\n  toJSON() {\n    return this.segments.map(segment => { \n      let json = { name: segment.name, path: segment.path, type: segment.type };\n      let options = isoStringToDate(JSON.parse(JSON.stringify(segment.options)));\n      if (!Types.isEmpty(options))\n        json.options = options;\n      return json; \n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(name: string, path?: string) {\n    // Backward search\n    return [...this.segments].reverse().find(s =>\n      s.name === name &&\n      (Types.isUndefined(path) || s.path === path));\n  }\n\n  last(): SegmentHandler {\n    if (this.segments.length > 0)\n      return new SegmentHandler(this.segments[this.segments.length - 1]);\n  }\n\n  segment(name: string, path?: string): SegmentHandler {\n    let segment = this.find(name, path);\n    if (!segment && !Types.isUndefined(path)) {\n      segment = { name, path, options: {} } as ODataSegment;\n      this.segments.push(segment);\n    }\n    if (segment)\n      return new SegmentHandler(segment);\n  }\n\n  has(name: string, path?: string) {\n    return !!this.find(name, path);\n  }\n\n  remove(name: string, path?: string) {\n    let segment = this.find(name, path);\n    this.segments = this.segments.filter(s => s !== segment);\n  }\n}\n\nclass SegmentHandler {\n  options?: PlainObject\n  constructor(private segment: ODataSegment) {\n    this.options = this.segment.options;\n  }\n\n  get name() {\n    return this.segment.name;\n  }\n\n  get type() {\n    return this.segment.type;\n  }\n\n  setType(value: string) {\n    this.segment.type = value;\n  }\n\n  get path() {\n    return this.segment.path;\n  }\n\n  setPath(value: string) {\n    this.segment.path = value;\n  }\n\n  // Option Handler\n  option(type: SegmentOptionNames, opts?: T) {\n    if (!Types.isUndefined(opts))\n      this.options[type] = opts;\n    return new OptionHandler(this.options, type as any);\n  }\n\n  // Aliases\n  alias(name: string, value?: any): Alias {\n    return alias(name, value);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataQueryOptions.html":{"url":"classes/ODataQueryOptions.html","title":"class - ODataQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataQueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                clear\n                            \n                            \n                                clone\n                            \n                            \n                                has\n                            \n                            \n                                keep\n                            \n                            \n                                option\n                            \n                            \n                                params\n                            \n                            \n                                remove\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: PlainObject)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        PlainObject\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlainObject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alias\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataQueryOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: QueryOptionNames)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keep\n                        \n                        \n                    \n                \n            \n            \n                \nkeep(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            option\n                        \n                        \n                    \n                \n            \n            \n                \noption(name: QueryOptionNames, opts?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:73\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OptionHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            params\n                        \n                        \n                    \n                \n            \n            \n                \nparams()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PlainObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import buildQuery, { alias, Alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { isoStringToDate, Types } from '../utils/index';\nimport { parseQuery } from '../types';\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  expand = 'expand',\n  format = 'format',\n  // Custom options\n  custom = 'custom'\n}\n\nexport class ODataQueryOptions {\n  options?: PlainObject;\n\n  constructor(options?: PlainObject) {\n    this.options = options || {};\n  }\n\n  // Params\n  params(): PlainObject {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format]\n        .filter(key => !Types.isEmpty(this.options[key]))\n        .reduce((acc, key) => Object.assign(acc, {[key]: this.options[key]}), {});\n\n    let query = buildQuery(options);\n    let params = (query) ? parseQuery(query.substr(1)) : {};\n\n    // Custom\n    let custom = this.options[QueryOptionNames.custom] || {};\n    Object.assign(params, custom);\n\n    return params;\n  }\n\n  toString(): string {\n    return Object.entries(this.params())\n      .filter(([, value]) => value)\n      .map(([key, value]) => `${key}=${value}`)\n      .join(\"&\");\n  }\n\n  toJSON() {\n    return isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (!Types.isUndefined(opts))\n      this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return !Types.isUndefined(this.options[name]);\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach(name => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter((k: QueryOptionNames) => names.indexOf(k) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Aliases\n  alias(name: string, value: any): Alias {\n    return alias(name, value);\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(private o: PlainObject, private n: QueryOptionNames) { }\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  // Primitive value\n  value() {\n    return this.o[this.n];\n  }\n\n  // Array\n  private assertArray(): Array {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = !Types.isUndefined(this.o[this.n]) ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter(v => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1)\n      this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n\n  // Hash map\n  private assertObject(): PlainObject {\n    if (!Types.isArray(this.o[this.n]) && Types.isObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find(v => Types.isObject(v));\n    if (!obj) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(name: string, value: T) {\n    this.assertObject()[name] = value;\n  }\n\n  get(name: string): T {\n    if (!Types.isArray(this.o[this.n])) {\n      return this.o[this.n][name];\n    }\n  }\n\n  unset(name: string) {\n    delete this.assertObject()[name];\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter(v => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1)\n        this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(name: string) {\n    return !!this.get(name);\n  }\n\n  assign(values: PlainObject) {\n    Object.assign(this.assertObject(), values);\n  }\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSchema.html":{"url":"classes/ODataSchema.html","title":"class - ODataSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                containers\n                            \n                            \n                                    Optional\n                                entities\n                            \n                            \n                                    Optional\n                                enums\n                            \n                            \n                                namespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    services\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Schema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/config.ts:131\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Schema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:130\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            enums\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:129\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:128\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        services\n                    \n                \n\n                \n                    \n                        getservices()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:140\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataEntityParser, ODataFieldParser, ODataParser, ODataEnumParser } from '../parsers';\nimport { EntityConfig, EnumConfig, ServiceConfig, Schema, Container, Parser, Configuration, Field } from '../types';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Types } from '../utils';\nimport { ODataModel } from './model';\nimport { ODataCollection } from './collection';\n\nexport class ODataConfig {\n  name: string;\n  serviceRootUrl: string;\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  metadataUrl?: string;\n  withCredentials?: boolean;\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean;\n  creation?: Date;\n  schemas?: Array;\n\n  constructor(config: Configuration) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.name = config.name;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.withCredentials = config.withCredentials || false;\n    this.acceptMetadata = config.acceptMetadata;\n    this.stringAsEnum = config.stringAsEnum || false;\n    this.creation = config.creation || new Date();\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema));\n  }\n  \n  configure() {\n    this.schemas\n      .forEach(schmea => schmea.configure({\n        stringAsEnum: this.stringAsEnum,\n        parserForType: (type: string) => this.parserForType(type)\n      })\n    );\n  }\n\n  //#region Find Config for Type\n  private schemaForType(type: string) {\n    let schema = this.schemas.find(s => type.startsWith(s.namespace));\n    if (schema)\n      return schema;\n  }\n\n  public enumConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.enums.find(e => e.type === type) as ODataEnumConfig;\n  }\n\n  public entityConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.entities.find(e => e.type === type) as ODataEntityConfig;\n  }\n\n  public serviceConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema) {\n      return schema.services.find(s => s.type === type) as ODataServiceConfig;\n    }\n  }\n\n  //#region Model and Collection for type\n  public modelForType(type: string): typeof ODataModel {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForType(type: string): typeof ODataCollection {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public enumConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name) as ODataEnumConfig;\n  }\n\n  public entityConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name) as ODataEntityConfig;\n  }\n\n  public serviceConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.services], [])\n      .find(e => e.name === name) as ODataServiceConfig;\n  }\n\n  //#region Model and Collection for type\n  public modelForName(name: string): typeof ODataModel {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  public parserForType(type: string): ODataParser {\n    let config = this.enumConfigForType(type) || this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.parser as ODataParser;\n  }\n}\n\nexport class ODataSchema {\n  namespace: string;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array;\n\n  constructor(config: Schema) {\n    this.namespace = config.namespace;\n    this.enums = (config.enums || []).map(config => new ODataEnumConfig(config, this.namespace));\n    this.entities = (config.entities || []).map(config => new ODataEntityConfig(config, this.namespace));\n    this.containers = (config.containers || []).map(container => new ODataContainer(container, this.namespace));\n  }\n\n  get services(): Array {\n    return this.containers.reduce((acc, container) => [...acc, ...container.services], []);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.enums\n      .forEach(config => config.configure(settings));\n    this.entities\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataEnumConfig {\n  name: string;\n  type: string;\n  parser?: ODataEnumParser;\n  members: {[name: string]: number} | {[value: number]: string};\n  constructor(config: EnumConfig, namespace: string) {\n    this.name = config.name;\n    this.members = config.members;\n    this.type = `${namespace}.${this.name}`;\n    this.parser = new ODataEnumParser(config as EnumConfig, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n}\n\nexport class ODataEntityConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  parser?: ODataEntityParser;\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = {include_navigation: true, include_parents: true}): ODataFieldParser[] {\n    let parser = this.parser as ODataEntityParser;\n    let fields = []>[];\n    while (parser) {\n      fields = [\n        ...parser.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parser = parser.parent;\n    }\n    return fields;\n  }\n}\n\nexport class ODataContainer {\n  name: string;\n  type: string;\n  annotations: any[];\n  services?: Array;\n  constructor(config: Container, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.services = (config.services || []).map(config => new ODataServiceConfig(config, namespace));\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.services\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataServiceConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  constructor(config: ServiceConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataServiceConfig.html":{"url":"classes/ODataServiceConfig.html","title":"class - ODataServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ServiceConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/config.ts:230\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:230\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:228\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:229\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataEntityParser, ODataFieldParser, ODataParser, ODataEnumParser } from '../parsers';\nimport { EntityConfig, EnumConfig, ServiceConfig, Schema, Container, Parser, Configuration, Field } from '../types';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Types } from '../utils';\nimport { ODataModel } from './model';\nimport { ODataCollection } from './collection';\n\nexport class ODataConfig {\n  name: string;\n  serviceRootUrl: string;\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  metadataUrl?: string;\n  withCredentials?: boolean;\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean;\n  creation?: Date;\n  schemas?: Array;\n\n  constructor(config: Configuration) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.name = config.name;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.withCredentials = config.withCredentials || false;\n    this.acceptMetadata = config.acceptMetadata;\n    this.stringAsEnum = config.stringAsEnum || false;\n    this.creation = config.creation || new Date();\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema));\n  }\n  \n  configure() {\n    this.schemas\n      .forEach(schmea => schmea.configure({\n        stringAsEnum: this.stringAsEnum,\n        parserForType: (type: string) => this.parserForType(type)\n      })\n    );\n  }\n\n  //#region Find Config for Type\n  private schemaForType(type: string) {\n    let schema = this.schemas.find(s => type.startsWith(s.namespace));\n    if (schema)\n      return schema;\n  }\n\n  public enumConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.enums.find(e => e.type === type) as ODataEnumConfig;\n  }\n\n  public entityConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.entities.find(e => e.type === type) as ODataEntityConfig;\n  }\n\n  public serviceConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema) {\n      return schema.services.find(s => s.type === type) as ODataServiceConfig;\n    }\n  }\n\n  //#region Model and Collection for type\n  public modelForType(type: string): typeof ODataModel {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForType(type: string): typeof ODataCollection {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public enumConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name) as ODataEnumConfig;\n  }\n\n  public entityConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name) as ODataEntityConfig;\n  }\n\n  public serviceConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.services], [])\n      .find(e => e.name === name) as ODataServiceConfig;\n  }\n\n  //#region Model and Collection for type\n  public modelForName(name: string): typeof ODataModel {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  public parserForType(type: string): ODataParser {\n    let config = this.enumConfigForType(type) || this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.parser as ODataParser;\n  }\n}\n\nexport class ODataSchema {\n  namespace: string;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array;\n\n  constructor(config: Schema) {\n    this.namespace = config.namespace;\n    this.enums = (config.enums || []).map(config => new ODataEnumConfig(config, this.namespace));\n    this.entities = (config.entities || []).map(config => new ODataEntityConfig(config, this.namespace));\n    this.containers = (config.containers || []).map(container => new ODataContainer(container, this.namespace));\n  }\n\n  get services(): Array {\n    return this.containers.reduce((acc, container) => [...acc, ...container.services], []);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.enums\n      .forEach(config => config.configure(settings));\n    this.entities\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataEnumConfig {\n  name: string;\n  type: string;\n  parser?: ODataEnumParser;\n  members: {[name: string]: number} | {[value: number]: string};\n  constructor(config: EnumConfig, namespace: string) {\n    this.name = config.name;\n    this.members = config.members;\n    this.type = `${namespace}.${this.name}`;\n    this.parser = new ODataEnumParser(config as EnumConfig, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n}\n\nexport class ODataEntityConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  parser?: ODataEntityParser;\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = {include_navigation: true, include_parents: true}): ODataFieldParser[] {\n    let parser = this.parser as ODataEntityParser;\n    let fields = []>[];\n    while (parser) {\n      fields = [\n        ...parser.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parser = parser.parent;\n    }\n    return fields;\n  }\n}\n\nexport class ODataContainer {\n  name: string;\n  type: string;\n  annotations: any[];\n  services?: Array;\n  constructor(config: Container, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.services = (config.services || []).map(config => new ODataServiceConfig(config, namespace));\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.services\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataServiceConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  constructor(config: ServiceConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ODataServiceFactory.html":{"url":"injectables/ODataServiceFactory.html","title":"injectable - ODataServiceFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ODataServiceFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/factory.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEntityService\n                            \n                            \n                                createModelService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/factory.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEntityService\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEntityService(path: string, type?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createModelService\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModelService(path: string, type?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:19\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        M\n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataModelService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ODataClient } from \"../client\";\nimport { ODataEntityService } from './entity';\nimport { ODataModel, ODataCollection } from '../models';\nimport { ODataModelService } from './model';\n\n@Injectable()\nexport class ODataServiceFactory {\n  constructor(protected client: ODataClient) { }\n\n  createEntityService(path: string, type?: string): ODataEntityService {\n    return new class extends ODataEntityService {\n      static path = path;\n      static entity = type;\n    }(this.client);\n  }\n\n  createModelService, C extends ODataCollection>(path: string, type?: string): ODataModelService {\n    return new class extends ODataModelService {\n      static path = path;\n      static entity = type;\n    }(this.client);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSettings.html":{"url":"classes/ODataSettings.html","title":"class - ODataSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                configs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                collectionForName\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                configForType\n                            \n                            \n                                    Public\n                                entityConfigForName\n                            \n                            \n                                    Public\n                                enumConfigForName\n                            \n                            \n                                    Public\n                                findConfigForTypes\n                            \n                            \n                                    Public\n                                modelForName\n                            \n                            \n                                    Public\n                                serviceConfigForName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: Configuration[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/settings.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        Configuration[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            configs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/settings.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            config\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    config(name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entityConfigForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entityConfigForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enumConfigForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enumConfigForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:36\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findConfigForTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findConfigForTypes(types: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    types\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            serviceConfigForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serviceConfigForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration } from '../types';\nimport { ODataConfig } from './config';\nimport { Types } from '../utils';\nimport { ODataCollection } from './collection';\nimport { ODataModel } from './model';\n\nexport class ODataSettings {\n  configs?: Array;\n\n  constructor(...configs: Configuration[]) {\n    this.configs = configs.map(config => new ODataConfig(config));\n    if (this.configs.length > 1 && this.configs.some(c => Types.isUndefined(c.name)))\n      throw new Error(\"Multiple APIs: Needs configuration names\");\n    this.configs.forEach(config => config.configure());\n  }\n\n  public config(name?: string) {\n    if (this.configs.length === 1) return this.configs[0];\n    let config = this.configs.find(c => !Types.isUndefined(name) && c.name === name);\n    if (config)\n      return config;\n  }\n\n  public findConfigForTypes(types: string[]) {\n    if (this.configs.length === 1) return this.configs[0];\n    let config = this.configs.find(c => c.schemas.some(s => types.some(type => type.startsWith(s.namespace))));\n    if (config)\n      return config;\n  }\n\n  public configForType(type: string) {\n    return this.findConfigForTypes([type]);\n  }\n\n  // Configs shortcuts\n  public enumConfigForName(name: string) {\n    let values = this.configs.map(config => config.enumConfigForName(name)).filter(e => e);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0];\n  }\n\n  public entityConfigForName(name: string) {\n    let values = this.configs.map(config => config.entityConfigForName(name)).filter(e => e);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0];\n  }\n\n  public serviceConfigForName(name: string) {\n    let values = this.configs.map(config => config.serviceConfigForName(name)).filter(e => e);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0];\n  }\n\n  public modelForName(name: string): typeof ODataModel {\n    let values = this.configs.map(config => config.modelForName(name)).filter(e => e);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0];\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let values = this.configs.map(config => config.collectionForName(name)).filter(e => e);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0];\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataValueAnnotations.html":{"url":"classes/ODataValueAnnotations.html","title":"class - ODataValueAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataValueAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataAnnotations\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _properties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                function\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:45\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:55\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataValueAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataValueAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:73\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:81\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:96\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { \n  ODATA_ETAG, \n  ODATA_COUNT, \n  ODATA_NEXTLINK, \n  ODATA_TYPE, \n  ODATA_DELTALINK, \n  ODATA_METADATAETAG, \n  ODATA_MEDIA_EDITLINK, \n  ODATA_MEDIA_ETAG, \n  ODATA_MEDIA_READLINK, \n  ODATA_MEDIA_CONTENTTYPE, \n  ODATA_CONTEXT, \n  ODATA_ID, \n  ODATA_READLINK, \n  ODATA_EDITLINK, \n  ODATA_FUNCTION_PREFIX, \n  ODATA_ANNOTATION_PREFIX,\n  odataAnnotations\n} from '../../types';\n\nexport class ODataAnnotations {\n  constructor(protected value: { [name: string]: any }) { }\n\n  static factory(data: any) {\n    return new ODataAnnotations(odataAnnotations(data));\n  }\n\n  // Context\n  private _context: any;\n  get context(): { set: string, type: string | null } {\n    if (!this._context) {\n      this._context = {};\n      if (ODATA_CONTEXT in this.value) {\n        let value = this.value[ODATA_CONTEXT];\n        let index = value.lastIndexOf(\"#\");\n        let parts = value.substr(index + 1).split(\"/\");\n        let set = parts[0];\n        let type = parts.length > 3 ? parts[1] : null;\n        this._context = { set, type };\n      }\n    }\n    return this._context;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = Object.keys(this.value)\n        .filter(k => k.startsWith(ODATA_FUNCTION_PREFIX))\n        .reduce((acc, key) => Object.assign(acc, { [key.substr(1)]: this.value[key] }), {});\n    }\n    return this._functions;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = Object.keys(this.value)\n        .filter(k => k.indexOf(ODATA_ANNOTATION_PREFIX) > 0)\n        .reduce((acc, key) => {\n          let name = key.substr(0, key.indexOf(ODATA_ANNOTATION_PREFIX));\n          if (!(name in acc)) {\n            acc[name] = {};\n          }\n          Object.assign(acc[name], { [key.substr(key.indexOf(ODATA_ANNOTATION_PREFIX))]: this.value[key] });\n          return acc;\n        }, {});\n    }\n    return this._properties;\n  }\n\n  // Method\n  clone(): ODataAnnotations {\n    return new ODataAnnotations(this.value);\n  };\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n\n}\n\nexport class ODataValueAnnotations extends ODataAnnotations {\n  clone(): ODataValueAnnotations {\n    return new ODataValueAnnotations(this.value);\n  };\n\n  static factory(data: any) {\n    return new ODataValueAnnotations(odataAnnotations(data));\n  }\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations(this.value);\n  };\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n\n  get id() {\n    if (ODATA_ID in this.value)\n      return this.value[ODATA_ID] as string;\n  }\n\n  get etag() {\n    if (ODATA_ETAG in this.value)\n      return this.value[ODATA_ETAG] as string;\n  }\n\n  get mediaEtag(): string {\n    if (ODATA_MEDIA_ETAG in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_ETAG] as string);\n  }\n\n  get metadataEtag() {\n    if (ODATA_METADATAETAG in this.value)\n      return this.value[ODATA_METADATAETAG] as string;\n  }\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get editLink(): string {\n    if (ODATA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_EDITLINK] as string);\n  }\n\n  get mediaReadLink(): string {\n    if (ODATA_MEDIA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_READLINK] as string);\n  }\n\n  get mediaEditLink(): string {\n    if (ODATA_MEDIA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_EDITLINK] as string);\n  }\n\n  get mediaContentType(): string {\n    if (ODATA_MEDIA_CONTENTTYPE in this.value)\n      return this.value[ODATA_MEDIA_CONTENTTYPE] as string;\n  }\n\n  static factory(data: any) {\n    return new ODataEntityAnnotations(odataAnnotations(data));\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations(this.value);\n  };\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get count(): number {\n    if (ODATA_COUNT in this.value)\n      return this.value[ODATA_COUNT] as number;\n  }\n\n  get nextLink(): string {\n    if (ODATA_NEXTLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_NEXTLINK] as string);\n  }\n\n  get deltaLink(): string {\n    if (ODATA_DELTALINK in this.value)\n      return decodeURIComponent(this.value[ODATA_DELTALINK] as string);\n  }\n\n  get top(): number {\n    let match = (this.nextLink || \"\").match(/\\$top=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skip(): number {\n    let match = (this.nextLink || \"\").match(/\\$skip=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skiptoken(): string {\n    let match = (this.nextLink || \"\").match(/\\$skiptoken=([\\d\\w\\s]+)/);\n    if (match) return match[1];\n  }\n\n  static factory(data: any) {\n    return new ODataEntitiesAnnotations(odataAnnotations(data));\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionHandler.html":{"url":"classes/OptionHandler.html","title":"class - OptionHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assertArray\n                            \n                            \n                                    Private\n                                assertObject\n                            \n                            \n                                assign\n                            \n                            \n                                at\n                            \n                            \n                                clear\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                push\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                toJSON\n                            \n                            \n                                unset\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: PlainObject, n: QueryOptionNames)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                        PlainObject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        n\n                                                  \n                                                        \n                                                                        QueryOptionNames\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertArray()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PlainObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \nassign(values: PlainObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                PlainObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            at\n                        \n                        \n                    \n                \n            \n            \n                \nat(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            push\n                        \n                        \n                    \n                \n            \n            \n                \npush(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(name: string, value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unset\n                        \n                        \n                    \n                \n            \n            \n                \nunset(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:108\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import buildQuery, { alias, Alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { isoStringToDate, Types } from '../utils/index';\nimport { parseQuery } from '../types';\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  expand = 'expand',\n  format = 'format',\n  // Custom options\n  custom = 'custom'\n}\n\nexport class ODataQueryOptions {\n  options?: PlainObject;\n\n  constructor(options?: PlainObject) {\n    this.options = options || {};\n  }\n\n  // Params\n  params(): PlainObject {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format]\n        .filter(key => !Types.isEmpty(this.options[key]))\n        .reduce((acc, key) => Object.assign(acc, {[key]: this.options[key]}), {});\n\n    let query = buildQuery(options);\n    let params = (query) ? parseQuery(query.substr(1)) : {};\n\n    // Custom\n    let custom = this.options[QueryOptionNames.custom] || {};\n    Object.assign(params, custom);\n\n    return params;\n  }\n\n  toString(): string {\n    return Object.entries(this.params())\n      .filter(([, value]) => value)\n      .map(([key, value]) => `${key}=${value}`)\n      .join(\"&\");\n  }\n\n  toJSON() {\n    return isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (!Types.isUndefined(opts))\n      this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return !Types.isUndefined(this.options[name]);\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach(name => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter((k: QueryOptionNames) => names.indexOf(k) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Aliases\n  alias(name: string, value: any): Alias {\n    return alias(name, value);\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(private o: PlainObject, private n: QueryOptionNames) { }\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  // Primitive value\n  value() {\n    return this.o[this.n];\n  }\n\n  // Array\n  private assertArray(): Array {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = !Types.isUndefined(this.o[this.n]) ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter(v => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1)\n      this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n\n  // Hash map\n  private assertObject(): PlainObject {\n    if (!Types.isArray(this.o[this.n]) && Types.isObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find(v => Types.isObject(v));\n    if (!obj) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(name: string, value: T) {\n    this.assertObject()[name] = value;\n  }\n\n  get(name: string): T {\n    if (!Types.isArray(this.o[this.n])) {\n      return this.o[this.n][name];\n    }\n  }\n\n  unset(name: string) {\n    delete this.assertObject()[name];\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter(v => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1)\n        this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(name: string) {\n    return !!this.get(name);\n  }\n\n  assign(values: PlainObject) {\n    Object.assign(this.assertObject(), values);\n  }\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Parser.html":{"url":"interfaces/Parser.html","title":"interface - Parser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Parser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    parse\n                                \n                                \n                                    toJSON\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON(value: T | Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { InjectionToken } from '@angular/core';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\n// ANNOTATIONS\nexport const ODATA_ANNOTATION_PREFIX = '@odata';\nexport const ODATA_FUNCTION_PREFIX = '#';\n//odata.context: the context URL for a collection, entity, primitive value, or service document.\nexport const ODATA_CONTEXT = '@odata.context';\n//odata.count: the total count of a collection of entities or collection of entity references, if requested.\nexport const ODATA_COUNT = '@odata.count';\n//odata.nextLink: the next link of a collection with partial results\nexport const ODATA_NEXTLINK = '@odata.nextLink';\n//odata.deltaLink: the delta link for obtaining changes to the result, if requested\nexport const ODATA_DELTALINK = '@odata.deltaLink';\n//odata.id: the ID of the entity\nexport const ODATA_ID = '@odata.id';\n//odata.etag: the ETag of the entity\nexport const ODATA_ETAG = '@odata.etag';\n//odata.readLink: the link used to read the entity, if the edit link cannot be used to read the entity\nexport const ODATA_READLINK = '@odata.readLink';\n//odata.editLink: the link used to edit/update the entity, if the entity is updatable and the odata.id does not represent a URL that can be used to edit the entity\nexport const ODATA_EDITLINK = '@odata.editLink';\nexport const ODATA_METADATAETAG = '@odata.metadataEtag';\n//odata.associationLink: the link used to describe the relationship between this entity and related entities\nexport const ODATA_ASSOCIATIONLINK = '@odata.associationLink';\n//odata.type: the type of the containing object or targeted property if the type of the object or targeted property cannot be heuristically determined\nexport const ODATA_TYPE = '@odata.type';\n//odata.navigationLink: the link used to retrieve the values of a navigation property\nexport const ODATA_NAVIGATIONLINK = '@odata.navigationLink';\n//Media entities and stream properties may in addition contain the following annotations:\n//odata.mediaReadLink: the link used to read the stream\nexport const ODATA_MEDIA_READLINK = '@odata.mediaReadLink';\n//odata.mediaEditLink: the link used to edit/update the stream\nexport const ODATA_MEDIA_EDITLINK = '@odata.mediaEditLink';\n//odata.mediaEtag: the ETag of the stream, as appropriate\nexport const ODATA_MEDIA_ETAG = '@odata.mediaEtag';\n//odata.mediaContentType: the content type of the stream\nexport const ODATA_MEDIA_CONTENTTYPE = '@odata.mediaContentType';\n\nexport const $ID = '$id';\n\n// SEGMENTS\nexport const $METADATA = '$metadata';\nexport const $BATCH = '$batch';\nexport const $REF = '$ref';\nexport const $VALUE = '$value';\nexport const $COUNT = '$count';\n\n// HTTP HEADERS\nexport const IF_MATCH_HEADER = 'If-Match';\nexport const CONTENT_TYPE = 'Content-Type';\nexport const HTTP11 = 'HTTP/1.1';\nexport const ODATA_VERSION = 'OData-Version';\nexport const ACCEPT = 'Accept';\n\n// HTTP HEADER VALUES\nexport const APPLICATION_JSON = 'application/json';\nexport const APPLICATION_HTTP = 'application/http';\nexport const TEXT_PLAIN = 'text/plain';\nexport const VERSION_4_0 = '4.0';\nexport const MULTIPART_MIXED = 'multipart/mixed';\nexport const MULTIPART_MIXED_BOUNDARY = 'multipart/mixed;boundary=';\nexport const CONTENT_TRANSFER_ENCODING = 'Content-Transfer-Encoding';\nexport const CONTENT_ID = 'Content-ID';\n\n// URL PARTS\nexport const QUERY_SEPARATOR = '?';\nexport const PARAM_SEPARATOR = '&';\nexport const VALUE_SEPARATOR = '=';\nexport const PATH_SEPARATOR = '/';\nexport const ODATA_PARAM_PREFIX = '$';\nexport const ODATA_ALIAS_PREFIX = '@';\n\nexport const NEWLINE = '\\r\\n';\nexport const VALUE = 'value';\n\nexport const odataAnnotations = (value: any) => Object.keys(value)\n  .filter(key => key.indexOf(ODATA_ANNOTATION_PREFIX) !== -1 || key.startsWith(ODATA_FUNCTION_PREFIX))\n  .reduce((acc, key) => Object.assign(acc, {[key]: value[key]}), {});\n\nexport const entityAttributes = (value: any) => Object.keys(value)\n  .filter(key => key.indexOf(ODATA_ANNOTATION_PREFIX) === -1 && !key.startsWith(ODATA_FUNCTION_PREFIX))\n  .reduce((acc, key) => Object.assign(acc, {[key]: value[key]}), {});\n\nexport const parseQuery  = (query: string) => query.split(PARAM_SEPARATOR)\n  .reduce((acc, param: string) => {\n    let index = param.indexOf(VALUE_SEPARATOR);\n    if (index !== -1)\n      Object.assign(acc, {[param.substr(0, index)]: param.substr(index + 1)});\n    return acc;\n  }, {});\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions; \n\n// SETTINGS AND PARSERS\nexport type Field = {\n  type: string;\n  parser?: Parser;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  ref?: string;\n}\n\nexport interface Parser {\n  type: string;\n  parse(value: any): any;\n  toJSON(value: T | Partial): any;\n}\n\nexport type Configuration = {\n  serviceRootUrl: string,\n  name?: string,\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean,\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean,\n  creation?: Date,\n  schemas?: Array,\n  errorHandler?: (error: HttpErrorResponse) => Observable\n}\n\nexport const ODATA_CONFIGURATIONS = new InjectionToken('odata.configuraions');\n\nexport type Schema = {\n  namespace: string;\n  annotations?: Array;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array\n}\n\nexport type Container = {\n  name: string;\n  annotations?: Array;\n  services?: Array;\n}\n\nexport type EnumConfig = {\n  name: string;\n  flags?: boolean;\n  members: {[name: string]: number} | {[value: number]: string};\n}\n\nexport type EntityConfig = {\n  name: string;\n  base?: string;\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  annotations?: any[];\n  fields: { [P in keyof T]?: Field };\n}\n\nexport type ServiceConfig = {\n  name: string;\n  annotations?: any[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SegmentHandler.html":{"url":"classes/SegmentHandler.html","title":"class - SegmentHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SegmentHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                option\n                            \n                            \n                                setPath\n                            \n                            \n                                setType\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    type\n                                \n                                \n                                    path\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segment: ODataSegment)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segment\n                                                  \n                                                        \n                                                                        ODataSegment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlainObject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:122\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alias\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            option\n                        \n                        \n                    \n                \n            \n            \n                \noption(type: SegmentOptionNames, opts?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:148\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SegmentOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPath\n                        \n                        \n                    \n                \n            \n            \n                \nsetPath(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:127\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:131\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        path\n                    \n                \n\n                \n                    \n                        getpath()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:139\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import buildQuery, { guid, Alias, alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { Types, isoStringToDate } from '../utils/index';\n\nimport { OptionHandler } from './query-options';\nimport { PATH_SEPARATOR } from '../types';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action'\n}\n\nexport enum SegmentOptionNames {\n  key = 'key',\n  parameters = 'parameters'\n}\n\nexport type ODataSegment = {\n  name: string;\n  path: string;\n  type: string;\n  options: PlainObject;\n}\n\nconst pathSegmentsBuilder = (segment: ODataSegment): string => {\n  switch (segment.name) {\n    case PathSegmentNames.function:\n      let parameters = segment.options[SegmentOptionNames.parameters];\n      return (parameters ?\n        buildQuery({ func: { [segment.path]: parameters }}) :\n        buildQuery({ func: segment.path})\n      ).slice(1);\n    default:\n      let key = segment.options[SegmentOptionNames.key];\n      if (typeof (key) === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(key)) {\n        key = guid(key);\n      }\n      return segment.path + (key ? buildQuery({ key }) : \"\");\n  }\n}\n\nexport class ODataPathSegments {\n  protected segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this.segments = (segments || []).map(({name, path, type, options}) => ({name, path, type, options: options || {}}));\n  }\n\n  path(): string {\n    let chunks = this.segments\n      .map(pathSegmentsBuilder);\n    return chunks.join(PATH_SEPARATOR);\n  }\n\n  types(): string[] {\n    return this.segments.map(s => s.type).filter(t => !Types.isNullOrUndefined(t));\n  }\n\n  toString(): string {\n    return this.path();\n  }\n\n  toJSON() {\n    return this.segments.map(segment => { \n      let json = { name: segment.name, path: segment.path, type: segment.type };\n      let options = isoStringToDate(JSON.parse(JSON.stringify(segment.options)));\n      if (!Types.isEmpty(options))\n        json.options = options;\n      return json; \n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(name: string, path?: string) {\n    // Backward search\n    return [...this.segments].reverse().find(s =>\n      s.name === name &&\n      (Types.isUndefined(path) || s.path === path));\n  }\n\n  last(): SegmentHandler {\n    if (this.segments.length > 0)\n      return new SegmentHandler(this.segments[this.segments.length - 1]);\n  }\n\n  segment(name: string, path?: string): SegmentHandler {\n    let segment = this.find(name, path);\n    if (!segment && !Types.isUndefined(path)) {\n      segment = { name, path, options: {} } as ODataSegment;\n      this.segments.push(segment);\n    }\n    if (segment)\n      return new SegmentHandler(segment);\n  }\n\n  has(name: string, path?: string) {\n    return !!this.find(name, path);\n  }\n\n  remove(name: string, path?: string) {\n    let segment = this.find(name, path);\n    this.segments = this.segments.filter(s => s !== segment);\n  }\n}\n\nclass SegmentHandler {\n  options?: PlainObject\n  constructor(private segment: ODataSegment) {\n    this.options = this.segment.options;\n  }\n\n  get name() {\n    return this.segment.name;\n  }\n\n  get type() {\n    return this.segment.type;\n  }\n\n  setType(value: string) {\n    this.segment.type = value;\n  }\n\n  get path() {\n    return this.segment.path;\n  }\n\n  setPath(value: string) {\n    this.segment.path = value;\n  }\n\n  // Option Handler\n  option(type: SegmentOptionNames, opts?: T) {\n    if (!Types.isUndefined(opts))\n      this.options[type] = opts;\n    return new OptionHandler(this.options, type as any);\n  }\n\n  // Aliases\n  alias(name: string, value?: any): Alias {\n    return alias(name, value);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/angular-odata/src/lib/client.ts\n            \n            injectable\n            ODataClient\n            \n                0 %\n                (0/150)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/models/collection.ts\n            \n            class\n            ODataCollection\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/models/config.ts\n            \n            class\n            ODataConfig\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/models/config.ts\n            \n            class\n            ODataContainer\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/models/config.ts\n            \n            class\n            ODataEntityConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/models/config.ts\n            \n            class\n            ODataEnumConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/models/config.ts\n            \n            class\n            ODataSchema\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/models/config.ts\n            \n            class\n            ODataServiceConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/models/model.ts\n            \n            class\n            ODataModel\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/models/settings.ts\n            \n            class\n            ODataSettings\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/module.ts\n            \n            function\n            createSettings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/parsers.ts\n            \n            class\n            ODataEntityParser\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/parsers.ts\n            \n            class\n            ODataEnumParser\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/parsers.ts\n            \n            class\n            ODataFieldParser\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/parsers.ts\n            \n            interface\n            ODataParser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/parsers.ts\n            \n            variable\n            PARSERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            function\n            buildAggregate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            function\n            buildExpand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            function\n            buildFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            function\n            buildGroupBy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            function\n            buildOrderBy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            function\n            buildTransforms\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            function\n            buildUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            function\n            escapeIllegalChars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            function\n            handleValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            function\n            parseNot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            function\n            Unnamed function\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            variable\n            alias\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            variable\n            binary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            variable\n            BOOLEAN_FUNCTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            variable\n            COLLECTION_OPERATORS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            variable\n            COMPARISON_OPERATORS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            variable\n            FUNCTION_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            variable\n            guid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            variable\n            INDEXOF_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            variable\n            json\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            variable\n            LOGICAL_OPERATORS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            variable\n            raw\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/builder.ts\n            \n            variable\n            SUPPORTED_EXPAND_PROPERTIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/path-segments.ts\n            \n            class\n            ODataPathSegments\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/path-segments.ts\n            \n            class\n            SegmentHandler\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/path-segments.ts\n            \n            variable\n            pathSegmentsBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/query-options.ts\n            \n            class\n            ODataQueryOptions\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/query-options.ts\n            \n            class\n            OptionHandler\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/action.ts\n            \n            class\n            ODataActionResource\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/batch.ts\n            \n            class\n            BatchRequest\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/batch.ts\n            \n            class\n            ODataBatchResource\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/callable.ts\n            \n            class\n            ODataCallableResource\n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/count.ts\n            \n            class\n            ODataCountResource\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/entity.ts\n            \n            class\n            ODataEntityResource\n            \n                0 %\n                (0/49)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/entityset.ts\n            \n            class\n            ODataEntitySetResource\n            \n                0 %\n                (0/52)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/function.ts\n            \n            class\n            ODataFunctionResource\n            \n                0 %\n                (0/74)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/metadata.ts\n            \n            class\n            ODataMetadataResource\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/navigationproperty.ts\n            \n            class\n            ODataNavigationPropertyResource\n            \n                0 %\n                (0/55)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/property.ts\n            \n            class\n            ODataPropertyResource\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/reference.ts\n            \n            class\n            ODataReferenceResource\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/singleton.ts\n            \n            class\n            ODataSingletonResource\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/requests/value.ts\n            \n            class\n            ODataValueResource\n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/resource.ts\n            \n            class\n            ODataResource\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/annotations.ts\n            \n            class\n            ODataAnnotations\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/annotations.ts\n            \n            class\n            ODataEntitiesAnnotations\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/annotations.ts\n            \n            class\n            ODataEntityAnnotations\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/annotations.ts\n            \n            class\n            ODataValueAnnotations\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/batch.ts\n            \n            class\n            ODataBatch\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n            \n            class\n            CsdlAnnotable\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n            \n            class\n            CsdlAnnotation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n            \n            class\n            CsdlAnnotations\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n            \n            class\n            CsdlTerm\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts\n            \n            class\n            CsdlEntityContainer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts\n            \n            class\n            CsdlEntitySet\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n            \n            class\n            CsdlEnumMember\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n            \n            class\n            CsdlEnumType\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n            \n            class\n            CsdlAction\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n            \n            class\n            CsdlActionImport\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n            \n            class\n            CsdlFunction\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n            \n            class\n            CsdlFunctionImport\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n            \n            class\n            CsdlParameter\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n            \n            class\n            CsdlReturnType\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts\n            \n            class\n            CsdlNavigationPropertyBinding\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n            \n            class\n            CsdlInclude\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n            \n            class\n            CsdlIncludeAnnotations\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n            \n            class\n            CsdlReference\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts\n            \n            class\n            CsdlSchema\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts\n            \n            class\n            CsdlSingleton\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n            \n            class\n            CsdlNavigationProperty\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n            \n            class\n            CsdlOnDelete\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n            \n            class\n            CsdlProperty\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n            \n            class\n            CsdlReferentialConstraint\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n            \n            class\n            CsdlStructuralProperty\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n            \n            class\n            CsdlComplexType\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n            \n            class\n            CsdlEntityType\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n            \n            class\n            CsdlKey\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n            \n            class\n            CsdlPropertyRef\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n            \n            class\n            CsdlStructuredType\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts\n            \n            class\n            CsdlTypeDefinition\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/metadata.ts\n            \n            class\n            Field\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/resources/responses/metadata.ts\n            \n            class\n            ODataMetadata\n            \n                0 %\n                (0/85)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/services/base.ts\n            \n            class\n            ODataBaseService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/services/entity.ts\n            \n            injectable\n            ODataEntityService\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/services/factory.ts\n            \n            injectable\n            ODataServiceFactory\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/services/model.ts\n            \n            injectable\n            ODataModelService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            interface\n            Parser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            $BATCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            $COUNT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            $ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            $METADATA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            $REF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            $VALUE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ACCEPT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            APPLICATION_HTTP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            APPLICATION_JSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            CONTENT_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            CONTENT_TRANSFER_ENCODING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            CONTENT_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            entityAttributes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            HTTP11\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            IF_MATCH_HEADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            MULTIPART_MIXED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            MULTIPART_MIXED_BOUNDARY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            NEWLINE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_ALIAS_PREFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_ANNOTATION_PREFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_ASSOCIATIONLINK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_CONFIGURATIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_CONTEXT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_COUNT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_DELTALINK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_EDITLINK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_ETAG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_FUNCTION_PREFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_MEDIA_CONTENTTYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_MEDIA_EDITLINK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_MEDIA_ETAG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_MEDIA_READLINK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_METADATAETAG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_NAVIGATIONLINK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_NEXTLINK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_PARAM_PREFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_READLINK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            ODATA_VERSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            odataAnnotations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            PARAM_SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            parseQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            PATH_SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            QUERY_SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            TEXT_PLAIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            VALUE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            VALUE_SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/types.ts\n            \n            variable\n            VERSION_4_0\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/utils/dates.ts\n            \n            variable\n            ISO_REGEX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/utils/dates.ts\n            \n            variable\n            isoStringToDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/utils/enums.ts\n            \n            variable\n            Enums\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/utils/types.ts\n            \n            variable\n            Types\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-odata/src/lib/utils/urls.ts\n            \n            variable\n            escapeIllegalChars\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.9\n        \n            @angular/common : ~9.1.9\n        \n            @angular/compiler : ~9.1.9\n        \n            @angular/core : ~9.1.9\n        \n            @angular/forms : ~9.1.9\n        \n            @angular/platform-browser : ~9.1.9\n        \n            @angular/platform-browser-dynamic : ~9.1.9\n        \n            @angular/router : ~9.1.9\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FieldType   (projects/.../metadata.ts)\n                        \n                        \n                            PathSegmentNames   (projects/.../path-segments.ts)\n                        \n                        \n                            QueryOptionNames   (projects/.../query-options.ts)\n                        \n                        \n                            RequestMethod   (projects/.../batch.ts)\n                        \n                        \n                            SegmentOptionNames   (projects/.../path-segments.ts)\n                        \n                        \n                            StandardAggregateMethods   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/responses/metadata.ts\n    \n        \n            \n                \n                    \n                        \n                        FieldType\n                    \n                \n                        \n                            \n                                 ATTRIBUTE\n                            \n                        \n                        \n                            \n                                 TAG\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n        \n            \n                \n                    \n                        \n                        PathSegmentNames\n                    \n                \n                        \n                            \n                                 batch\n                            \n                        \n                        \n                            \n                                Value : batch\n                            \n                        \n                        \n                            \n                                 metadata\n                            \n                        \n                        \n                            \n                                Value : metadata\n                            \n                        \n                        \n                            \n                                 entitySet\n                            \n                        \n                        \n                            \n                                Value : entitySet\n                            \n                        \n                        \n                            \n                                 singleton\n                            \n                        \n                        \n                            \n                                Value : singleton\n                            \n                        \n                        \n                            \n                                 type\n                            \n                        \n                        \n                            \n                                Value : type\n                            \n                        \n                        \n                            \n                                 property\n                            \n                        \n                        \n                            \n                                Value : property\n                            \n                        \n                        \n                            \n                                 navigationProperty\n                            \n                        \n                        \n                            \n                                Value : navigationProperty\n                            \n                        \n                        \n                            \n                                 reference\n                            \n                        \n                        \n                            \n                                Value : reference\n                            \n                        \n                        \n                            \n                                 value\n                            \n                        \n                        \n                            \n                                Value : value\n                            \n                        \n                        \n                            \n                                 count\n                            \n                        \n                        \n                            \n                                Value : count\n                            \n                        \n                        \n                            \n                                 function\n                            \n                        \n                        \n                            \n                                Value : function\n                            \n                        \n                        \n                            \n                                 action\n                            \n                        \n                        \n                            \n                                Value : action\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SegmentOptionNames\n                    \n                \n                        \n                            \n                                 key\n                            \n                        \n                        \n                            \n                                Value : key\n                            \n                        \n                        \n                            \n                                 parameters\n                            \n                        \n                        \n                            \n                                Value : parameters\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/query-options.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryOptionNames\n                    \n                \n                        \n                            \n                                 select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 filter\n                            \n                        \n                        \n                            \n                                Value : filter\n                            \n                        \n                        \n                            \n                                 search\n                            \n                        \n                        \n                            \n                                Value : search\n                            \n                        \n                        \n                            \n                                 transform\n                            \n                        \n                        \n                            \n                                Value : transform\n                            \n                        \n                        \n                            \n                                 orderBy\n                            \n                        \n                        \n                            \n                                Value : orderBy\n                            \n                        \n                        \n                            \n                                 top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 skip\n                            \n                        \n                        \n                            \n                                Value : skip\n                            \n                        \n                        \n                            \n                                 skiptoken\n                            \n                        \n                        \n                            \n                                Value : skiptoken\n                            \n                        \n                        \n                            \n                                 expand\n                            \n                        \n                        \n                            \n                                Value : expand\n                            \n                        \n                        \n                            \n                                 format\n                            \n                        \n                        \n                            \n                                Value : format\n                            \n                        \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/requests/batch.ts\n    \n        \n            \n                \n                    \n                        \n                        RequestMethod\n                    \n                \n                        \n                            \n                                 Get\n                            \n                        \n                        \n                            \n                                 Post\n                            \n                        \n                        \n                            \n                                 Put\n                            \n                        \n                        \n                            \n                                 Delete\n                            \n                        \n                        \n                            \n                                 Options\n                            \n                        \n                        \n                            \n                                 Head\n                            \n                        \n                        \n                            \n                                 Patch\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n            \n                \n                    \n                        \n                        StandardAggregateMethods\n                    \n                \n                        \n                            \n                                 sum\n                            \n                        \n                        \n                            \n                                Value : sum\n                            \n                        \n                        \n                            \n                                 min\n                            \n                        \n                        \n                            \n                                Value : min\n                            \n                        \n                        \n                            \n                                 max\n                            \n                        \n                        \n                            \n                                Value : max\n                            \n                        \n                        \n                            \n                                 average\n                            \n                        \n                        \n                            \n                                Value : average\n                            \n                        \n                        \n                            \n                                 countdistinct\n                            \n                        \n                        \n                            \n                                Value : countdistinct\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            buildAggregate   (projects/.../builder.ts)\n                        \n                        \n                            buildExpand   (projects/.../builder.ts)\n                        \n                        \n                            buildFilter   (projects/.../builder.ts)\n                        \n                        \n                            buildGroupBy   (projects/.../builder.ts)\n                        \n                        \n                            buildOrderBy   (projects/.../builder.ts)\n                        \n                        \n                            buildTransforms   (projects/.../builder.ts)\n                        \n                        \n                            buildUrl   (projects/.../builder.ts)\n                        \n                        \n                            createSettings   (projects/.../module.ts)\n                        \n                        \n                            escapeIllegalChars   (projects/.../builder.ts)\n                        \n                        \n                            handleValue   (projects/.../builder.ts)\n                        \n                        \n                            parseNot   (projects/.../builder.ts)\n                        \n                        \n                            Unnamed function   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            buildAggregate\n                        \n                        \n                    \n                \n            \n            \n                \nbuildAggregate(aggregate)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aggregate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildExpand\n                        \n                        \n                    \n                \n            \n            \n                \nbuildExpand(expands)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expands\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildFilter\n                        \n                        \n                    \n                \n            \n            \n                \nbuildFilter(filters, aliases, propPrefix)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propPrefix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildGroupBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildGroupBy(groupBy)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildOrderBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildOrderBy(orderBy, prefix)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prefix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildTransforms\n                        \n                        \n                    \n                \n            \n            \n                \nbuildTransforms(transforms)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transforms\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildUrl\n                        \n                        \n                    \n                \n            \n            \n                \nbuildUrl(path, params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            escapeIllegalChars\n                        \n                        \n                    \n                \n            \n            \n                \nescapeIllegalChars(string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleValue\n                        \n                        \n                    \n                \n            \n            \n                \nhandleValue(value, aliases?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseNot\n                        \n                        \n                    \n                \n            \n            \n                \nparseNot(builtFilters)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builtFilters\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Unnamed function\n                        \n                        \n                    \n                \n            \n            \n                \nUnnamed function(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createSettings\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSettings(configs)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-odata\nA fluent API for querying, creating, updating and deleting OData resources in Angular.\nOData service for Angular.\nPlease check also my other related project, OData Angular Generator\nInstall:\nnpm i uuid\nnpm i angular-odataDemo:\nFull examples of the library:\n\nAngularODataEntity\nAngularODataModel\n\nUsage:\nSimple usage: Service Factory\nIn this mode the services are obtained from a factory and optionally we can use types for entities\n1) Add module to your project\nimport { NgModule } from '@angular/core';\nimport { ODataModule } from 'angular-odata';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot({\n      serviceRootUrl: 'https://services.odata.org/V4/(S(4m0tuxtnhcfctl4gzem3gr10))/TripPinServiceRW/'\n    })\n    ...\n  ]\n})\nexport class AppModule {}or build settings through a factory function.\nimport { NgModule } from '@angular/core';\n\nimport { ODataModule, ODataSettings } from 'angular-odata';\n\nexport function settingsFactory() {\n  return new ODataSettings({\n    serviceRootUrl: 'https://services.odata.org/V4/(S(4m0tuxtnhcfctl4gzem3gr10))/TripPinServiceRW/'\n  });\n}\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule\n  ]\n  providers: [\n    ...\n    { provide: ODataSettings, useFactory: settingsFactory }\n  ],\n})\nexport class AppModule {}2) Inject and use the ODataServiceFactory\nimport { Component } from '@angular/core';\nimport { ODataClient, ODATA_ETAG } from 'angular-odata';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TripPin';\n  constructor(private factory: ODataServiceFactory) {\n    this.queries();\n  }\n\n  queries() {\n    // Use OData Service Factory\n    let airportsService = this.factory.createEntityService(\"Airports\");\n    let peopleService = this.factory.createEntityService(\"People\");\n\n    let airports = airportsService.entities();\n\n    // Fetch set\n    airports.all()\n      .subscribe(aports => console.log(\"All: \", aports));\n\n    // Fetch with count\n    airports.get({withCount: true})\n      .subscribe(([aports, annots]) => console.log(\"Airports: \", aports, \"Annotations: \", annots));\n\n    // Fetch by key\n    let airport = airports.entity(\"CYYZ\");\n    airport.get()\n      .subscribe(([aport, annots]) => console.log(\"Airport: \", aport, \"Annotations: \", annots));\n\n    // Filter\n    airports.filter({Location: {City: {CountryRegion: \"United States\"}}});\n    airports.get()\n      .subscribe(([aports, annots]) => console.log(\"Airports of United States: \", aports, \"Annotations: \", annots));\n\n    // Add filter\n    airports.filter().push({Location: {City: {Region: \"California\"}}});\n    airports.get()\n      .subscribe(([aports, annots]) => console.log(\"Airports in California: \", aports, \"Annotations: \", annots));\n\n    // Remove filter\n    airports.filter().clear();\n    airports.get()\n      .subscribe(([aports, annots]) => console.log(\"Airports: \", aports, \"Annotations: \", annots));\n\n    let people = peopleService.entities();\n\n    // Expand\n    people.expand({\n      Friends: { \n        expand: { Friends: { select: ['AddressInfo']}} \n      }, \n      Trips: { select: ['Name', 'Tags'] },\n    });\n    people.get({withCount: true})\n      .subscribe(([peop, annots]) => console.log(\"People with Friends and Trips: \", peop, \"Annotations: \", annots));\n\n    // Remove Expand\n    people.expand().clear();\n  }\n}Advanced usage: Create Custom Services\nIn this mode, services are created using custom definitions and corresponding configuration\n1) The entity with configuration\nimport { PersonGender } from './persongender.enum';\nimport { Location  } from './location.entity';\nimport { Photo } from './photo.entity';\nimport { Trip } from './trip.entity';\n\nexport interface Person {\n  UserName: string;\n  FirstName: string;\n  LastName: string;\n  Emails?: string[];\n  AddressInfo?: Location[];\n  Gender?: PersonGender;\n  Concurrency: number;\n  Friends?: Person[];\n  Trips?: Trip[];\n  Photo?: Photo\n}\n\nexport const PersonConfig = {\n  name: \"Person\",\n  fields: {\n    UserName: {type: 'string', key: true, ref: 'UserName', nullable: false}]},\n    FirstName: {type: 'string', nullable: false},\n    LastName: {type: 'string', nullable: false},\n    Emails: {type: 'string', collection: true},\n    AddressInfo: {type: 'Microsoft.OData.SampleService.Models.TripPin.Location', collection: true},\n    Gender: {type: 'Microsoft.OData.SampleService.Models.TripPin.PersonGender'},\n    Concurrency: {type: 'number', nullable: false},\n    Friends: {type: 'Microsoft.OData.SampleService.Models.TripPin.Person', collection: true, navigation: true},\n    Trips: {type: 'Microsoft.OData.SampleService.Models.TripPin.Trip', collection: true, navigation: true},\n    Photo: {type: 'Microsoft.OData.SampleService.Models.TripPin.Photo', navigation: true}\n  }\n} as EntityConfig;2) The api configuration \nimport ...\nimport { PersonGenderConfig } from './Microsoft/OData/SampleService/Models/TripPin/persongender.enum.config';\nimport { LocationConfig } from './Microsoft/OData/SampleService/Models/TripPin/location.entity.config';\nimport { PhotoConfig } from './Microsoft/OData/SampleService/Models/TripPin/photo.entity.config';\nimport { PersonConfig } from './Microsoft/OData/SampleService/Models/TripPin/person.entity.config';\nimport { TripConfig } from './Microsoft/OData/SampleService/Models/TripPin/trip.entity.config';\n\nexport const TripPinConfig = {\n  serviceRootUrl: 'https://services.odata.org/V4/(S(4m0tuxtnhcfctl4gzem3gr10))/TripPinServiceRW/',\n  schemas: [ // Schemas\n    {\n      namespace: \"Microsoft.OData.SampleService.Models.TripPin\",\n      enums: [\n        PersonGenderConfig\n      ],\n      entities: [\n        ...\n        LocationConfig,\n        PhotoConfig,\n        PersonConfig,\n        TripConfig\n      ]\n    }\n  ]\n}3) The service\n// Service\nimport { Injectable } from '@angular/core';\nimport { ODataEntityService } from 'angular-odata';\nimport { Person } from './person.entity';\n\n@Injectable()\nexport class PeopleService extends ODataEntityService {\n  static path: string = 'People';\n  static type: string = 'Microsoft.OData.SampleService.Models.TripPin.People';\n  static entity: string = 'Microsoft.OData.SampleService.Models.TripPin.Person';\n}4) Add module to your project\nimport { NgModule } from '@angular/core';\nimport { ODataModule } from 'angular-odata';\nimport { TripPinConfig, PeopleService } from './trippin';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot(TripPinConfig)\n    ...\n  ],\n  providers: [\n    PeopleService\n  ]\n})\nexport class AppModule {}5) Inject and use the entity service\nimport { Component } from '@angular/core';\nimport { ODataClient } from 'angular-odata';\nimport { PeopleService } from './trippin';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularODataEntity';\n  constructor(private people: PeopleService) {\n    this.show('scottketchum');\n  }\n\n  show(name: string) {\n    let person = this.people.entity({UserName: name});\n    person.expand({\n      Friends: {}, \n      Trips: {\n        expand: {\n          Photos: {}, \n          PlanItems: {}\n        }\n      }, \n      Photo: {}\n    });\n    person.get()\n      .subscribe(([person, ]) => {\n        this.person = person;\n        if (person.Photo) {\n          let media = this.photos.entity(person.Photo).media();\n          media.blob().subscribe(console.log);\n        }\n      });\n  }\n}Advanced usage: OData Generator\n1) If you choose using OData Angular Generator, import the config and the module from generated source.\nimport { NgModule } from '@angular/core';\n\nimport { ODataModule } from 'angular-odata';\nimport { TripPinConfig, TripPinModule } from './trippin';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot(TripPinConfig),\n    TripPinModule\n  ]\n  ...\n})\nexport class AppModule {}For a deep query customizations the library use odata-query as a builder.\nCredits\nAngular OData is built using the following open source projects:\n\nOData v4 query builder\nGenerate RFC-compliant UUIDs in JavaScript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ODataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ODataModule\n\n\n\ncluster_ODataModule_providers\n\n\n\n\nODataClient\n\nODataClient\n\n\n\nODataModule\n\nODataModule\n\nODataModule -->\n\nODataClient->ODataModule\n\n\n\n\n\nODataServiceFactory\n\nODataServiceFactory\n\nODataModule -->\n\nODataServiceFactory->ODataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    70 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Aggregate   (projects/.../builder.ts)\n                        \n                        \n                            Alias   (projects/.../builder.ts)\n                        \n                        \n                            Binary   (projects/.../builder.ts)\n                        \n                        \n                            Configuration   (projects/.../types.ts)\n                        \n                        \n                            Container   (projects/.../types.ts)\n                        \n                        \n                            EntityConfig   (projects/.../types.ts)\n                        \n                        \n                            EntityKey   (projects/.../types.ts)\n                        \n                        \n                            EnumConfig   (projects/.../types.ts)\n                        \n                        \n                            Expand   (projects/.../builder.ts)\n                        \n                        \n                            ExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            Field   (projects/.../types.ts)\n                        \n                        \n                            Filter   (projects/.../builder.ts)\n                        \n                        \n                            GroupBy   (projects/.../builder.ts)\n                        \n                        \n                            Guid   (projects/.../builder.ts)\n                        \n                        \n                            HttpEntitiesOptions   (projects/.../http-options.ts)\n                        \n                        \n                            HttpEntityOptions   (projects/.../http-options.ts)\n                        \n                        \n                            HttpOptions   (projects/.../http-options.ts)\n                        \n                        \n                            HttpValueOptions   (projects/.../http-options.ts)\n                        \n                        \n                            Json   (projects/.../builder.ts)\n                        \n                        \n                            JsonSchemaConfig   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaExpand   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaExpandOptions   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaOrder   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaSelect   (projects/.../types.ts)\n                        \n                        \n                            NestedExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ODataSegment   (projects/.../path-segments.ts)\n                        \n                        \n                            OrderBy   (projects/.../builder.ts)\n                        \n                        \n                            OrderByOptions   (projects/.../builder.ts)\n                        \n                        \n                            PlainObject   (projects/.../builder.ts)\n                        \n                        \n                            QueryOptions   (projects/.../builder.ts)\n                        \n                        \n                            Raw   (projects/.../builder.ts)\n                        \n                        \n                            Schema   (projects/.../types.ts)\n                        \n                        \n                            Select   (projects/.../builder.ts)\n                        \n                        \n                            ServiceConfig   (projects/.../types.ts)\n                        \n                        \n                            Transform   (projects/.../builder.ts)\n                        \n                        \n                            Value   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n    \n        \n            \n                \n                    \n                    Aggregate\n                \n            \n            \n                \n                        string | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Alias\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Binary\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Expand\n                \n            \n            \n                \n                        string |  | NestedExpandOptions | Array | Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                            string | PlainObject | Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GroupBy\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Guid\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Json\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NestedExpandOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderBy\n                \n            \n            \n                \n                        string | OrderByOptions | Array> | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByOptions\n                \n            \n            \n                \n                         | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PlainObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Raw\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Select\n                \n            \n            \n                \n                        string |  | Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Transform\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Value\n                \n            \n            \n                \n                        string | Date | number | boolean | Raw | Guid | Binary | Json | Alias\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    Configuration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Container\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityKey\n                \n            \n            \n                \n                         | string | number\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EnumConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Field\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaConfig\n                \n            \n            \n                \n                        JsonSchemaExpandOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaOrder\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaSelect\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Schema\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServiceConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/http-options.ts\n    \n    \n        \n            \n                \n                    \n                    HttpEntitiesOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpEntityOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpValueOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n    \n        \n            \n                \n                    \n                    ODataSegment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
